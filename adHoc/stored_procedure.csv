,name,text
0,AIElearning_Class_GetClassByUsername,"CREATE PROC [dbo].[AIElearning_Class_GetClassByUsername]  @pageIndex int,  @pageSize int,  @Username nvarchar(150),  @StartDate datetime,  @EndDate datetime,  @Status int  AS  -- AIElearning_Class_GetClassByUsername 1,10,'namnamnam',-1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Username <> '')   set @condition = @condition + ' and (u.Username='''+ @Username + ''')'  IF CONVERT(datetime,@StartDate ,121) > '01/01/1900'    set @condition = @condition + ' and c.StartDateClass >= ''' + convert(nvarchar(23),@StartDate,121) + ''''   --ngày kết thúc  IF CONVERT(datetime,@EndDate ,121) > '01/01/1900'    set @condition = @condition + ' and c.StartDateClass <= ''' + convert(nvarchar(23),@EndDate,121) + ''''  if(@Status>0)   set @condition = @condition + ' and u.Status='+ str(@Status)  exec('  WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.id desc ) AS RowNumber, c.*     from AIElearning_ClassUser u inner join AIElearning_Class c on u.ClassId=c.Id      where ' + @condition + '      )     SELECT  *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
1,GetPortalGroups,CREATE PROCEDURE dbo.[GetPortalGroups]    AS    SELECT * FROM dbo.PortalGroups
2,AISystem_UserInRole_IsInDNNRole,"CREATE PROC [dbo].[AISystem_UserInRole_IsInDNNRole]  @UserId int,  @RoleId int  AS   SELECT COUNT(*) FROM UserRoles WHERE UserId=@UserId AND RoleID=@RoleId  "
3,Journal_Get,"CREATE PROCEDURE dbo.[Journal_Get]      @PortalId INT,      @CurrentUserId INT,      @JournalId INT,      @IncludeAllItems INT = 0,      @IsDeleted INT = 0,      @SecurityCheck BIT = 0      AS      DECLARE @RegisteredRoleId INT   SELECT @RegisteredRoleId = RegisteredRoleId FROM dbo.[Portals] WHERE PortalID = @PortalId      SELECT     j.JournalId, j.JournalTypeId, j.Title, j.Summary, j.UserId, j.DateCreated, j.DateUpdated, j.PortalId,                  j.ProfileId, j.GroupId, j.ObjectKey, j.AccessKey,                  ""JournalOwner"" = '<entity><id>' + CAST(p.UserId as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name></entity>',                  ""JournalAuthor"" = CASE WHEN ISNULL(a.UserId,-1) >0 THEN '<entity><id>' + CAST(a.UserId as nvarchar(150)) + '</id><name><![CDATA[' + a.DisplayName + ']]></name></entity>' ELSE '' END,                  ""JournalOwnerId"" = ISNULL(j.ProfileId,j.UserId),                   jt.Icon, jt.JournalType,                  ""Profile"" = CASE WHEN j.ProfileId > 0 THEN '<entity><id>' + CAST(p.UserID as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name><vanity></vanity></entity>' ELSE '' END,      ""SimilarCount"" = (SELECT COUNT(JournalId) FROM dbo.Journal WHERE ContentItemId = j.ContentItemId AND JournalTypeId = j.JournalTypeId),                  jd.JournalXML, ContentItemId, j.ItemData, j.IsDeleted, j.CommentsDisabled, j.CommentsHidden      FROM        dbo.[Journal] AS j                  INNER JOIN dbo.[Journal_Types] as jt ON jt.JournalTypeId = j.JournalTypeId                  INNER JOIN dbo.[Journal_Security] AS js ON js.JournalId = j.JournalId                  INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId, @RegisteredRoleId) as t ON t.seckey = js.SecurityKey OR @SecurityCheck = 0                  LEFT OUTER JOIN dbo.[Journal_Data] as jd on jd.JournalId = j.JournalId                   LEFT OUTER JOIN dbo.[Users] AS p ON j.ProfileId = p.UserID                   LEFT OUTER JOIN dbo.[Users] AS a ON j.UserId = a.UserID      WHERE       ((@IncludeAllItems = 0) AND (j.JournalId = @JournalId AND j.IsDeleted = @IsDeleted))                   OR                   ((@IncludeAllItems = 1) AND (j.JournalId = @JournalId))"
4,AIElearning_ClassUser_GetGeneralLearningInfo,"CREATE PROC [dbo].[AIElearning_ClassUser_GetGeneralLearningInfo]      @classid INT ,      @username NVARCHAR(250)  AS -- AIElearning_ClassUser_GetGeneralLearningInfo 7,'admin_aivietnam'      SELECT TOP ( 1 )              cu.* ,              c.Name AS ClassName ,              ( SELECT    COUNT(*)                FROM      AIElearning_ClassLog                WHERE     ClassId = @classid AND Username = @username              ) AS TotalView ,              ( SELECT   ROUND( ISNULL(SUM(TotalTime)/60, 0),1)                FROM      AIElearning_ClassLog                WHERE     ClassId = @classid AND Username = @username AND Type <> 3              ) AS TotalTime ,              ( SELECT TOP ( 1 )                          CreatedDate                FROM      AIElearning_ClassLog                WHERE     ClassId = @classid AND Username = @username                ORDER BY  Id DESC              ) AS LassAccess,     c.MinTime      FROM    AIElearning_ClassUser cu              INNER JOIN dbo.AIElearning_Class c ON cu.ClassId = c.Id      WHERE   ClassId = @classid AND Username = @username"
5,UpdateSkinControl,"CREATE PROCEDURE dbo.[UpdateSkinControl]      @SkinControlID     int,   @PackageID      int,   @ControlKey      nvarchar(50),   @ControlSrc      nvarchar(256),   @SupportsPartialRendering  bit,   @LastModifiedByUserID int    AS   UPDATE dbo.SkinControls   SET        PackageID = @PackageID,    ControlKey = @ControlKey,    ControlSrc = @ControlSrc,    SupportsPartialRendering = @SupportsPartialRendering,     [LastModifiedByUserID] = @LastModifiedByUserID,     [LastModifiedOnDate] = getdate()   WHERE  SkinControlID = @SkinControlID"
6,GetDuplicateEmailCount,"CREATE PROCEDURE dbo.[GetDuplicateEmailCount]      @PortalId INT  AS    SELECT ISNULL((SELECT COUNT(*) TotalCount FROM dbo.[Users] U Inner Join dbo.[UserPortals] UP on UP.[UserId] = U.[UserId] WHERE UP.PortalId = @PortalId  GROUP BY U.[Email] HAVING COUNT(*) > 1), 0)"
7,AIElearning_TestForm_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_TestForm_GetsBySearchCount]  @Keyword nvarchar(500),  @CategoryId int,  @Type int,  @Status int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  -- Từ khóa  IF (@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  -- Chuyên mục  IF(@CategoryId > -1)   set @condition = @condition + ' And (CategoryId= '+ STR(@CategoryId)+' )'  -- Trạng thái  IF(@Status > -1)   set @condition = @condition + ' And (Status= '+ STR(@Status)+' )'  -- Loại  IF(@Type > -1)   set @condition = @condition + ' And (Type= '+ STR(@Type)+' )'      exec('SELECT COUNT(Id) from AIElearning_TestForm where ' + @condition)    "
8,AISystem_Subject_GetAllSubjectByJobtitle,"CREATE proc [dbo].[AISystem_Subject_GetAllSubjectByJobtitle]  @type int,  @unitCode nvarchar(50),  @limit int,  @jobTitleId INT  as  -- AISystem_Subject_GetAllSubjectByJobtitle 1,'aivietnam',1,2503    --Bảng tạm nang luc  Create table #AISystem_Talent_Temp (   Id int,   IsChild int  )  --Bảng tạm luu khoa hoc  Create table #AISystem_Subject_Temp (   Id int,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),  )    --Bảng tạm luu danh muc khoa hoc va khoa hoc  Create table #AISystem_Category_Subject_Temp (   PK int IDENTITY (1,1),   ItemId INT,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),   [Path] NVARCHAR(250),   IsCategory BIT,   SortColumn nvarchar(max)  )    -- Thêm năng lực cha (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id,0  From AISystem_Talent t  Where t.Limit = @limit and t.Type = @type    -- Them nang luc con (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  select tc.Id,  1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit = @limit and t.Type = @type    -- Thêm năng lực cha (nang luc don vi)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, 0  From AISystem_Talent t  Where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    -- Them nang luc con (nang luc don vi)  Insert Into #AISystem_Talent_Temp  select tc.Id,1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    PRINT('Begin add subject')  -- Them khoa học  Insert Into #AISystem_Subject_Temp   SELECT         DISTINCT          ( s.Id ),  s.CateSubjectId, s.Code, s.Name      FROM          dbo.AISystem_Talent_Subject ts          INNER JOIN dbo.AISystem_Subject s  ON ts.SubjectId = s.Id          INNER JOIN #AISystem_Talent_Temp tt on (ts.TalentId = tt.Id AND tt.IsChild = 0)     OR (ts.TalentChildId = tt.Id AND tt.IsChild = 1)       -- Khaoa hoc cua chuc danh  Insert Into #AISystem_Subject_Temp  SELECT    DISTINCT ( s.Id ),  s.CateSubjectId, s.Code, s.Name      FROM          dbo.AISystem_JobTitle_Talent jt          INNER JOIN dbo.AISystem_Talent_Subject ts              ON ( ts.TalentId = jt.TalentId AND jt.IsChild = 0 AND ((CASE WHEN ts.TalentLevelId > 0 THEN ts.TalentLevelId ELSE 0 END) = jt.TalentLevelId ) ) OR ( ts.TalentChildId = jt.TalentId AND jt.IsChild = 1 AND ((CASE WHEN ts.TalentLevelId > 0 THEN ts.TalentLevelId ELSE 0 END) = jt.TalentLevelId ) )          INNER JOIN dbo.AISystem_Subject s              ON ts.SubjectId = s.Id     WHERE jt.JobTitleId = @jobTitleId    PRINT('Begin sort by category')  --Lay cac danh muc khoa hoc  INSERT INTO #AISystem_Category_Subject_Temp  SELECT DISTINCT (st.CateSubjectId),-1, '', cs.Title,cs.Title, 1,STR(DENSE_RANK() OVER (ORDER BY st.CateSubjectId desc))  FROM #AISystem_Subject_Temp st INNER JOIN dbo.AISystem_Category_Subject cs  ON st.CateSubjectId = cs.Id ORDER BY st.CateSubjectId DESC  -- Lấy các khóa học của danh mục  INSERT INTO #AISystem_Category_Subject_Temp  SELECT DISTINCT (s.Id), s.CateSubjectId, s.Code, s.Name, '-+ ' + s.Name, 0, STR(st.PK) + str(DENSE_RANK() OVER (ORDER BY s.Id desc))  FROM #AISystem_Category_Subject_Temp st INNER JOIN #AISystem_Subject_Temp s  on st.ItemId = s.CateSubjectId ORDER BY s.Id DESC    --Tra ve du lieu cuoi cung  SELECT ROW_NUMBER() OVER (ORDER BY SortColumn ) AS RowNumber,* FROM #AISystem_Category_Subject_Temp     -- Xoa bang tam  DROP TABLE #AISystem_Talent_Temp  DROP TABLE #AISystem_Subject_Temp  DROP TABLE #AISystem_Category_Subject_Temp  SET QUOTED_IDENTIFIER OFF"
9,AIElearning_Exercise_GetUserGroup,"create proc [dbo].[AIElearning_Exercise_GetUserGroup]  @Userid int,  @Exerciseid int  as  select * from AIElearning_Exercise_Group where ExerciseId =@Exerciseid and @Userid in (select * from Split(ListUser))  "
10,GetContentItemsByTerm,"CREATE PROCEDURE dbo.GetContentItemsByTerm   @Term nvarchar(250)  AS  BEGIN  DECLARE @TermID int    , @TermLeft int    , @TermRight int    , @VocabularyID int     SELECT    @TermID = TermID    , @TermLeft = TermLeft    , @TermRight = TermRight    , @VocabularyID = VocabularyID   FROM    dbo.Taxonomy_Terms   WHERE    Name = @Term     IF @TermLeft = 0 AND @TermRight = 0   BEGIN    -- Simple Term    SELECT c.*    FROM dbo.ContentItems As c     INNER JOIN dbo.ContentItems_Tags ct ON ct.ContentItemID = c.ContentItemID     INNER JOIN dbo.Taxonomy_Terms t ON t.TermID = ct.TermID    WHERE t.TermID = @TermID   END ELSE BEGIN    -- Hierarchical Term    SELECT c.*    FROM dbo.ContentItems As c     INNER JOIN dbo.ContentItems_Tags ct ON ct.ContentItemID = c.ContentItemID     INNER JOIN dbo.Taxonomy_Terms t ON t.TermID = ct.TermID    WHERE t.TermLeft >= @TermLeft     AND t.TermRight <= @TermRight     AND t.VocabularyID = @VocabularyID   END  END"
11,UpdateFolderPermission,"CREATE PROCEDURE dbo.[UpdateFolderPermission]      @FolderPermissionID     Int, -- not null!      @FolderID               Int, -- not null!      @PermissionId           Int, -- not null!      @RoleId                 Int, -- might be negative for virtual roles      @AllowAccess            Bit, -- false: deny, true: grant      @UserId                 Int, -- -1 is replaced by Null      @LastModifiedByUserId   Int  -- -1 is replaced by Null  AS      UPDATE dbo.[FolderPermission] SET          [FolderID]             = @FolderID,          [PermissionID]         = @PermissionID,          [RoleId]               = @RoleId,          [AllowAccess]          = @AllowAccess,          [UserId]               = CASE WHEN @UserId = -1 THEN Null ELSE @UserId  END,          [LastModifiedByUserId] = CASE WHEN @LastModifiedByUserId = -1 THEN Null ELSE @LastModifiedByUserId  END,          [LastModifiedOnDate]   = GetDate()      WHERE          [FolderPermissionID]   = @FolderPermissionID"
12,AIElearning_Class_Lecturers_GetsListByClassId,"  CREATE proc [dbo].[AIElearning_Class_Lecturers_GetsListByClassId]  @ClassId INT,  @ParentType INT   as  -- AIElearning_Class_Lecturers_GetsListByClassId 320,1  exec('     SELECT ROW_NUMBER() OVER (ORDER BY cl.OrderNo) AS RowNumber,    cl.*, l.Description, l.Literacy, l.Type, u.UnitCode, u.JobTitleCode, u.Username, u.Displayname, u.Avatar, l.Status, u.UnitChildPath, l.Id as LecturerId,u.userid  FROM            AIElearning_Class_Lecturers AS cl INNER JOIN                           AIElearning_Lecturers AS l ON cl.LecturersId = l.Id INNER JOIN                           AISystem_UserInfo AS u ON l.UserInfoId = u.Id        WHERE        (cl.ClassId = '+@ClassId+' and cl.ParentType = '+ @ParentType+')')    SET QUOTED_IDENTIFIER OFF    "
13,AISystem_Talent_Child_GetsBySearch,"  CREATE proc [dbo].[AISystem_Talent_Child_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Talent_Child AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Talent_Child       )         SELECT     *   FROM #AISystem_Talent_Child   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
14,AIElearning_Training_Plan_GetsBySearch,"CREATE proc [dbo].[AIElearning_Training_Plan_GetsBySearch]  @pageIndex int,  @pageSize int,  @UnitCode nvarchar(250),  @Month int,  @Year int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (UnitCode =''' + @UnitCode + ''') '  if(@Month>-1)   set @Condition=@Condition+' AND Month='+str(@Month)  if(@Year>-1)   set @Condition=@Condition+' AND Year='+str(@Year)    exec('    WITH #AIElearning_Training_Plan AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Training_Plan '+@Condition+'       )         SELECT     *   FROM #AIElearning_Training_Plan   where RowNumber between '+ @start +'  and  '+ @end +'   ')"
15,AIElearning_ClassUser_TotalTime_DeleteByParam,"create proc [dbo].[AIElearning_ClassUser_TotalTime_DeleteByParam]   @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50)  as  begin  delete from AIElearning_ClassUser_TotalTime where (Username = @UserName or @UserName ='') and (ReportYear = @ReportYear  or @ReportYear =-1) and (UnitCode = @UnitCode or @UnitCode = '')  end"
16,DeleteTabPermissionsByUserID,"CREATE procedure dbo.[DeleteTabPermissionsByUserID]   @PortalID int,   @UserID int  AS   DELETE FROM dbo.TabPermission    FROM dbo.TabPermission TP     INNER JOIN dbo.Tabs AS T ON TP.TabID = T.TabID    WHERE T.PortalID = @PortalID    AND TP.UserID = @UserID"
17,AIElearning_Class_Hot_GetsByUnitCode,"CREATE proc [dbo].[AIElearning_Class_Hot_GetsByUnitCode]  @UnitCode nvarchar(50),  @IsHot int  as  -- AIElearning_Class_Hot_GetsByUnitCode '-1', 1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@UnitCode<>'')   set @Condition=@Condition+ ' AND h.UnitCode='''+@UnitCode+''''  if(@IsHot>-1)   set @Condition=@Condition+' AND h.IsHot='+str(@IsHot)     exec('   SELECT   h.*, c.Type, c.Name, c.Code, c.Avatar, c.Price   FROM            AIElearning_Class_Hot AS h INNER JOIN        AIElearning_Class AS c ON h.ClassId = c.Id           '+@Condition+' Order by h.OrderNo  ')  SET QUOTED_IDENTIFIER OFF     "
18,AddSkinPackage,"CREATE PROCEDURE dbo.[AddSkinPackage]   @PackageID  int,   @PortalID   int,   @SkinName   nvarchar(50),   @SkinType   nvarchar(20),   @CreatedByUserID int  AS   INSERT INTO dbo.SkinPackages (     PackageID,     PortalID,     SkinName,     SkinType,   [CreatedByUserID],   [CreatedOnDate],   [LastModifiedByUserID],   [LastModifiedOnDate]   )   VALUES (     @PackageID,     @PortalID,     @SkinName,     @SkinType,     @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate()   )   SELECT SCOPE_IDENTITY()"
19,AIElearning_TestCampaign_GetsByParam,"CREATE PROC [dbo].[AIElearning_TestCampaign_GetsByParam]      @pageIndex INT,      @pageSize INT,      @KeyWord NVARCHAR(250),      @CategoryId INT,      @IsSearch INT,      @strUnitCode NVARCHAR(MAX),      @Participants INT,      @OrderBy NVARCHAR(50)  AS -- AIElearning_TestCampaign_GetsByParam 1,10,'',13,0,'aivietnam',1,'t.Id desc'  -- Phan trang  if CHARINDEX('''',@strUnitCode) > 0   SET @strUnitCode =  REPLACE(@strUnitCode,'''','')    DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  --IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')   -- set @condition = @condition + ' and (t.UnitCode in (' + @strUnitCode + '))'  IF ( @Participants > 0 )      SET @condition = @condition + ' and (t.Participants = ' + STR(@Participants) + ' or t.Participants = 3) '  IF ( @CategoryId > 0 )      BEGIN          IF ( @strUnitCode IS NOT NULL AND @strUnitCode <> ''             )              SET @condition = @condition + ' and (t.UnitCode in ( select * from Split(''' + @strUnitCode + ''') ))'          DECLARE @ChildId AS NVARCHAR(MAX)          SELECT  @ChildId = ChildId          FROM    AISystem_Category_Campaign          WHERE   Id = @CategoryId          IF ( @ChildId IS NOT NULL )              SET @condition = @condition + ' and (t.Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in (' + @ChildId + '))) '      END  ELSE      BEGIN          IF ( @strUnitCode IS NOT NULL AND @strUnitCode <> ''             )              SET @condition = @condition + ' and (t.UnitCode in (select * from Split(''' + @strUnitCode + ''')))'    -- Tao bang tam          CREATE TABLE #bangTam_Campaign ( [Id] [INT] )          INSERT  INTO #bangTam_Campaign          SELECT  Id          FROM    AISystem_Category_Campaign          WHERE   UnitCode = '-1' -- d? li?u t?p đoàn          INSERT  INTO #bangTam_Campaign          SELECT  Id          FROM    AISystem_Category_Campaign          WHERE   UnitCode = @strUnitCode -- d? li?u p&l          SET @condition = @condition + ' and t.Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in (select Id from #bangTam_Campaign))'      END  IF ( @KeyWord IS NOT NULL AND @KeyWord <> ''     )      BEGIN          IF ( @IsSearch > 0 )              BEGIN                  EXEC('                  WITH #AIElearning_TestCampaign AS(                   SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,                  RANK, t.*                  from  AIElearning_TestCampaign AS t                  INNER JOIN                  CONTAINSTABLE(AIElearning_TestCampaign,( Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=t.Id                    where ' + @Condition + ' and t.Status = 1                              )                        SELECT                   *                  FROM #AIElearning_TestCampaign                  where RowNumber between '+ @start +'  and  '+ @end +'                            ')              END          ELSE              BEGIN                  EXEC('                  WITH #AIElearning_TestCampaign AS(                   SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,                  RANK, t.*                  from  AIElearning_TestCampaign AS t                  INNER JOIN                  FREETEXTTABLE(AIElearning_TestCampaign,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=t.Id                    where ' + @Condition + ' and t.Status = 1                              )                        SELECT                   *                  FROM #AIElearning_TestCampaign                  where RowNumber between '+ @start +'  and  '+ @end +'                     ')              END      END  ELSE      BEGIN          EXEC('            WITH #AIElearning_TestCampaign AS(           SELECT ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RowNumber,          t.*          f"
20,AIElearning_TestCampaign_GetsByParam,rom  AIElearning_TestCampaign AS t          where ' + @Condition + ' and t.Status = 1             )              SELECT           *          FROM #AIElearning_TestCampaign          where RowNumber between '+ @start +'  and  '+ @end +'           ')      END      SET QUOTED_IDENTIFIER OFF  
21,CoreMessaging_GetMessageAttachmentsByMessage,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageAttachmentsByMessage]      @MessageID INT  AS   SELECT [MessageID], [FileID], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageAttachments   WHERE  [MessageID] = @MessageID"
22,GetSingleUserByEmail,"CREATE PROCEDURE dbo.[GetSingleUserByEmail]      @PortalId INT,   @Email nvarchar(255)  AS    SELECT ISNULL((SELECT TOP 1 U.UserId from dbo.[Users] U Inner Join dbo.[UserPortals] UP on UP.[UserId] = U.[UserId] Where U.Email = @Email and UP.[PortalId] = @PortalId), -1)"
23,AIElearning_TestForm_Part_GetsBySearch,"    create proc [dbo].[AIElearning_TestForm_Part_GetsBySearch]  @TestId int,  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_TestForm_Part AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestForm_Part where TestId='+@TestId+'       )         SELECT     *   FROM #AIElearning_TestForm_Part   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
24,AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail,"  CREATE proc [dbo].[AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail]  @pageIndex int,  @pageSize int,  @type int,  @unitCode nvarchar(50),  @limit INT,  @jobTitleId int  as  -- AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail 1,100,0,'aivietnam',1,2504  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      Create table #AISystem_Talent_Temp (   PK int IDENTITY (1,1),   Id int,      Title nvarchar(250),   Code nvarchar(250),   Description nvarchar(max),   Limit int,   UnitCode nvarchar(50),   CateTalentId int,   LevelCode nvarchar(50),   LevelName nvarchar(250),   LevelId int,   ChildId int,   ChildCode nvarchar(50),   ChildTitle NVARCHAR(250),   IsChild int,   SortColumn nvarchar(max),   IsBase BIT,   JobTitleTalentId int  )  -- AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail 1,100,1,'',1,4  -- NANG LUC COT LOI  -- Thêm năng lực cha (nang luc dung chung)  Insert Into #AISystem_Talent_Temp   SELECT   t.Id, t.Title,t.Code,ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit,  t.UnitCode, t.CateTalentId, tl.LevelCode ,r.Title,tl.Id, 0,'','', 0, str(t.Id), 1,0   From AISystem_Talent t LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = t.Id and tl.IsLevelChild = 0  )   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   Where t.Limit = @limit and t.Type = @type AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child)        -- Them nang luc con (nang luc dung chung)  Insert Into #AISystem_Talent_Temp   select t.Id, t.Title, t.Code,ISNULL('- ' +tc.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, t.CateTalentId,tl.LevelCode ,r.Title,tl.Id, tc.Id,tc.Code,tc.Title, 1,str(tc.TalentId) ,1,0   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId   LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = tc.Id and tl.IsLevelChild = 1  )   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   where t.Limit = @limit and t.Type = @type    -- Thêm năng lực cha (nang luc don vi)  Insert Into #AISystem_Talent_Temp   SELECT   t.Id, t.Title,t.Code, ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit,  t.UnitCode, t.CateTalentId,tl.LevelCode, r.Title,tl.Id, 0,'','', 0, str(t.Id),1,0   From AISystem_Talent t LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = t.Id and tl.IsLevelChild = 0  )   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   Where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child)    -- Them nang luc con (nang luc don vi)  Insert Into #AISystem_Talent_Temp   select t.Id, t.Title, t.Code,ISNULL('- ' +tc.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, t.CateTalentId, tl.LevelCode,r.Title,tl.Id, tc.Id, tc.Code, tc.Title,  1,str(tc.TalentId) ,1,0   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId   LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = tc.Id and tl.IsLevelChild = 1)   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    -- NANG LUC THEO CHUC DANH  -- Thêm năng lực cha  Insert Into #AISystem_Talent_Temp   SELECT   t.Id, t.Title,t.Code, ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit,  t.UnitCode, t.CateTalentId, tl.LevelCode, r.Title,tl.Id,0, '', '',0, str(t.Id),0,jt.Id   From AISystem_Talent t inner join AISystem_JobTitle_Talent jt ON jt.TalentId = t.Id    LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = t.Id and tl.IsLevelChild = 0  )   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   WHERE jt.IsChild = 0 and JobTitleId =@jobTitleId AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child) AND ISNULL(jt.TalentLevelId,0) = ISNULL(tl.Id,0)   -- Thêm năng lực con  In"
25,AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail,"sert Into #AISystem_Talent_Temp   select t.Id, t.Title, t.Code,ISNULL('- ' +tc.Description,'') + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, t.CateTalentId, tl.LevelCode, r.Title,tl.Id, tc.Id, tc.Code, tc.Title, 1,str(tc.TalentId) ,0,jt.Id   from AISystem_Talent_Child tc inner join AISystem_Talent t  on t.Id = tc.TalentId  inner join AISystem_JobTitle_Talent jt ON jt.TalentId = tc.Id    LEFT JOIN AISystem_Talent_Level tl ON (tl.TalentId = tc.Id and tl.IsLevelChild = 1)   LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode   where jt.IsChild =1 and JobTitleId =@jobTitleId AND ISNULL(jt.TalentLevelId,0) = ISNULL(tl.Id,0)   -- AISystem_JobTitle_Talent_GetAllTalentByJobtitleDetail 1,100,1,'',1,2504  exec('  WITH #AISystem_Jobtitle_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY IsBase,SortColumn desc, IsChild, PK desc ) AS RowNumber,  * from #AISystem_Talent_Temp  where '+@Condition+'  )       SELECT  *   FROM #AISystem_Jobtitle_Talent   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
26,SaveRelationshipType,"CREATE PROCEDURE dbo.[SaveRelationshipType]      @RelationshipTypeID INT ,      @Direction INT ,      @Name NVARCHAR(50) ,      @Description NVARCHAR(500) ,      @UserID INT  AS       IF ( @RelationshipTypeID = -1 )           BEGIN              INSERT  dbo.RelationshipTypes                      ( Direction,                        Name ,                                    Description,                             CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @Direction , --  @Direction INT                         @Name , -- Name - nvarchar(50)                        @Description , -- @Description NVARCHAR(500)                        @UserID , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @UserID , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )                                    SELECT  @RelationshipTypeID = SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.RelationshipTypes              SET     Name = @Name ,                      Direction = @Direction ,                      Description = @Description ,                      LastModifiedByUserID = @UserID ,                      LastModifiedOnDate = GETDATE()              WHERE   RelationshipTypeID = @RelationshipTypeID          END                SELECT  @RelationshipTypeID"
27,UpdateModulePermission,"CREATE PROCEDURE dbo.[UpdateModulePermission]      @ModulePermissionId     Int, -- not null!      @PortalId               Int, -- not null!      @ModuleId               Int, -- not null!      @PermissionId           Int, -- not null!      @RoleId                 Int, -- might be negative for virtual roles      @AllowAccess            Bit, -- false: deny, true: grant      @UserId                 Int, -- -1 is replaced by Null      @LastModifiedByUserId   Int  -- -1 is replaced by Null  AS      UPDATE dbo.[ModulePermission] SET          [ModuleId]             = @ModuleId,          [PortalId]             = @PortalId,          [PermissionId]         = @PermissionId,          [RoleId]               = @RoleId,          [AllowAccess]          = @AllowAccess,          [UserId]               = CASE WHEN @UserId = -1 THEN Null ELSE @UserId  END,          [LastModifiedByUserId] = CASE WHEN @LastModifiedByUserId = -1 THEN Null ELSE @LastModifiedByUserId  END,          [LastModifiedOnDate]   = GetDate()      WHERE          [ModulePermissionID]   = @ModulePermissionID"
28,AIElearning_Training_Plan_ReportClass,"CREATE proc [dbo].[AIElearning_Training_Plan_ReportClass]  @UnitCode nvarchar(250),  @Month int,  @Year int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  DECLARE @Condi AS NVARCHAR(MAX)  SET @Condi='where (1=1)'  DECLARE @string AS NVARCHAR(MAX)  SET @string=''  -- Phan trang  --AIElearning_Training_Plan_ReportClass '28',-1,2018  IF(@UnitCode IS NOT NULL AND @UnitCode<>'')   begin   set @condition = @condition + ' and (class.UnitCode =''' + @UnitCode + ''') '   set @Condi = @Condi + ' and (plans.UnitCode =''' + @UnitCode + ''') '  end  if(@Month>-1)  begin   set @Condition=@Condition+' AND Month(class.StartDateClass)='+str(@Month)+''   set @Condi = @Condi+' AND plans.Month='+str(@Month)+''  end  if(@Year>-1)  begin   set @Condition=@Condition+' AND Year(class.StartDateClass)='+str(@Year)+''   set @Condi=@Condi+' AND plans.Year='+str(@Year)+''  end    set @Condition=@Condition+' AND class.SubjectId in ( select plansub.SubjectId from AIElearning_Training_Plan plans   inner join AIElearning_Training_Plan_Subject plansub on plansub.PlanId=plans.id '+@Condi+')'  --  exec('  Select class.name [Tenlop],class.StartDateClass [TGBD] ,class.EndateClass [TGKT],  (Select count(id) from AIElearning_ClassUser where classid=class.id) [SoHocVienThucTe],  (Select Title from AISystem_Category_Subject where id=sub.CateSubjectId )[TenDanhMucKhoaHoc],  sub.name [TenKhoaHoc] ,dbo.GetStatus(class.TypePalen) [TrangThai]    from AIElearning_Class class inner join AISystem_Subject sub on class.SubjectId=sub.Id    '+@Condition+' ')"
29,AISystem_Talent_Child_GetsByTalentId,"CREATE proc [dbo].[AISystem_Talent_Child_GetsByTalentId]  @talentId int,  @isShare int,  @title nvarchar(250)  as  -- AISystem_Talent_Child_GetsByTalentId 4,2,'Năng lực 6'  DECLARE @condition NVARCHAR(max)  set @condition = ' (1=1) '    IF(@talentId >-1)   SET @Condition +='  and  TalentId = ' + str(@talentId)  IF(@isShare > -1)   SET @Condition +='  and  IsShare = ' + str(@isShare)  IF(@title <> '')   SET @Condition +='  and  Title = N''' + @title +''''    exec('select * from AISystem_Talent_Child where '+ @condition)    "
30,AIElearning_Training_Plan_GetsBy,"  CREATE proc [dbo].[AIElearning_Training_Plan_GetsBy]  @Month int,  @Year int,  @UnitCode nvarchar(250)  as  select top(1)* from AIElearning_Training_Plan where Month=@Month and Year=@Year and UnitCode=@UnitCode      "
31,UpdateDatabaseVersionAndName,"create procedure dbo.UpdateDatabaseVersionAndName     @Major  int,   @Minor  int,   @Build  int,   @Name nvarchar(50)    AS     INSERT INTO dbo.Version (    Major,    Minor,    Build,    [Name],    CreatedDate   )    VALUES (     @Major,     @Minor,     @Build,     @Name,     getdate()    )"
32,GetPackageDependencies,CREATE PROCEDURE dbo.[GetPackageDependencies]  AS   SELECT * FROM dbo.[PackageDependencies]
33,AIElearning_Class_Lecturers_GetsListByUserNameCount,"  CREATE PROC [dbo].[AIElearning_Class_Lecturers_GetsListByUserNameCount]      @Username NVARCHAR(150),      @StartDate DATETIME,      @EndDate DATETIME,      @Status INT,   @ParentType INT  AS -- AIElearning_Class_Lecturers_GetsListByUserNameCount 'hant'  DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @Username <> '' )      SET @condition = @condition + ' and (u.Username=''' + @Username + ''')'  IF CONVERT(DATETIME, @StartDate, 121) > '01/01/1900'      SET @condition = @condition + ' and c.StartDateClass >= ''' + CONVERT(NVARCHAR(23), @StartDate, 121) + ''''   --ngày kết thúc  IF CONVERT(DATETIME, @EndDate, 121) > '01/01/1900'      SET @condition = @condition + ' and c.StartDateClass <= ''' + CONVERT(NVARCHAR(23), @EndDate, 121) + ''''  IF ( @Status > 0 )      SET @condition = @condition + ' and u.Status=' + STR(@Status)  IF ( @ParentType > 0 )      SET @condition = @condition + ' and cl.ParentType=' + STR(@ParentType)  EXEC('  select COUNT(cl.Id) from   AIElearning_Class_Lecturers AS cl INNER JOIN  AIElearning_Lecturers AS l ON cl.LecturersId = l.Id INNER JOIN  AISystem_UserInfo AS u ON l.UserInfoId = u.Id INNER JOIN  AIElearning_Class AS c ON cl.ClassId = c.Id  WHERE ' + @condition )  SET QUOTED_IDENTIFIER OFF  "
34,GetTabByUniqueID,CREATE PROCEDURE dbo.[GetTabByUniqueID]      @UniqueID   uniqueidentifier  AS   SELECT *    FROM dbo.vw_Tabs   WHERE UniqueID = @UniqueID
35,AISystem_Category_Media_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_Media_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50)  AS    -- exec AISystem_Category_Media_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Media.Id,      0,      AISystem_Category_Media.ParentId,      AISystem_Category_Media.Title,      STR(AISystem_Category_Media.OrderNo),      AISystem_Category_Media.Title,      AISystem_Category_Media.Code          FROM      AISystem_Category_Media    WHERE      (AISystem_Category_Media.Status=@Status OR @Status = -1)       AND (AISystem_Category_Media.Id = @ParentId)      AND AISystem_Category_Media.LanguageId = @LanguageId      AND AISystem_Category_Media.PortalId = @portalId      AND (AISystem_Category_Media.UnitCode = @unitCode  )   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Media.Id,      0,      AISystem_Category_Media.ParentId,      AISystem_Category_Media.Title,      STR(AISystem_Category_Media.OrderNo),      AISystem_Category_Media.Title,      AISystem_Category_Media.Code          FROM      AISystem_Category_Media    WHERE      (AISystem_Category_Media.Status=@Status OR @Status = -1)       AND (AISystem_Category_Media.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Media.ParentId IS NULL or AISystem_Category_Media.ParentId <=0))      AND AISystem_Category_Media.LanguageId = @LanguageId      AND AISystem_Category_Media.PortalId = @portalId      AND (AISystem_Category_Media.UnitCode = @unitCode  )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_Media  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction              "
36,DeleteListEntryByID,"CREATE procedure dbo.DeleteListEntryByID    @EntryId   int,  @DeleteChild bit    as    Delete  From dbo.Lists  Where  [EntryID] = @EntryID    If @DeleteChild = 1  Begin   Delete    From dbo.Lists   Where [ParentID] = @EntryID  End"
37,aspnet_RegisterSchemaVersion,"CREATE PROCEDURE [dbo].aspnet_RegisterSchemaVersion      @Feature                   nvarchar(128),      @CompatibleSchemaVersion   nvarchar(128),      @IsCurrentVersion          bit,      @RemoveIncompatibleSchema  bit  AS  BEGIN      IF( @RemoveIncompatibleSchema = 1 )      BEGIN          DELETE FROM dbo.aspnet_SchemaVersions WHERE Feature = LOWER( @Feature )      END      ELSE      BEGIN          IF( @IsCurrentVersion = 1 )          BEGIN              UPDATE dbo.aspnet_SchemaVersions              SET IsCurrentVersion = 0              WHERE Feature = LOWER( @Feature )          END      END        INSERT  dbo.aspnet_SchemaVersions( Feature, CompatibleSchemaVersion, IsCurrentVersion )      VALUES( LOWER( @Feature ), @CompatibleSchemaVersion, @IsCurrentVersion )  END"
38,CK__ActivityP__Launc__02690DE4,(len([LaunchData])<=(4096))
39,AIElearning_TestForm_Part_GetsBySearchCount,  create proc [dbo].[AIElearning_TestForm_Part_GetsBySearchCount]  @TestId int  as  select COUNT(*) from AIElearning_TestForm_Part WHERE TestId=@TestId    SET QUOTED_IDENTIFIER OFF     
40,UpdateTabPermission,"CREATE PROCEDURE dbo.[UpdateTabPermission]      @TabPermissionId        Int, -- not null!      @TabId                  Int, -- not null!      @PermissionId           Int, -- not null!      @RoleId                 Int, -- might be negative for virtual roles      @AllowAccess            Bit, -- false: deny, true: grant      @UserId                 Int, -- -1 is replaced by Null      @LastModifiedByUserId   Int  -- -1 is replaced by Null  AS      UPDATE dbo.[TabPermission] SET          [TabID]                = @TabId,          [PermissionID]         = @PermissionId,          [RoleID]               = @RoleId,          [AllowAccess]          = @AllowAccess,          [UserID]               = CASE WHEN @UserId = -1 THEN Null ELSE @UserId  END,          [LastModifiedByUserId] = CASE WHEN @LastModifiedByUserId = -1 THEN Null ELSE @LastModifiedByUserId  END,          [LastModifiedOnDate]   = GetDate()      WHERE          [TabPermissionID]      = @TabPermissionId"
41,AISystem_Talent_GetsBySearch,"CREATE proc [dbo].[AISystem_Talent_GetsBySearch]  @pageIndex int,  @pageSize int,  @limit int,  @unitCode nvarchar(50),  @cateTalentId int,  @Keyword nvarchar(250)  as    -- [AISystem_Talent_GetsBySearchCount] 2,'aivietnam',8,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@limit <> 0)   set @Condition=@Condition+' AND Limit='+str(@limit)  if(@unitCode <> '' )   set @Condition=@Condition+' AND UnitCode='''+@unitCode+''''  if(@cateTalentId <> 0)   set @Condition=@Condition+' AND CateTalentId='+str(@cateTalentId)  if(@Keyword <> '')   set @condition = @condition + ' and (Title like N''%' + @Keyword + '%'' or Code =''' + @Keyword + ''') '    exec('  WITH #AISystem_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *   from AISystem_Talent where '+@Condition+')          SELECT  *   FROM #AISystem_Talent   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
42,AIElearning_Training_Plan_GetsByCountSubject,  CREATE proc [dbo].[AIElearning_Training_Plan_GetsByCountSubject]  @PlanId int  as  select COUNT(sub.id) from AIElearning_Training_Plan plans inner join  AIElearning_Training_Plan_Subject sub    on plans.Id=sub.PlanId where plans.Id=@PlanId      
43,DeleteSkinPackage,CREATE PROCEDURE dbo.[DeleteSkinPackage]     @SkinPackageID  int    AS      DELETE       FROM dbo.SkinPackages   WHERE   SkinPackageID = @SkinPackageID
44,AIElearning_Class_Lecturers_GetsListByUserName,"  CREATE PROC [dbo].[AIElearning_Class_Lecturers_GetsListByUserName]      @pageIndex INT,      @pageSize INT,      @Username NVARCHAR(150),      @StartDate DATETIME,      @EndDate DATETIME,      @Status INT,   @ParentType INT  AS -- AIElearning_Class_Lecturers_GetsListByUserName 1, 111, 'hant',3  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @Username <> '' )      SET @condition = @condition + ' and (u.Username=''' + @Username + ''')'  IF CONVERT(DATETIME, @StartDate, 121) > '01/01/1900'      SET @condition = @condition + ' and c.StartDateClass >= ''' + CONVERT(NVARCHAR(23), @StartDate, 121) + ''''   --ngày kết thúc  IF CONVERT(DATETIME, @EndDate, 121) > '01/01/1900'      SET @condition = @condition + ' and c.StartDateClass <= ''' + CONVERT(NVARCHAR(23), @EndDate, 121) + ''''  IF ( @Status > 0 )      SET @condition = @condition + ' and u.Status=' + STR(@Status)  IF ( @ParentType > 0 )      SET @condition = @condition + ' and cl.ParentType=' + STR(@ParentType)  EXEC('  WITH #AIElearning_Class_Lecturers AS(  SELECT ROW_NUMBER() OVER (ORDER BY cl.Id desc) AS RowNumber,   cl.*, l.Status, u.UnitCode, u.JobTitleCode, u.UserId, u.Username, c.Name, c.StartDateClass, c.Offline_Time  FROM            AIElearning_Class_Lecturers AS cl INNER JOIN  AIElearning_Lecturers AS l ON cl.LecturersId = l.Id INNER JOIN  AISystem_UserInfo AS u ON l.UserInfoId = u.Id INNER JOIN  AIElearning_Class AS c ON cl.ClassId = c.Id  WHERE ' + @condition + '    )        SELECT   *  FROM #AIElearning_Class_Lecturers  where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF   "
45,sp_helpdiagrams,"   CREATE PROCEDURE dbo.sp_helpdiagrams   (    @diagramname sysname = NULL,    @owner_id int = NULL   )   WITH EXECUTE AS N'dbo'   AS   BEGIN    DECLARE @user sysname    DECLARE @dboLogin bit    EXECUTE AS CALLER;     SET @user = USER_NAME();     SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));    REVERT;    SELECT     [Database] = DB_NAME(),     [Name] = name,     [ID] = diagram_id,     [Owner] = USER_NAME(principal_id),     [OwnerID] = principal_id    FROM     sysdiagrams    WHERE     (@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND     (@diagramname IS NULL OR name = @diagramname) AND     (@owner_id IS NULL OR principal_id = @owner_id)    ORDER BY     4, 5, 1   END   "
46,AIElearning_TestCampaign_GetsByParamCount,"CREATE PROC [dbo].[AIElearning_TestCampaign_GetsByParamCount]      @KeyWord NVARCHAR(250),      @CategoryId INT,      @IsSearch INT,      @strUnitCode NVARCHAR(MAX),      @Participants INT  AS -- AIElearning_TestCampaign_GetsByParamCount '', 1, 0, '-1', 0  if CHARINDEX('''',@strUnitCode) > 0   SET @strUnitCode =  REPLACE(@strUnitCode,'''','')  DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @Participants > 0 )      SET @condition = @condition + ' and (t.Participants = ' + STR(@Participants) + ' or t.Participants = 3) '  IF ( @CategoryId > 0 )      BEGIN           IF ( @strUnitCode IS NOT NULL AND @strUnitCode <> ''             )              SET @condition = @condition + ' and (t.UnitCode in (select * from Split(''' + @strUnitCode + ''')))'          DECLARE @ChildId AS NVARCHAR(MAX)          SELECT  @ChildId = ChildId          FROM    AISystem_Category_Campaign          WHERE   Id = @CategoryId          IF ( @ChildId IS NOT NULL )              SET @condition = @condition + ' and (t.Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in (' + @ChildId + '))) '      END  ELSE      BEGIN          IF ( @strUnitCode IS NOT NULL AND @strUnitCode <> ''             )              SET @condition = @condition + ' and (t.UnitCode in (select * from Split(''' + @strUnitCode + ''')))'    -- Tao bang tam          CREATE TABLE #bangTam_Campaign ( [Id] [INT] )          INSERT  INTO #bangTam_Campaign          SELECT  Id          FROM    AISystem_Category_Campaign          WHERE   UnitCode = '-1' -- d? li?u t?p đoàn          INSERT  INTO #bangTam_Campaign          SELECT  Id          FROM    AISystem_Category_Campaign          WHERE   UnitCode = @strUnitCode -- d? li?u p&l          SET @condition = @condition + ' and t.Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in (select Id from #bangTam_Campaign))'      END  IF ( @KeyWord IS NOT NULL AND @KeyWord <> ''     )      BEGIN          IF ( @IsSearch > 0 )              BEGIN                  EXEC('                  SELECT count(t.Id)                  from  AIElearning_TestCampaign AS t                  INNER JOIN                  CONTAINSTABLE(AIElearning_TestCampaign,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=t.Id                    where ' + @Condition + ' and t.Status = 1                  ')              END          ELSE              BEGIN                  EXEC('                  SELECT count(t.Id)                  from  AIElearning_TestCampaign AS t                  INNER JOIN                  FREETEXTTABLE(AIElearning_TestCampaign,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=t.Id                    where ' + @Condition + ' and t.Status = 1                  ')              END      END  ELSE      BEGIN          EXEC('          SELECT          COUNT(t.Id)          from  AIElearning_TestCampaign AS t          where ' + @Condition + ' and t.Status = 1          ')      END    SET QUOTED_IDENTIFIER OFF  "
47,GetDeletedUsers,CREATE PROCEDURE dbo.GetDeletedUsers   @PortalID   int  AS   IF @PortalID is null    BEGIN   SELECT  *   FROM dbo.vw_Users   WHERE  PortalId IS Null    AND IsDeleted = 1   ORDER BY UserName    END ELSE BEGIN   SELECT  *   FROM dbo.vw_Users   WHERE  PortalId = @PortalID      AND IsDeleted = 1   ORDER BY UserName    END
48,aspnet_CheckSchemaVersion,"CREATE PROCEDURE [dbo].aspnet_CheckSchemaVersion      @Feature                   nvarchar(128),      @CompatibleSchemaVersion   nvarchar(128)  AS  BEGIN      IF (EXISTS( SELECT  *                  FROM    dbo.aspnet_SchemaVersions                  WHERE   Feature = LOWER( @Feature ) AND                          CompatibleSchemaVersion = @CompatibleSchemaVersion ))          RETURN 0        RETURN 1  END"
49,AddFolderMapping,"CREATE PROCEDURE dbo.[AddFolderMapping]   @PortalID int,   @MappingName nvarchar(50),   @FolderProviderType nvarchar(50),   @CreatedByUserID int  AS  BEGIN   DECLARE @Priority int     SELECT TOP 1 @Priority = Priority + 1   FROM dbo.[FolderMappings]   WHERE [PortalID] = @PortalID   ORDER BY Priority DESC     INSERT INTO dbo.[FolderMappings] (    PortalID,    MappingName,    FolderProviderType,    Priority,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )   VALUES (    @PortalID,    @MappingName,    @FolderProviderType,    @Priority,    @CreatedByUserID,    GETDATE(),    @CreatedByUserID,    GETDATE()   )     SELECT SCOPE_IDENTITY()  END"
50,AIElearning_TestForm_PartQuestion_GetsBySearch,"    create proc [dbo].[AIElearning_TestForm_PartQuestion_GetsBySearch]  @TestId int,  @PartId int,  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_TestForm_PartQuestion AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestForm_PartQuestion  where TestId='+@TestId+' and (PartId='+@PartId+' OR '+@PartId+'=-1)       )         SELECT     *   FROM #AIElearning_TestForm_PartQuestion   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
51,AIElearning_Lecturers_GetByStatus,"CREATE proc [dbo].[AIElearning_Lecturers_GetByStatus]  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@Status<>-1)   set @Condition=@Condition+' AND i.Status='+str(@Status)  exec('   SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Displayname, i.Sex, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, i.Status    from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+'     ')"
52,AIElearning_Exercise_GetUserid,"create proc [dbo].[AIElearning_Exercise_GetUserid]  @Userid int,  @Exerciseid int  as  select top(1)* from AIElearning_Exercise_User where Userid=@Userid and ExerciseId=@Exerciseid  "
53,GetTabModules,"CREATE PROCEDURE dbo.[GetTabModules]   @TabId int -- not null!  AS  BEGIN   SELECT *    FROM dbo.vw_TabModules   WHERE  TabId = @TabId   ORDER BY TabId, PaneName, ModuleOrder -- optimized for index used  END"
54,AISystem_Talent_Level_GetsBySearch,"  CREATE proc [dbo].[AISystem_Talent_Level_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Talent_Level AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Talent_Level       )         SELECT     *   FROM #AISystem_Talent_Level   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
55,AIElearning_Training_Plan_GetsByCountClass,CREATE proc [dbo].[AIElearning_Training_Plan_GetsByCountClass]  @PlanId int  as  --AIElearning_Training_Plan_GetsByCountClass 2  if EXISTS((select * from AIElearning_Training_Plan_Subject  where planId=@PlanId))  begin  select Sum(sub.TotalClass) from AIElearning_Training_Plan plans inner join  AIElearning_Training_Plan_Subject sub    on plans.Id=sub.PlanId where sub.PlanId=@PlanId  end  else  select 0 
56,UpdateModule,"CREATE PROCEDURE dbo.[UpdateModule]   @ModuleId     int,      @ModuleDefId                int,   @ContentItemID    int,   @AllTabs     bit,    @StartDate     datetime,   @EndDate     datetime,   @InheritViewPermissions  bit,   @IsShareable    bit,   @IsShareableViewOnly  bit,   @IsDeleted     bit,   @LastModifiedByUserID    int     AS   UPDATE dbo.Modules    SET       ModuleDefId = @ModuleDefId,              ContentItemID = @ContentItemID,     AllTabs = @AllTabs,     StartDate = @StartDate,     EndDate = @EndDate,     InheritViewPermissions = @InheritViewPermissions,     IsShareable = @IsShareable,     IsShareableViewOnly = @IsShareableViewOnly,     IsDeleted = @IsDeleted,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()   WHERE  ModuleId = @ModuleId"
57,AIElearning_Class_MarkOffLine_GetsByClassid,"  CREATE proc [dbo].[AIElearning_Class_MarkOffLine_GetsByClassid]  @ClassId int,  @UserName nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@ClassId>-1)  set @Condition=@Condition+' AND MarkCodeId in ( select Id from AIElearning_Class_MarkOffLine_Code where Classid='+str(@ClassId)+')'  if(@UserName <>'')  set @Condition=@Condition+' AND UserName='''+@UserName+''' '    exec('  SELECT  cm.* ,          cmc.Name AS OfflineName ,          cmc.Code AS OfflineCode,          cmc.Point AS OfflinePoint  FROM    AIElearning_Class_MarkOffLine cm          INNER JOIN dbo.AIElearning_Class_MarkOffLine_Code cmc ON cm.MarkCodeId = cmc.Id '+@Condition+'        ')    SET QUOTED_IDENTIFIER OFF   "
58,AISystem_UserInfo_EmployeeCode,"  create proc [dbo].[AISystem_UserInfo_EmployeeCode]  @Username nvarchar(250),  @unitcode nvarchar(250)  as  -- AISystem_UserInfo_GetsByUsername 'hainv'  Select * from AISystem_UserInfo where   EmployeeCode = @Username and UnitCode=@unitcode  SET QUOTED_IDENTIFIER OFF     "
59,sp_helpdiagramdefinition,"   CREATE PROCEDURE dbo.sp_helpdiagramdefinition   (    @diagramname  sysname,    @owner_id int = null      )   WITH EXECUTE AS N'dbo'   AS   BEGIN    set nocount on      declare @theId   int    declare @IsDbo   int    declare @DiagId  int    declare @UIDFound int       if(@diagramname is null)    begin     RAISERROR (N'E_INVALIDARG', 16, 1);     return -1    end       execute as caller;    select @theId = DATABASE_PRINCIPAL_ID();    select @IsDbo = IS_MEMBER(N'db_owner');    if(@owner_id is null)     select @owner_id = @theId;    revert;        select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;    if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))    begin     RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);     return -3    end      select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ;     return 0   END   "
60,AISystem_Category_Unit_GetByParentId,CREATE PROC [dbo].[AISystem_Category_Unit_GetByParentId]  @ParentId int  AS  -- AISystem_Category_Unit_GetByParentId -1  SELECT * FROM AISystem_Category_Unit   WHERE (ParentId = @ParentId or @ParentId = -1)  order by Code desc
61,aspnet_Applications_CreateApplication,"CREATE PROCEDURE [dbo].aspnet_Applications_CreateApplication      @ApplicationName      nvarchar(256),      @ApplicationId        uniqueidentifier OUTPUT  AS  BEGIN      SELECT  @ApplicationId = ApplicationId FROM dbo.aspnet_Applications WHERE LOWER(@ApplicationName) = LoweredApplicationName        IF(@ApplicationId IS NULL)      BEGIN          DECLARE @TranStarted   bit          SET @TranStarted = 0            IF( @@TRANCOUNT = 0 )          BEGIN           BEGIN TRANSACTION           SET @TranStarted = 1          END          ELSE           SET @TranStarted = 0            SELECT  @ApplicationId = ApplicationId          FROM dbo.aspnet_Applications WITH (UPDLOCK, HOLDLOCK)          WHERE LOWER(@ApplicationName) = LoweredApplicationName            IF(@ApplicationId IS NULL)          BEGIN              SELECT  @ApplicationId = NEWID()              INSERT  dbo.aspnet_Applications (ApplicationId, ApplicationName, LoweredApplicationName)              VALUES  (@ApplicationId, @ApplicationName, LOWER(@ApplicationName))          END              IF( @TranStarted = 1 )          BEGIN              IF(@@ERROR = 0)              BEGIN           SET @TranStarted = 0           COMMIT TRANSACTION              END              ELSE              BEGIN                  SET @TranStarted = 0                  ROLLBACK TRANSACTION              END          END      END  END"
62,AIElearning_LearnRule_Level_Table_GetsInfoByParam,"CREATE proc [dbo].[AIElearning_LearnRule_Level_Table_GetsInfoByParam]  @typetime int,  @startendyear float,  @LevelCode nvarchar(50)  as  -- AIElearning_LearnRule_Level_Table_GetsInfoByParam 1, 1.5, 'PL'  SELECT       TOP (1) b.*, a.Status  FROM            AIElearning_LearnRule_Level_Table AS b INNER JOIN                           AIElearning_LearnRule_Table AS a ON b.TableId = a.Id  WHERE        (a.Status = 1) AND (b.startyear<=@startendyear) AND (b.endyear>=@startendyear) AND (b.TypeTime=@typetime) AND (b.LevelCode = @LevelCode)  "
63,GetEnabledAuthenticationServices,CREATE PROCEDURE dbo.GetEnabledAuthenticationServices  AS   SELECT *    FROM   dbo.Authentication    WHERE  IsEnabled = 1
64,AIElearning_TestForm_PartQuestion_GetsBySearchCount,"  create proc [dbo].[AIElearning_TestForm_PartQuestion_GetsBySearchCount]  @TestId int,  @PartId int  as  select COUNT(*) from AIElearning_TestForm_PartQuestion where TestId=@TestId and (PartId=@PartId OR @PartId=-1)    SET QUOTED_IDENTIFIER OFF     "
65,AISystem_Subject_User_GetBySubjectIdAndUserId,"CREATE PROC [dbo].[AISystem_Subject_User_GetBySubjectIdAndUserId]  @SubjectId INT,  @UserId INT  AS    SELECT * FROM dbo.AISystem_Subject_User   WHERE SubjectId = @SubjectId AND UserId = @UserId"
66,GetTabModuleOrder,"CREATE PROCEDURE dbo.[GetTabModuleOrder]   @TabId    int,    -- Not Null   @PaneName nvarchar(50)  -- Not Null  AS  BEGIN   SELECT *   FROM TabModules    WHERE TabId    = @TabId      AND PaneName = @PaneName   ORDER BY TabId, PaneName, ModuleOrder -- optimized for index used  END"
67,GetFolderPermissionsByPortalAndPath,"CREATE PROCEDURE dbo.[GetFolderPermissionsByPortalAndPath]      @PortalId int,      @FolderPath nvarchar(300)  AS  BEGIN      SET @PortalId = IsNull(@PortalId, -1)        SELECT *      FROM   dbo.[vw_FolderPermissions]      WHERE  PortalID = @PortalId AND (FolderPath = @FolderPath OR @FolderPath IS NULL)  END"
68,AISystem_Talent_Level_GetsByTalentId,"CREATE proc [dbo].[AISystem_Talent_Level_GetsByTalentId]  @talentId int,  @isChildLevel int,  @isShare int,  @levelCode nvarchar(50)  as  -- AISystem_Talent_Level_GetsByTalentId -1,-1,-1,''  DECLARE @condition NVARCHAR(max)  set @condition = ' (1=1) '    IF(@talentId >-1)   SET @Condition +='  and  TalentId = ' + str(@talentId)  IF(@isChildLevel > -1)   SET @Condition +='  and  IsLevelChild = ' + str(@isChildLevel)  IF(@isShare > -1)   SET @Condition +='  and  IsShare = ' + str(@isShare)  IF(@levelCode <> '')   SET @Condition +='  and  LevelCode = ''' +@levelCode+''''    exec('select ROW_NUMBER() OVER (ORDER BY tl.OrderNo desc) AS RowNumber, tl.*, l.Title from AISystem_Talent_Level tl inner join  AISystem_Rank l on l.Code = tl.LevelCode where '+ @condition)            "
69,AIElearning_Training_Plan_GetsByCountClassUse,CREATE proc [dbo].[AIElearning_Training_Plan_GetsByCountClassUse]  @PlanId int  as  --AIElearning_Training_Plan_GetsByCountClassUse 2  if EXISTS((select * from AIElearning_Training_Plan_Subject  where planId=@PlanId))  (  select Sum(sub.TotalClassUser) from AIElearning_Training_Plan plans inner join  AIElearning_Training_Plan_Subject sub    on plans.Id=sub.PlanId where plans.Id=@PlanId  )  else  select 0
70,GetDatabaseTimeUtc,CREATE PROCEDURE dbo.[GetDatabaseTimeUtc]  AS  BEGIN   SELECT GETUTCDATE()  END
71,GetSearchCommonWordsByLocale,"CREATE PROCEDURE dbo.GetSearchCommonWordsByLocale   @Locale nvarchar(10)     AS    SELECT   [CommonWordID],   [CommonWord],   [Locale]  FROM   dbo.SearchCommonWords  WHERE   [Locale] = @Locale"
72,AIElearning_Class_ReportUnitCode,"CREATE proc [dbo].[AIElearning_Class_ReportUnitCode]   @UnitCode nvarchar(250),  @ngaybd datetime,  @ngaykt datetime  as  --[dbo].[AIElearning_Class_ReportUnitCode] '28','10/08/2017','01/07/2018'  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  if(@UnitCode <>'-1')   set @Condition=@Condition+' AND class.Unitcode='''+@UnitCode+''''  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and class.StartDateClass >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''   --ngày kết thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and class.EndDate <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''    exec('    select class.name [Tenlop],class.Code [Malop],class.Offline_Time [Thoigian],unit.Title [Donvi],  (select count(id) from  AIElearning_ClassUser where Classid=class.id) [TongHV],  ( select Sum(MoneyReality) from  AIElearning_Monney_Class where Classid=class.id ) [TongTien],   (select Name from AISystem_Subject  where AISystem_Subject.Id=class.SubjectId)[Tenkhoahoc]   from AIElearning_Class  class  inner join AISystem_Category_Unit unit  on class.Unitcode=unit.Code  where ' + @condition + '      ')    SET QUOTED_IDENTIFIER OFF  "
73,AISystem_Category_Money_Unit_GetInfoByCode,create PROC [dbo].[AISystem_Category_Money_Unit_GetInfoByCode]  @code nvarchar(250)  as  select Top(1) * from AISystem_Category_Money_Unit where code=@code  SET QUOTED_IDENTIFIER OFF         
74,sp_creatediagram,"   CREATE PROCEDURE dbo.sp_creatediagram   (    @diagramname  sysname,    @owner_id  int = null,      @version   int,    @definition  varbinary(max)   )   WITH EXECUTE AS 'dbo'   AS   BEGIN    set nocount on       declare @theId int    declare @retval int    declare @IsDbo int    declare @userName sysname    if(@version is null or @diagramname is null)    begin     RAISERROR (N'E_INVALIDARG', 16, 1);     return -1    end       execute as caller;    select @theId = DATABASE_PRINCIPAL_ID();     select @IsDbo = IS_MEMBER(N'db_owner');    revert;         if @owner_id is null    begin     select @owner_id = @theId;    end    else    begin     if @theId <> @owner_id     begin      if @IsDbo = 0      begin       RAISERROR (N'E_INVALIDARG', 16, 1);       return -1      end      select @theId = @owner_id     end    end    -- next 2 line only for test, will be removed after define name unique    if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)    begin     RAISERROR ('The name is already used.', 16, 1);     return -2    end       insert into dbo.sysdiagrams(name, principal_id , version, definition)      VALUES(@diagramname, @theId, @version, @definition) ;        select @retval = @@IDENTITY     return @retval   END   "
75,aspnet_UnRegisterSchemaVersion,"CREATE PROCEDURE [dbo].aspnet_UnRegisterSchemaVersion      @Feature                   nvarchar(128),      @CompatibleSchemaVersion   nvarchar(128)  AS  BEGIN      DELETE FROM dbo.aspnet_SchemaVersions          WHERE   Feature = LOWER(@Feature) AND @CompatibleSchemaVersion = CompatibleSchemaVersion  END"
76,GetMarkResurl,"  CREATE FUNCTION [dbo].[GetMarkResurl]   (   @ClassId int,   @UserId int,   @type int,   @status int  )  RETURNS  nvarchar(Max)  AS  BEGIN   -- Declare the return variable here   DECLARE  @chuoi nvarchar(Max);   DECLARE  @Ketqua nvarchar(Max);   DECLARE @Dem Int;   DECLARE @Types Int;   DECLARE @Count Int;   DECLARE @I Int;   DECLARE @ID Int;   DECLARE @J Int;   DECLARE @Const float;   SET @I=1;   SET @J=1;   Set @Const=-1   SET @chuoi='';   SET @Ketqua='';      -- Add the T-SQL statements to compute the return value here  set @Dem=(SELECT COUNT(*) from   AIElearning_ClassItem where ClassId=@ClassId  and Type=@type)  WHILE (@I <= @Dem)     BEGIN             SET @ID=(SELECT TOP 1 ID from  (SELECT TOP(@I)ID from   AIElearning_ClassItem where ClassId=@ClassId  and Type=@type order by id asc ) A order by id desc)       SET  @Types=(SELECT MarkOption FROM AIElearning_ClassItem_TestSettings where ClassItemId=@ID)    SET @Count=(SELECT COUNT(*) from AIElearning_UserTest   where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId)       WHILE (@J <= @Count)    BEGIN    --max    if(@Types='0')    BEGIN    if(@Const>(select top 1 diemb FROM (SELECT  top(@J) (Mark/(TotalMark/100)) as diemb,id from AIElearning_UserTest       where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId order by id asc)A order by id desc))    Set @Const=@Const    else    Set @Const=(select top 1 diemb FROM (SELECT  top(@J) (Mark/(TotalMark/100)) as diemb,id from AIElearning_UserTest       where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId order by id asc)A order by id desc)    END    --avg    if(@Types='1')    BEGIN    Set @Const = @Const+(select top 1 diemb FROM (SELECT  top(@J) (Mark/(TotalMark/100)) as diemb,id from AIElearning_UserTest       where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId order by id asc)A order by id desc)    IF(@J=@Count)    SET @Const=(@Const+1)/@Count    END    --min    if(@Types='2')    BEGIN    Set @Const=(select top 1 diemb FROM (SELECT  top(@J) (Mark/(TotalMark/100)) as diemb,id from AIElearning_UserTest       where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId order by id desc)A order by id desc)    END    --    SET @J = @J+1    --    END    if(@Const<>-1)    SET @chuoi=CONCAT(ROUND(@Const,1),'; ')       SET @I = @I+1    SET @Ketqua=CONCAT(@Ketqua,@chuoi)    SET @chuoi=''    SET @J=1;    Set @Const=-1            END     -- Return the result of the function   RETURN @Ketqua    END    --select top(1)id,dbo.GetMarkResurl(331,11753,3,2) from AIElearning_ClassItem"
77,AISystem_Category_Document_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_Document_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Document_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Document where   Code = @Code  SET QUOTED_IDENTIFIER OFF     
78,AIElearning_TestFormGen_DeleteAllByTestId,  CREATE PROC [dbo].[AIElearning_TestFormGen_DeleteAllByTestId]  @TestId int  AS  DELETE FROM AIElearning_TestFormGen WHERE TestId=@TestId  
79,vw_Lists,"-- optimized  CREATE VIEW dbo.[vw_Lists]  AS   SELECT  L.EntryID,     L.ListName,     L.[Value],     L.Text,     L.[Level],     L.SortOrder,     L.DefinitionID,     L.ParentID,     L.Description,     L.PortalID,     L.SystemList,     dbo.[GetListParentKey](L.ParentID, L.ListName, N'ParentKey',  0) AS ParentKey,     dbo.[GetListParentKey](L.ParentID, L.ListName, N'Parent',     0) AS Parent,     dbo.[GetListParentKey](L.ParentID, L.ListName, N'ParentList', 0) AS ParentList,    S.MaxSortOrder,    S.EntryCount,    CASE WHEN EXISTS (SELECT 1 FROM dbo.[Lists] WHERE (ParentID = L.EntryID)) THEN 1 ELSE 0 END AS HasChildren,     L.CreatedByUserID,     L.CreatedOnDate,     L.LastModifiedByUserID,     L.LastModifiedOnDate   FROM dbo.[Lists] AS L   LEFT JOIN (SELECT ListName, ParentID, Max(SortOrder) AS MaxSortOrder, Count(1) AS EntryCount         FROM dbo.[Lists] GROUP BY ListName, ParentID) S   ON L.ParentID = S.ParentId AND L.ListName = S.ListName"
80,GetAllFiles,"CREATE PROCEDURE dbo.[GetAllFiles]  AS  BEGIN   SELECT        FileId,       PortalId,       [FileName],       Extension,       Size,       Width,       Height,       ContentType,       FolderID,       Folder,       StorageLocation,       IsCached,     UniqueId,     VersionGuid,     SHA1Hash,     FolderMappingID,       LastModificationTime,       Title,          Description,     EnablePublishPeriod,       StartDate,       EndDate,       CreatedByUserID,       CreatedOnDate,       LastModifiedByUserID,       LastModifiedOnDate,       PublishedVersion,       ContentItemID,        HasBeenPublished   FROM dbo.[vw_Files]    END"
81,AISystem_Talent_Subject_CountBySubjectId,  CREATE PROC [dbo].[AISystem_Talent_Subject_CountBySubjectId]  @SubjectId int  as  -- [AISystem_Talent_Subject_CountBySubjectId] 1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@SubjectId > -1)   set @Condition=@Condition+' AND SubjectId='+str(@SubjectId)    exec('   SELECT count(*) from AISystem_Talent_Subject  where '+@Condition)    SET QUOTED_IDENTIFIER OFF     
82,AIElearning_Training_Plan_Subject_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Training_Plan_Subject_GetsBySearchCount]  @PlanId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@PlanId>-1)   set @Condition=@Condition+' AND PlanId='+str(@PlanId)   exec('  select COUNT(id) from AIElearning_Training_Plan_Subject '+@Condition+' ')      
83,GetDatabaseTime,CREATE PROCEDURE dbo.[GetDatabaseTime]  AS  BEGIN   SELECT GETDATE()  END
84,vw_MessagesForDispatch,"CREATE VIEW dbo.[vw_MessagesForDispatch]  AS   SELECT CMR.RecipientID   ,CMR.MessageID   ,CMR.UserID   ,CMR.[Read]   ,CMR.Archived   ,CMR.EmailSent   ,CMR.EmailSentDate   ,CMR.EmailSchedulerInstance   ,CMR.CreatedByUserID   ,CMR.CreatedOnDate   ,CMR.LastModifiedByUserID   ,CMR.LastModifiedOnDate   ,CMR.SendToast   ,CM.NotificationTypeID       ,CASE     WHEN CM.NotificationTypeID IS NULL      THEN         ISNULL ((SELECT UP.[MessagesEmailFrequency] AS Expr1       FROM          dbo.CoreMessaging_UserPreferences UP       WHERE      (UP.UserId = CMR.UserID) AND (UP.PortalId = CM.PortalID)), 0)    ELSE        ISNULL ((SELECT UP.[NotificationsEmailFrequency] AS Expr1       FROM          dbo.CoreMessaging_UserPreferences UP       WHERE      (UP.UserId = CMR.UserID) AND (UP.PortalId = CM.PortalID)), 2)   END EmailFrequency  FROM dbo.CoreMessaging_MessageRecipients AS CMR    INNER JOIN      dbo.CoreMessaging_Messages AS CM     ON CMR.MessageID = CM.MessageID"
85,AIElearning_Class_UnitChild_GetsByClassid,"  CREATE proc [dbo].[AIElearning_Class_UnitChild_GetsByClassid]  @Classid int,  @UnitChildCode nvarchar(250)  as  -- AIElearning_Class_UnitChild_GetsByClassid 28, ''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' where (1=1)'    if(@Classid>-1)   set @Condition=@Condition+' AND Classid ='+str(@Classid)    if(@UnitChildCode <> '')   set @Condition=@Condition+' AND UnitChildCode ='''+@UnitChildCode+''''    exec('select * from AIElearning_Class_UnitChild  '+@Condition+'')  "
86,UpdatePortalGroup,"CREATE PROCEDURE dbo.[UpdatePortalGroup]   @PortalGroupID    int,   @PortalGroupName   nvarchar(100),   @PortalGroupDescription  nvarchar(2000),   @AuthenticationDomain  nvarchar(200),   @LastModifiedByUserID  int  AS    BEGIN    UPDATE dbo.PortalGroups      SET       PortalGroupName = @PortalGroupName,      PortalGroupDescription = @PortalGroupDescription,      AuthenticationDomain = @AuthenticationDomain,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate = getdate()     WHERE PortalGroupID = @PortalGroupID   END"
87,sp_renamediagram,"   CREATE PROCEDURE dbo.sp_renamediagram   (    @diagramname   sysname,    @owner_id  int = null,    @new_diagramname sysname      )   WITH EXECUTE AS 'dbo'   AS   BEGIN    set nocount on    declare @theId    int    declare @IsDbo    int        declare @UIDFound   int    declare @DiagId   int    declare @DiagIdTarg  int    declare @u_name   sysname    if((@diagramname is null) or (@new_diagramname is null))    begin     RAISERROR ('Invalid value', 16, 1);     return -1    end       EXECUTE AS CALLER;    select @theId = DATABASE_PRINCIPAL_ID();    select @IsDbo = IS_MEMBER(N'db_owner');     if(@owner_id is null)     select @owner_id = @theId;    REVERT;       select @u_name = USER_NAME(@owner_id)       select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname     if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))    begin     RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)     return -3    end       -- if((@u_name is not null) and (@new_diagramname = @diagramname)) -- nothing will change    -- return 0;       if(@u_name is null)     select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname    else     select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname       if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)    begin     RAISERROR ('The name is already used.', 16, 1);     return -2    end         if(@u_name is null)     update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId    else     update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId    return 0   END   "
88,GetSearchIndexers,create procedure dbo.GetSearchIndexers    as    select dbo.SearchIndexer.*  from dbo.SearchIndexer
89,aspnet_Users_CreateUser,"CREATE PROCEDURE [dbo].aspnet_Users_CreateUser      @ApplicationId    uniqueidentifier,      @UserName         nvarchar(256),      @IsUserAnonymous  bit,      @LastActivityDate DATETIME,      @UserId           uniqueidentifier OUTPUT  AS  BEGIN      IF( @UserId IS NULL )          SELECT @UserId = NEWID()      ELSE      BEGIN          IF( EXISTS( SELECT UserId FROM dbo.aspnet_Users                      WHERE @UserId = UserId ) )              RETURN -1      END        INSERT dbo.aspnet_Users (ApplicationId, UserId, UserName, LoweredUserName, IsAnonymous, LastActivityDate)      VALUES (@ApplicationId, @UserId, @UserName, LOWER(@UserName), @IsUserAnonymous, @LastActivityDate)        RETURN 0  END"
90,UserIdGetClassId,CREATE FUNCTION [dbo].[UserIdGetClassId]   (   @classId int  )  RETURNS TABLE   AS  RETURN   (      select Userid from AISystem_UserInfo where  NOT EXISTS( select * from dbo.ClassUserGetClassId(@classId))   )
91,AISystem_Category_TestForm_GetsBySearchCount,    CREATE PROC [dbo].[AISystem_Category_TestForm_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_TestForm    SET QUOTED_IDENTIFIER OFF             
92,GetTabPermissionsByPortal,CREATE procedure dbo.GetTabPermissionsByPortal      @PortalID int    AS     IF @portalid is not null    BEGIN      SELECT *      FROM dbo.vw_TabPermissions      WHERE PortalID = @PortalID    END   ELSE    BEGIN     SELECT *      FROM dbo.vw_TabPermissions      WHERE PortalID IS NULL     END
93,AIElearning_TestFormGen_GetRandomByTestId,  CREATE PROC [dbo].[AIElearning_TestFormGen_GetRandomByTestId]  @TestId int  AS  SELECT TOP 1 * FROM AIElearning_TestFormGen WHERE TestId=@TestId  ORDER BY NEWID()  
94,AIElearning_ClassLog_GetTotalTime,"CREATE PROC [dbo].[AIElearning_ClassLog_GetTotalTime]  @ClassId INT,  @ClassItemId INT,  @Username NVARCHAR(250)  AS   SELECT ISNULL(SUM(TotalTime),0) FROM AIElearning_Classlog WHERE ClassId=@ClassId and (@ClassItemId=-1 OR ClassItemId=@ClassItemId) and Username=@Username AND Type<>3"
95,GetTabUrls,"CREATE PROCEDURE dbo.[GetTabUrls]   (    @PortalId  int   )  AS   SELECT     tu.TabId,     tu.SeqNum,     tu.Url,     tu.QueryString,    tu.HttpStatus,     tu.CultureCode,    tu.IsSystem,    tu.CreatedByUserId,    tu.LastModifiedByUserId,    case when parentTu.PortalAliasUsage = 1 /* parent is set to 'child pages inherit' so get parent portal alias id */     then       case when Coalesce(tu.PortalAliasId, 0) < 1 /* if this page has no specific alias id, then use parent*/       then parentTu.PortalAliasId        else tu.PortalAliasId       END /* otherwise, use this page alias id */     else tu.PortalALiasId     END as PortalAliasId,      case when Coalesce(tu.PortalAliasUsage,0) = 0 and coalesce(tu.PortalALiasId,0) < 1 /* default value and no specific alias */     then /* check for inheritance from parent */      case when Coalesce(parentTu.PortalALiasUsage,0) = 1 and Coalesce(parentTu.PortalAliasId, 0) > 0 /* parent specifies an alias */       then 3 /* inherited from parent */       else 0       END /* default value */     when Coalesce(tu.PortalAliasId,0) > 0 /*specific alias for this tab */     then       case when coalesce(tu.PortalALiasUsage,0) < 1        then 1 /* if not set, default to 'child pages inherit'*/       else tu.PortalAliasUsage       END     else       0 /* default - fall through value */    END as PortalAliasUsage    FROM dbo.TabUrls tu    INNER JOIN dbo.Tabs t on t.TabId = tu.TabId    LEFT JOIN dbo.TabUrls parentTu on t.ParentId = parentTu.TabId     AND parentTu.CultureCode = tu.CultureCode     and parentTu.PortalAliasUsage > 0       WHERE (@portalId = PortalId OR @portalId = -1)   ORDER BY PortalId, TabOrder, tu.SeqNum"
96,AISystem_Talent_Subject_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Talent_Subject_GetsBySearchCount]  @talentId int,  @talentChildId int,  @talentLevelId int,  @talentChildLevelId int  as  -- AISystem_Talent_Subject_GetsBySearchCount 32,-1,'12','-1'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@talentId <> 0)   set @Condition=@Condition+' AND TalentId='+str(@talentId)  if(@talentChildId <> 0 )   set @Condition=@Condition+' AND TalentChildId='+str(@talentChildId)  if(@talentLevelId <> 0)   set @Condition=@Condition+' AND TalentLevelId='+str(@talentLevelId)  if(@talentChildLevelId <> 0)   set @Condition=@Condition+' AND TalentChildLevelId='+ STR(@talentChildLevelId)  exec('select COUNT(*) from AISystem_Talent_Subject where '+@Condition+' ')  SET QUOTED_IDENTIFIER OFF"
97,AIElearning_Training_Plan_Subject_GetsBySubject,"  CREATE proc [dbo].[AIElearning_Training_Plan_Subject_GetsBySubject]  @PlanId int,  @SubjectId int  as  select top(1)* from AIElearning_Training_Plan_Subject where PlanId=@PlanId and SubjectId =@SubjectId       "
98,CoreMessaging_GetNextMessagesForInstantDispatch,"CREATE PROCEDURE dbo.[CoreMessaging_GetNextMessagesForInstantDispatch]   @SchedulerInstance UNIQUEIDENTIFIER ,   @BatchSize INT  AS    BEGIN    UPDATE  dbo.[CoreMessaging_MessageRecipients]    SET     EmailSchedulerInstance = @SchedulerInstance    WHERE   RecipientID IN (      SELECT TOP ( @BatchSize )        RecipientID       FROM    dbo.[vw_MessagesForDispatch] MFD      WHERE   EmailSent = 0        AND [Read] = 0        AND Archived = 0        AND EmailFrequency = 0        AND ( ( EmailSchedulerInstance IS NULL          AND EmailSentDate IS NULL           )           OR EmailSchedulerInstance = '00000000-0000-0000-0000-000000000000'         )      ORDER BY MFD.CreatedOnDate DESC ,        UserID )      SELECT  *    FROM    dbo.[CoreMessaging_MessageRecipients] CMR      INNER JOIN dbo.[CoreMessaging_Messages] CMM ON CMR.MessageID = CMM.MessageID    WHERE   EmailSent = 0      AND EmailSentDate IS NULL      AND [Read] = 0      AND Archived = 0      AND ( EmailSchedulerInstance = @SchedulerInstance )    ORDER BY UserID ,      CMM.CreatedOnDate DESC    END"
99,AIElearning_DocumentGroup_File_GetsBySearchCount,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_GetsBySearchCount]   @docGroupId int,  @status int  as  -- AIElearning_DocumentGroup_File_GetsBySearchCount 1,1    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@docGroupId > -1)   set @Condition = @Condition + 'and DocumentGroupId = ' +str(@docGroupId)   if(@status > -1)   set @Condition = @Condition + ' and d.Status = ' +str(@status)    exec('   Select count(*)    from AIElearning_DocumentGroup_File df inner join AIElearning_Document d   on d.Id = df.DocumentId  where ' + @Condition+'    ')          "
100,GetFolderMappingsSetting,"CREATE PROCEDURE dbo.[GetFolderMappingsSetting]   @FolderMappingID int,   @SettingName nvarchar(50)  AS  BEGIN   SELECT *   FROM dbo.[FolderMappingsSettings]   WHERE FolderMappingID = @FolderMappingID AND SettingName = @SettingName  END"
101,sp_alterdiagram,"   CREATE PROCEDURE dbo.sp_alterdiagram   (    @diagramname  sysname,    @owner_id int = null,    @version  int,    @definition  varbinary(max)   )   WITH EXECUTE AS 'dbo'   AS   BEGIN    set nocount on       declare @theId    int    declare @retval   int    declare @IsDbo    int        declare @UIDFound   int    declare @DiagId   int    declare @ShouldChangeUID int       if(@diagramname is null)    begin     RAISERROR ('Invalid ARG', 16, 1)     return -1    end       execute as caller;    select @theId = DATABASE_PRINCIPAL_ID();      select @IsDbo = IS_MEMBER(N'db_owner');     if(@owner_id is null)     select @owner_id = @theId;    revert;       select @ShouldChangeUID = 0    select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname         if(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))    begin     RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);     return -3    end       if(@IsDbo <> 0)    begin     if(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id     begin      select @ShouldChangeUID = 1 ;     end    end      -- update dds data       update dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;      -- change owner    if(@ShouldChangeUID = 1)     update dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;      -- update dds version    if(@version is not null)     update dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;      return 0   END   "
102,GetFileVersionContent,"CREATE PROCEDURE dbo.[GetFileVersionContent]     @FileId  int,   @Version int    AS   SELECT Content   FROM dbo.[FileVersions]   WHERE FileId = @FileId    AND Version = @Version"
103,AIElearning_Question_CountByOption,"    CREATE PROC [dbo].[AIElearning_Question_CountByOption]  @CategoryId INT,  @Type INT,  @Mark FLOAT,  @Level INT,  @qStatus INT,  @TestId INT  AS  DECLARE @cQuestion INT=0  DECLARE @cQuestionPart INT=0  DECLARE @cAvailable INT=0    SELECT COUNT(ID) From AIElearning_Question WHERE  (@CategoryId=-1 OR CategoryId=@CategoryId) AND   (@Type=-1 OR Type=@Type) AND   (@Mark=-1 OR Mark=@Mark) AND   (@Level=-1 OR Level=@Level) AND Status=@qStatus  "
104,AIElearning_LearingAndLecture_Out_GetsBySearchCount,CREATE proc [dbo].[AIElearning_LearingAndLecture_Out_GetsBySearchCount]  as  select COUNT(*) from AIElearning_LearingAndLecture_Out    SET QUOTED_IDENTIFIER OFF     
105,aspnet_Users_DeleteUser,"CREATE PROCEDURE [dbo].aspnet_Users_DeleteUser      @ApplicationName  nvarchar(256),      @UserName         nvarchar(256),      @TablesToDeleteFrom int,      @NumTablesDeletedFrom int OUTPUT  AS  BEGIN      DECLARE @UserId               uniqueidentifier      SELECT  @UserId               = NULL      SELECT  @NumTablesDeletedFrom = 0        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE   SET @TranStarted = 0        DECLARE @ErrorCode   int      DECLARE @RowCount    int        SET @ErrorCode = 0      SET @RowCount  = 0        SELECT  @UserId = u.UserId      FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a      WHERE   u.LoweredUserName       = LOWER(@UserName)          AND u.ApplicationId         = a.ApplicationId          AND LOWER(@ApplicationName) = a.LoweredApplicationName        IF (@UserId IS NULL)      BEGIN          GOTO Cleanup      END        -- Delete from Membership table if (@TablesToDeleteFrom & 1) is set      IF ((@TablesToDeleteFrom & 1) <> 0 AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_MembershipUsers') AND (type = 'V'))))      BEGIN          DELETE FROM dbo.aspnet_Membership WHERE @UserId = UserId            SELECT @ErrorCode = @@ERROR,                 @RowCount = @@ROWCOUNT            IF( @ErrorCode <> 0 )              GOTO Cleanup            IF (@RowCount <> 0)              SELECT  @NumTablesDeletedFrom = @NumTablesDeletedFrom + 1      END        -- Delete from aspnet_UsersInRoles table if (@TablesToDeleteFrom & 2) is set      IF ((@TablesToDeleteFrom & 2) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_UsersInRoles') AND (type = 'V'))) )      BEGIN          DELETE FROM dbo.aspnet_UsersInRoles WHERE @UserId = UserId            SELECT @ErrorCode = @@ERROR,                  @RowCount = @@ROWCOUNT            IF( @ErrorCode <> 0 )              GOTO Cleanup            IF (@RowCount <> 0)              SELECT  @NumTablesDeletedFrom = @NumTablesDeletedFrom + 1      END        -- Delete from aspnet_Profile table if (@TablesToDeleteFrom & 4) is set      IF ((@TablesToDeleteFrom & 4) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_Profiles') AND (type = 'V'))) )      BEGIN          DELETE FROM dbo.aspnet_Profile WHERE @UserId = UserId            SELECT @ErrorCode = @@ERROR,                  @RowCount = @@ROWCOUNT            IF( @ErrorCode <> 0 )              GOTO Cleanup            IF (@RowCount <> 0)              SELECT  @NumTablesDeletedFrom = @NumTablesDeletedFrom + 1      END        -- Delete from aspnet_PersonalizationPerUser table if (@TablesToDeleteFrom & 8) is set      IF ((@TablesToDeleteFrom & 8) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_WebPartState_User') AND (type = 'V'))) )      BEGIN          DELETE FROM dbo.aspnet_PersonalizationPerUser WHERE @UserId = UserId            SELECT @ErrorCode = @@ERROR,                  @RowCount = @@ROWCOUNT            IF( @ErrorCode <> 0 )              GOTO Cleanup            IF (@RowCount <> 0)              SELECT  @NumTablesDeletedFrom = @NumTablesDeletedFrom + 1      END        -- Delete from aspnet_Users table if (@TablesToDeleteFrom & 1,2,4 & 8) are all set      IF ((@TablesToDeleteFrom & 1) <> 0 AND          (@TablesToDeleteFrom & 2) <> 0 AND          (@TablesToDeleteFrom & 4) <> 0 AND          (@TablesToDeleteFrom & 8) <> 0 AND          (EXISTS (SELECT UserId FROM dbo.aspnet_Users WHERE @UserId = UserId)))      BEGIN          DELETE FROM dbo.aspnet_Users WHERE @UserId = UserId            SELECT @ErrorCode = @@ERROR,                  @RowCount = @@ROWCOUNT            IF( @ErrorCode <> 0 )              GOTO Cleanup            IF (@RowCount <> 0)              SELECT  @NumTablesDeletedFrom = @NumTablesDeletedFrom + 1      END        IF( @TranStarted = 1 )      BEGIN       SET @TranStarted = 0       COMMIT TRANS"
106,aspnet_Users_DeleteUser,ACTION      END        RETURN 0    Cleanup:      SET @NumTablesDeletedFrom = 0        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN @ErrorCode    END
107,GetMark,"CREATE FUNCTION [dbo].[GetMark]   (   @ClassId int,   @UserId int,   @type int,   @status int  )  RETURNS  nvarchar(Max)  AS  BEGIN   -- Declare the return variable here   DECLARE  @chuoi nvarchar(Max);   DECLARE  @Ketqua nvarchar(Max);   DECLARE @Dem Int;   DECLARE @Count Int;   DECLARE @I Int;   DECLARE @LimitdTestCount Int;   DECLARE @ID Int;   DECLARE @J Int;   SET @I=1;   SET @J=1;   SET @chuoi='';   SET @Ketqua='';   -- Add the T-SQL statements to compute the return value here  set @Dem=(SELECT COUNT(*) from   AIElearning_ClassItem where ClassId=@ClassId  and Type=@type)  if(@I<=@Dem)  BEGIN  WHILE (@I <= @Dem)     BEGIN       SET @ID=(SELECT TOP 1 ID from  (SELECT TOP(@I)ID from   AIElearning_ClassItem where ClassId=@ClassId  and Type=@type order by id asc ) A order by id desc)       SET @Count=(SELECT COUNT(*) from AIElearning_UserTest   where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId)          WHILE (@J <= @Count)         BEGIN           SET @chuoi=CONCAT(@chuoi,ROUND((select top 1 diemb  FROM  (SELECT  top(@J) (Mark/(TotalMark/100)) as diemb,id from AIElearning_UserTest   where ClassItemId=@ID and ClassId=@ClassId and Status=@status and UserId=@UserId order by id asc)A order by id desc),1),',')             SET @J = @J+1         END       if(@chuoi<>'')       SET @chuoi=CONCAT(@chuoi,'; ')       SET @I = @I+1       SET @Ketqua=CONCAT(@Ketqua,@chuoi)    SET @chuoi=''    SET @J=1;       END  END  else    SET @Ketqua='';       -- Return the result of the function   RETURN @Ketqua    END  "
108,AIElearning_LearnRule_Level_Table_GetbyLevelCode,CREATE proc [dbo].[AIElearning_LearnRule_Level_Table_GetbyLevelCode]  @levelcode nvarchar(50)  as  select * from AIElearning_LearnRule_Level_Table where LevelCode=@levelcode  
109,AIElearning_UserTest_GetLastTest,"  CREATE PROC [dbo].[AIElearning_UserTest_GetLastTest]  @UserId INT,  @ClassItemId INT,  @Status INT  AS  -- AIElearning_UserTest_GetLastTest 575, 151, -1  select Top 1 * from AIElearning_UserTest where UserId=@UserId  and (ClassItemId=@ClassItemId or @ClassItemId=-1) and (Status=@Status or @Status=-1) order by Id desc    "
110,AIElearning_ClassDocument_ChangeAllowDownload,create proc [dbo].[AIElearning_ClassDocument_ChangeAllowDownload]   @id int  as  begin  DECLARE @isAllow AS int  select @isAllow = AllowDownload from AIElearning_ClassDocument where Id= @id   if(@isAllow = 1)  update AIElearning_ClassDocument set AllowDownload = 2 where Id= @id  else  update AIElearning_ClassDocument set AllowDownload = 1 where Id= @id  end    
111,vw_CoreMessaging_Messages,"CREATE VIEW dbo.[vw_CoreMessaging_Messages]  AS   SELECT    M.MessageID,     M.PortalID,     M.NotificationTypeID,     M.[To],     M.[From],    M.Subject,    M.Body,    M.ConversationID,     M.ReplyAllAllowed,     M.SenderUserID,    M.ExpirationDate,           M.Context,     M.IncludeDismissAction,    M.CreatedByUserID,     M.CreatedOnDate,     M.LastModifiedByUserID,     M.LastModifiedOnDate,     MR.RecipientID,    MR.UserID,           MR.[Read],     MR.Archived,     MR.EmailSent,     MR.EmailSentDate,     MR.EmailSchedulerInstance   FROM       dbo.[CoreMessaging_MessageRecipients] MR   INNER JOIN dbo.[CoreMessaging_Messages]          M ON mr.MessageID = m.MessageID"
112,AISystem_Talent_Subject_GetsBySearch,"CREATE proc [dbo].[AISystem_Talent_Subject_GetsBySearch]  @pageIndex int,  @pageSize int,  @talentId int,  @talentChildId int,  @talentLevelId int,  @talentChildLevelId int  as    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@talentId <> 0)   set @Condition=@Condition+' AND ts.TalentId='+str(@talentId)  if(@talentChildId <> 0 )   set @Condition=@Condition+' AND ts.TalentChildId='+str(@talentChildId)  if(@talentLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentLevelId='+str(@talentLevelId)  if(@talentChildLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentChildLevelId='+ STR(@talentChildLevelId)  exec('  WITH #AISystem_Talent_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY ts.Id desc) AS RowNumber, ts.*, s.Name, s.Code, s.CateSubjectId, s.Time, cs.Title AS CateSubjectName     from AISystem_Talent_Subject ts inner join AISystem_Subject s     on ts.SubjectId = s.Id INNER JOIN dbo.AISystem_Category_Subject cs ON cs.Id = s.CateSubjectId      where '+@Condition+' )    SELECT     *   FROM #AISystem_Talent_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF"
113,AIElearning_Training_Plan_ReportPlanTime,"    CREATE proc [dbo].[AIElearning_Training_Plan_ReportPlanTime]  @UnitCode nvarchar(250),  @Month int,  @Year int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  --AIElearning_Training_Plan_ReportPlanTime 28,-1,2017  IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (plans.UnitCode =''' + @UnitCode + ''') '  if(@Month>-1)   set @Condition=@Condition+' AND plans.Month='+str(@Month)  if(@Year>-1)   set @Condition=@Condition+' AND plans.Year='+str(@Year)    exec('  SELECT (Select Name from AISystem_Subject where id=sub.SubjectId)[TenKhoaHoc],  (Select Title from AISystem_Category_Subject where id=(select CateSubjectId from AISystem_Subject where id=sub.SubjectId))[TenDanhMucKhoaHoc],  Sum(sub.TotalClass) as TotalClass, Sum(sub.TotalClassUser) as TotalClassUser,Max(sub.note) as note    from AIElearning_Training_Plan plans inner join AIElearning_Training_Plan_Subject sub on plans.id=sub.PlanId      '+@Condition+'   group by sub.SubjectId     ')  "
114,CoreMessaging_GetNextMessagesForDigestDispatch,"CREATE PROCEDURE dbo.[CoreMessaging_GetNextMessagesForDigestDispatch]   @Frequency INT ,   @SchedulerInstance UNIQUEIDENTIFIER ,   @BatchSize INT  AS    BEGIN    UPDATE  dbo.[CoreMessaging_MessageRecipients]    SET     EmailSchedulerInstance = @SchedulerInstance    WHERE   RecipientID IN (      SELECT         RecipientID      FROM    dbo.[vw_MessagesForDispatch] MFD      WHERE UserID IN (         SELECT TOP ( @BatchSize  )           UserID         FROM    dbo.[vw_MessagesForDispatch] MFD         WHERE   EmailSent = 0           AND [Read] = 0           AND Archived = 0           AND EmailFrequency = @Frequency           AND ( ( EmailSchedulerInstance IS NULL             AND EmailSentDate IS NULL              )              OR EmailSchedulerInstance = '00000000-0000-0000-0000-000000000000'            )                 GROUP BY UserID         ORDER BY UserID              )          AND EmailSent = 0        AND [Read] = 0        AND Archived = 0        AND EmailFrequency = @Frequency        AND ( ( EmailSchedulerInstance IS NULL          AND EmailSentDate IS NULL           )           OR EmailSchedulerInstance = '00000000-0000-0000-0000-000000000000'         ))      SELECT  *    FROM    dbo.[CoreMessaging_MessageRecipients] CMR      INNER JOIN dbo.[CoreMessaging_Messages] CMM ON CMR.MessageID = CMM.MessageID    WHERE   EmailSent = 0      AND EmailSentDate IS NULL      AND [Read] = 0      AND Archived = 0      AND ( EmailSchedulerInstance = @SchedulerInstance )    ORDER BY UserID ,      CMM.CreatedOnDate DESC                         END"
115,AIElearning_DocumentGroup_File_GetsBySearch,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_GetsBySearch]   @pageIndex int,  @pageSize int,  @docGroupId int,  @status int  as  -- AIElearning_DocumentGroup_File_GetsBySearch 1,10,1,1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '  if(@docGroupId > -1)   set @Condition = @Condition + ' and DocumentGroupId = ' +str(@docGroupId)   if(@status > -1)   set @Condition = @Condition + ' and d.Status = ' +str(@status)  exec('     WITH #AIElearning_Document AS(    Select  ROW_NUMBER() OVER (ORDER BY df.OrderNo desc) AS RowNumber, df.* , d.Type, d.Name, d.CreatedDate, d.UnitEditor, d.MediaId, d.CategoryId ,d.Code, d.ReleaseDate, d.Content   from AIElearning_DocumentGroup_File df inner join AIElearning_Document d   on d.Id = df.DocumentId    where '+@Condition+ ' )     SELECT *   FROM #AIElearning_Document   where RowNumber between '+ @start +'  and  '+ @end +'     ')    "
116,GetListEntry,"CREATE PROCEDURE dbo.[GetListEntry]     @ListName nvarchar(50),   @Value nvarchar(200),   @EntryID int    AS   SELECT *   FROM dbo.vw_Lists   WHERE ([ListName] = @ListName OR @ListName='')    AND ([EntryID]=@EntryID OR @EntryID = -1)    AND ([Value]=@Value OR @Value = '')"
117,sp_dropdiagram,"   CREATE PROCEDURE dbo.sp_dropdiagram   (    @diagramname  sysname,    @owner_id int = null   )   WITH EXECUTE AS 'dbo'   AS   BEGIN    set nocount on    declare @theId    int    declare @IsDbo    int        declare @UIDFound   int    declare @DiagId   int       if(@diagramname is null)    begin     RAISERROR ('Invalid value', 16, 1);     return -1    end       EXECUTE AS CALLER;    select @theId = DATABASE_PRINCIPAL_ID();    select @IsDbo = IS_MEMBER(N'db_owner');     if(@owner_id is null)     select @owner_id = @theId;    REVERT;         select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname     if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))    begin     RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)     return -3    end       delete from dbo.sysdiagrams where diagram_id = @DiagId;       return 0;   END   "
118,GetUserByVanityUrl,"CREATE PROCEDURE dbo.[GetUserByVanityUrl]     @PortalID int,   @VanityUrl nvarchar(100)    AS   SELECT * FROM dbo.vw_Users   WHERE  VanityUrl = @VanityUrl    AND  ((@PortalId IS NULL) OR (PortalId = @PortalID) OR IsSuperUser = 1)"
119,AIElearning_TestCampaign_RegistorUserTest_GetListRegistor,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetListRegistor]   @RegistorId int  as  --[dbo].[AIElearning_TestCampaign_RegistorUserTest_GetListRegistor] 346  select ru.RegistorId,ru.Id,r.Code [Macathi],r.Name [Tencathi],tf.Name [Khungdethi]  ,u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi],   jo.Title [Tenchucdanh] ,ru.Region [Vung],ru.Major [NghiepVu],   (select TOP(1)EndTime from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=ru.Id and Status=2 and RegistorId=r.id  order by Id desc) [TgThi],    dbo.GetMarkTestCampaignResurl(ru.Id,r.Id) [DiemThi]     from AIElearning_TestCampaign_RegistorUser ru  left join AIElearning_TestCampaign_Registor r  on ru.RegistorId=r.id   left join AIElearning_TestForm tf on r.TestFormId=tf.Id     left join AISystem_UserInfo u on u.UserId=ru.UserId    left join AISystem_Category_Unit su on su.Code=u.UnitCode  left join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where ru.RegistorId=@RegistorId       "
120,CoreMessaging_DeleteMessageAttachment,CREATE PROCEDURE dbo.[CoreMessaging_DeleteMessageAttachment]      @MessageAttachmentID int  AS   DELETE FROM dbo.CoreMessaging_MessageAttachments   WHERE  [MessageAttachmentID] = @MessageAttachmentID
121,aspnet_AnyDataInTables,"CREATE PROCEDURE [dbo].aspnet_AnyDataInTables      @TablesToCheck int  AS  BEGIN      -- Check Membership table if (@TablesToCheck & 1) is set      IF ((@TablesToCheck & 1) <> 0 AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_MembershipUsers') AND (type = 'V'))))      BEGIN          IF (EXISTS(SELECT TOP 1 UserId FROM dbo.aspnet_Membership))          BEGIN              SELECT N'aspnet_Membership'              RETURN          END      END        -- Check aspnet_Roles table if (@TablesToCheck & 2) is set      IF ((@TablesToCheck & 2) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_Roles') AND (type = 'V'))) )      BEGIN          IF (EXISTS(SELECT TOP 1 RoleId FROM dbo.aspnet_Roles))          BEGIN              SELECT N'aspnet_Roles'              RETURN          END      END        -- Check aspnet_Profile table if (@TablesToCheck & 4) is set      IF ((@TablesToCheck & 4) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_Profiles') AND (type = 'V'))) )      BEGIN          IF (EXISTS(SELECT TOP 1 UserId FROM dbo.aspnet_Profile))          BEGIN              SELECT N'aspnet_Profile'              RETURN          END      END        -- Check aspnet_PersonalizationPerUser table if (@TablesToCheck & 8) is set      IF ((@TablesToCheck & 8) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'vw_aspnet_WebPartState_User') AND (type = 'V'))) )      BEGIN          IF (EXISTS(SELECT TOP 1 UserId FROM dbo.aspnet_PersonalizationPerUser))          BEGIN              SELECT N'aspnet_PersonalizationPerUser'              RETURN          END      END        -- Check aspnet_PersonalizationPerUser table if (@TablesToCheck & 16) is set      IF ((@TablesToCheck & 16) <> 0  AND          (EXISTS (SELECT name FROM sys.objects WHERE (name = N'aspnet_WebEvent_LogEvent') AND (type = 'P'))) )      BEGIN          IF (EXISTS(SELECT TOP 1 * FROM dbo.aspnet_WebEvent_Events))          BEGIN              SELECT N'aspnet_WebEvent_Events'              RETURN          END      END        -- Check aspnet_Users table if (@TablesToCheck & 1,2,4 & 8) are all set      IF ((@TablesToCheck & 1) <> 0 AND          (@TablesToCheck & 2) <> 0 AND          (@TablesToCheck & 4) <> 0 AND          (@TablesToCheck & 8) <> 0 AND          (@TablesToCheck & 32) <> 0 AND          (@TablesToCheck & 128) <> 0 AND          (@TablesToCheck & 256) <> 0 AND          (@TablesToCheck & 512) <> 0 AND          (@TablesToCheck & 1024) <> 0)      BEGIN          IF (EXISTS(SELECT TOP 1 UserId FROM dbo.aspnet_Users))          BEGIN              SELECT N'aspnet_Users'              RETURN          END          IF (EXISTS(SELECT TOP 1 ApplicationId FROM dbo.aspnet_Applications))          BEGIN              SELECT N'aspnet_Applications'              RETURN          END      END  END"
122,GeResurl,"CREATE FUNCTION [dbo].[GeResurl]   (  @type int  )  RETURNS  nvarchar(Max)  AS  BEGIN  DECLARE  @Ketqua nvarchar(Max);  SET @Ketqua=''  if(@type='2')  SET @Ketqua=CONCAT(@Ketqua, N'Hoàn thành lớp học')  else  SET @Ketqua=CONCAT(@Ketqua, N'Chưa hoàn thành lớp học')   RETURN @Ketqua  END"
123,AISystem_Category_TestForm_UpdateChildId,"    CREATE PROC [dbo].[AISystem_Category_TestForm_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_TestForm  SET    ChildId = @ChildId  WHERE Id = @Id          "
124,GetScheduleByScheduleID,CREATE PROCEDURE dbo.GetScheduleByScheduleID  @ScheduleID int  AS  SELECT S.*  FROM dbo.Schedule S  WHERE S.ScheduleID = @ScheduleID
125,AIElearning_UserTest_GetsBySearch,"      CREATE proc [dbo].[AIElearning_UserTest_GetsBySearch]  @pageIndex int,  @pageSize int,  @UserId int,  @TestId int,  @ClassId int,  @ClassItemId int,  @Status int  as  -- AIElearning_UserTest_GetsBySearch 1, 111, 575, 0, 65, 0, 2  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@UserId > 0)   set @condition = @condition +    ' And  (UserId= '+ STR(@UserId)+' )'  IF(@TestId > 0)   set @condition = @condition +    ' And  (TestId= '+ STR(@TestId)+' )'  IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF(@ClassItemId > 0)   set @condition = @condition +    ' And  (ClassItemId= '+ STR(@ClassItemId)+' )'  IF(@Status > 0)   set @condition = @condition +    ' And  (Status= '+ STR(@Status)+' )'    exec('    WITH #AIElearning_UserTest AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id) AS RowNumber,     *     from AIElearning_UserTest where ' + @condition +'      )         SELECT     *   FROM #AIElearning_UserTest   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
126,AIElearning_ClassDocument_ChangePosition,"CREATE proc [dbo].[AIElearning_ClassDocument_ChangePosition]   @id int,  @move int  as  begin  DECLARE @above AS int  DECLARE @below AS int  DECLARE @orderNo AS int  DECLARE @aboveId AS int  DECLARE @belowId AS int  DECLARE @classId as int        select @orderNo = OrderNo from AIElearning_ClassDocument where Id= @id   SET @above = (@orderNo -1)  SET @below = (@orderNo + 1)  select @classId = ClassId from AIElearning_ClassDocument where Id= @id    select @aboveId = Id from AIElearning_ClassDocument where OrderNo= @above  and ClassId = @classId  select @belowId = Id from AIElearning_ClassDocument where OrderNo= @below and ClassId = @classId  --1: Move up  if(@move = 1)  begin  update AIElearning_ClassDocument set OrderNo= @below where Id= @id  update AIElearning_ClassDocument set OrderNo= @orderNo where Id= @belowId    --0: Move down  end  if(@move = 0)  begin  update AIElearning_ClassDocument set OrderNo= @above where Id= @id  update AIElearning_ClassDocument set OrderNo= @orderNo where Id= @aboveId  end  end  "
127,AISystem_UserInRole_GetByUserId,"    CREATE PROC [dbo].[AISystem_UserInRole_GetByUserId]  @UserId int,  @RoleId int  AS  SELECT ur.*,r.Name FROM AISystem_UserInRole ur inner join AISystem_Roles r on ur.RoleId=r.Id  Where ur.UserId=@UserId and ( ur.RoleId =@RoleId Or @RoleId=-1)  "
128,CoreMessaging_CheckReplyHasRecipients,"CREATE PROCEDURE dbo.CoreMessaging_CheckReplyHasRecipients   @ConversationId Int, -- Not Null   @UserId   Int  -- Not Null  AS   BEGIN   SELECT COUNT(M.UserID)   FROM       dbo.vw_CoreMessaging_Messages AS M   INNER JOIN dbo.vw_Users AS U ON M.UserID = U.UserID AND M.PortalID = IsNull(U.PortalID, M.PortalID)   WHERE (M.MessageID = @ConversationId)      AND (M.UserID   <> @UserId)      AND (U.IsDeleted = 0)  END"
129,AISystem_UserInRole_GetsBySearchCount,"CREATE proc [dbo].[AISystem_UserInRole_GetsBySearchCount]  @RoleId int,  @ScopeCode nvarchar(500),  @Key nvarchar(500)  as    exec(' SELECT COUNT(uir.ID)     from AISystem_UserInRole uir  inner join AISystem_UserInfo u on uir.UserId=u.UserId Where uir.RoleId='+@RoleId+'     and  u.Username like ''%'+@Key+'%''     and (uir.ScopeCode='''+@ScopeCode+''' or ''0''='''+@ScopeCode+''')')  "
130,AIElearning_Training_Plan_ReportResultTime,"CREATE proc [dbo].[AIElearning_Training_Plan_ReportResultTime]  @UnitCode nvarchar(250),  @Month int,  @Year int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  DECLARE @string AS NVARCHAR(MAX)  SET @string=''  -- Phan trang  --AIElearning_Training_Plan_ReportResultTime '28',-1,2017  IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (plans.UnitCode =''' + @UnitCode + ''') '  if(@Month>-1)   set @Condition=@Condition+' AND plans.Month='+str(@Month)+''  if(@Month>-1)  Set @string='and month(StartDateClass)='+str(@Month)+''  if(@Year>-1)   set @Condition=@Condition+' AND plans.Year='+str(@Year)+''    exec('  select Max(Note) as Note,Max(TenKhoaHoc) as TenKhoaHoc, Max(TenDanhMucKhoaHoc) as TenDanhMucKhoaHoc , Sum(TotalClass) as TotalClass,  (Select count(id) from AIElearning_Class  where AIElearning_Class.SubjectId=T.SubjectId and year(StartDateClass)= '+@year+' '+@string+' and TypePalen=1) as SoLopHocThucTe,  (Select count(id) from AIElearning_Class  where AIElearning_Class.SubjectId=T.SubjectId and year(StartDateClass)= '+@year+' '+@string+' and  TypePalen=3) as SoLopHocHoan,  (Select count(id) from AIElearning_Class  where AIElearning_Class.SubjectId=T.SubjectId and year(StartDateClass)= '+@year+' '+@string+' and  TypePalen=4) as SoLopHochuy,    Concat(Round((CONVERT(Float,((Select count(id) from AIElearning_Class where AIElearning_Class.SubjectId=T.SubjectId and year(StartDateClass)= '+@year+' '+@string+' and TypePalen=1)))/Sum(TotalClass)),4)*100,''%'') as TyLeHoanThanhLopHoc,   Sum(TotalClassUser) as TotalClassUser,    dbo.GetCountUser(SubjectId,'+@month+','+@year+') as SoHocVienThucTe,   ConCat(Round((CONVERT(Float,dbo.GetCountUser(SubjectId,'+@month+','+@year+'))/Sum(TotalClassUser)),4)*100,''%'') as TyLeHoanThanhHocVien     from ( SELECT sub.SubjectId, (Select Name from AISystem_Subject where id=sub.SubjectId)[TenKhoaHoc],  (Select Title from AISystem_Category_Subject where id=(select CateSubjectId from AISystem_Subject where id=sub.SubjectId))[TenDanhMucKhoaHoc],  sub.TotalClass ,sub.TotalClassUser, sub.note    from AIElearning_Training_Plan plans inner join AIElearning_Training_Plan_Subject sub on plans.id=sub.PlanId      '+@Condition+' ) T   group by SubjectId     ')  "
131,AIElearning_DocumentGroup_File_GetsDocumentNotInGroupCount,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_GetsDocumentNotInGroupCount]   @docGroupId int,  @UnitCode  nvarchar(50),  @CategoryId nvarchar(50),  @ObjectAccess int,  @type int,  @Status int,  @Keyword nvarchar(250)  as  -- AIElearning_DocumentGroup_File_GetsDocumentNotInGroupCount 5,'28',37,-1,-1,-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '  ---- Tao bang tam  --CREATE TABLE #AIDocument(  --  [Id] [int],  -- [Name] [nvarchar](450) ,  -- [Code] [nvarchar](50),  -- [Type] [int] ,  -- [CategoryId] [int] ,  -- [Content] [nvarchar](max) ,  -- [Description] [nvarchar](max) ,  -- [Status] [int] ,  -- [CreatedUser] [nvarchar](150) ,  -- [CreatedDate] [datetime] ,  -- [VideoDuration] [time](7) ,  -- [MediaId] [int],  -- [FileName] [nvarchar](250),  -- [ObjectAccess] [int],  -- [UnitEditor] [nvarchar](250),  -- [ReleaseDate] [datetime],  -- [Keyword] [nvarchar](max))  --INSERT INTO #AIDocument  -- SELECT *  -- FROM AIElearning_Document where [MediaId] = -1    --INSERT INTO #AIDocument  -- SELECT c.Id, m.Name, c.Code,  -- c.Type, c.CategoryId, m.Content, m.Description, m.Status, m.CreatedUser, m.CreatedDate, m.VideoDuration, c.MediaId, c.FileName, c.ObjectAccess, c.UnitEditor, c.ReleaseDate, c.Keyword  -- FROM AIElearning_Document c inner join AIElearning_Media m on c.MediaId = m.Id where c.MediaId <> -1    if(@CategoryId<>-1)   set @Condition = @Condition+' AND CategoryId='+str(@CategoryId)    if(@ObjectAccess<>-1)   set @Condition = @Condition+' AND ObjectAccess='+str(@ObjectAccess)  if(@type<>-1)   set @Condition = @Condition+' AND Type='+str(@type)  if(@Status<>-1)   set @Condition = @Condition+' AND Status='+str(@Status)  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  exec('   WITH #AIElearning_Document AS(    Select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AIElearning_Document where '+@Condition+' and Id not in (select DocumentId from AIElearning_DocumentGroup_File where DocumentGroupId =  '+@docGroupId+' ))       SELECT count(*)   FROM #AIElearning_Document    ')      "
132,fn_diagramobjects,"   CREATE FUNCTION dbo.fn_diagramobjects()    RETURNS int   WITH EXECUTE AS N'dbo'   AS   BEGIN    declare @id_upgraddiagrams  int    declare @id_sysdiagrams   int    declare @id_helpdiagrams  int    declare @id_helpdiagramdefinition int    declare @id_creatediagram int    declare @id_renamediagram int    declare @id_alterdiagram  int     declare @id_dropdiagram  int    declare @InstalledObjects int      select @InstalledObjects = 0      select  @id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),     @id_sysdiagrams = object_id(N'dbo.sysdiagrams'),     @id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),     @id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),     @id_creatediagram = object_id(N'dbo.sp_creatediagram'),     @id_renamediagram = object_id(N'dbo.sp_renamediagram'),     @id_alterdiagram = object_id(N'dbo.sp_alterdiagram'),      @id_dropdiagram = object_id(N'dbo.sp_dropdiagram')      if @id_upgraddiagrams is not null     select @InstalledObjects = @InstalledObjects + 1    if @id_sysdiagrams is not null     select @InstalledObjects = @InstalledObjects + 2    if @id_helpdiagrams is not null     select @InstalledObjects = @InstalledObjects + 4    if @id_helpdiagramdefinition is not null     select @InstalledObjects = @InstalledObjects + 8    if @id_creatediagram is not null     select @InstalledObjects = @InstalledObjects + 16    if @id_renamediagram is not null     select @InstalledObjects = @InstalledObjects + 32    if @id_alterdiagram  is not null     select @InstalledObjects = @InstalledObjects + 64    if @id_dropdiagram is not null     select @InstalledObjects = @InstalledObjects + 128        return @InstalledObjects    END   "
133,GetIPFilter,CREATE PROCEDURE dbo.[GetIPFilter]  @InputFilter int  AS    SELECT * FROM dbo.IPFilter where IPFilterID=@InputFilter
134,AISystem_Category_Unit_GetInfoById,create proc [dbo].[AISystem_Category_Unit_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Unit where Id=@Id  SET QUOTED_IDENTIFIER OFF 
135,AIElearning_TestCampaign_RegistorStaff_GetUserid,"create proc [dbo].[AIElearning_TestCampaign_RegistorStaff_GetUserid]  @TestRegistorId int,  @Userid int  as  select top(1) * from AIElearning_TestCampaign_Registor_Staff where TestRegistorId=@TestRegistorId and Userid=@Userid  "
136,vw_aspnet_Applications,"    CREATE VIEW [dbo].[vw_aspnet_Applications]    AS SELECT [ApplicationName], [LoweredApplicationName], [ApplicationId], [Description]    FROM [dbo].[aspnet_Applications]    "
137,CountUser,"CREATE FUNCTION [dbo].[CountUser]   (   @Keyword nvarchar(250),  @classid int,  @GroupJobTileCode nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),  @JobTitlecode nvarchar(250),  @status int,  @limit int  )  RETURNS Int   AS  BEGIN  DECLARE @Condition AS NVARCHAR(MAX);  DECLARE @CountUser Int      -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' or Mastercode like N''%' + @Keyword + '%'' or Displayname like N''%' + @Keyword + '%'') '    IF(@GroupJobTileCode IS NOT NULL AND @GroupJobTileCode<>'')   set @condition = @condition +    ' And  (GroupJobTileCode= '''+ @GroupJobTileCode+''' )'    IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')  set @condition = @condition +    ' And  ( UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@classid > 0)   set @condition = @condition +    ' And (UserId in (select * from dbo.ClassUserGetClassId('+str(@classid)+'))) '  SET @Condition=('select COUNT(userId) from AISystem_UserInfo where '+@Condition+'')  SET @CountUser=@Condition  RETURN   @CountUser  END"
138,AISystem_Category_TestForm_UpdateWithPosition,"    CREATE PROC [dbo].[AISystem_Category_TestForm_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @objectUser int  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TestForm WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TestForm WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TestForm WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TestForm WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TestForm WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_TestForm         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_TestForm SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [ObjectUse] = @objectUser  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
139,AddSkinControl,"CREATE PROCEDURE dbo.[AddSkinControl]      @PackageID     int,   @ControlKey                 nvarchar(50),   @ControlSrc                 nvarchar(256),   @SupportsPartialRendering   bit,   @CreatedByUserID int    AS   INSERT INTO dbo.SkinControls (     PackageID,     ControlKey,     ControlSrc,        SupportsPartialRendering,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   )   VALUES (     @PackageID,     @ControlKey,     @ControlSrc,        @SupportsPartialRendering,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
140,AIElearning_UserTest_GetTopMaxTest,"      CREATE PROC [dbo].[AIElearning_UserTest_GetTopMaxTest]  @UserId INT,  @TestId INT,  @ClassId INT,  @Status INT  AS  -- AIElearning_UserTest_GetTopMaxTest 2, 1, 9, 0  select MAX(Mark) from AIElearning_UserTest where UserId=@UserId and TestId=@TestId and (ClassId=@ClassId or @ClassId=0) and (Status=@Status or @Status=0)    "
141,AIElearning_ClassDocument_CheckExistsContent,CREATE proc [dbo].[AIElearning_ClassDocument_CheckExistsContent]  @content nvarchar(500)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@content<>'')   set @Condition=@Condition+' AND Content='''+@content +''''  exec('   SELECT count(*)   from AIElearning_ClassDocument where '+@Condition+'    ')  
142,AIElearning_Exercise_GetUserName,"create proc [dbo].[AIElearning_Exercise_GetUserName]  @name nvarchar(250),  @ExerciseId int  as  select * from AIElearning_Exercise_User where Username =@name and ExerciseId=@ExerciseId  "
143,CoreMessaging_GetMessageConversations,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageConversations]   @UserID int,   @PortalID int,   @AfterMessageID int,   @NumberOfRecords int,   @SortField nvarchar(25) = 'CreatedOnDate',   @SortAscending bit = 0,   @Read bit = 0,   @Archived bit = 0,   @SentOnly bit = 0  AS  BEGIN   --Get the top message for each conversation   ;WITH RollUpMessageIDs AS   (    SELECT MAX(m.MessageID) AS TopMessageID    FROM dbo.[CoreMessaging_MessageRecipients] mr    INNER JOIN dbo.[CoreMessaging_Messages] m ON mr.MessageID = m.MessageID    WHERE ((Archived = @Archived) or (@Archived is null AND [Archived] IS NOT null))    AND (([Read] = @Read) or (@Read is null AND [READ] IS NOT null))    AND ((@SentOnly = 1 AND SenderUserID = @UserID) or (@SentOnly is NULL AND UserID = @UserID) or (@SentOnly = 0 AND UserID = @UserID))    AND m.NotificationTypeID IS NULL AND m.PortalID=@PortalID    GROUP BY ConversationID   )   ,Conversations  AS   (    SELECT  DISTINCT [MessageID], [ConversationID], [Subject], convert(nvarchar(50), [Body]) AS Body,      [To], [From], [ReplyAllAllowed], [SenderUserID],      [CreatedByUserID], [CreatedOnDate],      [LastModifiedByUserID], [LastModifiedOnDate],      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageAttachments WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID)) AS AttachmentCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID AND [READ] = 0) AS NewThreadCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID) AS ThreadCount,      ROW_NUMBER() OVER(ORDER BY        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 1 THEN [CreatedOnDate] END ASC,        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 0 THEN [CreatedOnDate] END DESC,        CASE WHEN @SortField = 'From' AND @SortAscending = 1 THEN [From] END ASC,        CASE WHEN @SortField = 'From' AND @SortAscending = 0 THEN [From] END DESC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 1 THEN [Subject] END ASC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 0 THEN [Subject] END DESC       ) AS RowNumber    FROM dbo.CoreMessaging_Messages AS m    WHERE MessageID IN (SELECT TopMessageID FROM RollUpMessageIDs)   )   SELECT * FROM Conversations   WHERE (@AfterMessageID > 0 AND RowNumber BETWEEN (SELECT RowNumber + 1 FROM Conversations WHERE [MessageID] = @AfterMessageID) AND (SELECT RowNumber + @NumberOfRecords FROM Conversations WHERE [MessageID] = @AfterMessageID)) OR   (@AfterMessageID = -1 AND RowNumber BETWEEN 1 AND @NumberOfRecords)   ORDER BY RowNumber ASC  END"
144,AISystem_UserInRole_GetsBySearch,"CREATE proc [dbo].[AISystem_UserInRole_GetsBySearch]  @RoleId int,  @ScopeCode nvarchar(500),  @Key nvarchar(500),  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    exec('    WITH #AISystem_UserInRole AS(    SELECT ROW_NUMBER() OVER (ORDER BY uir.Id desc) AS RowNumber,     uir.*,     u.Username as [Username],     u.DisplayName     from AISystem_UserInRole uir  inner join AISystem_UserInfo u on uir.UserId=u.UserId Where uir.RoleId='+@RoleId+'     and  u.Username like ''%'+@Key+'%''     and (uir.ScopeCode='''+@ScopeCode+''' or ''0''='''+@ScopeCode+''')    )         SELECT     *   FROM #AISystem_UserInRole   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
145,GetAuthenticationServiceByType,CREATE PROCEDURE dbo.GetAuthenticationServiceByType     @AuthenticationType nvarchar(100)    AS   SELECT *    FROM  dbo.Authentication    WHERE AuthenticationType = @AuthenticationType
146,AIElearning_DocumentGroup_File_GetsDocumentNotInGroup,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_GetsDocumentNotInGroup]   @pageIndex int,  @pageSize int,  @docGroupId int,  @UnitCode nvarchar(50),  @CategoryId int,  @ObjectAccess int,  @type int,  @Status int,  @Keyword nvarchar(250)  as  -- AIElearning_DocumentGroup_File_GetsDocumentNotInGroup 1,10,1,-1,-1,-1,-1,-1,''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '  ---- Tao bang tam  --CREATE TABLE #AIDocument(  --  [Id] [int],  -- [Name] [nvarchar](450) ,  -- [Code] [nvarchar](50),  -- [Type] [int] ,  -- [CategoryId] [int] ,  -- [Content] [nvarchar](max) ,  -- [Description] [nvarchar](max) ,  -- [Status] [int] ,  -- [CreatedUser] [nvarchar](150) ,  -- [CreatedDate] [datetime] ,  -- [VideoDuration] [time](7) ,  -- [MediaId] [int],  -- [FileName] [nvarchar](250),  -- [ObjectAccess] [int],  -- [UnitEditor] [nvarchar](250),  -- [ReleaseDate] [datetime],  -- [Keyword] [nvarchar](max))  --INSERT INTO #AIDocument  -- SELECT *  -- FROM AIElearning_Document where [MediaId] = -1    --INSERT INTO #AIDocument  -- SELECT c.Id, m.Name, c.Code,  -- c.Type, c.CategoryId, m.Content, m.Description, m.Status, m.CreatedUser, m.CreatedDate, m.VideoDuration, c.MediaId, c.FileName, c.ObjectAccess, c.UnitEditor, c.ReleaseDate, c.Keyword  -- FROM AIElearning_Document c inner join AIElearning_Media m on c.MediaId = m.Id where c.MediaId <> -1    if(@CategoryId<>-1)   set @Condition = @Condition+' AND CategoryId='+str(@CategoryId)  if(@ObjectAccess<>-1)   set @Condition = @Condition+' AND ObjectAccess='+str(@ObjectAccess)  if(@type<>-1)   set @Condition = @Condition+' AND Type='+str(@type)  if(@Status<>-1)   set @Condition = @Condition+' AND Status='+str(@Status)  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  exec('   WITH #AIElearning_Document AS(    Select  ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber,* from AIElearning_Document where '+@Condition+' and Id not in (select DocumentId from AIElearning_DocumentGroup_File where DocumentGroupId =  '+@docGroupId+' ))       SELECT *   FROM #AIElearning_Document   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
147,GetDesktopModulesByPortal,CREATE PROCEDURE dbo.[GetDesktopModulesByPortal]   @PortalId int   AS    SELECT DISTINCT DM.*    FROM dbo.vw_DesktopModules DM    WHERE ( IsPremium = 0 )    OR  ( DesktopModuleID IN (     SELECT DesktopModuleID     FROM dbo.PortalDesktopModules PDM     WHERE PDM.PortalId = @PortalId ) )    ORDER BY FriendlyName
148,AddUserPortal,"CREATE PROCEDURE dbo.[AddUserPortal]     @PortalID  int,   @UserID   int  AS     IF not exists ( SELECT 1 FROM dbo.UserPortals WHERE UserID = @UserID AND PortalID = @PortalID ) AND @PortalID > -1    BEGIN     INSERT INTO dbo.UserPortals (      UserID,      PortalID,      Authorised,      CreatedDate     )     VALUES (      @UserID,      @PortalID,      1,      getdate()     )    END"
149,AIElearning_ClassItem_CheckDataExist,"CREATE PROC AIElearning_ClassItem_CheckDataExist  @Type INT,  @DataId INT  AS  select COUNT(ID) from AIElearning_ClassItem WHERE [Type]=@Type AND DataId=@DataId"
150,AISystem_Talent_Child_GetMaxOrderNo,"CREATE proc [dbo].[AISystem_Talent_Child_GetMaxOrderNo]   @talentId int  as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_Talent_Child   WHERE TalentId=@talentId   end  "
151,AddPortalDesktopModule,"CREATE PROCEDURE dbo.AddPortalDesktopModule   @PortalID   int,   @DesktopModuleId int,   @CreatedByUserID int    as    insert into dbo.PortalDesktopModules (    PortalId,   DesktopModuleId,   CreatedByUserID,   CreatedOnDate,   LastModifiedByUserID,   LastModifiedOnDate  )  values (   @PortalID,   @DesktopModuleId,   @CreatedByUserID,   getdate(),   @CreatedByUserID,   getdate()  )    select SCOPE_IDENTITY()"
152,AIElearning_Certificate_Offline_User_GetsUserIdCount,"create proc [dbo].[AIElearning_Certificate_Offline_User_GetsUserIdCount]  @UserId int,  @CertificateId int  as  select count(*) from AIElearning_Certificate_Offline_User where UserId=@UserId and CertificateId=@CertificateId"
153,vw_aspnet_Users,"    CREATE VIEW [dbo].[vw_aspnet_Users]    AS SELECT [ApplicationId], [UserId], [UserName], [LoweredUserName], [MobileAlias], [IsAnonymous], [LastActivityDate]    FROM [dbo].[aspnet_Users]    "
154,ClassUserGetUser,create FUNCTION [dbo].[ClassUserGetUser]   (   @classId int  )  RETURNS TABLE   AS  RETURN   (   select * from AISystem_UserInfo where UserId not in (select UserId from AIElearning_ClassUser where Classid=@classId))
155,AISystem_Category_Document_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_Document_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Document    SET QUOTED_IDENTIFIER OFF         
156,DeletePortalLanguages,"CREATE PROCEDURE dbo.[DeletePortalLanguages]      @PortalId   Int, -- Null ignored (use referential integrity to delete from all Portals)      @LanguageId Int  -- Null ignored (use referential integrity to delete for all languages)  AS  BEGIN      IF @PortalId Is Not Null AND IsNull(@LanguageId, -1) != -1 BEGIN         DECLARE @CultureCode nVarchar(10);         SELECT @CultureCode = CultureCode FROM dbo.[Languages] WHERE LanguageId = @LanguageId;         DELETE FROM dbo.[PortalLanguages]    WHERE PortalId = @PortalId AND @LanguageId  = LanguageId;         DELETE FROM dbo.[PortalLocalization] WHERE PortalId = @PortalId AND @CultureCode = CultureCode;         DELETE FROM dbo.[PortalSettings]     WHERE PortalId = @PortalId AND @CultureCode = CultureCode;      END      -- ELSE rely on referential integrity (portal or language will be deleted as well)  END"
157,AIElearning_ClassDocument_Delete,CREATE proc [dbo].[AIElearning_ClassDocument_Delete]   @id int  as  begin  DECLARE @orderNo AS int  DECLARE @class AS int  select @class = ClassId from AIElearning_ClassDocument where Id= @id   select @orderNo = OrderNo from AIElearning_ClassDocument where Id= @id   delete from AIElearning_ClassDocument where Id = @id  update AIElearning_ClassDocument set OrderNo = (OrderNo-1) where OrderNo > @orderNo and ClassId =@class  end    
158,AISystem_Subject_GetClassBySubjectId,CREATE proc [dbo].[AISystem_Subject_GetClassBySubjectId]   @SubjectId int  as  -- AISystem_Subject_GetClassBySubjectId 2  begin   select * from AIElearning_Class where SubjectId = @SubjectId  end      
159,GetAuthenticationService,CREATE PROCEDURE dbo.GetAuthenticationService     @AuthenticationID int    AS   SELECT *    FROM   dbo.Authentication    WHERE AuthenticationID = @AuthenticationID
160,DeleteTab,"CREATE PROCEDURE dbo.[DeleteTab]      @TabId Int  -- ID of tab to delete; Not Null and > 0  AS  BEGIN      DECLARE @TabOrder Int      DECLARE @ParentId Int      DECLARE @ContentItemId Int      SELECT @TabOrder = TabOrder, @ParentId = ParentID, @ContentItemID = ContentItemID FROM dbo.[Tabs] WHERE TabID = @TabId        -- Delete Tab --      DELETE FROM dbo.[Tabs] WHERE  TabID = @TabId        -- Update TabOrder of remaining Tabs --      UPDATE dbo.[Tabs]          SET TabOrder = TabOrder - 2          WHERE IsNull(ParentID, -1) = IsNull(@ParentId , -1) AND TabOrder > @TabOrder        -- Delete Content Item --      DELETE FROM dbo.[ContentItems] WHERE ContentItemID = @ContentItemId  END"
161,AISystem_UserInfo_GetsAllUserSystemNotInRegistorUserCount,"  CREATE PROC [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInRegistorUserCount]      @Keyword NVARCHAR(250),      @registorId INT,      @Limit INT,      @Type INT,      @Unitcode NVARCHAR(150),      @UnitChildcode NVARCHAR(150),      @Job NVARCHAR(150),      @JobTitlecode NVARCHAR(150),      @status INT  AS -- [AISystem_UserInfo_GetsAllUserSystemNotInRegistorUserCount] '',2,-1,-1,'','','','',1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'   --T? khóa  IF ( @Keyword <> '' )      SET @Condition = @Condition + ' and (ui.Username like N''%' + @Keyword + '%'' OR ui.EmployeeCode like N''%' + @Keyword + '%'') '  IF ( @Limit > 0 )      SET @Condition = @Condition + ' And  (ui.Limit= ' + STR(@Limit) + ' )'  IF ( @Type > 0 )      SET @Condition = @Condition + ' And  (ui.Type= ' + STR(@Type) + ' )'  IF ( @Unitcode IS NOT NULL AND @Unitcode <> '' )      SET @Condition = @Condition + ' And  (ui.Unitcode= ''' + @Unitcode + ''' )'  IF ( @UnitChildcode IS NOT NULL AND @UnitChildcode <> '' )      SET @Condition = @Condition + ' And  ( ui.UnitChildcode in  (select * from split(''' + @UnitChildcode + ''')) )'  IF ( @Job <> '' AND @Job <> '-1' )      SET @Condition = @Condition + ' AND jt.Code = ''' + @Job + ''''  IF ( @JobTitlecode IS NOT NULL AND @JobTitlecode <> '' )      SET @Condition = @Condition + ' And  (ui.JobTitlecode= ''' + @JobTitlecode + ''' )'  IF ( @status > -1 )      SET @Condition = @Condition + ' AND ui.Status=' + STR(@status)  IF ( @registorId > 0 )      SET @Condition = @Condition + ' And ui.UserId not in (select userId from AIElearning_TestCampaign_RegistorUser where TestRegistorId=' + STR(@registorId) + ')  '  EXEC('select COUNT(userId) from AISystem_UserInfo ui  LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON ui.JobTitleCode = jtt.Code  and ui.UnitCode = jtt.UnitCode   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code   where '+@Condition+'')  SET QUOTED_IDENTIFIER OFF              "
162,DeletePermission,CREATE PROCEDURE dbo.DeletePermission   @PermissionID int  AS    DELETE FROM dbo.Permission  WHERE   [PermissionID] = @PermissionID
163,AIElearning_DocumentGroup_GetsBySearchCount,"  CREATE PROC [dbo].[AIElearning_DocumentGroup_GetsBySearchCount]  @unitCode nvarchar(50),  @catId int,  @status int,  @keywork nvarchar(250)  as  -- AIElearning_DocumentGroup_GetsBySearchCount -1,-1,-1,'2'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@unitCode<> '')   set @Condition=@Condition+' AND UnitCode='''+@unitCode +''''  if(@catId>-1)   set @Condition=@Condition+' AND CategotyDocumentId='+str(@catId)  if(@Status> -1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@keywork<>'')   set @Condition=@Condition+' AND Name like N''%'+@keywork+'%'''  exec('   SELECT count(*) from AIElearning_DocumentGroup where '+@Condition+' ')    SET QUOTED_IDENTIFIER OFF       "
164,GetUserProfile,"CREATE PROC dbo.[GetUserProfile]    @UserID int  AS   SELECT    ProfileID,    UserID,    PropertyDefinitionID,    CASE WHEN (PropertyValue Is Null) THEN PropertyText ELSE PropertyValue END AS 'PropertyValue',    Visibility,    ExtendedVisibility,    LastUpdatedDate   FROM dbo.UserProfile   WHERE   UserId = @UserID"
165,AIElearning_ClassItem_TestSettings_GetByItemId,CREATE PROC AIElearning_ClassItem_TestSettings_GetByItemId  @ClassItemId INT  AS  SELECT * FROM AIElearning_ClassItem_TestSettings where ClassItemId=@ClassItemId
166,AISystem_Category_Media_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_Media_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Media_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Media where   Code = @Code  SET QUOTED_IDENTIFIER OFF         
167,AIElearning_Certificate_Offline_User_GetsClassUser,"create proc AIElearning_Certificate_Offline_User_GetsClassUser  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @CertificateId int,  @UnitCode nvarchar(250),  @JobTitleCode nvarchar(250),  @type int    as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND ( c.UserName LIKE N''%'+@Keyword+'%''  or i.Mastercode LIKE N''%'+@Keyword+'%'' or i.Displayname LIKE N''%'+@Keyword+'%'' )'   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND c.classid='+str(@classid)   --đơn vị  if(@UnitCode <>'')   set @Condition=@Condition+' AND i.UnitCode='''+(@UnitCode)+''''    --chức danh  if(@JobTitleCode <>'')   set @Condition=@Condition+' AND i.JobTitleCode='''+(@JobTitleCode)+''''    if(@type =1 )   set @Condition=@Condition+' AND c.Userid in (select UserId from AIElearning_Certificate_Offline_User where CertificateId='+str(@CertificateId)+')'  if(@type =2 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_Offline_User where CertificateId='+str(@CertificateId)+')'    exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*, i.UnitChildPath,i.Displayname,i.Mastercode     from AIElearning_ClassUser c left join Users u   on u.UserID = c.UserId left join AISystem_UserInfo i on i.UserId = u.UserID  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
168,CountUserFution,"CREATE FUNCTION [dbo].[CountUserFution]   (   @Keyword nvarchar(250),  @classid int,  @GroupJobTileCode nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),  @JobTitlecode nvarchar(250),  @status int,  @limit int  )  RETURNS @UserCount table (countuser Int)  AS  BEGIN  DECLARE @Condition AS NVARCHAR(MAX);  DECLARE @Count AS NVARCHAR(MAX);  SET @Condition=' select COUNT(userId) from AISystem_UserInfo where (1=1)'  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' or Mastercode like N''%' + @Keyword + '%'' or Displayname like N''%' + @Keyword + '%'') '    IF(@GroupJobTileCode IS NOT NULL AND @GroupJobTileCode<>'')   set @condition = @condition +    ' And  (GroupJobTileCode= '''+ @GroupJobTileCode+''' )'    IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')  set @condition = @condition +    ' And  ( UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@classid > 0)   set @condition = @condition +    ' And (UserId in (select * from dbo.ClassUserGetClassId('+str(@classid)+'))) '    EXEC sp_executesql @Condition ;     RETURN     END"
169,AISystem_Category_Subject_AddWithPosition,"CREATE PROCEDURE [dbo].[AISystem_Category_Subject_AddWithPosition]   @Position int,   @ParentId int,/*nullable*/   @Title nvarchar(250),   @Code NVARCHAR(50),    @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Subject WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Subject (   [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Subject WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Subject WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Subject WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Subject WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Subject WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Subject         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Subject (   [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()          "
170,DeleteLanguage,CREATE PROCEDURE dbo.[DeleteLanguage]   @LanguageID  Int -- Not Null  AS  BEGIN      DECLARE @CultureCode AS nVarChar(10);      SELECT @CultureCode = CultureCode FROM dbo.[Languages] WHERE LanguageId = @LanguageId;      DELETE FROM dbo.[PortalLocalization] WHERE @CultureCode = CultureCode;      DELETE FROM dbo.[PortalSettings]     WHERE @CultureCode = CultureCode;      DELETE FROM dbo.[Languages]          WHERE @LanguageID  = LanguageID;  END
171,AISystem_Category_Unit_GetByTitle,"create PROC [dbo].[AISystem_Category_Unit_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Unit AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   AND a.ParentId > 0 and status =1   ')"
172,AIElearning_ClassDocument_GetMaxOrderNo,"CREATE PROC [dbo].[AIElearning_ClassDocument_GetMaxOrderNo]      @ClassId INT,      @ParentType INT  AS  BEGIN      SELECT  ISNULL(MAX(OrderNo), '0')      FROM    AIElearning_ClassDocument      WHERE   ClassId = @ClassId AND ParentType = @ParentType   END      "
173,AIElearning_UserTest_GetInfoLastTest,"  create PROC [dbo].[AIElearning_UserTest_GetInfoLastTest]  @UserId int,  @ClassItemId int,  @ClassId int,  @Status int  AS  select Top 1 * from AIElearning_UserTest where UserId=@UserId  and (ClassItemId=@ClassItemId or @ClassItemId=-1)  and (ClassId=@ClassId or @ClassId=-1) and (Status=@Status or @Status=-1) order by Id desc    "
174,GetCustomAliasesForTabs,CREATE PROCEDURE dbo.[GetCustomAliasesForTabs]   AS   SELECT HttpAlias   FROM  dbo.[PortalAlias] pa    WHERE PortalAliasId IN (SELECT PortalAliasId FROM dbo.[TabUrls])   ORDER BY HttpAlias
175,AISystem_UserInfo_GetsAllUserSystemNotInRoleCount,"  CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInRoleCount]  @RoleId int,  @Keyword nvarchar(250),  @Unit nvarchar(150),   @UnitChild nvarchar(150)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username = N''' + @Keyword + ''') '  IF(@Unit <>'')   set @condition = @condition +    ' And  (UnitCode= '''+ @Unit+''' )'  IF(@UnitChild <>'')   set @condition = @condition +    ' And  (UnitChildCode= '''+ @UnitChild+''' )'  --IF(@RoleId > 0)  -- set @condition = @condition +    ' And  (AISystem_UserInfo.UserId not in (select AISystem_UserInRole.UserId from AISystem_UserInRole WHERE RoleId= '+ STR(@RoleId)+') )'  exec('select COUNT(userId) from AISystem_UserInfo where '+@Condition+'')      SET QUOTED_IDENTIFIER OFF      "
176,AIEventLog_GetsBySearchCount,"  CREATE proc [dbo].[AIEventLog_GetsBySearchCount]  @ObjectName nvarchar(500),  @ObjectId bigint,  @ObjectType int,  @ActionId int,  @UserId int,  @DateBegin datetime,  @DateEnd datetime,  @PortalId int,  @LanguageId nvarchar(50)  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@ObjectName IS NOT NULL AND @ObjectName<>'')    set @condition = @condition + ' and (ObjectName like N''%' + @ObjectName + '%'') '  IF(@ObjectId > 0)   set @condition = @condition +    ' And  (ObjectId= '+ STR(@ObjectId)+' )'  IF(@ObjectType > 0)   set @condition = @condition +    ' And  (ObjectType= '+ STR(@ObjectType)+' )'  IF(@ActionId > 0)   set @condition = @condition +    ' And  (ActionId= '+ STR(@ActionId)+' )'  IF(@UserId > 0)   set @condition = @condition +    ' And  (UserId= '+ STR(@UserId)+' )'   set @condition = @condition +    ' And  (PortalId= '+ STR(@PortalId)+' )'  IF (@LanguageId IS NOT NULL AND @LanguageId<>'')   set @condition = @condition +    ' And  (LanguageId= '+ @LanguageId+' )'  IF CONVERT(datetime,@DateBegin ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate >= ''' + convert(nvarchar(23),@DateBegin,121) + ''''  IF CONVERT(datetime,@DateEnd ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate <= ''' + convert(nvarchar(23),@DateEnd,121) + ''''    exec('   select COUNT(*) from AIEventLog where ' + @condition +'  ')    SET QUOTED_IDENTIFIER OFF     "
177,DeleteSkin,CREATE PROCEDURE dbo.[DeleteSkin]     @SkinID  int    AS    DELETE   FROM dbo.Skins   WHERE   SkinID = @SkinID
178,AIElearning_DocumentGroup_GetsBySearch,"  CREATE PROC [dbo].[AIElearning_DocumentGroup_GetsBySearch]  @pageIndex int,  @pageSize int,  @unitCode nvarchar(50),  @catId int,  @status int,  @keywork nvarchar(250)  as  -- AIElearning_DocumentGroup_GetsBySearch 1,10,'-1',1032,1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@unitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@unitCode +''''  if(@catId > -1)   set @Condition=@Condition+' AND CategotyDocumentId='+str(@catId)  if(@Status > -1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@keywork<>'')   set @Condition=@Condition+' AND Name like N''%'+@keywork+'%'''    exec('    WITH #AIElearning_DocumentGroup AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_DocumentGroup where ' + @Condition + ')      SELECT     *   FROM #AIElearning_DocumentGroup   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
179,AIElearning_Certificate_Offline_User_GetsClassUserCount,"create proc [dbo].[AIElearning_Certificate_Offline_User_GetsClassUserCount]  @Keyword nvarchar(250),  @classid int,  @CertificateId int,  @UnitCode nvarchar(250),  @JobTitleCode nvarchar(250),  @type int    as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND ( c.UserName LIKE N''%'+@Keyword+'%''  or i.Mastercode LIKE N''%'+@Keyword+'%'' or i.Displayname LIKE N''%'+@Keyword+'%'' )'  --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)   --đơn vị  if(@UnitCode <>'')   set @Condition=@Condition+' AND i.UnitCode='''+(@UnitCode)+''''    --chức danh  if(@JobTitleCode <>'')   set @Condition=@Condition+' AND i.JobTitleCode='''+(@JobTitleCode)+''''    if(@type =1 )   set @Condition=@Condition+' AND c.Userid in (select UserId from AIElearning_Certificate_Offline_User where CertificateId='+str(@CertificateId)+')'  if(@type =2 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_Offline_User where CertificateId='+str(@CertificateId)+')'      exec('   select COUNT(*)      from AIElearning_ClassUser c left join Users u   on u.UserID = c.UserId left join AISystem_UserInfo i on i.UserId = u.UserID  where  '+ @condition +'  ')  SET QUOTED_IDENTIFIER OFF"
180,AIElearning_ClassItem_GetChildrenByParentIdType,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetChildrenByParentIdType]  @ClassId int,  @type INT,  @parentType int  AS  SELECT * FROM AIElearning_ClassItem   WHERE  ClassId = @ClassId And Type=@type AND ParentType = @parentType         "
181,AIElearning_TestCampaign_RegistorUserTest_GetInfoLastTest,"  create PROC [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetInfoLastTest]  @RegistorUserId int,  @Status int  AS   SELECT top 1 * FROM AIElearning_TestCampaign_RegistorUserTest WHERE (RegistorUserId = @RegistorUserId OR @RegistorUserId = -1) and (Status = @Status OR @Status = -1) ORDER BY Id DESC  "
182,GetPropertyDefinitionsByPortal,CREATE PROCEDURE dbo.GetPropertyDefinitionsByPortal     @PortalID int    AS  SELECT dbo.ProfilePropertyDefinition.*   FROM dbo.ProfilePropertyDefinition   WHERE  (PortalId = @PortalID OR (PortalId IS NULL AND @PortalID IS NULL))     ORDER BY ViewOrder
183,EnsureLocalizationExists,"CREATE PROCEDURE dbo.[EnsureLocalizationExists]   @PortalID       Int,   @CultureCode nvarchar(10)  AS  BEGIN   DECLARE @MasterLanguage nvarchar(10) = Null;   DECLARE @LocalizationExists bit = 0;     IF NOT EXISTS (SELECT * FROM dbo.[Languages] L        JOIN dbo.[PortalLanguages] P ON L.LanguageID = P.LanguageID        WHERE P.PortalID = @PortalID AND L.CultureCode = @CultureCode)    RETURN; -- language does not exist for this portal     IF EXISTS (SELECT * FROM dbo.[PortalLocalization]       WHERE CultureCode = @CultureCode AND PortalID = @PortalID)    RETURN; -- already localized      IF EXISTS (SELECT * FROM dbo.[PortalLocalization] L       JOIN dbo.[Portals] P ON L.PortalID = P.PortalID AND L.CultureCode = P.DefaultLanguage       WHERE P.PortalID = @PortalID)    SELECT @MasterLanguage = DefaultLanguage     FROM dbo.[Portals]     WHERE PortalID = @PortalID   ELSE IF EXISTS (SELECT * FROM dbo.[PortalLocalization]        WHERE CultureCode = 'en-US' and PortalID = @PortalID)    SET @MasterLanguage = 'en-US'   ELSE -- neither default nor system language available: take the language that was assigned first    SELECT TOP (1) CultureCode     FROM dbo.[PortalLocalization]     WHERE PortalID = @PortalID     ORDER BY PortalID ASC;     IF NOT (@MasterLanguage Is Null OR @MasterLanguage LIKE @CultureCode)    BEGIN  -- copy localized values from (existing and different) master language:         INSERT INTO dbo.[PortalLocalization]    ( PortalId,     CultureCode,     PortalName,     LogoFile,     FooterText,     Description,     KeyWords,     BackgroundFile,      HomeTabId,     LoginTabId,     UserTabId,     AdminTabId,     RegisterTabId,     SearchTabId,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate    ) SELECT     PortalId,     @CultureCode,     PortalName,     LogoFile,     FooterText,     Description,     KeyWords,     BackgroundFile,      HomeTabId,     LoginTabId,     UserTabId,     AdminTabId,     RegisterTabId,     SearchTabId,     -1,     GETDATE(),     -1,     GETDATE()     FROM dbo.[PortalLocalization]      WHERE PortalID = @PortalID AND CultureCode = @MasterLanguage;       -- copy missing localized settings:    DECLARE      @LocalPortalSettings TABLE(        [PortalID]             INT             NOT NULL,        [CultureCode]          NVARCHAR (10)   NOT NULL,        [SettingName]          NVARCHAR (50)   NOT NULL,        [SettingValue]         NVARCHAR (2000) NULL    );      INSERT INTO @LocalPortalSettings    (     PortalID,     CultureCode,     SettingName,     SettingValue    )    SELECT     PortalID,     CultureCode,     SettingName,     SettingValue    FROM dbo.[PortalSettings]    WHERE PortalID = @PortalID AND CultureCode = @CultureCode      MERGE INTO @LocalPortalSettings target    USING (SELECT * FROM dbo.[PortalSettings]      WHERE PortalId = @PortalID and CultureCode = @MasterLanguage) source     ON (target.SettingName = source.SettingName)    WHEN NOT MATCHED THEN      INSERT (        PortalID,         CultureCode,         SettingName,         SettingValue)      VALUES (      source.PortalID,       @CultureCode,       source.SettingName,       source.SettingValue     );      MERGE INTO dbo.[PortalSettings]  target    USING (SELECT * FROM @LocalPortalSettings) source     ON (target.PortalID = source.PortalID AND      target.CultureCode = source.CultureCode AND      target.SettingName = source.SettingName)    WHEN NOT MATCHED THEN      INSERT (        PortalID,         CultureCode,         SettingName,         SettingValue,      CreatedByUserID,       CreatedOnDate,       LastModifiedByUserID,       LastModifiedOnDate)      VALUES (      source.PortalID,       @CultureCode,       source.SettingName,       source.SettingValue,      -1,      GETDATE(),      -1,      GETDATE()     );   END;  END"
184,AISystem_Category_Unit_GetByIsTraining,"CREATE PROC [dbo].[AISystem_Category_Unit_GetByIsTraining]  @ParentId int,  @IsTraining int  AS  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  IF(@ParentId >0)   SET @Condition +='  and  ParentId=' + str(@ParentId)  IF(@ParentId >0)   SET @Condition +='  and  IsTraining=' + str(@IsTraining)  exec('   SELECT * FROM AISystem_Category_Unit   WHERE '+ @condition + '   AND status =1  ')"
185,AIElearning_ClassDocument_GetsBySearch,"CREATE proc [dbo].[AIElearning_ClassDocument_GetsBySearch]   @ClassID INT,  @IsContent INT,  @ParentType INT  as  -- [AIElearning_ClassDocument_GetsBySearch] -1,0,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Tao bang tam  CREATE TABLE #ClassDocument(   [Id] [int],   [ClassId] [int] ,   [Name] [nvarchar](450) ,   [Type] [int] ,   [CategoryId] [int] ,   [Content] [nvarchar](max) ,   [LecturersId] [int] ,   [Description] [nvarchar](max) ,   [Status] [int] ,   [CreatedUser] [nvarchar](150) ,   [CreatedDate] [datetime],   [VideoDuration] [time](7),   [AllowDownload] [int] ,   [OrderNo] [int],   [MediaId] [int],   [FileName] [nvarchar](250),   [IsContent] [INT],   [ParentType] [INT])  INSERT INTO #ClassDocument  -- Them tai lieu   SELECT Id,ClassId,Name, [Type], [CategoryId],[Content] ,[LecturersId] ,[Description] ,[Status] ,[CreatedUser] ,[CreatedDate] ,[VideoDuration] ,[AllowDownload] ,[OrderNo] ,[MediaId], [FileName], [IsContent], [ParentType]  FROM AIElearning_ClassDocument where [MediaId] = -1  -- Them hoc lieu  INSERT INTO #ClassDocument  SELECT c.Id, c.ClassId, m.Name,   c.Type, m.CategoryId, m.Content, m.LecturersId,m.Description, m.Status, m.CreatedUser, m.CreatedDate, m.VideoDuration, c.AllowDownload,c.OrderNo,c.MediaId, m.FileName, c.IsContent, c.ParentType  FROM AIElearning_ClassDocument c inner join AIElearning_Media m on c.MediaId = m.Id where [MediaId] <> -1    if(@ClassID >-1)   set @Condition=@Condition+' AND ClassId='+str(@ClassID)  if(@IsContent>-1)   set @Condition=@Condition+' AND IsContent='+str(@IsContent)  if(@ParentType >-1)   set @Condition=@Condition+' AND ParentType='+str(@ParentType)    exec('   SELECT ROW_NUMBER() OVER (ORDER BY OrderNo DESC) AS RowNumber, *   FROM #ClassDocument where '+@Condition+'   ')      "
186,AISystem_UserInfo_GetsByLecturersCode,  create proc [dbo].[AISystem_UserInfo_GetsByLecturersCode]  @LecturersCode nvarchar(50)  as  -- AISystem_UserInfo_GetsByLecturersCode 'hainv'  Select top(1) * from AISystem_UserInfo where   LecturersCode = @LecturersCode  SET QUOTED_IDENTIFIER OFF     
187,GetTabs,"CREATE PROCEDURE dbo.[GetTabs]   @PortalID Int  -- Null|-1 for host pages  AS   SELECT *   FROM   dbo.[vw_Tabs]   WHERE  IsNull(PortalId, -1) = IsNull(@PortalID, -1)   ORDER BY PortalId, [Level], ParentID, TabOrder -- PortalId added for query optimization"
188,AISystem_UserInfo_GetsAllUserSystemNotInRole,"  CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInRole]  @pageIndex int,  @pageSize int,  @RoleId int,  @Keyword nvarchar(250),  @Unit nvarchar(150),   @UnitChild nvarchar(150)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- AISystem_UserInfo_GetsAllUserSystemNotInClassUser 1, 999, N'', 10, 0, 0, 0, 0, 0 ,-1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username = N''' + @Keyword + ''') '  IF(@Unit <>'')   set @condition = @condition +    ' And  (UnitCode= '''+ @Unit+''' )'  IF(@UnitChild <>'')   set @condition = @condition +    ' And  (UnitChildCode= '+ @UnitChild+' )'  --IF(@RoleId > 0)  -- set @condition = @condition +    ' And  (AISystem_UserInfo.UserId not in (select AISystem_UserInRole.UserId from AISystem_UserInRole WHERE RoleId= '+ STR(@RoleId)+') )'  exec('    WITH #users AS(    SELECT ROW_NUMBER() OVER (ORDER BY userid desc) AS RowNumber,       *     from AISystem_UserInfo where ' +@Condition+ '      )       SELECT     *   FROM #users   where RowNumber between '+@start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
189,AIEventLog_GetsBySearch,"  CREATE proc [dbo].[AIEventLog_GetsBySearch]  @pageIndex int,  @pageSize int,  @ObjectName nvarchar(500),  @ObjectId bigint,  @ObjectType int,  @ActionId int,  @UserId int,  @DateBegin datetime,  @DateEnd datetime,  @PortalId int,  @LanguageId nvarchar(50)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@ObjectName IS NOT NULL AND @ObjectName<>'')    set @condition = @condition + ' and (ObjectName like N''%' + @ObjectName + '%'') '  IF(@ObjectId > 0)   set @condition = @condition +    ' And  (ObjectId= '+ STR(@ObjectId)+' )'  IF(@ObjectType > 0)   set @condition = @condition +    ' And  (ObjectType= '+ STR(@ObjectType)+' )'  IF(@ActionId > 0)   set @condition = @condition +    ' And  (ActionId= '+ STR(@ActionId)+' )'  IF(@UserId > 0)   set @condition = @condition +    ' And  (UserId= '+ STR(@UserId)+' )'   set @condition = @condition +    ' And  (PortalId= '+ STR(@PortalId)+' )'  IF (@LanguageId IS NOT NULL AND @LanguageId<>'')   set @condition = @condition +    ' And  (LanguageId= '+ @LanguageId+' )'  IF CONVERT(datetime,@DateBegin ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate >= ''' + convert(nvarchar(23),@DateBegin,121) + ''''  IF CONVERT(datetime,@DateEnd ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate <= ''' + convert(nvarchar(23),@DateEnd,121) + ''''    exec('    WITH #AIEventLog AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIEventLog where ' + @condition +'     )         SELECT     *   FROM #AIEventLog   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
190,UpdateFileVersion,"CREATE PROCEDURE dbo.[UpdateFileVersion]   @FileID   int,      @VersionGuid uniqueidentifier  AS      UPDATE dbo.Files          SET    VersionGuid = @VersionGuid      WHERE  FileID = @FileID"
191,AIElearning_Document_CheckExistsContent,CREATE PROC [dbo].[AIElearning_Document_CheckExistsContent]  @content nvarchar(500)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@content<>'')   set @Condition=@Condition+' AND Content='''+@content +''''  exec('   SELECT count(*)   from AIElearning_Document where '+@Condition+'    ')        
192,GetAllModules,CREATE PROCEDURE dbo.[GetAllModules]    AS  SELECT *   FROM dbo.vw_Modules
193,AIEventLog_GetsByParamCountYear,"CREATE PROC [dbo].[AIEventLog_GetsByParamCountYear]      @keyword NVARCHAR(50) ,      @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT ,      @ObjectType INT ,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME,   @Year int  AS   -- AIEventLog_GetsByParamCount '','',0,0,0,'01/01/1900','01/01/1900'         DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.ObjectName like N''%' + @ObjectName + '%'') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectType= ' + STR(@ObjectType) + ' )'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF ( @keyword <> '' )          SET @condition = @condition + ' AND (tbLog.Username like ''%' + @keyword + '%'' or userinfo.EmployeeCode like ''%' + @keyword + '%'')'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''      EXEC('      SELECT  Count(tbLog.Id)      FROM      dbo.AIEventLog_'+@Year+' tbLog left join AISystem_UserInfo userinfo on tbLog.Username=userinfo.Username where '+@condition+'   ')      SET QUOTED_IDENTIFIER OFF  "
194,AISystem_Category_Bank_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_Bank_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Bank WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Bank (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Bank WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Bank WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Bank WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Bank WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Bank WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Bank         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Bank (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()                "
195,GetMarkTestCampaignResurl,"        CREATE FUNCTION [dbo].[GetMarkTestCampaignResurl]   (   @UserId int,   @RegistorId int  )  RETURNS  nvarchar(Max)  AS  BEGIN   -- Declare the return variable here(14168,288)   DECLARE  @Ketqua nvarchar(Max);   DECLARE  @TMP nvarchar(Max);   DECLARE @Types Int;   DECLARE @Count Int;   DECLARE @I Int;   DECLARE @DataPart  nvarchar(Max);   DECLARE @Const float;     SET @I=1;   SET @DataPart='';   Set @Const=-1     SET @Ketqua='';        set @Count=(select Count(id) from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@UserId and RegistorId=@RegistorId and Status=2 )     --loại lấy kết quả theo      Set @Types=(select top 1 ResultOption from AIElearning_TestCampaign_Registor where id=@RegistorId)        --max    if(@Types='3')    BEGIN    SET @I=1    WHILE (@I <= @Count)       BEGIN    --    if(@Const<=(select top 1 Mark FROM (SELECT  top(@I) Mark,id from AIElearning_TestCampaign_RegistorUserTest       where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId  order by id desc)A order by id asc))    begin    Set @Const=(select top 1 Mark FROM (SELECT  top(@I) Mark,id from AIElearning_TestCampaign_RegistorUserTest       where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId order by id desc)A order by id asc);    --    SET @DataPart=(select top 1 DataPart FROM (SELECT  top(@I) DataPart,id from AIElearning_TestCampaign_RegistorUserTest       where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId order by id desc)A order by id asc);    end    --set i++    SET @I = @I+1    --       END    END    --    --avg    if(@Types='2')    BEGIN    SET @I=1    WHILE (@I <= @Count)       BEGIN    Set @Const +=((select top 1 Mark FROM (SELECT  top(@I) Mark,id from AIElearning_TestCampaign_RegistorUserTest       where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId order by id desc)A order by id asc))      SET @I = @I+1    --       END    if(@Count>0)    SET @Const=(@Const+1)/@Count    END    --    --min    if(@Types='1')    BEGIN      Set @DataPart=(select top 1 DataPart FROM  AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId  order by id desc)       Set @Const=(select top 1 Mark from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@UserId and Status=2 and  RegistorId=@RegistorId  order by id desc)    --set i++    END    --    --kết quả    if(@Const<>-1)    SET @Ketqua=Concat(ROUND(@Const,1),';',@DataPart)      -- Return the result of the function   RETURN @Ketqua    END      "
196,AICDC_DataSync_Period_DeleteDate,"  create proc [dbo].[AICDC_DataSync_Period_DeleteDate]   @ngay datetime  as  DECLARE @condition nvarchar(max)   set @condition = 'where (1=1) '  IF CONVERT(datetime,@ngay ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime <= ''' + convert(nvarchar(23),@ngay,121) + ''''      exec('        delete  from AICDC_DataSync_Period '+@condition+'   delete from AICDC_DataSync_Action where PeriodCode not in (select PeriodCode from AICDC_DataSync_Period )   delete from AICDC_Log where PeriodCode not in (select PeriodCode from AICDC_DataSync_Period )  ')    SET QUOTED_IDENTIFIER OFF"
197,AIElearning_Certificate_Offline_User_DeleteCertificateId,"create proc  AIElearning_Certificate_Offline_User_DeleteCertificateId  @CertificateId int,  @Userid int  as  delete   AIElearning_Certificate_Offline_User where CertificateId = @CertificateId and UserId=@Userid"
198,CountUserProc,"CREATE PROCEDURE [dbo].[CountUserProc]   @Keyword nvarchar(250),  @classid int,  @GroupJobTileCode nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),  @JobTitlecode nvarchar(250),  @status int,  @limit int    AS  DECLARE @UserCount TABLE([countuser] INT)   BEGIN  DECLARE @Condition AS NVARCHAR(MAX);  DECLARE @Count AS NVARCHAR(MAX);  SET @Condition=' select COUNT(userId) from AISystem_UserInfo where (1=1)'  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' or Mastercode like N''%' + @Keyword + '%'' or Displayname like N''%' + @Keyword + '%'') '    IF(@GroupJobTileCode IS NOT NULL AND @GroupJobTileCode<>'')   set @condition = @condition +    ' And  (GroupJobTileCode= '''+ @GroupJobTileCode+''' )'    IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')  set @condition = @condition +    ' And  ( UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@classid > 0)   set @condition = @condition +    ' And (UserId in (select * from dbo.ClassUserGetClassId('+str(@classid)+'))) '     INSERT INTO @UserCount ([countuser])       EXEC sp_executesql @Condition;       SELECT * FROM @UserCount      RETURN     END"
199,AISystem_Category_Document_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_Document_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Document  SET    ChildId = @ChildId  WHERE Id = @Id      "
200,Journal_SplitText,"CREATE FUNCTION dbo.[Journal_SplitText](@text varchar(8000), @delimiter char(1))  RETURNS @words TABLE (objectid smallint primary key, string varchar(1000), optionalid int)  AS  BEGIN   DECLARE @pos smallint,    @i smallint,    @j smallint,    @s varchar(255),          @o int     SET @pos = 1     WHILE @pos <= LEN(@text)   BEGIN    SET @i = CHARINDEX(' ', @text, @pos)    SET @j = CHARINDEX(@delimiter, @text, @pos)      IF @i > 0 OR @j > 0    BEGIN     IF @i = 0 OR (@j > 0 AND @j < @i)      SET @i = @j       IF @i > @pos     BEGIN      -- @i now holds the earliest delimiter in the string      SET @s = SUBSTRING(@text, @pos, @i - @pos)      SET @o = 0               IF CHARINDEX('|',@s,0) > 0       BEGIN        SET @o = SUBSTRING(@s,0,CHARINDEX('|',@s,0))        SET @s = SUBSTRING(@s,CHARINDEX('|',@s,0)+1,LEN(@s))         END        IF NOT EXISTS (SELECT 1 FROM @words WHERE [string]=@s)      BEGIN       INSERT INTO @words       VALUES (@pos, @s, @o)      END     END       SET @pos = @i + 1     WHILE @pos < LEN(@text) AND SUBSTRING(@text, @pos, 1) IN (' ', ',')      SET @pos = @pos + 1    END    ELSE    BEGIN     SET @s = SUBSTRING(@text, @pos, LEN(@text) - @pos + 1)     IF CHARINDEX('|',@s,0) > 0     BEGIN      SET @o = SUBSTRING(@s,0,CHARINDEX('|',@s,0))      SET @s = SUBSTRING(@s,CHARINDEX('|',@s,0)+1,LEN(@s))       END       IF NOT EXISTS (SELECT 1 FROM @words WHERE [string]=@s)     BEGIN      INSERT INTO @words      VALUES (@pos, @s ,@o)     END       SET @pos = LEN(@text) + 1    END   END     RETURN  END"
201,AIElearning_ClassDocument_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_ClassDocument_GetsBySearchCount]   @ClassID int,  @IsContent INT,  @ParentType INT  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@ClassID >-1)   set @Condition=@Condition+' AND ClassId='+str(@ClassID)  if(@IsContent>-1)   set @Condition=@Condition+' AND IsContent='+str(@IsContent)  if(@ParentType >-1)   set @Condition=@Condition+' AND ParentType='+str(@ParentType)  exec('   SELECT count(*)   from AIElearning_ClassDocument where '+@Condition+'    ')  "
202,AIElearning_Exercise_Group_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Exercise_Group_GetsBySearchCount]  @ExerciseId int  as    select COUNT(*) from AIElearning_Exercise_Group where ExerciseId=@ExerciseId  
203,GetTabsByModuleID,"CREATE PROCEDURE dbo.[GetTabsByModuleID]   @ModuleID Int -- NOT Null  AS  BEGIN   SELECT * FROM dbo.[vw_Tabs] T   WHERE IsDeleted = 0     AND TabID IN (SELECT TabID FROM dbo.[TabModules]       WHERE ModuleID = @ModuleID AND IsDeleted = 0)   ORDER BY PortalId, Level, ParentID, TabOrder -- PortalId added for query optimization  END"
204,AISystem_UserInfo_GetsBlockUserCount,"CREATE proc [dbo].[AISystem_UserInfo_GetsBlockUserCount]  @keyword nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max)  as  -- AISystem_UserInfo_GetsBlockUserCount 'namnp','28',''  DECLARE @condition nvarchar(max)  set @condition = ' (m.IsLockedOut = 1) '    IF(@keyword IS NOT NULL AND @keyword<>'')    set @condition = @condition + ' and (ui.Username like N''%' + @keyword + '%'' or  ui.Mastercode like N''%' + @keyword + '%'') '  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  ( ui.Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   set @condition = @condition +    ' And  ( ui.UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'    exec('  WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY ui.Id desc) AS RowNumber, ui.*    FROM AISystem_UserInfo ui inner join aspnet_Users u on ui.Username = u.UserName    inner join aspnet_Membership m on u.UserId = m.UserId   WHERE ' + @condition +'    )     SELECT count(*)   FROM #AISystem_UserInfo  ')            "
205,DeleteSystemMessage,"create procedure dbo.DeleteSystemMessage    @PortalID     int,  @MessageName  nvarchar(50)    as    delete  from   dbo.SystemMessages  where  PortalID = @PortalID  and    MessageName = @MessageName"
206,AIElearning_Document_GetAviableMediaCount,"CREATE PROC [dbo].[AIElearning_Document_GetAviableMediaCount]   @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Format nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' where (1=1) '  if(@CategoryId>-1)   SET @Condition=@Condition+' and  Status =1 and  (Id not in (Select MediaId from AIElearning_Document where CategoryId ='+str(@CategoryId) + '))'  if(@Keyword<>'')   set @Condition=@Condition+' AND  Name like ''%'+@Keyword+'%'''  if(@CategoryId>-1)   set @Condition=@Condition+' AND CategoryId='+str(@CategoryId)  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)     if(@Format<>'')   set @Condition=@Condition+' AND  Content like ''%'+@Format+'%'''  exec('    SELECT count(*)   from AIElearning_Media '+@Condition+'')      "
207,AIElearning_ClassItem_UserScorm_GetByClassUserId,"CREATE PROC AIElearning_ClassItem_UserScorm_GetByClassUserId  @ClassUserId INT,  @ClassItemId INT  AS   SELECT * FROM  AIElearning_ClassItem_UserScorm WHERE ClassUserId=@ClassUserId and classItemid=@ClassItemId"
208,AISystem_LayoutUnit_Photo_DeleteAlbumId,create proc [dbo].[AISystem_LayoutUnit_Photo_DeleteAlbumId]  @albumid int  as  delete from AISystem_LayoutUnit_Photo where LayoutUnitAlbumId=@albumid  
209,AISystem_Category_Bank_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_Bank_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_Bank    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo              "
210,AddPackage,"CREATE PROCEDURE [dbo].[AddPackage]   @PortalID   int,   @Name       nvarchar(128),   @FriendlyName     nvarchar(250),   @Description     nvarchar(2000),   @PackageType     nvarchar(50),   @Version      nvarchar(50),   @License      ntext,   @Manifest      ntext,   @Owner    nvarchar(100),   @Organization  nvarchar(100),   @Url    nvarchar(250),   @Email    nvarchar(100),   @ReleaseNotes     ntext,   @IsSystemPackage    bit,   @CreatedByUserID int,   @FolderName   nvarchar(127),   @IconFile   nvarchar(100)  AS   INSERT INTO dbo.Packages   (    PortalID,    [Name],    FriendlyName,    [Description],    PackageType,    Version,    License,    Manifest,    ReleaseNotes,    [Owner],    Organization,    Url,    Email,    IsSystemPackage,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate],    FolderName,    IconFile   )   VALUES (    @PortalID,    @FriendlyName,    @FriendlyName,    @Description,    @PackageType,    @Version,    @License,    @Manifest,    @ReleaseNotes,    @Owner,    @Organization,    @Url,    @Email,    @IsSystemPackage,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate(),    @FolderName,    @IconFile   )   SELECT SCOPE_IDENTITY()"
211,AIElearning_TestCampaign_RegistorUserTest_ReportCampaignIdCount,create proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_ReportCampaignIdCount]   @CampaignId int  as  --[dbo].[AIElearning_TestCampaign_RegistorUserTest_ReportCampaignId] 35  select Count(ru.Id)   from AIElearning_TestCampaign_RegistorUser  ru  left join AIElearning_TestCampaign_Registor r  on ru.RegistorId=r.id   left join AIElearning_TestForm tf on r.TestFormId=tf.Id     left join AISystem_UserInfo u on u.UserId=ru.UserId    left join AISystem_Category_Unit su on su.Code=u.UnitCode  left join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where ru.CampaignId=@CampaignId     SET ANSI_NULLS ON    
212,AIElearning_Class_MarkOffLine_GetInfoByParam,"CREATE proc [dbo].[AIElearning_Class_MarkOffLine_GetInfoByParam]    @MarkCodeId int,  @UserName nvarchar(150)  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '      IF(@MarkCodeId > 0)   set @condition = @condition +    ' And  (MarkCodeId= '+ STR(@MarkCodeId)+' )'  IF(@UserName IS NOT NULL AND @UserName<>'')   set @condition = @condition + ' and UserName = ''' + @UserName + ''''    exec('   SELECT top(1) *   FROM            AIElearning_Class_MarkOffLine    where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF   "
213,AIElearning_Certificate_Offline_User_Report,"create proc AIElearning_Certificate_Offline_User_Report   @ClassId int  as  select u.Username [Taikhoan],us.Displayname [HoTen],unit.Title [Donvi],jb.Title [Chucdanh],  o.Number [Sochungchi]   from AIElearning_ClassUser u  left join AIElearning_Certificate_Offline_User o  on u.UserId=o.UserId  inner join AISystem_UserInfo us  on us.Username=u.Username  left join AISystem_Category_Unit unit  on unit.Code=us.unitcode  left join AISystem_JobTitle_Title jb  on jb.Code=us.JobTitleCode   where u.ClassId=@ClassId"
214,AISystem_CompanyCode_GetInfoByCode,CREATE proc [dbo].[AISystem_CompanyCode_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_CompanyCode_GetInfoByCode 'aivietnam'  Select top(1) * from AISystem_CompanyCode where   Code = @Code  SET QUOTED_IDENTIFIER OFF
215,AIElearning_ClassItem_GetsByClassId,"CREATE PROC [dbo].[AIElearning_ClassItem_GetsByClassId]   @ClassId INT,  @ParentId INT,  @ParentType int  AS   -- AIElearning_ClassItem_GetsByClassId 30,-1  SELECT  *  FROM  AIElearning_ClassItem WHERE ClassId = @ClassId AND ParentId = @ParentId AND ParentType = @ParentType    "
216,AIElearning_TestCampaign_GetByPrimaryCategoryId,"CREATE PROC [dbo].[AIElearning_TestCampaign_GetByPrimaryCategoryId]  @CategoryId int,  @KeyWord nvarchar(250),  @IsSearch int,  @strUnitCode nvarchar(max),  @Participants int  AS   -- AIElearning_TestCampaign_GetByPrimaryCategoryId 1, '', 0, '-1', 1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')    set @condition = @condition + ' and (t.UnitCode =''' + @strUnitCode + ''')'  if(@Participants>0)   set @condition = @condition + ' and (t.Participants = ' + str(@Participants) + ' or t.Participants = 3) '  IF(@CategoryId>0)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId= ChildId from AISystem_Category_Campaign where Id=@CategoryId   set @condition = @condition +  ' and t.Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in ('+@ChildId+'))'  end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        SELECT count(t.Id)         from  AIElearning_TestCampaign AS t          INNER JOIN          CONTAINSTABLE(AIElearning_TestCampaign,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=t.Id            where ' + @Condition + ' and t.Status = 1      ')     end    ELSE     Begin      exec('        SELECT count(t.Id)         from  AIElearning_TestCampaign AS t          INNER JOIN          FREETEXTTABLE(AIElearning_TestCampaign,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=t.Id            where ' + @Condition + ' and t.Status = 1      ')     end   end  ELSE   BEGIN    exec('     SELECT COUNT(t.Id)     from  AIElearning_TestCampaign AS t       where ' + @Condition + ' and t.Status = 1     ')   end    SET QUOTED_IDENTIFIER OFF  "
217,UpdateScopeType,"CREATE PROCEDURE dbo.[UpdateScopeType]    @ScopeTypeId    int,   @ScopeType     nvarchar(250)  AS   UPDATE dbo.Taxonomy_ScopeTypes     SET      ScopeType = @ScopeType   WHERE ScopeTypeId = @ScopeTypeId"
218,AIElearning_Class_MarkOffLine_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Class_MarkOffLine_GetsBySearchCount]  @key nvarchar(250),  @Codeid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@key<>'')  set @Condition=@Condition+' AND (c.Displayname LIKE N''%'+@key+'%'' or c.UserName LIKE N''%'+@key+'%'' or i.Mastercode LIKE N''%'+@key+'%'' )'  if(@Codeid>-1)  set @Condition=@Condition+' AND MarkCodeId='+str(@Codeid)    exec('select COUNT(*) from AIElearning_Class_MarkOffLine c inner join  AISystem_UserInfo i on i.UserName = c.UserName '+@Condition)    SET QUOTED_IDENTIFIER OFF     "
219,AISystem_UserInfo_GetsBlockUser,"CREATE proc [dbo].[AISystem_UserInfo_GetsBlockUser]  @pageIndex int,  @pageSize int,  @keyword nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max)  as  -- AISystem_UserInfo_GetsBlockUser 1,10,'namnp','28',''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (m.IsLockedOut = 1) '    IF(@keyword IS NOT NULL AND @keyword<>'')    set @condition = @condition + ' and (ui.Username like N''%' + @keyword + '%'' or  ui.Mastercode like N''%' + @keyword + '%'') '  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  ( ui.Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   set @condition = @condition +    ' And  ( ui.UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'    exec('  WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY ui.Id desc) AS RowNumber, ui.*    FROM AISystem_UserInfo ui inner join aspnet_Users u on ui.Username = u.UserName    inner join aspnet_Membership m on u.UserId = m.UserId   WHERE ' + @condition +'     )     SELECT *   FROM #AISystem_UserInfo   WHERE RowNumber between '+ @start +'  and  '+ @end +'   ')      "
220,AIElearning_Document_GetAviableMedia,"CREATE PROC [dbo].[AIElearning_Document_GetAviableMedia]   @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Format nvarchar(50)  as  -- AISystem_Document_GetAviableMedia 1,10,'',-1,4  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' where (1=1) '  if(@CategoryId>-1)   SET @Condition = @Condition +' and  Status =1 and  (Id not in (Select MediaId from AIElearning_Document where CategoryId ='+str(@CategoryId) + '))'  if(@Keyword<>'')   set @Condition=@Condition+' AND Name like ''%'+@Keyword+'%'''  if(@CategoryId<>-1)   set @Condition=@Condition+' AND CategoryId='+str(@CategoryId)  if(@Type<>-1)   set @Condition=@Condition+' AND Type='+str(@Type)   if(@Format<>'')   set @Condition=@Condition+' AND  Content like ''%'+@Format+'%'''  exec('  WITH #AIElearning_Media AS(    SELECT ROW_NUMBER() OVER (ORDER BY ID DESC) AS RowNumber, *   from AIElearning_Media  '+@Condition+')   SELECT *   FROM #AIElearning_Media   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
221,GetDesktopModulePermissionsByPortalDesktopModuleID,CREATE PROCEDURE dbo.[GetDesktopModulePermissionsByPortalDesktopModuleID]   @PortalDesktopModuleID int  AS      SELECT *      FROM dbo.vw_DesktopModulePermissions   WHERE   PortalDesktopModuleID = @PortalDesktopModuleID
222,AIElearning_GetTestCampaignUseridCount,create proc [dbo].[AIElearning_GetTestCampaignUseridCount]  @Userid int  as  select count(*) from AIElearning_TestCampaign where id  in(select distinct TestCampaignId from AIElearning_TestCampaign_Registor where id in (select TestRegistorId from AIElearning_TestCampaign_Registor_Staff where Userid=@Userid))  
223,AISystem_Category_Bank_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_Bank_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_Bank_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Bank.Id,      0,      AISystem_Category_Bank.ParentId,      AISystem_Category_Bank.Title,      STR(AISystem_Category_Bank.OrderNo),      AISystem_Category_Bank.Title,      AISystem_Category_Bank.Code          FROM      AISystem_Category_Bank    WHERE      (AISystem_Category_Bank.Status=@Status OR @Status = -1)       AND (AISystem_Category_Bank.Id = @ParentId)      AND AISystem_Category_Bank.LanguageId = @LanguageId      AND AISystem_Category_Bank.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Bank.Id,      0,      AISystem_Category_Bank.ParentId,      AISystem_Category_Bank.Title,      STR(AISystem_Category_Bank.OrderNo),      AISystem_Category_Bank.Title,      AISystem_Category_Bank.Code          FROM      AISystem_Category_Bank    WHERE      (AISystem_Category_Bank.Status=@Status OR @Status = -1)       AND (AISystem_Category_Bank.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Bank.ParentId IS NULL or AISystem_Category_Bank.ParentId <=0))      AND AISystem_Category_Bank.LanguageId = @LanguageId      AND AISystem_Category_Bank.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_Bank  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction                    "
224,CoreMessaging_DeleteLegacyMessage,CREATE PROCEDURE dbo.[CoreMessaging_DeleteLegacyMessage]      @MessageID int  AS   DELETE FROM dbo.Messaging_Messages   WHERE  [MessageID] = @MessageID
225,AddPortalLanguage,"CREATE PROCEDURE dbo.[AddPortalLanguage]      @PortalId   int,      @LanguageId   int,      @IsPublished  bit,      @CreatedByUserID int    AS      DECLARE @PortalLanguageId INT      DECLARE @CultureCode NVARCHAR(50)        INSERT INTO dbo.PortalLanguages (          PortalId,          LanguageId,          IsPublished,          [CreatedByUserID],          [CreatedOnDate],          [LastModifiedByUserID],          [LastModifiedOnDate]      )      VALUES (          @PortalId,          @LanguageId,          @IsPublished,          @CreatedByUserID,          getdate(),          @CreatedByUserID,          getdate()      )        SELECT @PortalLanguageId = SCOPE_IDENTITY()     SELECT @CultureCode = CultureCode FROM dbo.Languages WHERE LanguageID = @LanguageId        SELECT @PortalLanguageId     EXEC dbo.EnsureLocalizationExists @PortalID = @PortalId, @CultureCode = @CultureCode"
226,AISystem_CompanyCode_GetsBySearch,"CREATE proc [dbo].[AISystem_CompanyCode_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Unitcode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      IF ( @Keyword IS NOT NULL AND @Keyword <> ''  )  set @Condition=@Condition+' AND  (Name LIKE N''%'+@Keyword+'%''  or Code LIKE N''%'+@Keyword+'%'' or CompanyCode LIKE N''%'+@Keyword+'%'' )'  if(@Unitcode<>'-1')  set @Condition=@Condition+' AND UnitCode='''+@Unitcode+''''      exec('    WITH #AISystem_CompanyCode AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_CompanyCode  '+@Condition+'       )         SELECT     *   FROM #AISystem_CompanyCode   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
227,AISystem_Category_Subject_ChildrenByParentId,"CREATE PROCEDURE [dbo].[AISystem_Category_Subject_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_Subject    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo      "
228,AddPermission,"CREATE PROCEDURE dbo.AddPermission   @ModuleDefID  int,   @PermissionCode  varchar(50),   @PermissionKey  varchar(50),   @PermissionName  varchar(50),   @CreatedByUserID int  AS    INSERT INTO dbo.Permission (   [ModuleDefID],   [PermissionCode],   [PermissionKey],   [PermissionName],   [CreatedByUserID],   [CreatedOnDate],   [LastModifiedByUserID],   [LastModifiedOnDate]  ) VALUES (   @ModuleDefID,   @PermissionCode,   @PermissionKey,   @PermissionName,   @CreatedByUserID,   getdate(),   @CreatedByUserID,   getdate()  )    select SCOPE_IDENTITY()"
229,GetFoldersByPermissions,"CREATE PROCEDURE dbo.[GetFoldersByPermissions]    @PortalID int,   @Permissions nvarchar(300),   @UserID int,   @FolderID int,   @FolderPath nvarchar(300)    AS   DECLARE @IsSuperUser BIT   DECLARE @Admin BIT   DECLARE @Read INT   DECLARE @Write INT   DECLARE @Browse INT   DECLARE @Add INT     --Determine Admin or SuperUser   IF @UserId IN (    SELECT UserId     FROM dbo.[UserRoles]     WHERE RoleId IN (     SELECT RoleId      FROM dbo.[Roles]      WHERE PortalId = @PortalId      AND RoleName = 'Administrators'))    BEGIN     SET @Admin = 1    END;      SELECT @IsSuperUser = IsSuperUser    FROM dbo.[Users]    WHERE UserId = @UserId;     --Retrieve Permission Ids   IF @Permissions LIKE '%READ%' BEGIN SELECT TOP 1 @Read = PermissionID FROM dbo.[Permission] WHERE PermissionCode = 'SYSTEM_FOLDER' AND PermissionKey = 'READ' END;   IF @Permissions LIKE '%WRITE%' BEGIN SELECT TOP 1 @Write = PermissionID FROM dbo.[Permission] WHERE PermissionCode = 'SYSTEM_FOLDER' AND PermissionKey = 'WRITE' END;   IF @Permissions LIKE '%BROWSE%' BEGIN SELECT TOP 1 @Browse = PermissionID FROM dbo.[Permission] WHERE PermissionCode = 'SYSTEM_FOLDER' AND PermissionKey = 'BROWSE' END;   IF @Permissions LIKE '%ADD%' BEGIN SELECT TOP 1 @Add = PermissionID FROM dbo.[Permission] WHERE PermissionCode = 'SYSTEM_FOLDER' AND PermissionKey = 'ADD' END;     IF @PortalID IS NULL    BEGIN     SELECT DISTINCT F.*     FROM dbo.[Folders] F     WHERE F.PortalID IS NULL      AND (F.FolderID = @FolderID OR @FolderID = -1)      AND (F.FolderPath = @FolderPath OR @FolderPath = '')            ORDER BY F.FolderPath    END   ELSE    BEGIN     CREATE TABLE #Skip_Folders(folderid INT PRIMARY KEY(folderid))     INSERT INTO #Skip_Folders       SELECT DISTINCT folderid FROM dbo.[FolderPermission] FP           JOIN dbo.[Permission] P ON FP.PermissionID = P.PermissionID           WHERE            ((P.PermissionKey = 'WRITE' OR @IsSuperUser=1 OR @Admin=1) OR            FP.PermissionID = CASE WHEN @Read > 0 THEN @Read END OR            FP.PermissionID = CASE WHEN @Write > 0 THEN @Write END OR            FP.PermissionID = CASE WHEN @Browse > 0 THEN @Browse END OR            FP.PermissionID = CASE WHEN @Add > 0 THEN @Add END)            AND FP.FolderID NOT IN (SELECT DISTINCT folderid FROM dbo.[FolderPermission] WHERE allowaccess=0 AND (userid=@UserId OR roleid=-1 OR roleid IN (SELECT roleid FROM dbo.[UserRoles] WHERE UserID=@UserId)))         SELECT DISTINCT F.*     FROM dbo.[Folders] F      JOIN dbo.[FolderPermission] FP ON F.FolderId = FP.FolderID      JOIN dbo.[Permission] P ON FP.PermissionID = P.PermissionID      JOIN #Skip_Folders sf ON sf.folderid=f.folderid      WHERE ((F.PortalID = @PortalID) OR (F.PortalID IS NULL AND @PortalID IS NULL))      AND (F.FolderID = @FolderID OR @FolderID = -1)      AND (F.FolderPath = @FolderPath OR @FolderPath = '')      AND        ((P.PermissionKey = 'WRITE' OR @IsSuperUser=1 OR @Admin=1) OR        FP.PermissionID = CASE WHEN @Read > 0 THEN @Read END OR        FP.PermissionID = CASE WHEN @Write > 0 THEN @Write END OR        FP.PermissionID = CASE WHEN @Browse > 0 THEN @Browse END OR        FP.PermissionID = CASE WHEN @Add > 0 THEN @Add END)      AND FP.AllowAccess = 1      ORDER BY F.FolderPath        DROP TABLE #Skip_Folders    END"
230,AIElearning_Class_MarkOffLine_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Class_MarkOffLine_GetsBySearch]  @pageIndex int,  @pageSize int,  @key nvarchar(250),  @Codeid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@key<>'')  set @Condition=@Condition+' AND (c.Displayname LIKE N''%'+@key+'%'' or c.UserName LIKE N''%'+@key+'%'' or i.Mastercode LIKE N''%'+@key+'%'' )'  if(@Codeid>-1)  set @Condition=@Condition+' AND MarkCodeId='+str(@Codeid)  exec('    WITH #AIElearning_Class_MarkOffLine AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.UserName,c.id,c.point,i.Displayname     from AIElearning_Class_MarkOffLine c inner join  AISystem_UserInfo i on i.UserName = c.UserName '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class_MarkOffLine   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
231,GetRelationship,"CREATE PROCEDURE dbo.[GetRelationship] @RelationshipID INT  AS       SELECT  RelationshipID,              RelationshipTypeID,                          Name,                          Description,              UserID,              PortalID,              DefaultResponse,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.Relationships       WHERE RelationshipID = @RelationshipID   ORDER BY RelationshipID ASC"
232,PersonaBar_DeletePersonaBarMenuByIdentifier,CREATE PROCEDURE dbo.[PersonaBar_DeletePersonaBarMenuByIdentifier]     @Identifier  NVARCHAR(50) AS     DELETE p FROM dbo.[PersonaBarPermission] p         INNER JOIN dbo.[PersonaBarMenu] m ON m.MenuId = p.MenuId         WHERE m.Identifier = @Identifier      DELETE FROM dbo.[PersonaBarMenu]         WHERE Identifier = @Identifier
233,AISystem_UserInfo_GetsByIsSynCount,CREATE proc [dbo].[AISystem_UserInfo_GetsByIsSynCount]   @IsSyn int  as  -- AISystem_UserInfo_GetsByIsSynCount 0  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@IsSyn > -1)   set @condition = @condition +    ' And  (tblUser.IsSyn= '+ STR(@IsSyn)+' )'    exec('   select COUNT(*) from AISystem_UserInfo as tblUser where ' + @condition +' and tblUser.Status=1  ')    
234,AIElearning_TestFormGen_CountByTestId,  CREATE PROC AIElearning_TestFormGen_CountByTestId  @TestId INT  AS  select COUNT(ID) from AIElearning_TestFormGen where TestId=@TestId
235,AIElearning_Document_GetsBySearchCount,"CREATE PROC [dbo].[AIElearning_Document_GetsBySearchCount]   @UnitCode nvarchar(50),  @CategoryId int,  @ObjectAccess int,  @Status int,  @Keyword nvarchar(250)  as  -- [AIElearning_Document_GetsBySearchCount] '-1',-1,-1,-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  ---- Tao bang tam  --CREATE TABLE #AIDocument(  -- [Id] [int],  -- [Name] [nvarchar](450) ,  -- [Code] [nvarchar](50),  -- [Type] [int] ,  -- [CategoryId] [int] ,  -- [Content] [nvarchar](max) ,  -- [Description] [nvarchar](max) ,  -- [Status] [int] ,  -- [CreatedUser] [nvarchar](150) ,  -- [CreatedDate] [datetime] ,  -- [VideoDuration] [time](7) ,  -- [MediaId] [int],  -- [FileName] [nvarchar](250),  -- [ObjectAccess] [int],  -- [UnitEditor] [nvarchar](250),  -- [ReleaseDate] [datetime],  -- [Keyword] [nvarchar](max),  -- [OrderNo] [int])  --INSERT INTO #AIDocument  --SELECT *  --FROM AIElearning_Document where [MediaId] = -1    --INSERT INTO #AIDocument  -- SELECT c.Id, m.Name, c.Code,  -- c.Type, c.CategoryId, m.Content, m.Description, m.Status, m.CreatedUser, m.CreatedDate, m.VideoDuration, c.MediaId, c.FileName, c.ObjectAccess, c.UnitEditor, c.ReleaseDate, c.Keyword  -- FROM AIElearning_Document c inner join AIElearning_Media m on c.MediaId = m.Id where c.MediaId <> -1    IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'' or Code like N''%' + @Keyword + '%'') '  if(@CategoryId<>-1)   set @Condition = @Condition+' AND CategoryId='+str(@CategoryId)  --if(@UnitCode <> '')  -- set @Condition = @Condition+' AND UnitCode='''+@UnitCode+''''  if(@ObjectAccess<>-1)   set @Condition = @Condition+' AND ObjectAccess='+str(@ObjectAccess)  if(@Status<>-1)   set @Condition = @Condition+' AND Status='+str(@Status)  exec('   SELECT count(*)   from AIElearning_Document where '+@Condition+'    ')"
236,AISystem_Level_CheckCode,CREATE proc [dbo].[AISystem_Level_CheckCode]   @code nvarchar(50)  as  begin  select count(*)   from AISystem_Level   where Code =@code  end  
237,AISystem_Category_Bank_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_Bank_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_Bank_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Bank AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')                "
238,AddDefaultFolderTypes,"CREATE PROCEDURE dbo.[AddDefaultFolderTypes]   @PortalID int  AS  BEGIN   INSERT INTO dbo.[FolderMappings] (PortalID, MappingName, FolderProviderType, Priority)   SELECT @PortalID, 'Standard', 'StandardFolderProvider', 1   UNION ALL   SELECT @PortalID, 'Secure', 'SecureFolderProvider', 2   UNION ALL   SELECT @PortalID, 'Database', 'DatabaseFolderProvider', 3  END"
239,GetHostSettings,"CREATE PROCEDURE dbo.[GetHostSettings]  AS  BEGIN   SELECT SettingName,       CASE WHEN Lower(SettingValue) Like N'fileid=%'            THEN dbo.[FilePath](SettingValue)            ELSE SettingValue        END   AS SettingValue,       SettingIsSecure,       CreatedByUserID,       CreatedOnDate,          LastModifiedByUserID,       LastModifiedOnDate    FROM  dbo.[HostSettings];  END; -- Procedure"
240,aspnet_Membership_CreateUser,"CREATE PROCEDURE dbo.aspnet_Membership_CreateUser      @ApplicationName                        nvarchar(256),      @UserName                               nvarchar(256),      @Password                               nvarchar(128),      @PasswordSalt                           nvarchar(128),      @Email                                  nvarchar(256),      @PasswordQuestion                       nvarchar(256),      @PasswordAnswer                         nvarchar(128),      @IsApproved                             bit,      @CurrentTimeUtc                         datetime,      @CreateDate                             datetime = NULL,      @UniqueEmail                            int      = 0,      @PasswordFormat                         int      = 0,      @UserId                                 uniqueidentifier OUTPUT  AS  BEGIN      DECLARE @ApplicationId uniqueidentifier      SELECT  @ApplicationId = NULL        DECLARE @NewUserId uniqueidentifier      SELECT @NewUserId = NULL        DECLARE @IsLockedOut bit      SET @IsLockedOut = 0        DECLARE @LastLockoutDate  datetime      SET @LastLockoutDate = CONVERT( datetime, '17540101', 112 )        DECLARE @FailedPasswordAttemptCount int      SET @FailedPasswordAttemptCount = 0        DECLARE @FailedPasswordAttemptWindowStart  datetime      SET @FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 )        DECLARE @FailedPasswordAnswerAttemptCount int      SET @FailedPasswordAnswerAttemptCount = 0        DECLARE @FailedPasswordAnswerAttemptWindowStart  datetime      SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )        DECLARE @NewUserCreated bit      DECLARE @ReturnValue   int      SET @ReturnValue = 0        DECLARE @ErrorCode     int      SET @ErrorCode = 0        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE       SET @TranStarted = 0        EXEC dbo.aspnet_Applications_CreateApplication @ApplicationName, @ApplicationId OUTPUT        IF( @@ERROR <> 0 )      BEGIN          SET @ErrorCode = -1          GOTO Cleanup      END        SET @CreateDate = @CurrentTimeUtc        SELECT  @NewUserId = UserId FROM dbo.aspnet_Users WHERE LOWER(@UserName) = LoweredUserName AND @ApplicationId = ApplicationId      IF ( @NewUserId IS NULL )      BEGIN          SET @NewUserId = @UserId          EXEC @ReturnValue = dbo.aspnet_Users_CreateUser @ApplicationId, @UserName, 0, @CreateDate, @NewUserId OUTPUT          SET @NewUserCreated = 1      END      ELSE      BEGIN          SET @NewUserCreated = 0          IF( @NewUserId <> @UserId AND @UserId IS NOT NULL )          BEGIN              SET @ErrorCode = 6              GOTO Cleanup          END      END        IF( @@ERROR <> 0 )      BEGIN          SET @ErrorCode = -1          GOTO Cleanup      END        IF( @ReturnValue = -1 )      BEGIN          SET @ErrorCode = 10          GOTO Cleanup      END        IF ( EXISTS ( SELECT UserId                    FROM   dbo.aspnet_Membership                    WHERE  @NewUserId = UserId ) )      BEGIN          SET @ErrorCode = 6          GOTO Cleanup      END        SET @UserId = @NewUserId        IF (@UniqueEmail = 1)      BEGIN          IF (EXISTS (SELECT *                      FROM  dbo.aspnet_Membership m WITH ( UPDLOCK, HOLDLOCK )                      WHERE ApplicationId = @ApplicationId AND LoweredEmail = LOWER(@Email)))          BEGIN              SET @ErrorCode = 7              GOTO Cleanup          END      END        IF (@NewUserCreated = 0)      BEGIN          UPDATE dbo.aspnet_Users          SET    LastActivityDate = @CreateDate          WHERE  @UserId = UserId          IF( @@ERROR <> 0 )          BEGIN              SET @ErrorCode = -1              GOTO Cleanup          END      END        INSERT INTO dbo.aspnet_Membership                  ( ApplicationId,                    UserId,                    Password,                    Passwo"
241,aspnet_Membership_CreateUser,"rdSalt,                    Email,                    LoweredEmail,                    PasswordQuestion,                    PasswordAnswer,                    PasswordFormat,                    IsApproved,                    IsLockedOut,                    CreateDate,                    LastLoginDate,                    LastPasswordChangedDate,                    LastLockoutDate,                    FailedPasswordAttemptCount,                    FailedPasswordAttemptWindowStart,                    FailedPasswordAnswerAttemptCount,                    FailedPasswordAnswerAttemptWindowStart )           VALUES ( @ApplicationId,                    @UserId,                    @Password,                    @PasswordSalt,                    @Email,                    LOWER(@Email),                    @PasswordQuestion,                    @PasswordAnswer,                    @PasswordFormat,                    @IsApproved,                    @IsLockedOut,                    @CreateDate,                    @CreateDate,                    @CreateDate,                    @LastLockoutDate,                    @FailedPasswordAttemptCount,                    @FailedPasswordAttemptWindowStart,                    @FailedPasswordAnswerAttemptCount,                    @FailedPasswordAnswerAttemptWindowStart )        IF( @@ERROR <> 0 )      BEGIN          SET @ErrorCode = -1          GOTO Cleanup      END        IF( @TranStarted = 1 )      BEGIN       SET @TranStarted = 0       COMMIT TRANSACTION      END        RETURN 0    Cleanup:        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN @ErrorCode    END"
242,AIElearning_ClassItem_GetChildrenByParentIdTypeCount,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetChildrenByParentIdTypeCount]  @ClassId int,  @type INT,  @parentType int  AS  SELECT count(id) FROM AIElearning_ClassItem   WHERE  ClassId = @ClassId And Type=@type AND ParentType = @parentType       "
243,AISystem_Category_Document_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_Document_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @objectUser int  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Document WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Document WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Document WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Document WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Document WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Document         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Document SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [ObjectUse] = @objectUser  WHERE   [Id] = @Id    DEALLOCATE TempCur      "
244,SearchDeletedItems_Select,CREATE PROCEDURE dbo.[SearchDeletedItems_Select]      @CutoffTime DATETIME  AS  BEGIN   SELECT document   FROM dbo.SearchDeletedItems   WHERE [DateCreated] < @CutoffTime   ORDER BY [DateCreated]  END
245,AIElearning_Class_MarkOffLine_Code_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Class_MarkOffLine_Code_GetsBySearchCount]  @ClassId int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +  ' And  (ClassId = '+ STR(@ClassId)+' )'    exec('   select COUNT(*) from AIElearning_Class_MarkOffLine_Code where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF   
246,AISystem_UserPermissionScope_GetInfoByParam,"create PROC  [dbo].[AISystem_UserPermissionScope_GetInfoByParam]  @UserId INT,  @DNNRoleId INT,  @ScopeCode NVARCHAR(500)  AS  select top(1) * FROM AISystem_UserPermissionScope WHERE UserId=@UserId AND DNNRoleId=@DNNRoleId and ScopeCode = @ScopeCode  "
247,vw_PortalsDefaultLanguage,CREATE VIEW dbo.[vw_PortalsDefaultLanguage]  AS      SELECT * FROM dbo.[vw_Portals] WHERE CultureCode = DefaultLanguage
248,AIElearning_ClassCategory_GetByClassId,CREATE proc [dbo].[AIElearning_ClassCategory_GetByClassId]   @ClassId int  as      SELECT  * from AIElearning_ClassCategory  where ClassId=@ClassId  
249,AISystem_UserInfo_GetsByIsSyn,"CREATE proc [dbo].[AISystem_UserInfo_GetsByIsSyn]  @pageIndex int,  @pageSize int,  @IsSyn int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@IsSyn > -1)   set @condition = @condition +    ' And  (tblUser.IsSyn= '+ STR(@IsSyn)+' )'    exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_UserInfo as tblUser     where ' + @condition +'  and tblUser.Status=1    )         SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
250,DeletePortalAlias,CREATE procedure dbo.DeletePortalAlias  @PortalAliasID int    as    DELETE FROM dbo.PortalAlias   WHERE PortalAliasID = @PortalAliasID
251,CoreMessaging_AddSubscriptionType,"CREATE PROCEDURE dbo.[CoreMessaging_AddSubscriptionType]   @SubscriptionName NVARCHAR(50) ,   @FriendlyName NVARCHAR(50) ,   @DesktopModuleId INT  AS    INSERT  dbo.CoreMessaging_SubscriptionTypes     ( SubscriptionName ,       FriendlyName ,       DesktopModuleId     )   VALUES  ( @SubscriptionName ,       @FriendlyName ,       @DesktopModuleId      )   SELECT  SCOPE_IDENTITY()"
252,AIElearning_Document_GetsBySearch,"CREATE PROC [dbo].[AIElearning_Document_GetsBySearch]   @pageIndex int,  @pageSize int,  @UnitCode nvarchar(50),  @CategoryId int,  @ObjectAccess int,  @Status int,  @Keyword nvarchar(250)  as  -- AIElearning_Document_GetsBySearch 1,10,'',-1, -1,  1, ''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  ---- Tao bang tam  --CREATE TABLE #AIDocument(  -- [Id] [int],  -- [Name] [nvarchar](450) ,  -- [Code] [nvarchar](50),  -- [Type] [int] ,  -- [CategoryId] [int] ,  -- [Content] [nvarchar](max) ,  -- [Description] [nvarchar](max) ,  -- [Status] [int] ,  -- [CreatedUser] [nvarchar](150) ,  -- [CreatedDate] [datetime] ,  -- [VideoDuration] [time](7) ,  -- [MediaId] [int],  -- [FileName] [nvarchar](250),  -- [ObjectAccess] [int],  -- [UnitEditor] [nvarchar](250),  -- [ReleaseDate] [datetime],  -- [Keyword] [nvarchar](max) )  --INSERT INTO #AIDocument  -- SELECT *  -- FROM AIElearning_Document where [MediaId] = -1    --INSERT INTO #AIDocument  -- SELECT c.Id, m.Name, c.Code,  -- c.Type, c.CategoryId, m.Content, m.Description, m.Status, m.CreatedUser, m.CreatedDate, m.VideoDuration, c.MediaId, c.FileName, c.ObjectAccess, c.UnitEditor, c.ReleaseDate, c.Keyword  -- FROM AIElearning_Document c inner join AIElearning_Media m on c.MediaId = m.Id where c.MediaId <> -1    IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'' or Code like N''%' + @Keyword + '%'') '  if(@CategoryId<>-1)   set @Condition = @Condition+' AND CategoryId='+str(@CategoryId)  --if(@UnitCode<> '')  -- set @Condition = @Condition+' AND UnitCode='''+@UnitCode+''''  if(@ObjectAccess<>-1)   set @Condition = @Condition+' AND ObjectAccess='+str(@ObjectAccess)    if(@Status<>-1)   set @Condition = @Condition+' AND Status='+str(@Status)  exec('     WITH #AIElearning_Document AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo DESC) AS RowNumber, *   FROM AIElearning_Document where '+@Condition+'       )       SELECT     *   FROM #AIElearning_Document   where RowNumber between '+ @start +'  and  '+ @end +'     ')"
253,AIElearning_Certificate_GetsUserIdCount,"create proc [dbo].[AIElearning_Certificate_GetsUserIdCount]  @UserId int,  @CertificateId int  as  select count(*) from AIElearning_Certificate_User where UserId=@UserId and CertificateId=@CertificateId  "
254,AISystem_Category_Bank_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_Bank_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Bank_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Bank where   Code = @Code  SET QUOTED_IDENTIFIER OFF               
255,GetHostSetting,CREATE PROCEDURE dbo.[GetHostSetting]      @SettingName nvarchar(50)  AS  BEGIN      SELECT CASE WHEN Lower(SettingValue) Like N'fileid=%'            THEN dbo.[FilePath](SettingValue)            ELSE SettingValue        END   AS SettingValue       FROM  dbo.[HostSettings]       WHERE SettingName = @SettingName;  END; -- Procedure
256,aspnet_Membership_GetUserByName,"CREATE PROCEDURE dbo.aspnet_Membership_GetUserByName      @ApplicationName      nvarchar(256),      @UserName             nvarchar(256),      @CurrentTimeUtc       datetime,      @UpdateLastActivity   bit = 0  AS  BEGIN      DECLARE @UserId uniqueidentifier        IF (@UpdateLastActivity = 1)      BEGIN          -- select user ID from aspnet_users table          SELECT TOP 1 @UserId = u.UserId          FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE    LOWER(@ApplicationName) = a.LoweredApplicationName AND                  u.ApplicationId = a.ApplicationId    AND                  LOWER(@UserName) = u.LoweredUserName AND u.UserId = m.UserId            IF (@@ROWCOUNT = 0) -- Username not found              RETURN -1            UPDATE   dbo.aspnet_Users          SET      LastActivityDate = @CurrentTimeUtc          WHERE    @UserId = UserId            SELECT m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,                  m.CreateDate, m.LastLoginDate, u.LastActivityDate, m.LastPasswordChangedDate,                  u.UserId, m.IsLockedOut, m.LastLockoutDate          FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE  @UserId = u.UserId AND u.UserId = m.UserId       END      ELSE      BEGIN          SELECT TOP 1 m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,                  m.CreateDate, m.LastLoginDate, u.LastActivityDate, m.LastPasswordChangedDate,                  u.UserId, m.IsLockedOut,m.LastLockoutDate          FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE    LOWER(@ApplicationName) = a.LoweredApplicationName AND                  u.ApplicationId = a.ApplicationId    AND                  LOWER(@UserName) = u.LoweredUserName AND u.UserId = m.UserId            IF (@@ROWCOUNT = 0) -- Username not found              RETURN -1      END        RETURN 0  END"
257,AISystem_CompanyCode_GetsBySearchCount,"CREATE proc [dbo].[AISystem_CompanyCode_GetsBySearchCount]  @Keyword nvarchar(250),  @Unitcode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --    IF ( @Keyword IS NOT NULL AND @Keyword <> ''  )  set @Condition=@Condition+' AND  (Name LIKE N''%'+@Keyword+'%''  or Code LIKE N''%'+@Keyword+'%'' or CompanyCode LIKE N''%'+@Keyword+'%'' )'  if(@Unitcode<>'-1')  set @Condition=@Condition+' AND UnitCode='''+@Unitcode+''''      exec('   SELECT count(*) from AISystem_CompanyCode '+@Condition+'       ')    SET QUOTED_IDENTIFIER OFF"
258,AIElearning_Document_CheckCode,  create proc [dbo].[AIElearning_Document_CheckCode]  @code nvarchar(250)  as  -- AIElearning_Document_CheckCode ''    select count(*) from AIElearning_Document where Code = @code  
259,AIElearning_Class_MarkOffLine_Code_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Class_MarkOffLine_Code_GetsBySearch]  @pageIndex int,  @pageSize int,  @ClassId int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +' And  ClassId= '+ STR(@ClassId)     exec('    WITH #AIElearning_Class_MarkOffLine_Code AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_MarkOffLine_Code  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Class_MarkOffLine_Code   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
260,AIElearning_Media_GetsBySearch,"CREATE proc [dbo].[AIElearning_Media_GetsBySearch]   @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Status int,  @unitCode nvarchar(50)  as  -- [AIElearning_Media_GetsBySearch] 1,13,'',-1,-1,-1,'28'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   set @Condition=@Condition+' AND m.Name like N''%'+@Keyword+'%'''  if(@CategoryId > -1)   set @Condition=@Condition+' AND m.CategoryId = '+str(@CategoryId)  if(@Status>-1)   set @Condition=@Condition+' AND m.Status='+str(@Status)  if(@Type>-1)   set @Condition=@Condition+' AND m.Type='+str(@Type)  if(@unitCode <> '')   set @Condition=@Condition+' AND cm.UnitCode='''+@unitCode+''''  exec('   WITH #AIElearning_Media AS(     SELECT ROW_NUMBER() OVER (ORDER BY m.ID DESC) AS RowNumber, m.*    from AIElearning_Media m inner join AISystem_Category_Media cm on m.CategoryId = cm.Id     where '+@Condition+')    SELECT *    FROM #AIElearning_Media    where RowNumber between '+ @start +'  and  '+ @end +'   ')"
261,AIElearning_Exercise_GroupGetName,"CREATE proc [dbo].[AIElearning_Exercise_GroupGetName]  @name nvarchar(250),  @ExerciseId int  as  select * from AIElearning_Exercise_Group where name =@name and ExerciseId=@ExerciseId  "
262,UpdateLanguage,"CREATE PROCEDURE dbo.[UpdateLanguage]     @LanguageID       int,   @CultureCode      nvarchar(50),   @CultureName            nvarchar(200),   @FallbackCulture        nvarchar(50),   @LastModifiedByUserID int    AS   UPDATE dbo.Languages    SET     CultureCode = @CultureCode,     CultureName = @CultureName,     FallbackCulture = @FallbackCulture,     [LastModifiedByUserID] = @LastModifiedByUserID,      [LastModifiedOnDate] = getdate()   WHERE LanguageID = @LanguageID"
263,UpdatePortalInfo,"CREATE PROCEDURE dbo.[UpdatePortalInfo]   @PortalID    INT,   @PortalGroupID   INT,   @PortalName    NVARCHAR(128),   @LogoFile    NVARCHAR(50),   @FooterText    NVARCHAR(100),   @ExpiryDate    DATETIME,   @UserRegistration  INT,   @BannerAdvertising  INT,   @Currency    CHAR(3),   @AdministratorId  INT,   @HostFee    MONEY,   @HostSpace    INT,   @PageQuota    INT,   @UserQuota    INT,   @PaymentProcessor  NVARCHAR(50),   @ProcessorUserId  NVARCHAR(50),   @ProcessorPassword  NVARCHAR(50),   @Description   NVARCHAR(500),   @KeyWords    NVARCHAR(500),   @BackgroundFile   NVARCHAR(50),   @SiteLogHistory   INT,   @SplashTabId   INT,   @HomeTabId    INT,   @LoginTabId    INT,   @RegisterTabId   INT,   @UserTabId    INT,   @SearchTabId   INT,      @Custom404TabId   INT,      @Custom500TabId   INT,   @DefaultLanguage  NVARCHAR(10),   @HomeDirectory   VARCHAR(100),   @LastModifiedByUserID INT,   @CultureCode   NVARCHAR(50)    AS     UPDATE dbo.Portals    SET           PortalGroupID  = @PortalGroupID,       ExpiryDate   = @ExpiryDate,       UserRegistration  = @UserRegistration,       BannerAdvertising = @BannerAdvertising,       Currency    = @Currency,       AdministratorId  = @AdministratorId,       HostFee    = @HostFee,       HostSpace   = @HostSpace,       PageQuota   = @PageQuota,       UserQuota   = @UserQuota,       PaymentProcessor  = @PaymentProcessor,       ProcessorUserId  = @ProcessorUserId,       ProcessorPassword = @ProcessorPassword,       SiteLogHistory  = @SiteLogHistory,       DefaultLanguage  = @DefaultLanguage,       HomeDirectory  = @HomeDirectory,       LastModifiedByUserID = @LastModifiedByUserID,       LastModifiedOnDate = GETDATE()   WHERE  PortalId = @PortalID        IF EXISTS (SELECT * FROM dbo.PortalLocalization WHERE PortalId = @PortalID AND CultureCode = @CultureCode)   BEGIN     UPDATE dbo.PortalLocalization     SET      PortalName    = @PortalName,      LogoFile    = @LogoFile,      FooterText    = @FooterText,      Description    = @Description,      KeyWords    = @KeyWords,      BackgroundFile   = @BackgroundFile,      HomeTabId    = @HomeTabId,      LoginTabId    = @LoginTabId,      RegisterTabId   = @RegisterTabId,      UserTabId    = @UserTabId,      SplashTabId    = @SplashTabId,      SearchTabId    = @SearchTabId,                  Custom404TabId   = @Custom404TabId,                  Custom500TabId   = @Custom500TabId,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate  = GETDATE()    WHERE PortalId = @PortalID      AND CultureCode = @CultureCode   END   ELSE   BEGIN     DECLARE @AdminTabId int    SET @AdminTabId = (SELECT AdminTabId           FROM dbo.PortalLocalization           WHERE PortalID = @PortalID AND CultureCode='en-US')      INSERT INTO dbo.PortalLocalization (     [PortalID],     [CultureCode],     [PortalName],     [LogoFile],     [FooterText],     [Description],     [KeyWords],     [BackgroundFile],     [HomeTabId],     [LoginTabId],     [UserTabId],     [AdminTabId],     [SplashTabId],     [SearchTabId],              [Custom404TabId],              [Custom500TabId],     [CreatedByUserID],     [CreatedOnDate],     [LastModifiedByUserID],     [LastModifiedOnDate]    )    VALUES (     @PortalID,     @CultureCode,     @PortalName,     @LogoFile,      @FooterText,     @Description,     @KeyWords,     @BackgroundFile,     @HomeTabId ,     @LoginTabId ,     @UserTabId,     @AdminTabid,     @SplashTabId,     @SearchTabId,              @Custom404TabId,              @Custom500TabId,     -1,     GETDATE(),     -1,     GETDATE()    )   END"
264,AISystem_UserInfo_GetsByUsernameUnitCount,"create proc [dbo].[AISystem_UserInfo_GetsByUsernameUnitCount]  @Key nvarchar(250),  @unitid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Key<>'')  set @Condition=@Condition+' AND UserName  like N''%' + @Key + '%'' OR Mastercode  like N''%' + @Key + '%'''  --  if(@unitid>-1)   set @Condition=@Condition+' AND Unit='+str(@unitid)    exec('select COUNT(Id) from AISystem_UserInfo '+@Condition)  "
265,CoreMessaging_GetSubscriptionTypes,CREATE PROCEDURE dbo.[CoreMessaging_GetSubscriptionTypes]  AS    SELECT  *   FROM    dbo.CoreMessaging_SubscriptionTypes
266,AIElearning_Document_User_GetByDocumentIdAndUser,"CREATE PROC [dbo].[AIElearning_Document_User_GetByDocumentIdAndUser]   @documentId int,  @Username nvarchar(50),  @MasterCode nvarchar(50)  as  -- AIElearning_Document_User_GetByDocumentIdAndUser 6,28  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@documentId>-1)   set @Condition=@Condition+' AND DocumentId='+str(@documentId)    if(@Username <> '')   set @Condition=@Condition+' AND Username= '''+@Username+''''      if(@MasterCode <> '')   set @Condition=@Condition+' AND MasterCode= '''+@MasterCode+''''    exec('SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *   from AIElearning_Document_User      where ' +@Condition)      "
267,AISystem_Talent_Child_GetsBySearchCount,CREATE proc [dbo].[AISystem_Talent_Child_GetsBySearchCount]  as  select COUNT(*) from AISystem_Talent_Child    SET QUOTED_IDENTIFIER OFF     
268,AISystem_Category_Bank_GetInfoById,CREATE PROC [dbo].[AISystem_Category_Bank_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Bank where Id=@Id  SET QUOTED_IDENTIFIER OFF                 
269,CoreMessaging_CountLegacyMessages,CREATE PROCEDURE dbo.[CoreMessaging_CountLegacyMessages]      AS   --Return total records   SELECT COUNT(*) AS TotalRecords   FROM dbo.[Messaging_Messages]
270,AIElearning_Lecturers_GetByLecturerId,"CREATE PROC [dbo].[AIElearning_Lecturers_GetByLecturerId] @id INT  AS -- [AIElearning_Lecturers_GetByLecturerId] 85    SELECT TOP 1          l.*, i.Avatar, i.Displayname, i.Sex, i.BirthDate, i.Address, i.UnitCode, i.Username, i.LecturersCode, i.JobTitleStr, i.Email, i.Phone, i.Mastercode, i.UnitChildPath, i.EmployeeCode, i.IntrolView  FROM    AIElearning_Lecturers l          INNER JOIN AISystem_UserInfo i ON l.UserInfoId = i.Id  WHERE   l.Id = @id"
271,UpdateHostSetting,"CREATE PROCEDURE dbo.[UpdateHostSetting]   @SettingName    nvarchar( 50),   @SettingValue    nvarchar(Max),   @SettingIsSecure   bit,   @UserID            int  AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[HostSettings]     WHERE SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' BEGIN -- key must be valid    MERGE INTO dbo.[HostSettings] S     USING (SELECT @SettingName SN, @SettingValue SV, @SettingIsSecure Sec) Q        ON (S.SettingName = Q.SN)     WHEN MATCHED AND (IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') OR S.SettingIsSecure != Q.Sec) THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [SettingIsSecure] = Q.Sec, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( SettingName,  SettingValue,  SettingIsSecure, CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@SettingName, @SettingValue, @SettingIsSecure, IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());   END; -- Else If  END; -- Procedure"
272,aspnet_Membership_GetUserByUserId,"CREATE PROCEDURE dbo.aspnet_Membership_GetUserByUserId      @UserId               uniqueidentifier,      @CurrentTimeUtc       datetime,      @UpdateLastActivity   bit = 0  AS  BEGIN      IF ( @UpdateLastActivity = 1 )      BEGIN          UPDATE   dbo.aspnet_Users          SET      LastActivityDate = @CurrentTimeUtc          FROM     dbo.aspnet_Users          WHERE    @UserId = UserId            IF ( @@ROWCOUNT = 0 ) -- User ID not found              RETURN -1      END        SELECT  m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,              m.CreateDate, m.LastLoginDate, u.LastActivityDate,              m.LastPasswordChangedDate, u.UserName, m.IsLockedOut,              m.LastLockoutDate      FROM    dbo.aspnet_Users u, dbo.aspnet_Membership m      WHERE   @UserId = u.UserId AND u.UserId = m.UserId        IF ( @@ROWCOUNT = 0 ) -- User ID not found         RETURN -1        RETURN 0  END"
273,AISystem_Category_Unit_GetsByIndependent_CompanyCode,"CREATE proc [dbo].[AISystem_Category_Unit_GetsByIndependent_CompanyCode]   @ParentId int,  @Independent int  as  -- AISystem_Category_Unit_GetsByIndependent 1,-1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Independent > -1)   set @condition = @condition + ' and Independent =' +str(@Independent)  if(@ParentId > -1)   set @condition = @condition + ' and ParentId =' +str(@ParentId)    set @condition = @condition + ' and Code not in (Select UnitCode from AISystem_CompanyCode)'  exec('SELECT  * from AISystem_Category_Unit where ' + @condition)"
274,AISystem_Category_Subject_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROCEDURE [dbo].[AISystem_Category_Subject_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_Subject_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50),    ChildId NVARCHAR(max)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, ChildId)    SELECT       AISystem_Category_Subject.Id,      0,      AISystem_Category_Subject.ParentId,      AISystem_Category_Subject.Title,      STR(AISystem_Category_Subject.OrderNo),      AISystem_Category_Subject.Title,      AISystem_Category_Subject.Code,      AISystem_Category_Subject.ChildId          FROM      AISystem_Category_Subject    WHERE      (AISystem_Category_Subject.Status=@Status OR @Status = -1)       AND (AISystem_Category_Subject.Id = @ParentId)      AND AISystem_Category_Subject.LanguageId = @LanguageId      AND AISystem_Category_Subject.PortalId = @portalId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, ChildId)    SELECT       AISystem_Category_Subject.Id,      0,      AISystem_Category_Subject.ParentId,      AISystem_Category_Subject.Title,      STR(AISystem_Category_Subject.OrderNo),      AISystem_Category_Subject.Title,      AISystem_Category_Subject.Code,      AISystem_Category_Subject.ChildId          FROM      AISystem_Category_Subject    WHERE      (AISystem_Category_Subject.Status=@Status OR @Status = -1)       AND (AISystem_Category_Subject.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Subject.ParentId IS NULL or AISystem_Category_Subject.ParentId <=0))      AND AISystem_Category_Subject.LanguageId = @LanguageId      AND AISystem_Category_Subject.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, ChildId)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code,     S.ChildId         FROM     #PathConstruction T    JOIN AISystem_Category_Subject  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'ChildId' = ChildId,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction        "
275,AIElearning_Media_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Media_GetsBySearchCount]   @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Status int,  @unitCode nvarchar(50)  as  -- [AIElearning_Media_GetsBySearchCount] '',-1,-1,-1,'-1'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@Keyword<>'')   set @Condition=@Condition+' AND m.Name like N''%'+@Keyword+'%'''  if(@CategoryId > -1)   set @Condition=@Condition+' AND m.CategoryId = '+str(@CategoryId)  if(@Status>-1)   set @Condition=@Condition+' AND m.Status='+str(@Status)  if(@Type>-1)   set @Condition=@Condition+' AND m.Type='+str(@Type)  if(@unitCode <> '')   set @Condition=@Condition+' AND cm.UnitCode='''+@unitCode+''''  exec('    SELECT count(*)    from AIElearning_Media m inner join AISystem_Category_Media cm on m.CategoryId = cm.Id     where '+@Condition )"
276,CoreMessaging_GetMessageThread,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageThread]      @ConversationID int,   @UserID int,   @AfterMessageID int,   @NumberOfRecords int,   @SortField nvarchar(25) = 'CreatedOnDate',   @SortAscending bit = 0  AS  BEGIN   --Cannot return thread if user was not a recipient   IF NOT EXISTS (SELECT MR.RecipientID FROM dbo.[CoreMessaging_MessageRecipients] MR JOIN dbo.[CoreMessaging_Messages] M ON MR.MessageID = M.MessageID WHERE MR.UserID = @UserID AND M.NotificationTypeID IS NULL) BEGIN    SELECT 0    RETURN   END     ;WITH inboxItems  AS   (    SELECT  DISTINCT [RecipientID], [Subject], [Body], [SenderUserID],      [Read], [Archived], [UserID], [To], [From], [ReplyAllAllowed], [ConversationID],      m.[MessageID],      m.[CreatedByUserID], m.[CreatedOnDate],      m.[LastModifiedByUserID], m.[LastModifiedOnDate],      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageAttachments WHERE MessageID = mr.MessageID) AS AttachmentCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID AND [READ] = 0) AS NewThreadCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID) AS ThreadCount,      ROW_NUMBER() OVER(ORDER BY        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 1 THEN m.[CreatedOnDate] END ASC,        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 0 THEN m.[CreatedOnDate] END DESC,        CASE WHEN @SortField = 'From' AND @SortAscending = 1 THEN [From] END ASC,        CASE WHEN @SortField = 'From' AND @SortAscending = 0 THEN [From] END DESC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 1 THEN [Subject] END ASC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 0 THEN [Subject] END DESC       ) AS RowNumber    FROM dbo.CoreMessaging_MessageRecipients AS mr    INNER JOIN dbo.CoreMessaging_Messages AS m ON mr.MessageID = m.MessageID    WHERE mr.UserID = @UserID    AND ConversationID = @ConversationID   )   SELECT * FROM inboxItems   WHERE (@AfterMessageID > 0 AND RowNumber BETWEEN (SELECT RowNumber + 1 FROM inboxItems WHERE [MessageID] = @AfterMessageID) AND (SELECT RowNumber + @NumberOfRecords FROM inboxItems WHERE [MessageID] = @AfterMessageID)) OR   (@AfterMessageID = -1 AND RowNumber BETWEEN 1 AND @NumberOfRecords)   ORDER BY RowNumber ASC  END"
277,UpdatePortalSetup,"CREATE PROCEDURE dbo.UpdatePortalSetup   @PortalId    INT,   @AdministratorId  INT,   @AdministratorRoleId INT,   @RegisteredRoleId  INT,   @SplashTabId   INT,   @HomeTabId    INT,   @LoginTabId    INT,   @RegisterTabId   INT,   @UserTabId    INT,   @SearchTabId            INT,      @Custom404TabId         INT,      @Custom500TabId         INT,   @AdminTabId    INT,   @CultureCode   NVARCHAR(50)    AS   UPDATE dbo.Portals    SET         AdministratorId = @AdministratorId,      AdministratorRoleId = @AdministratorRoleId,      RegisteredRoleId = @RegisteredRoleId   WHERE  PortalId = @PortalId     UPDATE dbo.PortalLocalization    SET      HomeTabId = @HomeTabId,     LoginTabId = @LoginTabId,     UserTabId = @UserTabId,     RegisterTabId = @RegisterTabId,     AdminTabId = @AdminTabId,     SplashTabId = @SplashTabId,     SearchTabId = @SearchTabId,              Custom404TabId = @Custom404TabId,              Custom500TabId = @Custom500TabId        WHERE portalID = @PortalID"
278,AISystem_UserInfo_GetsByUsernameUnit,"create proc [dbo].[AISystem_UserInfo_GetsByUsernameUnit]  @pageIndex int,  @pageSize int,  @Key nvarchar(250),  @unitid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@Key<>'')  set @Condition=@Condition+' AND UserName  like N''%' + @Key + '%'' OR Mastercode  like N''%' + @Key + '%'''  --  if(@unitid>-1)   set @Condition=@Condition+' AND Unit='+str(@unitid)  exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_UserInfo '+@Condition+'       )         SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
279,UpdateFolderVersion,"CREATE PROCEDURE dbo.[UpdateFolderVersion]   @FolderID  int,      @VersionGuid uniqueidentifier  AS      UPDATE dbo.Folders          SET    VersionGuid = @VersionGuid      WHERE  FolderID = @FolderID"
280,CoreMessaging_DeleteSubscriptionType,CREATE PROCEDURE dbo.[CoreMessaging_DeleteSubscriptionType]   @SubscriptionTypeId int  AS  BEGIN   DELETE FROM dbo.[CoreMessaging_SubscriptionTypes] WHERE [SubscriptionTypeId] = @SubscriptionTypeId     IF @@ROWCOUNT <> 0    SELECT 0 AS [ResultStatus]   ELSE    SELECT -1 AS [ResultStatus]  END
281,AIElearning_Document_User_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Document_User_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Document_User AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Document_User       )         SELECT     *   FROM #AIElearning_Document_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
282,AddContentType,CREATE PROCEDURE dbo.[AddContentType]    @ContentType nvarchar(250)  AS   INSERT INTO dbo.ContentTypes (    ContentType   )     VALUES (    @ContentType   )     SELECT SCOPE_IDENTITY()
283,AIElearning_Certificate_User_DeleteCertificateId,"create proc [dbo].[AIElearning_Certificate_User_DeleteCertificateId]  @CertificateId int,  @Userid int    as  delete AIElearning_Certificate_User where CertificateId =@CertificateId and Userid=@Userid  "
284,AISystem_Category_Bank_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Bank_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Bank_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Bank  WHERE   ParentId = @parentId      "
285,UpdateScheduleHistory,"CREATE PROCEDURE dbo.UpdateScheduleHistory  @ScheduleHistoryID int,  @EndDate datetime,  @Succeeded bit,  @LogNotes ntext,  @NextStart datetime  AS  UPDATE dbo.ScheduleHistory  SET EndDate = @EndDate,   Succeeded = @Succeeded,   LogNotes = @LogNotes,   NextStart = @NextStart  WHERE ScheduleHistoryID = @ScheduleHistoryID"
286,GetPortalSetting,"CREATE PROCEDURE dbo.[GetPortalSetting]      @PortalID    Int,      -- Not Null      @SettingName nVarChar(50), -- Not Null      @CultureCode nVarChar(50) -- Null|-1 for neutral language  AS  BEGIN   SELECT TOP (1)       SettingName,       CASE WHEN Lower(SettingValue) Like N'fileid=%'            THEN dbo.[FilePath](SettingValue)            ELSE SettingValue        END   AS SettingValue,       CreatedByUserID,       CreatedOnDate,       LastModifiedByUserID,       LastModifiedOnDate,       CultureCode    FROM  dbo.[PortalSettings]    WHERE PortalID    = @PortalID      AND SettingName = @SettingName      AND COALESCE(CultureCode, @CultureCode, N'') = IsNull(@CultureCode, N'')    ORDER BY IsNull(CultureCode, N'') DESC  END; -- Procedure"
287,aspnet_Membership_GetUserByEmail,"CREATE PROCEDURE dbo.aspnet_Membership_GetUserByEmail      @ApplicationName  nvarchar(256),      @Email            nvarchar(256)  AS  BEGIN      IF( @Email IS NULL )          SELECT  u.UserName          FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND                  u.ApplicationId = a.ApplicationId    AND                  u.UserId = m.UserId AND                  m.LoweredEmail IS NULL      ELSE          SELECT  u.UserName          FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND                  u.ApplicationId = a.ApplicationId    AND                  u.UserId = m.UserId AND                  LOWER(@Email) = m.LoweredEmail        IF (@@rowcount = 0)          RETURN(1)      RETURN(0)  END"
288,AIElearning_Certificate_Offline_GetsByCode,create proc [dbo].[AIElearning_Certificate_Offline_GetsByCode]  @code nvarchar(50)  as  select count(*) from AIElearning_Certificate_Offline where code=@code      
289,GetPropertyDefinitionByName,"CREATE PROCEDURE dbo.GetPropertyDefinitionByName   @PortalID int,   @Name  nvarchar(50)    AS  SELECT *   FROM dbo.ProfilePropertyDefinition   WHERE  (PortalId = @PortalID OR (PortalId IS NULL AND @PortalID IS NULL))    AND PropertyName = @Name   ORDER BY ViewOrder"
290,Journal_Comment_Like,"CREATE PROCEDURE dbo.Journal_Comment_Like    @JournalId int,    @CommentId int,    @UserId int,    @UserName nvarchar(50)   AS   DECLARE @cxml xml   SET @cxml = (SELECT CommentXML FROM dbo.Journal_Comments WHERE CommentId = @CommentId AND JournalId = @JournalId)   IF @cxml IS NULL OR @cxml.exist('/root') = 0    BEGIN    DECLARE @x xml     SET @x = '<root></root>';     UPDATE dbo.Journal_Comments      SET CommentXML = @x      WHERE JournalId = @JournalId AND CommentId = @CommentId    END   IF EXISTS(SELECT CommentId      FROM dbo.Journal_Comments      WHERE JournalId = @JournalId AND CommentId = @CommentId      AND CommentXML.exist('/root/likes/u[@uid=sql:variable(""@userid"")]') = 1)    BEGIN     UPDATE dbo.Journal_Comments      SET CommentXML.modify('delete (/root/likes/u[@uid=sql:variable(""@UserId"")])')      WHERE JournalId = @JournalId AND CommentId = @CommentId      AND CommentXML.exist('/root/likes/u[@uid=sql:variable(""@UserId"")]') = 1    END   ELSE    BEGIN     BEGIN      IF NOT EXISTS(SELECT CommentId FROM dbo.Journal_Comments          WHERE JournalId = @JournalId AND CommentId = @CommentID          AND CommentXML.exist('/root/likes') = 1)       BEGIN        UPDATE dbo.Journal_Comments        SET CommentXML.modify('insert <likes /> as last into (/root)[1]')         WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root') = 1       END     END     BEGIN      UPDATE dbo.Journal_Comments      SET CommentXML.modify('insert <u uid=""{xs:string(sql:variable(""@UserId""))}"" un=""{xs:string(sql:variable(""@UserName""))}"" /> as last into (/root/likes)[1]')      WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root/likes') = 1     END    END"
291,AISystem_UserInfo_Partner_GetsBySearchNotInPartnerCount,"  CREATE proc [dbo].[AISystem_UserInfo_Partner_GetsBySearchNotInPartnerCount]  @Keyword nvarchar(250),  @Status int,  @unitCode nvarchar(50),  @Type int,  @PartnerId int  as  --   AISystem_UserInfo_Partner_GetsBySearchNotInPartnerCount '',1,'28',-1, 30  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@Keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(i.*,'''+@Keyword+''')'   set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode = '''+@Keyword+''') '  if(@Status>-1)   set @Condition=@Condition+' AND i.Status='+str(@Status)  if(@unitCode <> '-1' and @unitCode <> '')   set @Condition=@Condition+' AND i.UnitCode ='''+(@unitCode)+''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)   if(@PartnerId>-1)   set @Condition=@Condition+ ' AND l.UserInfoId not in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId =' + str(@PartnerId) +')'  exec('    SELECT count(*) from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+'   ')      "
292,AIElearning_Class_GetsByParamCount,"CREATE proc [dbo].[AIElearning_Class_GetsByParamCount]  @KeyWord nvarchar(250),  @CategoryId int,  @OrderBy nvarchar(50),  @IsSearch int,  @strUnitCode nvarchar(max),  @JobTitleCode nvarchar(50)  as  -- AIElearning_Class_GetsByParamCount N'chuy?n k? cho bé', 0, 'l.Id'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')    set @condition = @condition + ' and (l.Unitcode in ' + @strUnitCode + ' )'  if(@JobTitleCode <>'')   set @condition = @condition  + ' and l.ObjectType =''' + @JobTitleCode + ''''  IF(@CategoryId>0)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category_Subject where id=@CategoryId   --set @condition = @condition +  ' and l.Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in ('+@ChildId+'))'   IF (@ChildId IS NOT NULL AND @ChildId<>'')    set @condition = @condition  + ' and l.CateSubjectId in ('+@ChildId+')'  end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        SELECT count(l.Id)         from  AIElearning_Class AS l          INNER JOIN          CONTAINSTABLE(AIElearning_Class,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=l.Id            where ' + @Condition + ' and l.Status = 1   and l.Type in (1,2,4) and IsPublic = 1      ')     end    ELSE     Begin      exec('        SELECT count(l.Id)         from  AIElearning_Class AS l          INNER JOIN          FREETEXTTABLE(AIElearning_Class,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=l.Id            where ' + @Condition + ' and l.Status = 1   and l.Type in (1,2,4) and IsPublic = 1      ')     end   end  ELSE   BEGIN    exec('     SELECT     COUNT(l.Id)     from  AIElearning_Class AS l       where ' + @Condition + ' and l.Status = 1 and l.Type in (1,2,4) and IsPublic = 1     ')   end    SET QUOTED_IDENTIFIER OFF  "
293,CoreMessaging_DeleteSubscription,CREATE PROCEDURE dbo.[CoreMessaging_DeleteSubscription]   @SubscriptionId int  AS   BEGIN   DELETE FROM dbo.[CoreMessaging_Subscriptions] WHERE [SubscriptionId] = @SubscriptionId     IF @@ROWCOUNT <> 0    SELECT 0 AS [ResultStatus]   ELSE    SELECT -1 AS [ResultStatus]  END
294,AIElearning_ExerciseTopic_GetItemIdAll,"CREATE proc [dbo].[AIElearning_ExerciseTopic_GetItemIdAll]   @ItemId int,  @type int,  @Exerciseid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@ItemId>-1)  set @Condition=@Condition+' AND ItemId='+str(@ItemId)  if(@type>-1)  set @Condition=@Condition+' AND Type='+str(@type)  if(@Exerciseid>-1)  set @Condition=@Condition+' AND Exerciseid='+str(@Exerciseid)  --  set @Condition=@Condition+' AND id not in (select top(5)id from AIElearning_Exercise_Topic where ItemId='''+str(@ItemId)+''' and Type='''+str(@Type)+'''  ORDER BY UpdatedDate desc )'  set @Condition=@Condition+'ORDER BY UpdatedDate desc '  exec('select * from AIElearning_Exercise_Topic '+@Condition+' ')  SET QUOTED_IDENTIFIER OFF  "
295,AddPortalAlias,"CREATE PROCEDURE dbo.[AddPortalAlias]   @PortalID    int,   @HTTPAlias    nvarchar(200),   @CultureCode  nvarchar(10),   @Skin    nvarchar(100),   @BrowserType  nvarchar(10),   @IsPrimary   bit,   @CreatedByUserID int    AS     IF @IsPrimary = 1    BEGIN     UPDATE dbo.PortalAlias      SET IsPrimary = 0      WHERE (CultureCode = @CultureCode OR (CultureCode IS NULL AND @CultureCode IS NULL))       AND (BrowserType = @BrowserType OR (BrowserType IS NULL AND @BrowserType IS NULL))       AND (PortalID = @PortalID)    END     INSERT INTO dbo.PortalAlias (    PortalID,     HTTPAlias,    CultureCode,    BrowserTYpe,    Skin,    IsPrimary,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )   VALUES (    @PortalID,     @HTTPAlias,    @CultureCode,    @BrowserTYpe,    @Skin,    @IsPrimary,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()    )     SELECT SCOPE_IDENTITY()"
296,AISystem_Category_Media_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_Media_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Media    SET QUOTED_IDENTIFIER OFF             
297,AISystem_Category_Bank_GetsByArray,"CREATE proc [dbo].[AISystem_Category_Bank_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_Bank  where Id in(select * from Split(@arrId))      "
298,RemoveTermsFromContent,CREATE PROCEDURE dbo.[RemoveTermsFromContent]    @ContentItemID int  AS   DELETE dbo.ContentItems_Tags    WHERE ContentItemID = @ContentItemID
299,GetPortalSettings,"CREATE PROCEDURE dbo.[GetPortalSettings]      @PortalId    Int,            -- not Null!      @CultureCode nVarChar(20)    -- Null|'' for neutral language  AS  BEGIN   DECLARE @DefaultLanguage nVarChar(20) = N'';     IF EXISTS (SELECT *                   FROM  dbo.[PortalLocalization] L         JOIN  dbo.[Portals] P ON L.PortalID = P.PortalID AND L.CultureCode = P.DefaultLanguage      WHERE P.PortalID = @PortalID)    SELECT @DefaultLanguage = DefaultLanguage      FROM  dbo.[Portals]      WHERE PortalID = @PortalID;     SELECT PS.SettingName,       CASE WHEN Lower(PS.SettingValue) LIKE N'fileid=%'         THEN dbo.[FilePath](PS.SettingValue)         ELSE PS.SettingValue              END   AS SettingValue,       PS.CreatedByUserID,       PS.CreatedOnDate,       PS.LastModifiedByUserID,       PS.LastModifiedOnDate,       PS.CultureCode    FROM  dbo.[PortalSettings] PS       WHERE PortalSettingID = (SELECT Top(1) PortalSettingID FROM dbo.[PortalSettings] S                            WHERE PS.PortalID = S.PortalID AND PS.SettingName = S.SettingName             ORDER BY CASE CultureCode WHEN @CultureCode THEN 2 WHEN Null THEN 1 ELSE 0 END DESC)      AND PortalID = @PortalID    ORDER BY SettingName;  END; -- Procedure"
300,aspnet_Membership_GetPasswordWithFormat,"CREATE PROCEDURE dbo.aspnet_Membership_GetPasswordWithFormat      @ApplicationName                nvarchar(256),      @UserName                       nvarchar(256),      @UpdateLastLoginActivityDate    bit,      @CurrentTimeUtc                 datetime  AS  BEGIN      DECLARE @IsLockedOut                        bit      DECLARE @UserId                             uniqueidentifier      DECLARE @Password                           nvarchar(128)      DECLARE @PasswordSalt                       nvarchar(128)      DECLARE @PasswordFormat                     int      DECLARE @FailedPasswordAttemptCount         int      DECLARE @FailedPasswordAnswerAttemptCount   int      DECLARE @IsApproved                         bit      DECLARE @LastActivityDate                   datetime      DECLARE @LastLoginDate                      datetime        SELECT  @UserId          = NULL        SELECT  @UserId = u.UserId, @IsLockedOut = m.IsLockedOut, @Password=Password, @PasswordFormat=PasswordFormat,              @PasswordSalt=PasswordSalt, @FailedPasswordAttemptCount=FailedPasswordAttemptCount,        @FailedPasswordAnswerAttemptCount=FailedPasswordAnswerAttemptCount, @IsApproved=IsApproved,              @LastActivityDate = LastActivityDate, @LastLoginDate = LastLoginDate      FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m      WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.ApplicationId = a.ApplicationId    AND              u.UserId = m.UserId AND              LOWER(@UserName) = u.LoweredUserName        IF (@UserId IS NULL)          RETURN 1        IF (@IsLockedOut = 1)          RETURN 99        SELECT   @Password, @PasswordFormat, @PasswordSalt, @FailedPasswordAttemptCount,               @FailedPasswordAnswerAttemptCount, @IsApproved, @LastLoginDate, @LastActivityDate        IF (@UpdateLastLoginActivityDate = 1 AND @IsApproved = 1)      BEGIN          UPDATE  dbo.aspnet_Membership          SET     LastLoginDate = @CurrentTimeUtc          WHERE   UserId = @UserId            UPDATE  dbo.aspnet_Users          SET     LastActivityDate = @CurrentTimeUtc          WHERE   @UserId = UserId      END          RETURN 0  END"
301,AIElearning_Certificate_Offline_GetsBySearch,create proc [dbo].[AIElearning_Certificate_Offline_GetsBySearch]  @Classid int  as  select * from AIElearning_Certificate_Offline where Classid=@Classid      
302,GetRelationshipsByUserID,"CREATE PROCEDURE dbo.[GetRelationshipsByUserID] @UserID INT  AS       SELECT  RelationshipID,     RelationshipTypeID,                          Name,                          Description,     UserID,     PortalID,     DefaultResponse,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.Relationships       WHERE UserID = @UserID   ORDER BY RelationshipID ASC"
303,AISystem_UserInfo_Partner_GetsBySearchNotInPartner,"  CREATE proc [dbo].[AISystem_UserInfo_Partner_GetsBySearchNotInPartner]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @Status int,  @unitCode nvarchar(50),  @Type int,  @PartnerId int  as  --   AISystem_UserInfo_Partner_GetsBySearchNotInPartner 1,10,'',1,'28',-1, 30  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(i.*,'''+@Keyword+''')'   set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode = '''+@Keyword+''') '  if(@Status>-1)   set @Condition=@Condition+' AND i.Status='+str(@Status)  if(@unitCode <> '-1' and @unitCode <> '')   set @Condition=@Condition+' AND i.UnitCode ='''+(@unitCode)+''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)   if(@PartnerId>-1)   set @Condition=@Condition+ ' AND l.UserInfoId not in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId =' + str(@PartnerId) +')'  exec('  WITH #AIElearning_Lecturers AS(     SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Username, i.Displayname, i.Sex, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, l.Status, i.UnitCode, i.MasterCode, l.UserInfoId    from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+')   SELECT *   FROM #AIElearning_Lecturers   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
304,AIElearning_Class_GetsByParam,"CREATE proc [dbo].[AIElearning_Class_GetsByParam]  @pageIndex int,  @pageSize int,  @KeyWord nvarchar(250),  @CategoryId int,  @OrderBy nvarchar(50),  @IsSearch int,  @strUnitCode nvarchar(max),  @JobTitleCode nvarchar(50)  as  -- AIElearning_Class_GetsByParam 1, 111, '', 0, 'l.Id', 0, '', N'01M12341'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')    set @condition = @condition + ' and (l.Unitcode in ' + @strUnitCode + ' )'  if(@JobTitleCode <>'')   set @condition = @condition  + ' and l.ObjectType =''' + @JobTitleCode + ''''  IF(@CategoryId>0)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category_Subject where id=@CategoryId   --set @condition = @condition +  ' and l.Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in ('+@ChildId+'))'   IF (@ChildId IS NOT NULL AND @ChildId<>'')    set @condition = @condition  + ' and (l.CateSubjectId in ('+@ChildId+'))'  end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        WITH #AIElearning_Class AS(         SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,          RANK, l.*          from  AIElearning_Class AS l           INNER JOIN           CONTAINSTABLE(AIElearning_Class,( Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=l.Id             where ' + @Condition + ' and l.Status = 1  and l.Type in (1,2,4) and IsPublic = 1                    )              SELECT          *        FROM #AIElearning_Class        where RowNumber between '+ @start +'  and  '+ @end +'                ')     end    ELSE     Begin      exec('        WITH #AIElearning_Class AS(         SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,          RANK, l.*          from  AIElearning_Class AS l           INNER JOIN           FREETEXTTABLE(AIElearning_Class,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=l.Id             where ' + @Condition + ' and l.Status = 1  and l.Type in (1,2,4) and IsPublic = 1                     )              SELECT          *        FROM #AIElearning_Class        where RowNumber between '+ @start +'  and  '+ @end +'         ')     end   end  ELSE   BEGIN    exec('       WITH #AIElearning_Class2 AS(       SELECT ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RowNumber,        l.*        from  AIElearning_Class AS l          where ' + @Condition + ' and l.Status = 1  and l.Type in (1,2,4) and IsPublic = 1         )          SELECT        *      FROM #AIElearning_Class2      where RowNumber between '+ @start +'  and  '+ @end +'      ')   end      SET QUOTED_IDENTIFIER OFF  "
305,AIElearning_ExerciseTopic_GetItemIdCount,"CREATE proc [dbo].[AIElearning_ExerciseTopic_GetItemIdCount]     @ItemId int,  @type int,  @Exerciseid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'      if(@ItemId>-1)  set @Condition=@Condition+' AND ItemId='+str(@ItemId)  if(@type>-1)  set @Condition=@Condition+' AND Type='+str(@type)  if(@Exerciseid>-1)  set @Condition=@Condition+' AND Exerciseid='+str(@Exerciseid)  exec('        select COUNT(*)          from AIElearning_Exercise_Topic '+@Condition+'                ')  SET QUOTED_IDENTIFIER OFF  "
306,AIElearning_Class_Notification_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Class_Notification_GetsBySearchCount]  @ClassId int  as  select COUNT(*) from AIElearning_Class_Notification where ClassId = @ClassId    SET QUOTED_IDENTIFIER OFF   
307,GetUnIndexedContentItems,CREATE PROCEDURE dbo.[GetUnIndexedContentItems]   AS   SELECT *   FROM dbo.ContentItems   WHERE Indexed = 0
308,UpdatePortalAlias,"CREATE PROCEDURE dbo.[UpdatePortalAlias]   @PortalAliasID  int,   @PortalID    int,   @HTTPAlias    nvarchar(200),   @CultureCode  nvarchar(10),   @Skin    nvarchar(100),   @BrowserType  nvarchar(10),   @IsPrimary   bit,   @LastModifiedByUserID int    AS     IF @IsPrimary = 1    BEGIN     UPDATE dbo.PortalAlias      SET IsPrimary = 0      WHERE (CultureCode = @CultureCode OR (CultureCode IS NULL AND @CultureCode IS NULL))       AND (BrowserType = @BrowserType OR (BrowserType IS NULL AND @BrowserType IS NULL))       AND (PortalID = @PortalID)    END     UPDATE dbo.PortalAlias    SET      HTTPAlias = @HTTPAlias,     CultureCode = @CultureCode,     Skin = @Skin,     BrowserType = @BrowserType,     IsPrimary = @IsPrimary,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()    WHERE PortalID = @PortalID    AND   PortalAliasID = @PortalAliasID"
309,AIElearning_ClassLog_GetLastItem,"  CREATE PROC [dbo].[AIElearning_ClassLog_GetLastItem]  @ClassId INT,  @Username NVARCHAR(250)  AS   SELECT top 1 * FROM AIElearning_Classlog WHERE (ClassId=@ClassId OR @ClassId=-1) and Username=@Username ORDER BY Id DESC"
310,AISystem_Level_GetbyCodeName,CREATE proc [dbo].[AISystem_Level_GetbyCodeName]  @Listcode nvarchar(Max)  as  select * from AISystem_Level where Code  in (select * from Split(@Listcode))  
311,AISystem_Category_Bank_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_Bank_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Bank AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Bank       )         SELECT     *   FROM #AISystem_Category_Bank   where RowNumber between '+ @start +'  and  '+ @end +'   ')                "
312,UpdateListSortOrder,"CREATE PROCEDURE dbo.UpdateListSortOrder  (   @EntryID int,    @MoveUp  bit  )  AS   DECLARE @EntryListName nvarchar(50)   DECLARE @ParentID int   DECLARE @CurrentSortValue int   DECLARE @ReplaceSortValue int   -- Get the current sort order   SELECT @CurrentSortValue = [SortOrder], @EntryListName = [ListName], @ParentID = [ParentID]     FROM dbo.Lists WITH (nolock)     WHERE [EntryID] = @EntryID   -- Move the item up or down?   IF (@MoveUp = 1)     BEGIN    IF (@CurrentSortValue != 1) -- we rearrange sort order only if list enable sort order - sortorder >= 1      BEGIN     SET @ReplaceSortValue = @CurrentSortValue - 1     UPDATE dbo.Lists       SET [SortOrder] = @CurrentSortValue       WHERE [SortOrder] = @ReplaceSortValue And [ListName] = @EntryListName And [ParentID] = @ParentID     UPDATE dbo.Lists       SET [SortOrder] = @ReplaceSortValue       WHERE [EntryID] = @EntryID      END     END   ELSE     BEGIN    IF (@CurrentSortValue < (SELECT MAX([SortOrder]) FROM dbo.Lists))    BEGIN      SET @ReplaceSortValue = @CurrentSortValue + 1      UPDATE dbo.Lists      SET [SortOrder] = @CurrentSortValue      WHERE SortOrder = @ReplaceSortValue And [ListName] = @EntryListName  And [ParentID] = @ParentID      UPDATE dbo.Lists      SET [SortOrder] = @ReplaceSortValue      WHERE EntryID = @EntryID    END     END"
313,UpdatePortalSetting,"CREATE PROCEDURE dbo.[UpdatePortalSetting]  --  covers delete, add and update scenarios:   @PortalID       Int,     -- Key, Not Null (unless for delete)   @SettingName    nVarChar( 50), -- Key, not Null or Empty   @SettingValue   nVarChar(Max), -- Not Null   @UserID   Int,     -- Not Null (editing user)   @CultureCode    nVarChar( 10)  -- Key, Null|'' for neutral language   AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[PortalSettings]     WHERE IsNull(PortalID, -1) = IsNull(@PortalID, -1)       AND (CultureCode = @CultureCode OR IsNull(@CultureCode, N'') = N'')       AND SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' AND IsNull(@PortalID, -1) != -1 BEGIN -- key must be valid    MERGE INTO dbo.[PortalSettings] S     USING (SELECT @PortalID PID, @CultureCode CC, @SettingName SN, @SettingValue SV) Q        ON (S.PortalID = Q.PID AND IsNull(S.CultureCode, N'') = IsNull(Q.CC, N'') AND S.SettingName = Q.SN)     WHEN MATCHED AND IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( PortalID,  SettingName,  SettingValue, CultureCode,               CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@PortalID, @SettingName, @SettingValue, NULLIF(@CultureCode, N''), IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());    -- Saving a neutral setting overwrites all localized settings with same name (for current portal):    IF IsNull(@CultureCode, N'') = N''     DELETE FROM dbo.[PortalSettings]       WHERE PortalID = @PortalID AND SettingName = @SettingName AND CultureCode IS Not Null;            END; -- Else If  END; -- Procedure"
314,aspnet_Membership_UpdateUserInfo,"CREATE PROCEDURE dbo.aspnet_Membership_UpdateUserInfo      @ApplicationName                nvarchar(256),      @UserName                       nvarchar(256),      @IsPasswordCorrect              bit,      @UpdateLastLoginActivityDate    bit,      @MaxInvalidPasswordAttempts     int,      @PasswordAttemptWindow          int,      @CurrentTimeUtc                 datetime,      @LastLoginDate                  datetime,      @LastActivityDate               datetime  AS  BEGIN      DECLARE @UserId                                 uniqueidentifier      DECLARE @IsApproved                             bit      DECLARE @IsLockedOut                            bit      DECLARE @LastLockoutDate                        datetime      DECLARE @FailedPasswordAttemptCount             int      DECLARE @FailedPasswordAttemptWindowStart       datetime      DECLARE @FailedPasswordAnswerAttemptCount       int      DECLARE @FailedPasswordAnswerAttemptWindowStart datetime        DECLARE @ErrorCode     int      SET @ErrorCode = 0        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE       SET @TranStarted = 0        SELECT  @UserId = u.UserId,              @IsApproved = m.IsApproved,              @IsLockedOut = m.IsLockedOut,              @LastLockoutDate = m.LastLockoutDate,              @FailedPasswordAttemptCount = m.FailedPasswordAttemptCount,              @FailedPasswordAttemptWindowStart = m.FailedPasswordAttemptWindowStart,              @FailedPasswordAnswerAttemptCount = m.FailedPasswordAnswerAttemptCount,              @FailedPasswordAnswerAttemptWindowStart = m.FailedPasswordAnswerAttemptWindowStart      FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m WITH ( UPDLOCK )      WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.ApplicationId = a.ApplicationId    AND              u.UserId = m.UserId AND              LOWER(@UserName) = u.LoweredUserName        IF ( @@rowcount = 0 )      BEGIN          SET @ErrorCode = 1          GOTO Cleanup      END        IF( @IsLockedOut = 1 )      BEGIN          GOTO Cleanup      END        IF( @IsPasswordCorrect = 0 )      BEGIN          IF( @CurrentTimeUtc > DATEADD( minute, @PasswordAttemptWindow, @FailedPasswordAttemptWindowStart ) )          BEGIN              SET @FailedPasswordAttemptWindowStart = @CurrentTimeUtc              SET @FailedPasswordAttemptCount = 1          END          ELSE          BEGIN              SET @FailedPasswordAttemptWindowStart = @CurrentTimeUtc              SET @FailedPasswordAttemptCount = @FailedPasswordAttemptCount + 1          END            BEGIN              IF( @FailedPasswordAttemptCount >= @MaxInvalidPasswordAttempts )              BEGIN                  SET @IsLockedOut = 1                  SET @LastLockoutDate = @CurrentTimeUtc              END          END      END      ELSE      BEGIN          IF( @FailedPasswordAttemptCount > 0 OR @FailedPasswordAnswerAttemptCount > 0 )          BEGIN              SET @FailedPasswordAttemptCount = 0              SET @FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 )              SET @FailedPasswordAnswerAttemptCount = 0              SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )              SET @LastLockoutDate = CONVERT( datetime, '17540101', 112 )          END      END        IF( @UpdateLastLoginActivityDate = 1 )      BEGIN          UPDATE  dbo.aspnet_Users          SET     LastActivityDate = @LastActivityDate          WHERE   @UserId = UserId            IF( @@ERROR <> 0 )          BEGIN              SET @ErrorCode = -1              GOTO Cleanup          END            UPDATE  dbo.aspnet_Membership          SET     LastLoginDate = @LastLoginDate          WHERE   UserId = @UserId            IF( @@ERROR <> 0 )          BEGIN              SET @ErrorCode = -1              GOTO Cleanup          END      END "
315,aspnet_Membership_UpdateUserInfo,"         UPDATE dbo.aspnet_Membership      SET IsLockedOut = @IsLockedOut, LastLockoutDate = @LastLockoutDate,          FailedPasswordAttemptCount = @FailedPasswordAttemptCount,          FailedPasswordAttemptWindowStart = @FailedPasswordAttemptWindowStart,          FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount,          FailedPasswordAnswerAttemptWindowStart = @FailedPasswordAnswerAttemptWindowStart      WHERE @UserId = UserId        IF( @@ERROR <> 0 )      BEGIN          SET @ErrorCode = -1          GOTO Cleanup      END        IF( @TranStarted = 1 )      BEGIN   SET @TranStarted = 0   COMMIT TRANSACTION      END        RETURN @ErrorCode    Cleanup:        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN @ErrorCode    END"
316,AISystem_Category_Subject_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_Subject_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Subject_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Subject where   Code = @Code  SET QUOTED_IDENTIFIER OFF     
317,AIElearning_DataKey_GetByConnectionId,"CREATE PROC AIElearning_DataKey_GetByConnectionId  @ConnectionId NVARCHAR(150)  AS  SELECT Id,ConnectionId,DataKey FROM AIElearning_DataKey WHERE ConnectionId=@ConnectionId    "
318,Journal_Comment_Delete,"CREATE PROCEDURE dbo.[Journal_Comment_Delete]  @JournalId int,  @CommentId int  AS  DELETE FROM dbo.[Journal_Comments]    WHERE     (JournalId = @JournalId AND CommentId = @CommentId)    OR    (JournalId = @JournalId AND CommentId = -1)"
319,AddUserAuthentication,"CREATE PROCEDURE dbo.AddUserAuthentication   @UserID     int,   @AuthenticationType     nvarchar(100),   @AuthenticationToken    nvarchar(1000),   @CreatedByUserID int    AS   INSERT INTO dbo.UserAuthentication (    UserID,    AuthenticationType,    AuthenticationToken,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]     )   values (    @UserID,    @AuthenticationType,    @AuthenticationToken,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()     )     SELECT SCOPE_IDENTITY()"
320,PersonaBar_SavePersonaBarMenuDefaultPermissions,"CREATE PROCEDURE dbo.[PersonaBar_SavePersonaBarMenuDefaultPermissions]     @MenuId                     INT,     @RoleNames                  NVARCHAR(260) AS BEGIN     IF EXISTS(SELECT MenuId FROM dbo.[PersonaBarMenuDefaultPermissions] WHERE MenuId = @MenuId)     BEGIN         UPDATE dbo.[PersonaBarMenuDefaultPermissions]             SET                  RoleNames = @RoleNames             WHERE MenuId = @MenuId              SELECT Id FROM dbo.[PersonaBarMenuDefaultPermissions] WHERE MenuId = @MenuId     END     ELSE     BEGIN         INSERT INTO dbo.[PersonaBarMenuDefaultPermissions] (             [MenuId],             [RoleNames]         ) VALUES (             @MenuId,             @RoleNames         )          SELECT SCOPE_IDENTITY()     END END"
321,AISystem_UserInfo_Partner_GetsBySearch,"  create proc [dbo].[AISystem_UserInfo_Partner_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_UserInfo_Partner AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_UserInfo_Partner       )         SELECT     *   FROM #AISystem_UserInfo_Partner   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
322,AIElearning_ExerciseTopic_GetItemId,"CREATE proc [dbo].[AIElearning_ExerciseTopic_GetItemId]   @pageIndex int,  @pageSize int,  @ItemId int,  @type int,  @Exerciseid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa    -- mã bài bình luận cha  if(@ItemId>-1)  set @Condition=@Condition+' AND ItemId='+str(@ItemId)  if(@type>-1)  set @Condition=@Condition+' AND Type='+str(@type)  --  if(@Exerciseid>-1)  set @Condition=@Condition+' AND Exerciseid='+str(@Exerciseid)  exec('    WITH #AIElearning_ExerciseTopic AS(    SELECT ROW_NUMBER() OVER (ORDER BY UpdatedDate desc) AS RowNumber,     *     from AIElearning_Exercise_Topic '+@Condition+'      )         SELECT     *   FROM #AIElearning_ExerciseTopic   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
323,AIElearning_Class_Notification_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Class_Notification_GetsBySearch]  @pageIndex int,  @pageSize int,  @ClassId int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Class_Notification AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_Notification where ClassId = ' + @ClassId +'     )         SELECT     *   FROM #AIElearning_Class_Notification   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
324,AddFileVersion,"CREATE PROCEDURE dbo.[AddFileVersion]    @FileId     int,   @UniqueId    uniqueidentifier,   @VersionGuid   uniqueidentifier,   @FileName    nvarchar(246),   @Extension    nvarchar(100),   @Size     int,   @Width     int,   @Height     int,   @ContentType   nvarchar(200),   @Folder     nvarchar(246),   @FolderID    int,   @UserID     int,   @Hash     varchar(40),   @LastModificationTime datetime,    @Title     nvarchar(256),   @EnablePublishPeriod bit,   @StartDate    datetime,   @EndDate    datetime,   @ContentItemID   int,   @IsPublished   bit,   @Content    image = NULL  AS  BEGIN     DECLARE @Version INT     -- Calculate the new version = Max(Files.PublishedVersion, FileVersions.Versions) + 1   SELECT @Version = MAX([Version]) + 1   FROM (SELECT [Version]     FROM dbo.[FileVersions]     WHERE FileId = @FileId     UNION     SELECT PublishedVersion [Version]     FROM dbo.Files     WHERE FileId = @FileId) v     IF  @IsPublished = 1    BEGIN     INSERT dbo.[FileVersions]        ([FileId]        ,[Version]        ,[FileName]        ,[Extension]        ,[Size]        ,[Width]        ,[Height]        ,[ContentType]        ,[Content]        ,[CreatedByUserID]        ,[CreatedOnDate]        ,[LastModifiedByUserID]        ,[LastModifiedOnDate]        ,[SHA1Hash])     SELECT  [FileId]        ,[PublishedVersion]  [Version]            ,CONVERT(nvarchar, [FileId]) + '_' + CONVERT(nvarchar, [PublishedVersion]) +'.v.resources'         ,[Extension]        ,[Size]        ,[Width]        ,[Height]        ,[ContentType]        ,[Content]        ,[CreatedByUserID]        ,[CreatedOnDate]        ,[LastModifiedByUserID]        ,[LastModifiedOnDate]        ,[SHA1Hash]          FROM Files     WHERE FileId = @FileId       -- Change PublishedVersion     UPDATE dbo.[Files]     SET  [PublishedVersion] = @Version     WHERE FileId = @FileId    END   ELSE    BEGIN     INSERT dbo.[FileVersions]         ([FileId]         ,[Version]         ,[FileName]         ,[Extension]         ,[Size]         ,[Width]         ,[Height]         ,[ContentType]         ,[Content]         ,[CreatedByUserID]         ,[CreatedOnDate]         ,[LastModifiedByUserID]         ,[LastModifiedOnDate]         ,[SHA1Hash])     VALUES (@FileId       ,@Version       ,CONVERT(nvarchar, @FileId) + '_' + CONVERT(nvarchar, @Version) +'.v.resources'       ,@Extension       ,@Size       ,@Width       ,@Height       ,@ContentType       ,@Content       ,@UserID       ,GETDATE()       ,@UserID       ,GETDATE()       ,@Hash)    END     SELECT @Version  END"
325,AISystem_Talent_Child_GetsInfoById,"CREATE proc [dbo].[AISystem_Talent_Child_GetsInfoById]   @talentid int   as  select tc.* , t.Limit, t.UnitCode, t.CateTalentId  from AISystem_Talent_Child tc inner join AISystem_Talent t   on tc.TalentId = t.Id  where tc.Id = @talentid  "
326,AISystem_Category_Bank_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_Bank_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Bank    SET QUOTED_IDENTIFIER OFF                   
327,CoreMessaging_ConvertLegacyMessages,"CREATE PROCEDURE dbo.[CoreMessaging_ConvertLegacyMessages]       @PageIndex       int,   @PageSize        int  AS    -- Set the page bounds  DECLARE @PageLowerBound INT, @PageUpperBound INT;    SET @PageLowerBound =  (@PageIndex * @PageSize) + 1  SET @PageUpperBound =  (@PageIndex * @PageSize) + @PageSize     DECLARE @MessageID bigint    DECLARE @PortalID INT   DECLARE @FromUserName nvarchar(50)   DECLARE @FromUserID INT   DECLARE @ToUserName nvarchar(50)   DECLARE @ToUserID int   DECLARE @Status tinyint   DECLARE @Subject nvarchar(max)   DECLARE @Body nvarchar(max)   DECLARE @Date datetime   DECLARE @EmailSent bit   DECLARE @EmailSentDate datetime   DECLARE @EmailSchedulerInstance UNIQUEIDENTIFIER   DECLARE @RowNumber INT      DECLARE @NewMessageID int    DECLARE @Counter int       DECLARE MessageList cursor FAST_FORWARD for     WITH messageItems  AS   (    SELECT  [MessageID], [PortalID],[FromUserName],[FromUserID], [ToUserName], [ToUserID], [Status], [Subject], [Body], [Date], [EmailSent], [EmailSentDate], [EmailSchedulerInstance]       ,ROW_NUMBER() OVER(ORDER BY MessageID ASC) AS RowNumber    FROM dbo.[Messaging_Messages]   )      SELECT * from messageItems where RowNumber BETWEEN @PageLowerBound AND @PageUpperBound   ORDER BY RowNumber ASC   OPEN MessageList   FETCH NEXT FROM MessageList     INTO @MessageID, @PortalID, @FromUserName, @FromUserID, @ToUserName, @ToUserID, @Status, @Subject, @Body, @Date, @EmailSent, @EmailSentDate, @EmailSchedulerInstance, @RowNumber      WHILE @@FETCH_STATUS = 0   BEGIN     --Create SocialMessage Record              INSERT dbo.[CoreMessaging_Messages](                             [PortalID],       [To],       [From],            [Subject],       [Body],       [ConversationID],       [ReplyAllAllowed],       [SenderUserID],                      [CreatedByUserID],                      [CreatedOnDate],                      [LastModifiedByUserID],                      [LastModifiedOnDate]                                 )              VALUES  (              @PortalID,       @ToUserName,       @FromUserName,       @Subject,       @Body,       NULL,       1, --ReplyAllAllowed,       @FromUserID,                      @FromUserID , -- CreatedBy - int       dateadd(second, (-1 * datediff(second, getutcdate(), getdate())), @Date), -- CreatedOn - utc datetime                      @FromUserID , -- LastModifiedBy - int                      GETDATE() -- LastModifiedOn - datetime                                 )              -- update conversation id                                     SELECT  @NewMessageID = SCOPE_IDENTITY()     UPDATE  dbo.[CoreMessaging_Messages] SET [ConversationID] = @NewMessageID WHERE [MessageID] = @NewMessageID                          --Create SocialRecipient Record for recipient and sender. 2 records total     Set @Counter = 0           --No need to create two records if message sent to self      IF @ToUserID = @FromUserID BEGIN Set @Counter = 1 END            WHILE @Counter < 2     BEGIN      SET @Counter = @Counter + 1           INSERT dbo.[CoreMessaging_MessageRecipients](        [MessageID],        [UserID],        [Read],        [Archived],        [CreatedByUserID],        [CreatedOnDate],        [LastModifiedByUserID],        [LastModifiedOnDate],        [EmailSent],        [EmailSentDate],        [EmailSchedulerInstance]                            )      VALUES  (        @NewMessageID,        CASE @Counter         WHEN 1 THEN @ToUserID          ELSE @FromUserID         END,                    CASE @Status         WHEN 1 THEN 0 --Status 1 means Unread, 2 means Read, 3 means Deleted         ELSE 1        END,        CASE @Status         WHEN 3 THEN 1 --Status 1 means Unread, 2 means Read, 3 means Deleted         ELSE 0        END,        @FromUserID , -- CreatedBy - int        @Date , -- CreatedOn - datetime        @FromUserID , -- LastModifiedBy - int        @Date, -- LastModifiedOn - datetime        @EmailSent,        @EmailSentDate,        @EmailSchedulerInstance      "
328,CoreMessaging_ConvertLegacyMessages,"  )        END        --Delete the Legacy record    DELETE FROM dbo.[Messaging_Messages] WHERE MessageID = @MessageID        FETCH NEXT FROM MessageList      INTO @MessageID,@PortalID, @FromUserName, @FromUserID, @ToUserName, @ToUserID, @Status, @Subject, @Body, @Date, @EmailSent, @EmailSentDate, @EmailSchedulerInstance, @RowNumber    END   CLOSE MessageList   DEALLOCATE MessageList"
329,DeletePortalSetting,"CREATE PROCEDURE dbo.[DeletePortalSetting]   @PortalID      Int,          -- Not Null   @SettingName   nVarChar(50), -- Not Null   @CultureCode   nVarChar(10)  -- Null|'' for all languages and neutral settings  AS  BEGIN   DELETE FROM dbo.[PortalSettings]    WHERE (PortalID    = @PortalID)      AND (SettingName = @SettingName)      AND (CultureCode = @CultureCode OR IsNull(@CultureCode, N'') = N'')  END; -- Procedure"
330,aspnet_Membership_GetPassword,"CREATE PROCEDURE dbo.aspnet_Membership_GetPassword      @ApplicationName                nvarchar(256),      @UserName                       nvarchar(256),      @MaxInvalidPasswordAttempts     int,      @PasswordAttemptWindow          int,      @CurrentTimeUtc                 datetime,      @PasswordAnswer                 nvarchar(128) = NULL  AS  BEGIN      DECLARE @UserId                                 uniqueidentifier      DECLARE @PasswordFormat                         int      DECLARE @Password                               nvarchar(128)      DECLARE @passAns                                nvarchar(128)      DECLARE @IsLockedOut                            bit      DECLARE @LastLockoutDate                        datetime      DECLARE @FailedPasswordAttemptCount             int      DECLARE @FailedPasswordAttemptWindowStart       datetime      DECLARE @FailedPasswordAnswerAttemptCount       int      DECLARE @FailedPasswordAnswerAttemptWindowStart datetime        DECLARE @ErrorCode     int      SET @ErrorCode = 0        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE       SET @TranStarted = 0        SELECT  @UserId = u.UserId,              @Password = m.Password,              @passAns = m.PasswordAnswer,              @PasswordFormat = m.PasswordFormat,              @IsLockedOut = m.IsLockedOut,              @LastLockoutDate = m.LastLockoutDate,              @FailedPasswordAttemptCount = m.FailedPasswordAttemptCount,              @FailedPasswordAttemptWindowStart = m.FailedPasswordAttemptWindowStart,              @FailedPasswordAnswerAttemptCount = m.FailedPasswordAnswerAttemptCount,              @FailedPasswordAnswerAttemptWindowStart = m.FailedPasswordAnswerAttemptWindowStart      FROM    dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m WITH ( UPDLOCK )      WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.ApplicationId = a.ApplicationId    AND              u.UserId = m.UserId AND              LOWER(@UserName) = u.LoweredUserName        IF ( @@rowcount = 0 )      BEGIN          SET @ErrorCode = 1          GOTO Cleanup      END        IF( @IsLockedOut = 1 )      BEGIN          SET @ErrorCode = 99          GOTO Cleanup      END        IF ( NOT( @PasswordAnswer IS NULL ) )      BEGIN          IF( ( @passAns IS NULL ) OR ( LOWER( @passAns ) <> LOWER( @PasswordAnswer ) ) )          BEGIN              IF( @CurrentTimeUtc > DATEADD( minute, @PasswordAttemptWindow, @FailedPasswordAnswerAttemptWindowStart ) )              BEGIN                  SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc                  SET @FailedPasswordAnswerAttemptCount = 1              END              ELSE              BEGIN                  SET @FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount + 1                  SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc              END                BEGIN                  IF( @FailedPasswordAnswerAttemptCount >= @MaxInvalidPasswordAttempts )                  BEGIN                      SET @IsLockedOut = 1                      SET @LastLockoutDate = @CurrentTimeUtc                  END              END                SET @ErrorCode = 3          END          ELSE          BEGIN              IF( @FailedPasswordAnswerAttemptCount > 0 )              BEGIN                  SET @FailedPasswordAnswerAttemptCount = 0                  SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )              END          END            UPDATE dbo.aspnet_Membership          SET IsLockedOut = @IsLockedOut, LastLockoutDate = @LastLockoutDate,              FailedPasswordAttemptCount = @FailedPasswordAttemptCount,              FailedPasswordAttemptWindowStart = @FailedPasswordAttemptWindowStart,              FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount,              Fail"
331,aspnet_Membership_GetPassword,"edPasswordAnswerAttemptWindowStart = @FailedPasswordAnswerAttemptWindowStart          WHERE @UserId = UserId            IF( @@ERROR <> 0 )          BEGIN              SET @ErrorCode = -1              GOTO Cleanup          END      END        IF( @TranStarted = 1 )      BEGIN   SET @TranStarted = 0   COMMIT TRANSACTION      END        IF( @ErrorCode = 0 )          SELECT @Password, @PasswordFormat        RETURN @ErrorCode    Cleanup:        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN @ErrorCode    END"
332,AIElearning_Certificate_Offline_GetsBySearchCount,create proc [dbo].[AIElearning_Certificate_Offline_GetsBySearchCount]  @Classid int  as  select COUNT(*) from AIElearning_Certificate_Offline where Classid=@Classid      
333,AIElearning_DataKey_DeleteByConnectionId,CREATE PROC AIElearning_DataKey_DeleteByConnectionId  @ConnectionId NVARCHAR(150)  AS  DELETE FROM AIElearning_DataKey WHERE ConnectionId=@ConnectionId
334,Journal_Comment_List,"CREATE PROCEDURE dbo.[Journal_Comment_List]  @JournalId int  AS  SELECT jc.*, u.* FROM dbo.[Journal_Comments] as jc    INNER JOIN dbo.[Users] as u ON jc.UserId = u.UserId  WHERE jc.JournalId = @JournalId  ORDER BY jc.CommentId"
335,AISystem_JobTitle_GetsBySearchCount,"CREATE proc [dbo].[AISystem_JobTitle_GetsBySearchCount]  @UnitCode nvarchar(50),  @Status int  as  -- AISystem_JobTitle_GetsBySearchCount 1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@UnitCode <> '')   set @condition = @condition +    ' And  (UnitCode= '''+ STR(@UnitCode)+''' )'  IF(@Status > -1)   set @condition = @condition +    ' And  (Status= '+ str(@Status) +' )'    exec('   select COUNT(*)   FROM  AISystem_JobTitle    where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF"
336,AIElearning_Exercise_MentorGetUserName,"create proc [dbo].[AIElearning_Exercise_MentorGetUserName]  @Username nvarchar(250),  @ExerciseId int  as  select * from AIElearning_Exercise_Mentor where Username =@Username and ExerciseId=@ExerciseId  "
337,PersonaBar_GetPersonaBarMenuDefaultPermissions,CREATE PROCEDURE dbo.[PersonaBar_GetPersonaBarMenuDefaultPermissions]     @MenuId INT AS  SELECT RoleNames FROM dbo.[PersonaBarMenuDefaultPermissions] WHERE MenuId = @MenuId
338,AISystem_UserInfo_Partner_GetsByUserIdAndPartnerId,"  CREATE proc [dbo].[AISystem_UserInfo_Partner_GetsByUserIdAndPartnerId]  @userInfoId int,  @partnerId int  as  --  AISystem_UserInfo_Partner_GetsByUserIdAndPartnerId 1224,30  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@userInfoId>-1)   set @Condition=@Condition+' AND up.UserInfoId='+str(@userInfoId)  if(@partnerId>-1)   set @Condition=@Condition+' AND up.PartnerId='+str(@partnerId)    exec('SELECT ROW_NUMBER() OVER (ORDER BY up.Id desc) AS RowNumber, up.* , u.Username,u.DisplayName, u.UnitChildPath, l.Type, l.Status, l.Id as LecturerId  from AISystem_UserInfo_Partner up inner join AISystem_UserInfo u on up.UserInfoId = u.Id inner join AIElearning_Lecturers l on l.UserInfoId = u.Id where ' +@Condition)    SET QUOTED_IDENTIFIER OFF     "
339,AIElearning_Exercise_GetsBySearch,"create proc [dbo].[AIElearning_Exercise_GetsBySearch]  @pageIndex int,  @pageSize int,  @classid int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND classid='+str(@classid)  exec('    WITH #AIElearning_Exercise AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Exercise   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
340,AIElearning_Class_Notification_User_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Class_Notification_User_GetsBySearchCount]  @NotificationId int,  @ClassId int,  @UserName nvarchar(100)  as  -- AIElearning_Class_ThongBao_User_GetsBySearchCount 11, 'quantridaotao'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@NotificationId > 0)   set @condition = @condition +    ' And  (NotificationId= '+ STR(@NotificationId)+' )'  IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF (@UserName IS NOT NULL AND @UserName<>'')   set @condition = @condition +    ' And  (UserName= '''+ @UserName+''' )'    exec('   select COUNT(*)     from AIElearning_Class_Notification_User where ' + @condition +'  ')      SET QUOTED_IDENTIFIER OFF   "
341,AISystem_Category_Media_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_Media_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Media  SET    ChildId = @ChildId  WHERE Id = @Id          "
342,AISystem_Category_Bank_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_Bank_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Bank  SET    ChildId = @ChildId  WHERE Id = @Id                "
343,GetUserByAuthToken,"CREATE PROCEDURE dbo.GetUserByAuthToken     @PortalId int,   @UserToken nvarchar(1000),   @AuthType nvarchar(100)    AS   SELECT u.*     FROM dbo.vw_Users u     INNER JOIN dbo.UserAuthentication ua ON u.UserID = ua.UserID   WHERE  ua.AuthenticationToken = @UserToken    AND ua.AuthenticationType = @AuthType    AND    (PortalId = @PortalId OR IsSuperUser = 1 OR @PortalId is null)"
344,DeletePortalSettings,"CREATE PROCEDURE dbo.[DeletePortalSettings]   @PortalID      Int,          -- Not Null   @CultureCode   nVarChar(10)  -- Null|'' for all languages and neutral settings    AS  BEGIN   DELETE FROM dbo.[PortalSettings]    WHERE (PortalID    = @PortalID)      AND (CultureCode = @CultureCode OR IsNull(@CultureCode, N'') = N'')  END; -- Procedure"
345,GetSkinPackageByPackageID,CREATE PROCEDURE dbo.GetSkinPackageByPackageID   @PackageID int   AS  BEGIN   SELECT SP.*    FROM  dbo.SkinPackages SP    WHERE SP.PackageID = @PackageID     SELECT I.*    FROM  dbo.Skins I   INNER JOIN dbo.SkinPackages S ON S.SkinPackageID = I.SkinPackageID   WHERE S.PackageID = @PackageID  END
346,aspnet_Membership_SetPassword,"CREATE PROCEDURE dbo.aspnet_Membership_SetPassword      @ApplicationName  nvarchar(256),      @UserName         nvarchar(256),      @NewPassword      nvarchar(128),      @PasswordSalt     nvarchar(128),      @CurrentTimeUtc   datetime,      @PasswordFormat   int = 0  AS  BEGIN      DECLARE @UserId uniqueidentifier      SELECT  @UserId = NULL      SELECT  @UserId = u.UserId      FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m      WHERE   LoweredUserName = LOWER(@UserName) AND              u.ApplicationId = a.ApplicationId  AND              LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.UserId = m.UserId        IF (@UserId IS NULL)          RETURN(1)        UPDATE dbo.aspnet_Membership      SET Password = @NewPassword, PasswordFormat = @PasswordFormat, PasswordSalt = @PasswordSalt,          LastPasswordChangedDate = @CurrentTimeUtc      WHERE @UserId = UserId      RETURN(0)  END"
347,AISystem_Photo_DeleteAlbumId,create proc [dbo].[AISystem_Photo_DeleteAlbumId]  @albumid int  as  delete from AISystem_Photo where AlbumId=@albumid      
348,AISystem_JobTitle_GetsBySearch,"CREATE proc [dbo].[AISystem_JobTitle_GetsBySearch]  @pageIndex int,  @pageSize int,  @unitCode nvarchar(50),  @Status int  as  -- AISystem_JobTitle_GetsBySearch 1,111,'vgr'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@unitCode <> '')   set @condition = @condition +    ' And  (UnitCode= '''+ @unitCode +''' )'  IF(@Status > -1)   set @condition = @condition +    ' And  (Status= '+ str(@Status) +' )'  exec('    WITH #AISystem_JobTitle AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_JobTitle where ' + @condition +'      )         SELECT     *   FROM #AISystem_JobTitle   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
349,AISystem_UserInfo_Report,"CREATE proc [dbo].[AISystem_UserInfo_Report]  @username nvarchar(250),  @Limit int,  @Type int,  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),   @JobTitlecode nvarchar(250),  @Status int,  @tungay datetime,  @denngay datetime,  @TypeLogin int  as  --[dbo].[AISystem_UserInfo_Report]'',0,0,'4986','','',1,'01/01/1900','01/01/2900',0  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (tblUser.Username like N''%' + @username + '%'' or  tblUser.Mastercode like N''%' + @username + '%'') '  IF(@Limit > 0)   set @condition = @condition +    ' And  ( tblUser.Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  ( tblUser.Type= '+ STR(@Type)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  ( tblUser.Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   set @condition = @condition +    ' And  ( tblUser.UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  ( tblUser.JobTitlecode= '''+ @JobTitlecode+''' )'  IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'  IF(@TypeLogin > 0)   set @condition = @condition +    ' And  ( tblUser.TypeLogin= '+ STR(@TypeLogin)+' )'  IF CONVERT(datetime,@tungay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate >= ''' + convert(nvarchar(23),@tungay,121) + ''''  IF CONVERT(datetime,@denngay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate <= ''' + convert(nvarchar(23),@denngay,121) + ''''    exec(' SELECT tblUser.Username ,tblUser.displayname,  tblUser.Mastercode,tblUser.EmployeeCode,  unit.Title [Donvi],(select title from AISystem_Category_Unit where code=tblUser.UnitChildCode and Status =1) [Donvicon],  job.title [Nhomchucdanh],jb.title [Chucdanh], lv.title [Capbac],  tblUser.Email,tblUser.InDate ,tblUser.AppointDate,tblUser.*,  tblUser.InDateCompany   from AISystem_UserInfo  tblUser  left join AISystem_Category_Unit unit  on tblUser.unitcode=unit.Code  left join AISystem_JobTitle_Title jb  on tblUser.JobTitleCode=jb.Code  left join AISystem_JobTitle job  on tblUser.GroupJobTileCode=job.Code  left join AISystem_Level lv  on  tblUser.LevelCode=lv.Code   where ' + @condition +' and unit.Status =1  order by tblUser.Username   ')        "
350,DeleteServer,CREATE PROCEDURE dbo.[DeleteServer]   @ServerID   int  AS   DELETE FROM dbo.WebServers WHERE ServerID=@ServerID
351,AIElearning_Exercise_GetsClassUserCount,"CREATE proc [dbo].[AIElearning_Exercise_GetsClassUserCount]  @Keyword nvarchar(250),  @classid int,  @listUserid nvarchar(250)      as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND UserName LIKE N''%'+@Keyword+'%'''   --  if(@listUserid<>'')  set @condition = @condition + ' and UserId  in (select * from [dbo].Split('''+@listUserid+'''))'  else  set @condition = @condition + ' and UserId  in (select * from [dbo].Split(-1))'     --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND ClassId='+str(@ClassId)   --trạng thái      exec('   select COUNT(*) from AIElearning_ClassUser where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
352,AIElearning_Class_Notification_User_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Class_Notification_User_GetsBySearch]  @pageIndex int,  @pageSize int,  @NotificationId int,  @ClassId int,  @UserName nvarchar(100)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@NotificationId > 0)   set @condition = @condition +    ' And  (NotificationId= '+ STR(@NotificationId)+' )'  IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF (@UserName IS NOT NULL AND @UserName<>'')   set @condition = @condition +    ' And  (UserName= '''+ @UserName+''' )'    exec('    WITH #AIElearning_Class_Notification_User AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_Notification_User  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Class_Notification_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
353,GetFileVersionsInFolder,"CREATE PROCEDURE dbo.[GetFileVersionsInFolder]  @FolderId int  AS  BEGIN   SELECT       fv.[FileId]        ,fv.[Version]        ,fv.[FileName]        ,fv.[Extension]        ,fv.[Size]        ,fv.[Width]        ,fv.[Height]        ,fv.[ContentType]        ,fv.[CreatedByUserID]        ,fv.[CreatedOnDate]        ,fv.[LastModifiedByUserID]        ,fv.[LastModifiedOnDate]        ,fv.[SHA1Hash]   FROM dbo.FileVersions fv, dbo.Files f      WHERE fv.FileId = f.FileId and f.FolderId = @FolderId  END"
354,AISystem_Level_GetbyCode,  CREATE proc [dbo].[AISystem_Level_GetbyCode]  @Code nvarchar(50)  as  select top(1)* from AISystem_Level where Code=@code              
355,AISystem_Category_Bank_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_Bank_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Bank WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Bank WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Bank WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Bank WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Bank WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Bank         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Bank SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
356,DeleteTabPermissionsByTabID,CREATE PROCEDURE dbo.DeleteTabPermissionsByTabID   @TabID int  AS    DELETE FROM dbo.TabPermission  WHERE   [TabID] = @TabID
357,GetRoleSettings,"CREATE PROCEDURE dbo.[GetRoleSettings]   @RoleId     int -- Not Null|-1  AS  BEGIN   SELECT RoleSettingID,       RoleID,       SettingName,       CASE WHEN Lower(SettingValue) LIKE N'fileid=%'         THEN dbo.[FilePath](SettingValue)         ELSE SettingValue              END    AS SettingValue,       CreatedByUserID,       CreatedOnDate,       LastModifiedByUserID,       LastModifiedOnDate    FROM  dbo.[RoleSettings]    WHERE RoleID = @RoleId  END; -- Procedure"
358,aspnet_Membership_ResetPassword,"CREATE PROCEDURE dbo.aspnet_Membership_ResetPassword      @ApplicationName             nvarchar(256),      @UserName                    nvarchar(256),      @NewPassword                 nvarchar(128),      @MaxInvalidPasswordAttempts  int,      @PasswordAttemptWindow       int,      @PasswordSalt                nvarchar(128),      @CurrentTimeUtc              datetime,      @PasswordFormat              int = 0,      @PasswordAnswer              nvarchar(128) = NULL  AS  BEGIN      DECLARE @IsLockedOut                            bit      DECLARE @LastLockoutDate                        datetime      DECLARE @FailedPasswordAttemptCount             int      DECLARE @FailedPasswordAttemptWindowStart       datetime      DECLARE @FailedPasswordAnswerAttemptCount       int      DECLARE @FailedPasswordAnswerAttemptWindowStart datetime        DECLARE @UserId                                 uniqueidentifier      SET     @UserId = NULL        DECLARE @ErrorCode     int      SET @ErrorCode = 0        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE       SET @TranStarted = 0        SELECT  @UserId = u.UserId      FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m      WHERE   LoweredUserName = LOWER(@UserName) AND              u.ApplicationId = a.ApplicationId  AND              LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.UserId = m.UserId        IF ( @UserId IS NULL )      BEGIN          SET @ErrorCode = 1          GOTO Cleanup      END        SELECT @IsLockedOut = IsLockedOut,             @LastLockoutDate = LastLockoutDate,             @FailedPasswordAttemptCount = FailedPasswordAttemptCount,             @FailedPasswordAttemptWindowStart = FailedPasswordAttemptWindowStart,             @FailedPasswordAnswerAttemptCount = FailedPasswordAnswerAttemptCount,             @FailedPasswordAnswerAttemptWindowStart = FailedPasswordAnswerAttemptWindowStart      FROM dbo.aspnet_Membership WITH ( UPDLOCK )      WHERE @UserId = UserId        IF( @IsLockedOut = 1 )      BEGIN          SET @ErrorCode = 99          GOTO Cleanup      END        UPDATE dbo.aspnet_Membership      SET    Password = @NewPassword,             LastPasswordChangedDate = @CurrentTimeUtc,             PasswordFormat = @PasswordFormat,             PasswordSalt = @PasswordSalt      WHERE  @UserId = UserId AND             ( ( @PasswordAnswer IS NULL ) OR ( LOWER( PasswordAnswer ) = LOWER( @PasswordAnswer ) ) )        IF ( @@ROWCOUNT = 0 )          BEGIN              IF( @CurrentTimeUtc > DATEADD( minute, @PasswordAttemptWindow, @FailedPasswordAnswerAttemptWindowStart ) )              BEGIN                  SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc                  SET @FailedPasswordAnswerAttemptCount = 1              END              ELSE              BEGIN                  SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc                  SET @FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount + 1              END                BEGIN                  IF( @FailedPasswordAnswerAttemptCount >= @MaxInvalidPasswordAttempts )                  BEGIN                      SET @IsLockedOut = 1                      SET @LastLockoutDate = @CurrentTimeUtc                  END              END                SET @ErrorCode = 3          END      ELSE          BEGIN              IF( @FailedPasswordAnswerAttemptCount > 0 )              BEGIN                  SET @FailedPasswordAnswerAttemptCount = 0                  SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )              END          END        IF( NOT ( @PasswordAnswer IS NULL ) )      BEGIN          UPDATE dbo.aspnet_Membership          SET IsLockedOut = @IsLockedOut, LastLockoutDate = @LastLockoutDate,              FailedPasswordAttemptCount = @FailedPasswordAttemptCount,              FailedPass"
359,aspnet_Membership_ResetPassword,"wordAttemptWindowStart = @FailedPasswordAttemptWindowStart,              FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount,              FailedPasswordAnswerAttemptWindowStart = @FailedPasswordAnswerAttemptWindowStart          WHERE @UserId = UserId            IF( @@ERROR <> 0 )          BEGIN              SET @ErrorCode = -1              GOTO Cleanup          END      END        IF( @TranStarted = 1 )      BEGIN   SET @TranStarted = 0   COMMIT TRANSACTION      END        RETURN @ErrorCode    Cleanup:        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN @ErrorCode    END"
360,UpdateFolderMapping,"CREATE PROCEDURE dbo.[UpdateFolderMapping]   @FolderMappingID int,   @MappingName nvarchar(50),   @Priority int,   @LastModifiedByUserID int  AS  BEGIN   UPDATE dbo.[FolderMappings]   SET    MappingName = @MappingName,    Priority = @Priority,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate = GETDATE()   WHERE FolderMappingID = @FolderMappingID  END"
361,AddExceptionEvent,"CREATE PROCEDURE dbo.AddExceptionEvent    @LogEventID bigint,    @AssemblyVersion varchar(20),    @PortalId int,    @UserId int,    @TabId int,    @RawUrl nvarchar(260),    @Referrer nvarchar(260),    @UserAgent nvarchar(260)  AS    INSERT INTO dbo.[ExceptionEvents]   (LogEventID,   AssemblyVersion,   PortalId,   UserId,   TabId,   RawUrl,   Referrer,   UserAgent)  VALUES   (@LogEventID,   @AssemblyVersion,   @PortalId,   @UserId,   @TabId,   @RawUrl,   @Referrer,   @UserAgent)"
362,AISystem_Photo_GetsBySearch,"  CREATE proc [dbo].[AISystem_Photo_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @isView int,  @AlbumId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Title like N''%' + @Keyword + '%'') '  if(@isView>-1)  set @Condition=@Condition+' AND IsView='+str(@isView)  if(@AlbumId>-1)  set @Condition=@Condition+' AND AlbumId='+str(@AlbumId)  exec('    WITH #AISystem_Photo AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo asc) AS RowNumber,     *     from AISystem_Photo   '+@Condition+'    )         SELECT     *   FROM #AISystem_Photo   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
363,AISystem_JobTitle_UpdateWithPosition,"  CREATE PROCEDURE [dbo].[AISystem_JobTitle_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @UnitCode nvarchar(50)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_JobTitle WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_JobTitle WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_JobTitle WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_JobTitle WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_JobTitle WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_JobTitle         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_JobTitle SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [UnitCode] = @UnitCode  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
364,AIElearning_Class_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Class_GetsBySearchCount]   @Keyword nvarchar(250),  @Type int,  @CateSubjectid int,  @Status int,  @Subjectid int,  @Unitcode nvarchar(50),  @TypePalen int,  @Username nvarchar(150),  @lessonId int  as  --[dbo].[AIElearning_Class_GetsBySearchCount] '',-1,-1,-1,-1,'-1',-1,'namnamnam'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  if(@lessonId>-1)   set @Condition=@Condition+' AND LessonId='+str(@lessonId)  IF(@CateSubjectid >-1)   set @Condition=@Condition+' AND CateSubjectid='+str(@CateSubjectid)  IF(@Subjectid>-1)   set @Condition=@Condition+' AND Subjectid='+str(@Subjectid)  if(@Status>-1)   set @Condition=@Condition+' AND StatusLearing='+str(@Status)  if(@TypePalen>-1)   set @Condition=@Condition+' AND TypePalen='+str(@TypePalen)  if(@Unitcode<>'')  set @Condition=@Condition+' AND Unitcode='''+@Unitcode+''''  if(@Username<>'')  set @Condition=@Condition+' AND id in (SELECT distinct(cl.classid) FROM AIElearning_Class_Lecturers AS cl INNER JOIN AIElearning_Lecturers AS l ON cl.LecturersId = l.Id INNER JOIN AISystem_UserInfo AS u ON l.UserInfoId = u.Id INNER JOIN AIElearning_Class AS c ON cl.ClassId = c.Id   WHERE  (l.Status = 1) AND (u.Username = N'''+@Username+''')) '      exec('select COUNT(Id) from AIElearning_Class '+@Condition)  "
365,DeleteSchedule,CREATE PROCEDURE dbo.DeleteSchedule  @ScheduleID int  AS  DELETE FROM dbo.Schedule  WHERE ScheduleID = @ScheduleID
366,CoreMessaging_GetUserPreference,"CREATE PROCEDURE dbo.[CoreMessaging_GetUserPreference]   @PortalId INT ,    @UserId INT  AS   BEGIN   SELECT PortalId, UserId, MessagesEmailFrequency, NotificationsEmailFrequency   FROM dbo.CoreMessaging_UserPreferences UP   WHERE UP.PortalId = @PortalId    AND     UP.UserId = @UserId   END"
367,AIElearning_Exercise_GetsClassUser,"CREATE proc [dbo].[AIElearning_Exercise_GetsClassUser]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @listUserid nvarchar(250)    as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND  c.UserName LIKE N''%'+@Keyword+'%'''   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND c.classid='+str(@classid)   --loại  if(@listUserid<>'')  set @condition = @condition + ' and c.UserId  in (select * from [dbo].Split('''+@listUserid+'''))'  else  set @condition = @condition + ' and c.UserId  in (select * from [dbo].Split(-1))'      exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*, i.Displayname     from AIElearning_ClassUser c inner join Users u   on u.UserID = c.UserId inner join AISystem_UserInfo i on i.UserId = u.UserID  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
368,AddVocabulary,"CREATE PROCEDURE dbo.[AddVocabulary]    @VocabularyTypeID int,   @Name    nvarchar(250),   @Description  nvarchar(2500),   @Weight    int,   @ScopeID   int,   @ScopeTypeID  int,   @CreatedByUserID int  AS   INSERT INTO dbo.Taxonomy_Vocabularies (    VocabularyTypeID,    [Name],    Description,    Weight,    ScopeID,    ScopeTypeID,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )     VALUES (    @VocabularyTypeID,    @Name,    @Description,    @Weight,    @ScopeID,    @ScopeTypeID,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
369,AIElearning_Class_Notification_GetsNotifyNotView2,"create proc [dbo].[AIElearning_Class_Notification_GetsNotifyNotView2]  @ClassId nvarchar(500),  @UserName nvarchar(100)  as  -- AIElearning_Class_Notification_GetsNotifyNotView2 '9,11', 'quantridaotao'  exec('    select * from AIElearning_Class_Notification where ClassId in (' + @ClassId +') and Id not in (select NotificationId  from AIElearning_Class_Notification_User where ClassId in (' + @ClassId +') and  UserName =''' + @UserName +''')       ')    SET QUOTED_IDENTIFIER OFF "
370,GetFileVersions,"CREATE PROCEDURE dbo.[GetFileVersions]   @FileId int  AS  BEGIN   SELECT       [FileId]        ,[Version]        ,[FileName]        ,[Extension]        ,[Size]        ,[Width]        ,[Height]        ,[ContentType]        ,[CreatedByUserID]        ,[CreatedOnDate]        ,[LastModifiedByUserID]        ,[LastModifiedOnDate]        ,[SHA1Hash]   FROM dbo.FileVersions fv   WHERE fv.FileId = @FileId  END"
371,AIElearning_Certificate_User_GetsBySearchCount,create proc [dbo].[AIElearning_Certificate_User_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Certificate_User    SET QUOTED_IDENTIFIER OFF     
372,UpdateRoleSetting,"CREATE PROCEDURE dbo.[UpdateRoleSetting]   @RoleID    int,           -- Not Null|-1   @SettingName  nvarchar( 50), -- Not Null|''   @SettingValue  nvarchar(Max), -- Null: remove setting   @UserID    int            -- for logging  AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[RoleSettings]     WHERE IsNull(RoleID, -1) = IsNull(@RoleID, -1)       AND SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' AND IsNull(@RoleID, -1) != -1 BEGIN -- key must be valid    MERGE INTO dbo.[RoleSettings] S     USING (SELECT @RoleID RID, @SettingName SN, @SettingValue SV) Q        ON (S.RoleID = Q.RID AND S.SettingName = Q.SN)     WHEN MATCHED AND IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( RoleID,  SettingName,  SettingValue, CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@RoleID, @SettingName, @SettingValue, IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());   END; -- Else If  END; -- Procedure"
373,aspnet_Membership_UnlockUser,"CREATE PROCEDURE dbo.aspnet_Membership_UnlockUser      @ApplicationName                         nvarchar(256),      @UserName                                nvarchar(256)  AS  BEGIN      DECLARE @UserId uniqueidentifier      SELECT  @UserId = NULL      SELECT  @UserId = u.UserId      FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m      WHERE   LoweredUserName = LOWER(@UserName) AND              u.ApplicationId = a.ApplicationId  AND              LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.UserId = m.UserId        IF ( @UserId IS NULL )          RETURN 1        UPDATE dbo.aspnet_Membership      SET IsLockedOut = 0,          FailedPasswordAttemptCount = 0,          FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),          FailedPasswordAnswerAttemptCount = 0,          FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 ),          LastLockoutDate = CONVERT( datetime, '17540101', 112 )      WHERE @UserId = UserId        RETURN 0  END"
374,AIElearning_Certificate_GetClassId,create proc [dbo].[AIElearning_Certificate_GetClassId]  @classid int  as  select * from AIElearning_Certificate where classid=@classid  
375,vw_EventLog,"CREATE VIEW dbo.vw_EventLog  AS  SELECT   el.*,   ee.AssemblyVersion,   ee.PortalId,   ee.UserId,   ee.TabId,   ee.RawUrl,   ee.Referrer,   ee.UserAgent,   e.Message,   e.StackTrace,   e.InnerMessage,   e.InnerStackTrace,   e.Source  FROM dbo.EventLog el   LEFT JOIN dbo.ExceptionEvents ee ON el.LogEventID = ee.LogEventID   LEFT JOIN dbo.Exceptions e ON el.ExceptionHash = e.ExceptionHash"
376,AISystem_Photo_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Photo_GetsBySearchCount]  @Keyword nvarchar(250),  @Status int,  @AlbumId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  if(@AlbumId>-1)  set @Condition=@Condition+' AND AlbumId='+str(@AlbumId)  exec('select COUNT(Id) from AISystem_Photo '+@Condition)  SET QUOTED_IDENTIFIER OFF  "
377,AIElearning_Class_MarkOffLine_DeleteByMarkCodeId,create proc [dbo].[AIElearning_Class_MarkOffLine_DeleteByMarkCodeId]  @MarkCodeId int  as  delete AIElearning_Class_MarkOffLine where MarkCodeId =@MarkCodeId
378,Journal_Split,"CREATE FUNCTION dbo.[Journal_Split](@text varchar(8000), @delimiter char(1))  RETURNS @words TABLE (objectid smallint primary key, id int)  AS  BEGIN   DECLARE @pos smallint,    @i smallint,    @j smallint,    @s varchar(255)     SET @pos = 1     WHILE @pos <= LEN(@text)   BEGIN    SET @i = CHARINDEX(' ', @text, @pos)    SET @j = CHARINDEX(@delimiter, @text, @pos)      IF @i > 0 OR @j > 0    BEGIN     IF @i = 0 OR (@j > 0 AND @j < @i)      SET @i = @j       IF @i > @pos     BEGIN      -- @i now holds the earliest delimiter in the string      SET @s = SUBSTRING(@text, @pos, @i - @pos)         INSERT INTO @words      VALUES (@pos, @s)     END       SET @pos = @i + 1     WHILE @pos < LEN(@text) AND SUBSTRING(@text, @pos, 1) IN (' ', ',')      SET @pos = @pos + 1    END    ELSE    BEGIN     INSERT INTO @words     VALUES (@pos, SUBSTRING(@text, @pos, LEN(@text) - @pos + 1))       SET @pos = LEN(@text) + 1    END   END      RETURN  END"
379,AISystem_JobTitle_UpdateChildId,"  create PROCEDURE [dbo].[AISystem_JobTitle_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_JobTitle  SET    ChildId = @ChildId  WHERE Id = @Id  "
380,AIElearning_Exercise_ThemeGetName,"CREATE proc [dbo].[AIElearning_Exercise_ThemeGetName]   @name nvarchar(250),  @ExerciseId int  as  select * from AIElearning_Exercise_Theme where name =@name and ExerciseId=@ExerciseId  "
381,AIElearning_Class_GetsBySearch,"CREATE proc [dbo].[AIElearning_Class_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Type int,  @CateSubjectid int,  @Status int,  @Subjectid int,  @Unitcode nvarchar(50),  @TypePalen int,  @Username nvarchar(150),  @lessonId int  as  -- AIElearning_Class_GetsBySearch 1,22,'',-1,-1,-1,-1,'-1',-1,'namnamnam'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@lessonId>-1)   set @Condition=@Condition+' AND LessonId='+str(@lessonId)  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  IF(@CateSubjectid >-1)   set @Condition=@Condition+' AND CateSubjectid='+str(@CateSubjectid)  IF(@Subjectid>-1)   set @Condition=@Condition+' AND Subjectid='+str(@Subjectid)  if(@Status>-1)   set @Condition=@Condition+' AND StatusLearing='+str(@Status)  if(@TypePalen>-1)   set @Condition=@Condition+' AND TypePalen='+str(@TypePalen)  if(@Unitcode<>'')  set @Condition=@Condition+' AND Unitcode='''+@Unitcode+''''    if(@Username<>'')  set @Condition=@Condition+' AND id in (SELECT distinct(cl.classid) FROM AIElearning_Class_Lecturers AS cl INNER JOIN AIElearning_Lecturers AS l ON cl.LecturersId = l.Id INNER JOIN AISystem_UserInfo AS u ON l.UserInfoId = u.Id INNER JOIN AIElearning_Class AS c ON cl.ClassId = c.Id   WHERE  (l.Status = 1) AND (u.Username = N'''+@Username+''')) '    exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class '+@Condition+'       )      SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
382,CoreMessaging_SetUserPreference,"CREATE PROCEDURE dbo.[CoreMessaging_SetUserPreference]   @PortalId INT ,    @UserId INT,   @MessagesEmailFrequency INT,   @NotificationsEmailFrequency INT  AS   BEGIN    UPDATE dbo.CoreMessaging_UserPreferences   SET MessagesEmailFrequency = @MessagesEmailFrequency    ,NotificationsEmailFrequency = @NotificationsEmailFrequency   WHERE PortalId = @PortalId   AND UserId = @UserId     IF @@ROWCOUNT = 0 BEGIN    INSERT INTO dbo.CoreMessaging_UserPreferences (PortalId, UserId, MessagesEmailFrequency, NotificationsEmailFrequency)    VALUES (@PortalId, @UserId, @MessagesEmailFrequency, @NotificationsEmailFrequency)   END   END"
383,AIElearning_Exercise_GetsMentorCount,"CREATE proc [dbo].[AIElearning_Exercise_GetsMentorCount]  @classid int,  @mentorid int,  @status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@classid >-1)   set @Condition=@Condition+' AND classid='+str(@classid)    if(@status >-1)   set @Condition=@Condition+' AND status='+str(@status)    if(@mentorid >-1)   set @Condition=@Condition+' AND id in (select ExerciseId from AIElearning_Exercise_Mentor where Userid='''+str(@mentorid)+''')'  exec('select COUNT(*) from AIElearning_Exercise '+@Condition)  SET QUOTED_IDENTIFIER OFF  "
384,AIElearning_Class_Notification_GetsNotifyNotView,"create proc [dbo].[AIElearning_Class_Notification_GetsNotifyNotView]  @ClassId int,  @UserName nvarchar(100)  as  -- AIElearning_Class_Notification_GetsNotifyNotView 9, 'quantridaotao'  exec('    select * from AIElearning_Class_Notification where ClassId= ' + @ClassId +' and Id not in (select NotificationId  from AIElearning_Class_Notification_User where ClassId= ' + @ClassId +' and  UserName =''' + @UserName +''')       ')    SET QUOTED_IDENTIFIER OFF "
385,GetPropertyDefinitionsByCategory,"CREATE PROCEDURE dbo.GetPropertyDefinitionsByCategory   @PortalID int,   @Category nvarchar(50)    AS  SELECT *   FROM dbo.ProfilePropertyDefinition   WHERE  (PortalId = @PortalID OR (PortalId IS NULL AND @PortalID IS NULL))    AND PropertyCategory = @Category   ORDER BY ViewOrder"
386,GetFileVersion,"CREATE PROCEDURE dbo.[GetFileVersion]    @FileId int,   @Version int  AS  BEGIN   SELECT       [FileId]        ,[Version]        ,[FileName]        ,[Extension]        ,[Size]        ,[Width]        ,[Height]        ,[ContentType]        ,[CreatedByUserID]        ,[CreatedOnDate]        ,[LastModifiedByUserID]        ,[LastModifiedOnDate]        ,[SHA1Hash]   FROM dbo.FileVersions fv   WHERE FileId = @FileId     AND Version = @Version  END"
387,GetModuleSetting,"CREATE PROCEDURE dbo.[GetModuleSetting]      @ModuleId      Int,          -- not null!      @SettingName   nVarChar(50)  -- not null or empty!  AS  BEGIN   SELECT SettingName,       CASE WHEN Lower(SettingValue) LIKE N'fileid=%'      THEN dbo.[FilePath](SettingValue)      ELSE SettingValue         END AS SettingValue    FROM  dbo.[ModuleSettings]     WHERE ModuleID    = @ModuleId       AND SettingName = @SettingName;  END; -- Procedure"
388,aspnet_Membership_UpdateUser,"CREATE PROCEDURE dbo.aspnet_Membership_UpdateUser      @ApplicationName      nvarchar(256),      @UserName             nvarchar(256),      @Email                nvarchar(256),      @Comment              ntext,      @IsApproved           bit,      @LastLoginDate        datetime,      @LastActivityDate     datetime,      @UniqueEmail          int,      @CurrentTimeUtc       datetime  AS  BEGIN      DECLARE @UserId uniqueidentifier      DECLARE @ApplicationId uniqueidentifier      SELECT  @UserId = NULL      SELECT  @UserId = u.UserId, @ApplicationId = a.ApplicationId      FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m      WHERE   LoweredUserName = LOWER(@UserName) AND              u.ApplicationId = a.ApplicationId  AND              LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.UserId = m.UserId        IF (@UserId IS NULL)          RETURN(1)        IF (@UniqueEmail = 1)      BEGIN          IF (EXISTS (SELECT *                      FROM  dbo.aspnet_Membership WITH (UPDLOCK, HOLDLOCK)                      WHERE ApplicationId = @ApplicationId  AND @UserId <> UserId AND LoweredEmail = LOWER(@Email)))          BEGIN              RETURN(7)          END      END        DECLARE @TranStarted   bit      SET @TranStarted = 0        IF( @@TRANCOUNT = 0 )      BEGIN       BEGIN TRANSACTION       SET @TranStarted = 1      END      ELSE   SET @TranStarted = 0        UPDATE dbo.aspnet_Users WITH (ROWLOCK)      SET           LastActivityDate = @LastActivityDate      WHERE         @UserId = UserId        IF( @@ERROR <> 0 )          GOTO Cleanup        UPDATE dbo.aspnet_Membership WITH (ROWLOCK)      SET           Email            = @Email,           LoweredEmail     = LOWER(@Email),           Comment          = @Comment,           IsApproved       = @IsApproved,           LastLoginDate    = @LastLoginDate      WHERE         @UserId = UserId        IF( @@ERROR <> 0 )          GOTO Cleanup        IF( @TranStarted = 1 )      BEGIN   SET @TranStarted = 0   COMMIT TRANSACTION      END        RETURN 0    Cleanup:        IF( @TranStarted = 1 )      BEGIN          SET @TranStarted = 0       ROLLBACK TRANSACTION      END        RETURN -1  END"
389,AISystem_Category_Subject_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_Subject_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Subject    SET QUOTED_IDENTIFIER OFF       
390,GetEventLog,"CREATE PROCEDURE dbo.[GetEventLog]      @PortalID   Int,            -- Might be Null for all sites      @LogTypeKey nVarChar(35),   -- Key of log type or Null for all      @PageSize   Int,            -- Number of items per page      @PageIndex  Int             -- Page number starting with 0  AS  BEGIN       WITH [eLog] AS (           SELECT ROW_NUMBER() OVER (ORDER BY E.LogCreateDate Desc) AS RowNumber, e.*            FROM dbo.vw_EventLog e            WHERE (e.LogPortalID = @PortalID     OR IsNull(@PortalID,   -1) = -1)              AND (e.LogTypeKey LIKE @LogTypeKey OR IsNull(@LogTypeKey, '') = '')       )       SELECT * FROM [eLog]        WHERE RowNumber >= dbo.PageLowerBound(@PageIndex, @PageSize)          AND RowNumber <= dbo.PageUpperBound(@PageIndex, @PageSize)        ORDER BY RowNumber        SELECT COUNT(1) AS TotalRecords       FROM dbo.vw_EventLog e       WHERE (e.LogPortalID = @PortalID     OR IsNull(@PortalID,   -1) = -1)         AND (e.LogTypeKey Like @LogTypeKey OR IsNull(@LogTypeKey, '') = '')    END"
391,AISystem_PhotoAlbum_GetsBySearch,"  CREATE proc [dbo].[AISystem_PhotoAlbum_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Title like N''%' + @Keyword + '%'') '  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  exec('    WITH #AISystem_PhotoAlbum AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_PhotoAlbum '+@Condition+'      )         SELECT     *   FROM #AISystem_PhotoAlbum   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
392,AISystem_JobTitle_GetByTitle,"CREATE PROC [dbo].[AISystem_JobTitle_GetByTitle]  @UnitCode nvarchar(50),  @Title NVARCHAR(200),  @ParentId int  AS  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@UnitCode <> '')   SET @Condition +='  and  a.UnitCode=''' + str(@UnitCode) +''''  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_JobTitle AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   AND   status =1   ')    "
393,AISystem_UserPermissionScope_CheckPermission,"CREATE proc [dbo].[AISystem_UserPermissionScope_CheckPermission]  @UserId int,  @RoleName nvarchar(500)  as  -- AISystem_UserPermissionScope_CheckPermission 24,'QuantridaotaoDv'  Declare @RoleId AS INT  select @RoleId = RoleID from  Roles where RoleName=@RoleName  IF( @RoleId IS NOT NULL)   exec('select * from AISystem_UserPermissionScope where UserId = ' + @UserId + ' and  DNNRoleId=' +@RoleId)  SET QUOTED_IDENTIFIER OFF     "
394,AIElearning_ClassCategory_DeleteByClassId,create proc [dbo].[AIElearning_ClassCategory_DeleteByClassId]   @ClassId int  as      delete AIElearning_ClassCategory  where ClassId=@ClassId  
395,AIElearning_Exercise_GetsMentor,"  CREATE proc [dbo].[AIElearning_Exercise_GetsMentor]   @pageIndex int,  @pageSize int,  @classid int,  @mentorid int,  @status int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND classid='+str(@classid)   if(@status >-1)   set @Condition=@Condition+' AND status='+str(@status)    if(@mentorid >-1)   set @Condition=@Condition+' AND id in (select ExerciseId from AIElearning_Exercise_Mentor where Userid='''+str(@mentorid)+''')'  exec('    WITH #AIElearning_Exercise AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Exercise   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
396,LocalizeTab,"CREATE PROCEDURE dbo.[LocalizeTab]    @TabId     int,   @CultureCode   nvarchar(10),   @LastModifiedByUserID int  AS   BEGIN    UPDATE dbo.Tabs     SET       CultureCode    = @CultureCode,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate  = getdate()          WHERE TabID = @TabId         UPDATE dbo.TabModules     SET       CultureCode    = @CultureCode,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate  = getdate()          WHERE TabID = @TabId   END"
397,AISystem_Category_WorkPlace_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_WorkPlace WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_WorkPlace (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_WorkPlace WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_WorkPlace WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_WorkPlace WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_WorkPlace WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_WorkPlace WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_WorkPlace         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_WorkPlace (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()                "
398,GetModuleSettings,"CREATE PROCEDURE dbo.[GetModuleSettings]      @ModuleId Int -- Null: settings from all modules  AS  BEGIN   SELECT SettingName,       CASE WHEN Lower(SettingValue) LIKE N'fileid=%'         THEN dbo.[FilePath](SettingValue)      ELSE SettingValue        END       AS SettingValue    FROM  dbo.[ModuleSettings]     WHERE ModuleID = @ModuleId OR IsNull(@ModuleId, -1) = -1    OPTION (OPTIMIZE FOR (@ModuleId UNKNOWN))  END; -- Procedure"
399,GetContentItemsByTabId,CREATE PROCEDURE dbo.[GetContentItemsByTabId]    @TabId int  AS   SELECT * FROM dbo.ContentItems WHERE TabID = @TabId
400,aspnet_Membership_ChangePasswordQuestionAndAnswer,"CREATE PROCEDURE dbo.aspnet_Membership_ChangePasswordQuestionAndAnswer      @ApplicationName       nvarchar(256),      @UserName              nvarchar(256),      @NewPasswordQuestion   nvarchar(256),      @NewPasswordAnswer     nvarchar(128)  AS  BEGIN      DECLARE @UserId uniqueidentifier      SELECT  @UserId = NULL      SELECT  @UserId = u.UserId      FROM    dbo.aspnet_Membership m, dbo.aspnet_Users u, dbo.aspnet_Applications a      WHERE   LoweredUserName = LOWER(@UserName) AND              u.ApplicationId = a.ApplicationId  AND              LOWER(@ApplicationName) = a.LoweredApplicationName AND              u.UserId = m.UserId      IF (@UserId IS NULL)      BEGIN          RETURN(1)      END        UPDATE dbo.aspnet_Membership      SET    PasswordQuestion = @NewPasswordQuestion, PasswordAnswer = @NewPasswordAnswer      WHERE  UserId=@UserId      RETURN(0)  END"
401,AIElearning_Document_User_GetByDocumentId,Create PROC [dbo].[AIElearning_Document_User_GetByDocumentId]   @documentId int  as  -- AIElearning_Document_User_GetByDocumentId 1  SELECT *  from AIElearning_Document_User   where DocumentId= @documentId      
402,UpdateEventLogType,"CREATE PROCEDURE dbo.UpdateEventLogType   @LogTypeKey nvarchar(35),   @LogTypeFriendlyName nvarchar(50),   @LogTypeDescription nvarchar(128),   @LogTypeOwner nvarchar(100),   @LogTypeCSSClass nvarchar(40)  AS  UPDATE dbo.EventLogTypes   SET LogTypeFriendlyName = @LogTypeFriendlyName,   LogTypeDescription = @LogTypeDescription,   LogTypeOwner = @LogTypeOwner,   LogTypeCSSClass = @LogTypeCSSClass  WHERE LogTypeKey = @LogTypeKey"
403,AISystem_Email_GetEmail,"CREATE proc [dbo].[AISystem_Email_GetEmail]   as  begin   DECLARE @result NVARCHAR(MAX)     SELECT @result = STUFF(                          (   SELECT ','+  CONVERT(NVARCHAR(20), Username)+' ('+Email+')'                              FROM AISystem_UserInfo where email like '%@%'                                      FOR xml path('')                          )                          , 1                          , 1                          , '')   if(DATALENGTH (@result) >=174499)      Set @result=SUBSTRING(@result,1,174499)       select @result as Email     end  "
404,GetEventLogByLogGUID,CREATE PROCEDURE dbo.GetEventLogByLogGUID   @LogGUID varchar(36)  AS  SELECT *  FROM dbo.vw_EventLog  WHERE (LogGUID = @LogGUID)
405,AISystem_PhotoAlbum_GetsBySearchCount,"CREATE proc [dbo].[AISystem_PhotoAlbum_GetsBySearchCount]  @Keyword nvarchar(250),  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  exec('select COUNT(Id) from AISystem_PhotoAlbum '+@Condition)  SET QUOTED_IDENTIFIER OFF    "
406,Journal_Comment_ListByJournalIds,"CREATE PROCEDURE dbo.[Journal_Comment_ListByJournalIds]  @JounalIds nvarchar(max) = ''  AS  SELECT jc.*, u.* FROM dbo.[Journal_Comments] as jc    INNER JOIN dbo.[Users] as u ON jc.UserId = u.UserId   INNER JOIN dbo.[Journal_Split](@JounalIds,';') as j ON j.id = jc.JournalId  ORDER BY jc.CommentId ASC"
407,AISystem_JobTitle_GetAllChildAndIncludeParentID_WithMaxLevel,"  CREATE PROCEDURE [dbo].[AISystem_JobTitle_GetAllChildAndIncludeParentID_WithMaxLevel]  @UnitCode nvarchar(50),  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_JobTitle_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50),    UnitCode nvarchar(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode)    SELECT       AISystem_JobTitle.Id,      0,      AISystem_JobTitle.ParentId,      AISystem_JobTitle.Title,      STR(AISystem_JobTitle.OrderNo),      AISystem_JobTitle.Title,      AISystem_JobTitle.Code,      AISystem_JobTitle.UnitCode          FROM      AISystem_JobTitle    WHERE      (AISystem_JobTitle.Status=@Status OR @Status = -1)       AND (AISystem_JobTitle.Id = @ParentId)      AND AISystem_JobTitle.LanguageId = @LanguageId      AND AISystem_JobTitle.PortalId = @portalId      AND (AISystem_JobTitle.UnitCode = @UnitCode OR @UnitCode = '')    End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode)    SELECT       AISystem_JobTitle.Id,      0,      AISystem_JobTitle.ParentId,      AISystem_JobTitle.Title,      STR(AISystem_JobTitle.OrderNo),      AISystem_JobTitle.Title,      AISystem_JobTitle.Code,      AISystem_JobTitle.UnitCode          FROM      AISystem_JobTitle    WHERE      (AISystem_JobTitle.Status=@Status OR @Status = -1)       AND (AISystem_JobTitle.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_JobTitle.ParentId IS NULL or AISystem_JobTitle.ParentId <=0))      AND AISystem_JobTitle.LanguageId = @LanguageId      AND AISystem_JobTitle.PortalId = @portalId      AND (AISystem_JobTitle.UnitCode = @UnitCode OR @UnitCode = '')   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code,     S.UnitCode         FROM     #PathConstruction T    JOIN AISystem_JobTitle  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId       AND (S.UnitCode = @UnitCode OR @UnitCode = '')       SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path],    'UnitCode'=UnitCode      FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction        "
408,AIElearning_TestCampaign_RegistorUser_Report,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_Report]  @TestRegistorId int  as  select ru.id, u.UserName, u.Mastercode,u.EmployeeCode,u.Displayname,  (select Title from AISystem_Category_Unit where code=u.UnitCode) [Donvi],  (select Title from AISystem_Category_Unit where code=u.UnitChildCode) [Donvicon],  jb.Title [Chucdanh],ru.Region [Vung],ru.Major [NghiepVu],  dbo.GetMarkTestCampaignResurl(ru.Id,ru.TestRegistorId) [DiemThi]   from   AIElearning_TestCampaign_RegistorUser  ru   inner join AISystem_UserInfo u on ru.UserId = u.UserId  left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId   left join AISystem_Category_Unit unit on u.UnitCode=unit.Code  left join AISystem_JobTitle_Title jb on u.JobTitleCode=jb.Code    where (ut.Id = (select max(rut.Id)   from AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null)  and ru.TestRegistorId=@TestRegistorId"
409,UpdateServer,"CREATE PROCEDURE dbo.[UpdateServer]      @ServerID           INT,      @URL                NVARCHAR(255),      @UniqueId           NVARCHAR(200),      @Enabled            BIT,      @Group              NVARCHAR(200)  AS      UPDATE dbo.WebServers          SET               URL = @URL,              UniqueId = @UniqueId,              Enabled = @Enabled,              ServerGroup = @Group          WHERE  ServerID = @ServerID"
410,AIElearning_Exercise_GetsNotClassUserCount,"create proc [dbo].[AIElearning_Exercise_GetsNotClassUserCount]  @Keyword nvarchar(250),  @classid int,  @listUserid nvarchar(250)      as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND UserName LIKE N''%'+@Keyword+'%'''   --  if(@listUserid<>'')  set @condition = @condition + ' and UserId not in (select * from [dbo].Split('''+@listUserid+'''))'     --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND ClassId='+str(@ClassId)   --trạng thái      exec('   select COUNT(*) from AIElearning_ClassUser where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
411,PurgeEventLog,"CREATE PROCEDURE dbo.PurgeEventLog    AS   ;WITH logcounts AS   (       SELECT     LogEventID,     LogConfigID,     ROW_NUMBER() OVER(PARTITION BY LogConfigID ORDER BY LogCreateDate DESC) AS logEventSequence     FROM dbo.EventLog   )   DELETE dbo.EventLog    FROM dbo.EventLog el     JOIN logcounts lc ON el.LogEventID = lc.LogEventID    INNER JOIN dbo.EventLogConfig elc ON elc.ID = lc.LogConfigID   WHERE elc.KeepMostRecent <> -1    AND lc.logEventSequence > elc.KeepMostRecent"
412,AIElearning_Lecturers_GetsBySearch,"CREATE proc [dbo].[AIElearning_Lecturers_GetsBySearch]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @UnitCode nvarchar(50),  @Status int,  @Type int,  @TeachingTopic int,  @partnerId int  as  --   AIElearning_Lecturers_GetsBySearch 1,100,'','28',-1,-1,-1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   set @Condition=@Condition+' AND ( i.Username = N''' +@Keyword +''' or i.Displayname like N''%' +@Keyword+ '%'' )'  if(@Status>-1)   set @Condition=@Condition+' AND l.Status='+str(@Status)  if(@UnitCode <> '')   set @Condition=@Condition+' AND i.UnitCode='''+ @UnitCode + ''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)  if(@TeachingTopic>-1)   set @Condition=@Condition+' AND (l.TeachingTopic = '''+CONVERT(varchar(10), @TeachingTopic) +'''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic)+''')'  if(@partnerId>0)   set @Condition=@Condition+' AND UserInfoId in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId = ' +str(@partnerId) +' )'    exec('  WITH #AIElearning_Lecturers AS(    SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Displayname, i.Sex, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, l.Status , l.TeachingTopic , i.UnitCode , i.Username , l.UserInfoId   from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id    where '+@Condition+')   SELECT *   FROM #AIElearning_Lecturers   where RowNumber between '+ @start +'  and  '+ @end +'   ')"
413,ResetFilePublishedVersion,CREATE PROCEDURE dbo.[ResetFilePublishedVersion]   @FileId int  AS  BEGIN   UPDATE dbo.Files    SET PublishedVersion = 1    WHERE FileId = @FileId  END
414,AISystem_Talent_DeleteIncludeRelationship,  CREATE proc [dbo].[AISystem_Talent_DeleteIncludeRelationship]  @talentId int  as  --Xoa quan he voi mon hoc  delete from AISystem_Talent_Subject where TalentId = @talentId  -- Xoa cap do cua nang luc con  delete from AISystem_Talent_Level where TalentId = @talentId and IsLevelChild = 0    -- Xoa cap do cua nang luc con  delete from AISystem_Talent_Level where IsLevelChild <> 0 and TalentId  in (select Id from AISystem_Talent_Child where TalentId = @talentId)    -- Xoa nang luc con  delete from AISystem_Talent_Child where TalentId = @talentId    -- Xoa nang luc    delete from AISystem_Talent where Id = @talentId    
415,AISystem_Category_WorkPlace_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_WorkPlace    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo              "
416,GetModuleSettingsByTab,"CREATE PROCEDURE dbo.[GetModuleSettingsByTab]      @TabId Int -- Not Null  AS  BEGIN   SELECT S.ModuleID,       S.SettingName,       CASE WHEN Lower(S.SettingValue) LIKE N'fileid=%'         THEN dbo.[FilePath](S.SettingValue)         ELSE S.SettingValue        END   AS SettingValue    FROM  dbo.[ModuleSettings] S    JOIN  dbo.[TabModules]     M ON S.ModuleID = M.ModuleID    WHERE M.TabID = @TabId    ORDER BY S.ModuleID  END; -- Procedure"
417,aspnet_Membership_GetAllUsers,"CREATE PROCEDURE dbo.aspnet_Membership_GetAllUsers      @ApplicationName       nvarchar(256),      @PageIndex             int,      @PageSize              int  AS  BEGIN      DECLARE @ApplicationId uniqueidentifier      SELECT  @ApplicationId = NULL      SELECT  @ApplicationId = ApplicationId FROM dbo.aspnet_Applications WHERE LOWER(@ApplicationName) = LoweredApplicationName      IF (@ApplicationId IS NULL)          RETURN 0          -- Set the page bounds      DECLARE @PageLowerBound int      DECLARE @PageUpperBound int      DECLARE @TotalRecords   int      SET @PageLowerBound = @PageSize * @PageIndex      SET @PageUpperBound = @PageSize - 1 + @PageLowerBound        -- Create a temp table TO store the select results      CREATE TABLE #PageIndexForUsers      (          IndexId int IDENTITY (0, 1) NOT NULL,          UserId uniqueidentifier      )        -- Insert into our temp table      INSERT INTO #PageIndexForUsers (UserId)      SELECT u.UserId      FROM   dbo.aspnet_Membership m, dbo.aspnet_Users u      WHERE  u.ApplicationId = @ApplicationId AND u.UserId = m.UserId      ORDER BY u.UserName        SELECT @TotalRecords = @@ROWCOUNT        SELECT u.UserName, m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,              m.CreateDate,              m.LastLoginDate,              u.LastActivityDate,              m.LastPasswordChangedDate,              u.UserId, m.IsLockedOut,              m.LastLockoutDate      FROM   dbo.aspnet_Membership m, dbo.aspnet_Users u, #PageIndexForUsers p      WHERE  u.UserId = p.UserId AND u.UserId = m.UserId AND             p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound      ORDER BY u.UserName      RETURN @TotalRecords  END"
418,AISystem_Category_Subject_UpdateChildId,"CREATE PROCEDURE [dbo].[AISystem_Category_Subject_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Subject  SET    ChildId = @ChildId  WHERE Id = @Id    "
419,UpdatePermission,"CREATE PROCEDURE dbo.UpdatePermission   @PermissionID   int,    @PermissionCode   varchar(50),   @ModuleDefID   int,    @PermissionKey   varchar(50),    @PermissionName   varchar(50),   @LastModifiedByUserID int  AS    UPDATE dbo.Permission SET   [ModuleDefID] = @ModuleDefID,   [PermissionCode] = @PermissionCode,   [PermissionKey] = @PermissionKey,   [PermissionName] = @PermissionName,   [LastModifiedByUserID] = @LastModifiedByUserID,   [LastModifiedOnDate] = getdate()  WHERE   [PermissionID] = @PermissionID"
420,GetEventLogPendingNotif,CREATE PROCEDURE dbo.GetEventLogPendingNotif   @LogConfigID int  AS  SELECT *  FROM dbo.vw_EventLog  WHERE LogNotificationPending = 1  AND LogConfigID = @LogConfigID
421,Journal_Comment_Get,"CREATE PROCEDURE dbo.[Journal_Comment_Get]  @CommentId int  AS  SELECT jc.*, u.* FROM dbo.[Journal_Comments] as jc    INNER JOIN dbo.[Users] as u ON jc.UserId = u.UserId  WHERE jc.CommentId = @CommentId"
422,AISystem_JobTitle_ChildrenByParentId,"  CREATE PROCEDURE [dbo].[AISystem_JobTitle_ChildrenByParentId]  @UnitCode nvarchar(50),  @portalid INT,  @parentId int,  @IsUsed int,  @LanguageId nvarchar(50)    AS  SELECT * FROM AISystem_JobTitle    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @IsUsed    AND LanguageId = @LanguageId    AND UnitCode = @UnitCode    ORDER BY OrderNo        "
423,AISystem_UserInfo_GetsMastercode,"create proc [dbo].[AISystem_UserInfo_GetsMastercode]  @Mastercode nvarchar(50),  @unitcode nvarchar(250)  as  -- AISystem_UserInfo_GetsByMastercode 'hainv'  Select top(1) * from AISystem_UserInfo where   Mastercode = @Mastercode and UnitCode=@unitcode  SET QUOTED_IDENTIFIER OFF      "
424,DeleteModulePermissionsByModuleID,"CREATE PROCEDURE dbo.[DeleteModulePermissionsByModuleID]   @ModuleID int,   @PortalID int  AS   DELETE FROM dbo.ModulePermission    WHERE ModuleID = @ModuleID     AND PortalID = @PortalID"
425,AIElearning_Exercise_GetsNotClassUser,"CREATE proc [dbo].[AIElearning_Exercise_GetsNotClassUser]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @listUserid nvarchar(250)    as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND  c.UserName LIKE N''%'+@Keyword+'%'''   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND c.classid='+str(@classid)   --loại  if(@listUserid<>'')  set @condition = @condition + ' and c.UserId not in (select * from [dbo].Split('''+@listUserid+'''))'    exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*,  i.UnitChildPath,i.Displayname     from AIElearning_ClassUser c inner join Users u   on u.UserID = c.UserId inner join AISystem_UserInfo i on i.UserId = u.UserID  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
426,AIElearning_Lecturers_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Lecturers_GetsBySearchCount]   @Keyword nvarchar(250),  @UnitCode nvarchar(50),  @Status int,  @Type int,  @TeachingTopic int,  @partnerId int  as  -- AIElearning_Lecturers_GetsBySearchCount '',-1,-1,-1,30  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@Keyword<>'')   set @Condition=@Condition+' AND ( i.Username = N''' +@Keyword +''' or i.Displayname like N''%' +@Keyword+ '%'' )'  if(@Status>-1)   set @Condition=@Condition+' AND l.Status='+str(@Status)  if(@UnitCode <> '')   set @Condition=@Condition+' AND i.UnitCode='''+ @UnitCode + ''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)  if(@TeachingTopic>-1)   set @Condition=@Condition+' AND (l.TeachingTopic = '''+CONVERT(varchar(10), @TeachingTopic) +'''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic)+''')'  if(@partnerId>0)   set @Condition=@Condition+' AND UserInfoId in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId = ' +str(@partnerId) +' )'    exec('   SELECT count(*)   from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+'      ')"
427,AISystem_Category_Media_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_Media_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Media WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Media WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Media WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Media WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Media WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Media         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Media SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur                "
428,AISystem_Category_WorkPlace_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_WorkPlace_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_WorkPlace.Id,      0,      AISystem_Category_WorkPlace.ParentId,      AISystem_Category_WorkPlace.Title,      STR(AISystem_Category_WorkPlace.OrderNo),      AISystem_Category_WorkPlace.Title,      AISystem_Category_WorkPlace.Code          FROM      AISystem_Category_WorkPlace    WHERE      (AISystem_Category_WorkPlace.Status=@Status OR @Status = -1)       AND (AISystem_Category_WorkPlace.Id = @ParentId)      AND AISystem_Category_WorkPlace.LanguageId = @LanguageId      AND AISystem_Category_WorkPlace.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_WorkPlace.Id,      0,      AISystem_Category_WorkPlace.ParentId,      AISystem_Category_WorkPlace.Title,      STR(AISystem_Category_WorkPlace.OrderNo),      AISystem_Category_WorkPlace.Title,      AISystem_Category_WorkPlace.Code          FROM      AISystem_Category_WorkPlace    WHERE      (AISystem_Category_WorkPlace.Status=@Status OR @Status = -1)       AND (AISystem_Category_WorkPlace.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_WorkPlace.ParentId IS NULL or AISystem_Category_WorkPlace.ParentId <=0))      AND AISystem_Category_WorkPlace.LanguageId = @LanguageId      AND AISystem_Category_WorkPlace.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_WorkPlace  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction                    "
429,UpdateModuleSetting,"CREATE PROCEDURE dbo.[UpdateModuleSetting]   @ModuleID   int,           -- Not Null|-1   @SettingName  nvarchar( 50), -- Not Null|''   @SettingValue  nvarchar(Max), -- Null: remove setting   @UserID    int            -- for logging  AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[ModuleSettings]     WHERE IsNull(ModuleID, -1) = IsNull(@ModuleID, -1)       AND SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' AND IsNull(@ModuleID, -1) != -1 BEGIN -- key must be valid    MERGE INTO dbo.[ModuleSettings] S     USING (SELECT @ModuleID MID, @SettingName SN, @SettingValue SV) Q        ON (S.ModuleID = Q.MID AND S.SettingName = Q.SN)     WHEN MATCHED AND IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( ModuleID,  SettingName,  SettingValue, CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@ModuleID, @SettingName, @SettingValue, IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());   END; -- Else If  END; -- Procedure"
430,aspnet_Membership_GetNumberOfUsersOnline,"CREATE PROCEDURE dbo.aspnet_Membership_GetNumberOfUsersOnline      @ApplicationName            nvarchar(256),      @MinutesSinceLastInActive   int,      @CurrentTimeUtc             datetime  AS  BEGIN      DECLARE @DateActive datetime      SELECT  @DateActive = DATEADD(minute,  -(@MinutesSinceLastInActive), @CurrentTimeUtc)        DECLARE @NumOnline int      SELECT  @NumOnline = COUNT(*)      FROM    dbo.aspnet_Users u WITH(NOLOCK),              dbo.aspnet_Applications a WITH(NOLOCK),              dbo.aspnet_Membership m WITH(NOLOCK)      WHERE   u.ApplicationId = a.ApplicationId                  AND              LastActivityDate > @DateActive                     AND              a.LoweredApplicationName = LOWER(@ApplicationName) AND              u.UserId = m.UserId      RETURN(@NumOnline)  END"
431,AIElearning_Survey_GetAllSurveyByUser,"  CREATE PROC [dbo].[AIElearning_Survey_GetAllSurveyByUser]   @ClassID INT,  @userId INT,  @status INT,  @parentType INT  as  -- [AIElearning_Survey_GetAllSurveyByUser] 29,2156,1  DECLARE @today AS char(20)  SET @today = CONVERT(char(20), GetDate(),120)    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' IsTemplate = 0 '  set @Condition=@Condition+' AND ClassId in (select Id from AIElearning_Class where Id in (select ClassId from AIElearning_ClassUser where UserId = '+str(@userId)+' )) '    if(@ClassID>-1)   set @Condition=@Condition+' AND ClassId='+str(@ClassID)  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  IF (@parentType > -1 )      SET @Condition = @Condition + ' AND ParentType=' + STR(@parentType)  exec('    SELECT ROW_NUMBER() OVER (ORDER BY ID DESC ) AS RowNumber, *   from AIElearning_Survey where '+@Condition+'')  "
432,GetEventLogPendingNotifConfig,"CREATE PROCEDURE dbo.GetEventLogPendingNotifConfig  AS    SELECT  COUNT(*) as PendingNotifs,   elc.ID,   elc.LogTypeKey,    elc.LogTypePortalID,    elc.LoggingIsActive,   elc.KeepMostRecent,   elc.EmailNotificationIsActive,   elc.NotificationThreshold,   elc.NotificationThresholdTime,   elc.NotificationThresholdTimeType,   elc.MailToAddress,    elc.MailFromAddress  FROM dbo.EventLogConfig elc  INNER JOIN dbo.EventLog  ON dbo.EventLog.LogConfigID = elc.ID  WHERE dbo.EventLog.LogNotificationPending = 1  GROUP BY elc.ID,   elc.LogTypeKey,    elc.LogTypePortalID,    elc.LoggingIsActive,   elc.KeepMostRecent,   elc.EmailNotificationIsActive,   elc.NotificationThreshold,   elc.NotificationThresholdTime,   elc.NotificationThresholdTimeType,   elc.MailToAddress,    elc.MailFromAddress"
433,AISystem_JobTitle_AddWithPosition,"  CREATE PROCEDURE [dbo].[AISystem_JobTitle_AddWithPosition]   @Position int,   @ParentId int,/*nullable*/   @Title nvarchar(250),   @Code NVARCHAR(50),    @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext,   @UnitCode nvarchar(50)  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_JobTitle WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_JobTitle (   [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId],   UnitCode  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId,   @UnitCode  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_JobTitle WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_JobTitle WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_JobTitle WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_JobTitle WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_JobTitle WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_JobTitle         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_JobTitle (   [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId],   UnitCode  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId,   @UnitCode  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()          "
434,AISystem_UserInfo_GetsUsername,"  create proc [dbo].[AISystem_UserInfo_GetsUsername]  @Username nvarchar(250),  @unitcode nvarchar(250)  as  -- AISystem_UserInfo_GetsByUsername 'hainv'  Select * from AISystem_UserInfo where   Username = @Username and UnitCode=@unitcode  SET QUOTED_IDENTIFIER OFF     "
435,Journal_User_Permissions,"CREATE FUNCTION dbo.[Journal_User_Permissions]  (      @PortalId int,      @UserId int,      @RegisteredRoleId int  )  RETURNS   @tmp TABLE (seckey nvarchar(200))    AS  BEGIN  IF @UserId > 0          BEGIN              IF @RegisteredRoleId = 1                  SELECT @RegisteredRoleId = RegisteredRoleId FROM dbo.[Portals] WHERE PortalID = @PortalId              INSERT INTO @tmp (seckey) VALUES ('U' + Cast(@UserId as nvarchar(200)))              INSERT INTO @tmp (seckey) VALUES ('P' + Cast(@UserId as nvarchar(200)))              INSERT INTO @tmp (seckey) VALUES ('F' + Cast(@UserId as nvarchar(200)))              IF EXISTS(SELECT RoleId FROM dbo.[UserRoles] WHERE UserID = @UserId AND RoleId = @RegisteredRoleId                          AND    (EffectiveDate <= getdate() or EffectiveDate is null)                          AND    (ExpiryDate >= getdate() or ExpiryDate is null))                      INSERT INTO @tmp (seckey) VALUES ('C')                        END                INSERT INTO @tmp (seckey) VALUES ('E')            INSERT INTO @tmp (seckey)      SELECT 'R' + CAST(ur.RoleId as nvarchar(200))           FROM dbo.[UserRoles] as ur              INNER JOIN dbo.[Users] as u on ur.UserId = u.UserId              INNER JOIN dbo.[Roles] as r on ur.RoleId = r.RoleId          WHERE  u.UserId = @UserId              AND    r.PortalId = @PortalId              AND    (EffectiveDate <= getdate() or EffectiveDate is null)              AND    (ExpiryDate >= getdate() or ExpiryDate is null)      INSERT INTO @tmp (seckey)          SELECT (SELECT CASE WHEN @UserID = ur.UserId                           THEN 'F' + CAST(RelatedUserID as nvarchar(200))                          ELSE 'F' + CAST(ur.UserId as nvarchar(200)) END)           FROM dbo.[UserRelationships] ur          INNER JOIN dbo.[Relationships] r ON ur.RelationshipID = r.RelationshipID AND r.RelationshipTypeID = 1          WHERE (ur.UserId = @UserId OR RelatedUserID = @UserId) AND Status = 2      RETURN   END"
436,PersonaBar_SavePersonaBarExtension,"CREATE PROCEDURE dbo.[PersonaBar_SavePersonaBarExtension]     @Identifier                 NVARCHAR(50),     @MenuId                     INT,     @FolderName                 NVARCHAR(50),     @Controller                 NVARCHAR(260),     @Container                  NVARCHAR(50),     @Path                       NVARCHAR(260),     @Order                      INT,     @Enabled                    BIT,     @CurrentUserId              INT AS BEGIN     IF EXISTS(SELECT ExtensionId FROM dbo.[PersonaBarExtensions] WHERE Identifier = @Identifier)     BEGIN         UPDATE dbo.[PersonaBarExtensions]             SET                  MenuId = @MenuId,                 FolderName = @FolderName,                 Controller = @Controller,                 Container = @Container,                 Path = @Path,                 [Order] = @Order,                 Enabled = @Enabled             WHERE Identifier = @Identifier              SELECT ExtensionId FROM dbo.[PersonaBarExtensions] WHERE Identifier = @Identifier     END     ELSE     BEGIN         INSERT INTO dbo.[PersonaBarExtensions] (             [Identifier],             [MenuId],             [FolderName],             [Controller],             [Container],             [Path],             [Order],             [Enabled]         ) VALUES (             @Identifier,             @MenuId,             @FolderName,             @Controller,             @Container,             @Path,             @Order,             @Enabled         )          SELECT SCOPE_IDENTITY()     END END"
437,AIElearning_Exercise_GetsNotMentorCount,"CREATE proc [dbo].[AIElearning_Exercise_GetsNotMentorCount]   @Keyword nvarchar(250),  @listUserid nvarchar(250)      as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND UserName LIKE N''%'+@Keyword+'%'''   --  if(@listUserid<>'')  set @condition = @condition + ' and UserId not in (select * from [dbo].Split('''+@listUserid+'''))'             exec('   SELECT count(*) from AISystem_UserInfo  where ' + @condition +'         ')  SET QUOTED_IDENTIFIER OFF     "
438,GetEventLogType,CREATE PROCEDURE dbo.GetEventLogType  AS  SELECT *  FROM dbo.EventLogTypes
439,GetLanguagePackByPackage,CREATE PROCEDURE dbo.[GetLanguagePackByPackage]     @PackageID int    AS   SELECT * FROM dbo.LanguagePacks           WHERE  PackageID = @PackageID
440,AISystem_Talent_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Talent_GetsBySearchCount]  @limit int,  @unitCode nvarchar(50),  @cateTalentId int,  @Keyword nvarchar(250)  AS  -- [AISystem_Talent_GetsBySearchCount] 2,'aivietnam',8,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@limit <> 0)   set @Condition=@Condition+' AND Limit='+str(@limit)  if(@unitCode <> '' )   set @Condition=@Condition+' AND UnitCode='''+@unitCode+''''  if(@cateTalentId <> 0)   set @Condition=@Condition+' AND CateTalentId='+str(@cateTalentId)  if(@Keyword <> '')   set @condition = @condition + ' and (Title like N''%' + @Keyword + '%'' or Code =''' + @Keyword + ''') '    exec('select COUNT(Id) from AISystem_Talent where '+@Condition)    SET QUOTED_IDENTIFIER OFF"
441,AISystem_Category_WorkPlace_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_WorkPlace_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_WorkPlace AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')                "
442,AISystem_EmailTemplate_GetsCountCode,create proc [dbo].[AISystem_EmailTeamplate_GetsCountCode]  @Code nvarchar(250)  as  select COUNT(Id) from AISystem_EmailTemplate where code =@Code
443,DeleteModuleSetting,"CREATE PROCEDURE dbo.[DeleteModuleSetting]   @ModuleId      int,          -- Not Null   @SettingName   nVarChar(50)  -- Not Null or empty  AS  BEGIN   DELETE    FROM  dbo.[ModuleSettings]    WHERE ModuleId    = @ModuleId      AND SettingName = @SettingName;  END; -- Procedure"
444,aspnet_Membership_FindUsersByName,"CREATE PROCEDURE dbo.aspnet_Membership_FindUsersByName      @ApplicationName       nvarchar(256),      @UserNameToMatch       nvarchar(256),      @PageIndex             int,      @PageSize              int  AS  BEGIN      DECLARE @ApplicationId uniqueidentifier      SELECT  @ApplicationId = NULL      SELECT  @ApplicationId = ApplicationId FROM dbo.aspnet_Applications WHERE LOWER(@ApplicationName) = LoweredApplicationName      IF (@ApplicationId IS NULL)          RETURN 0        -- Set the page bounds      DECLARE @PageLowerBound int      DECLARE @PageUpperBound int      DECLARE @TotalRecords   int      SET @PageLowerBound = @PageSize * @PageIndex      SET @PageUpperBound = @PageSize - 1 + @PageLowerBound        -- Create a temp table TO store the select results      CREATE TABLE #PageIndexForUsers      (          IndexId int IDENTITY (0, 1) NOT NULL,          UserId uniqueidentifier      )        -- Insert into our temp table      INSERT INTO #PageIndexForUsers (UserId)          SELECT u.UserId          FROM   dbo.aspnet_Users u, dbo.aspnet_Membership m          WHERE  u.ApplicationId = @ApplicationId AND m.UserId = u.UserId AND u.LoweredUserName LIKE LOWER(@UserNameToMatch)          ORDER BY u.UserName          SELECT  u.UserName, m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,              m.CreateDate,              m.LastLoginDate,              u.LastActivityDate,              m.LastPasswordChangedDate,              u.UserId, m.IsLockedOut,              m.LastLockoutDate      FROM   dbo.aspnet_Membership m, dbo.aspnet_Users u, #PageIndexForUsers p      WHERE  u.UserId = p.UserId AND u.UserId = m.UserId AND             p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound      ORDER BY u.UserName        SELECT  @TotalRecords = COUNT(*)      FROM    #PageIndexForUsers      RETURN @TotalRecords  END"
445,AIElearning_ClassUser_CheckRegister,"CREATE proc [dbo].[AIElearning_ClassUser_CheckRegister]  @ClassId int,  @UserName nvarchar(150)  as    select top(1) * from AIElearning_ClassUser where ClassId=@ClassId and Username=@UserName  "
446,AIElearning_SurveyQuestion_SetOrderNo,"Create proc [dbo].[AIElearning_SurveyQuestion_SetOrderNo]   @id int,  @aboveOrderNo int  as  -- AIElearning_SurveyQuestion_SetOrderNo 1242,2  begin  DECLARE @aboveID AS int  DECLARE @currentOrderNo AS int  DECLARE @surveyPartId AS int  select @surveyPartId = SurveyPartId from AIElearning_SurveyQuestion where Id= @id  select @currentOrderNo = OrderNo from AIElearning_SurveyQuestion where Id= @id  select @aboveID = Id from AIElearning_SurveyQuestion where OrderNo= @aboveOrderNo and SurveyPartId = @surveyPartId    begin   IF(@currentOrderNo <> 0)    begin      if(@currentOrderNo < @aboveOrderNo)       begin       update AIElearning_SurveyQuestion set OrderNo = (OrderNo - 1) where OrderNo > @currentOrderNo and OrderNo <=  @aboveOrderNo and SurveyPartId= @surveyPartId       update AIElearning_SurveyQuestion set OrderNo=@aboveOrderNo   where Id= @id      end     else      begin      if(@aboveOrderNo = -1)       begin         update AIElearning_SurveyQuestion set OrderNo = (OrderNo + 1) where OrderNo <= @currentOrderNo and SurveyPartId= @surveyPartId        update AIElearning_SurveyQuestion set OrderNo= 1  where Id= @id       end      else       begin        update AIElearning_SurveyQuestion set OrderNo = (OrderNo + 1) where OrderNo <= @currentOrderNo and OrderNo > @aboveOrderNo and SurveyPartId= @surveyPartId        update AIElearning_SurveyQuestion set OrderNo= (@aboveOrderNo +1)  where Id= @id       end      end    end   else    begin     if(@aboveOrderNo = -1)      begin       update AIElearning_SurveyQuestion set OrderNo = (OrderNo +1) where SurveyPartId= @surveyPartId      end     else      begin       update AIElearning_SurveyQuestion set OrderNo = (OrderNo +1) where OrderNo > @aboveOrderNo and SurveyPartId= @surveyPartId       update AIElearning_SurveyQuestion set OrderNo= (@aboveOrderNo +1)  where Id= @id      end    end  end  end  "
447,PersonaBar_DeletePersonaBarExtension,CREATE PROCEDURE dbo.[PersonaBar_DeletePersonaBarExtension]     @Identifier NVARCHAR(50) AS  DELETE FROM dbo.[PersonaBarExtensions] WHERE Identifier = @Identifier
448,FilePath,"CREATE FUNCTION dbo.[FilePath]  (      @StrMayContainFileId nVarChar(255)  )   RETURNS     nVarChar(500)  AS   BEGIN    DECLARE @Path AS nVarChar(500);      IF ISNULL(@StrMayContainFileId,'') = ''     SET @Path = ''     ELSE IF Lower(@StrMayContainFileId) LIKE 'fileid=%'     SELECT @Path = IsNull(Folder, '') + FileName FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(@StrMayContainFileId, 8, 10) AS Int)     ELSE     SET @Path = @StrMayContainFileId    RETURN @Path -- never Null!   END"
449,AIElearning_Exercise_GetsNotMentor,"CREATE proc [dbo].[AIElearning_Exercise_GetsNotMentor]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @listUserid nvarchar(250)    as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND  UserName LIKE N''%'+@Keyword+'%'''   --mã khóa học     --loại  if(@listUserid<>'')  set @condition = @condition + ' and UserId not in (select * from [dbo].Split('''+@listUserid+'''))'    exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from  AISystem_UserInfo  where ' + @condition +'      )         SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
450,AIElearning_Media_ChangeAllowDownload,CREATE proc [dbo].[AIElearning_Media_ChangeAllowDownload]   @id int  as  begin  DECLARE @isAllow AS int  select @isAllow = AllowDownload from AIElearning_Media where Id= @id   if(@isAllow = 1)  update AIElearning_Media set AllowDownload = 2 where Id= @id  else  update AIElearning_Media set AllowDownload = 1 where Id= @id  end    
451,AISystem_Category_WorkPlace_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_WorkPlace_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_WorkPlace where   Code = @Code  SET QUOTED_IDENTIFIER OFF               
452,AIElearning_ClassCategory_GetByCategoryId,create proc [dbo].[AIElearning_ClassCategory_GetByCategoryId]   @CategoryId int  as      SELECT  * from AIElearning_ClassCategory  where CategoryId=@CategoryId  
453,DeleteModuleSettings,CREATE PROCEDURE dbo.[DeleteModuleSettings]   @ModuleId int -- Not Null  AS  BEGIN   DELETE     FROM  dbo.[ModuleSettings]    WHERE ModuleId = @ModuleId  END; -- Procedure
454,aspnet_Membership_FindUsersByEmail,"CREATE PROCEDURE dbo.aspnet_Membership_FindUsersByEmail      @ApplicationName       nvarchar(256),      @EmailToMatch          nvarchar(256),      @PageIndex             int,      @PageSize              int  AS  BEGIN      DECLARE @ApplicationId uniqueidentifier      SELECT  @ApplicationId = NULL      SELECT  @ApplicationId = ApplicationId FROM dbo.aspnet_Applications WHERE LOWER(@ApplicationName) = LoweredApplicationName      IF (@ApplicationId IS NULL)          RETURN 0        -- Set the page bounds      DECLARE @PageLowerBound int      DECLARE @PageUpperBound int      DECLARE @TotalRecords   int      SET @PageLowerBound = @PageSize * @PageIndex      SET @PageUpperBound = @PageSize - 1 + @PageLowerBound        -- Create a temp table TO store the select results      CREATE TABLE #PageIndexForUsers      (          IndexId int IDENTITY (0, 1) NOT NULL,          UserId uniqueidentifier      )        -- Insert into our temp table      IF( @EmailToMatch IS NULL )          INSERT INTO #PageIndexForUsers (UserId)              SELECT u.UserId              FROM   dbo.aspnet_Users u, dbo.aspnet_Membership m              WHERE  u.ApplicationId = @ApplicationId AND m.UserId = u.UserId AND m.Email IS NULL              ORDER BY m.LoweredEmail      ELSE          INSERT INTO #PageIndexForUsers (UserId)              SELECT u.UserId              FROM   dbo.aspnet_Users u, dbo.aspnet_Membership m              WHERE  u.ApplicationId = @ApplicationId AND m.UserId = u.UserId AND m.LoweredEmail LIKE LOWER(@EmailToMatch)              ORDER BY m.LoweredEmail        SELECT  u.UserName, m.Email, m.PasswordQuestion, m.Comment, m.IsApproved,              m.CreateDate,              m.LastLoginDate,              u.LastActivityDate,              m.LastPasswordChangedDate,              u.UserId, m.IsLockedOut,              m.LastLockoutDate      FROM   dbo.aspnet_Membership m, dbo.aspnet_Users u, #PageIndexForUsers p      WHERE  u.UserId = p.UserId AND u.UserId = m.UserId AND             p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound      ORDER BY m.LoweredEmail        SELECT  @TotalRecords = COUNT(*)      FROM    #PageIndexForUsers      RETURN @TotalRecords  END"
455,AIElearning_TestCampaign_RegistorUserOffline_GetRegistorId,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserOffline_GetRegistorId]  @RegistorId int  as  select r.Code [Macathi],r.Name [Tencathi],u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi], roff.Mark, jo.Title [Tenchucdanh] from AIElearning_TestCampaign_RegistorUserTestOfline  roff  inner join AIElearning_TestCampaign_Registor r  on roff.RegistorId=r.id   left join AISystem_UserInfo u on u.UserId=roff.UserId    left join AISystem_Category_Unit su on su.Code=u.UnitCode  left join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where r.id=@RegistorId       "
456,AIElearning_SurveyUser_DeleteByClassUser,"CREATE PROC [dbo].[AIElearning_SurveyUser_DeleteByClassUser]      @userId INT ,      @classId INT  AS      BEGIN          DELETE  FROM AIElearning_SurveyUserQuestion          WHERE   SurveyUserId IN (                  SELECT DISTINCT                          su.Id                  FROM    dbo.AIElearning_Survey s                          INNER JOIN dbo.AIElearning_SurveyUser su ON s.Id = su.SurveyId WHERE s.ClassId = @classId AND su.UserId = @userId )          DELETE  FROM AIElearning_SurveyUser          WHERE   Id IN ( SELECT DISTINCT                                  su.Id                          FROM    dbo.AIElearning_Survey s                                  INNER JOIN dbo.AIElearning_SurveyUser su ON s.Id = su.SurveyId WHERE s.ClassId = @classId AND su.UserId = @userId )      END"
457,AIElearning_ClassUser_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_ClassUser_GetsBySearchCount]   @Keyword nvarchar(250),  @LearnStatus int,  @ClassId int,  @Status int,  @ngaybd datetime,  @ngaykt datetime  as  --AIElearning_ClassUser_GetsBySearchCount '',-1,19,-1,'01/01/1900','01/01/2900'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --t? khóa  if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.EmployeeCode like N''%' + @Keyword + '%''))'   --lo?i   --tr?ng thái hoàn thành  if(@LearnStatus > -1)   set @Condition=@Condition+' AND c.LearnStatus='+str(@LearnStatus)   --m? khóa h?c  if(@ClassId > -1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)   --tr?ng thái  if(@Status > -1)   set @Condition=@Condition+' AND c.Status='+str(@Status)   --ngày b?t đ?u  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and c.CreatedDate >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''   --ngày k?t thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and c.CreatedDate <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''    exec('   select COUNT(*) from AIElearning_ClassUser c inner join  AISystem_UserInfo i on i.UserId = c.UserID LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code LEFT JOIN dbo.AISystem_JobTitle_Title j ON i.JobTitleCode = j.Code where ' + @condition +' and u.Status = 1  ')  SET QUOTED_IDENTIFIER OFF  "
458,AIElearning_Media_CheckExistsContent,CREATE proc [dbo].[AIElearning_Media_CheckExistsContent]   @content nvarchar(500)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@content<>'')   set @Condition=@Condition+' AND Content='''+@content +''''  exec('   SELECT count(*)   from AIElearning_Media where '+@Condition+'    ')
459,PersonaBar_GetPersonaBarExtensions,"CREATE PROCEDURE dbo.[PersonaBar_GetPersonaBarExtensions] AS  SELECT          ExtensionId,          Identifier,          MenuId,          FolderName,         Controller,          Container,          Path,          [Order],          Enabled,          CreatedByUserId,          CreatedOnDate,          LastModifiedByUserId,          LastModifiedOnDate      FROM dbo.[PersonaBarExtensions]"
460,SuperUserTabID,CREATE FUNCTION dbo.[SuperUserTabID]  ()    RETURNS Int  AS  BEGIN      DECLARE @HostTabId Int = Null      SELECT  TOP (1) @HostTabId = TabID    FROM  dbo.Tabs    WHERE (PortalID IS NULL) AND (ParentId IS NULL)    ORDER BY TabID      RETURN @HostTabId  END
461,AIElearning_Exercise_GetsUserCount,"CREATE proc [dbo].[AIElearning_Exercise_GetsUserCount]   @classid int,  @Userid int,  @status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@classid >-1)   set @Condition=@Condition+' AND classid='+str(@classid)    if(@status >-1)   set @Condition=@Condition+' AND status='+str(@status)    if(@Userid >-1)   set @Condition=@Condition+' AND  id in (select ExerciseId from AIElearning_Exercise_User where Userid='''+str(@Userid)+''')'  exec('select COUNT(*) from AIElearning_Exercise '+@Condition)  SET QUOTED_IDENTIFIER OFF  "
462,AISystem_Category_WorkPlace_GetInfoById,CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_WorkPlace where Id=@Id  SET QUOTED_IDENTIFIER OFF                 
463,GetTabModuleSetting,"CREATE PROCEDURE dbo.[GetTabModuleSetting]      @TabModuleId   Int,              -- not null!      @SettingName   nVarChar(50)      -- not null or empty!  AS  BEGIN   SELECT S.SettingName,       CASE WHEN S.SettingValue LIKE N'fileid=%'      THEN dbo.[FilePath](S.SettingValue)      ELSE S.SettingValue         END AS SettingValue    FROM  dbo.[TabModuleSettings] S    WHERE TabModuleID = @TabModuleId       AND SettingName = @SettingName;  END; -- Procedure"
464,vw_aspnet_MembershipUsers,"    CREATE VIEW [dbo].[vw_aspnet_MembershipUsers]    AS SELECT members.[UserId],              members.[PasswordFormat],              members.[MobilePIN],              members.[Email],              members.[LoweredEmail],              members.[PasswordQuestion],              members.[PasswordAnswer],              members.[IsApproved],              members.[IsLockedOut],              members.[CreateDate],              members.[LastLoginDate],              members.[LastPasswordChangedDate],              members.[LastLockoutDate],              members.[FailedPasswordAttemptCount],              members.[FailedPasswordAttemptWindowStart],              members.[FailedPasswordAnswerAttemptCount],              members.[FailedPasswordAnswerAttemptWindowStart],              members.[Comment],              users.[ApplicationId],              users.[UserName],              users.[MobileAlias],              users.[IsAnonymous],              users.[LastActivityDate]    FROM [dbo].[aspnet_Membership] members INNER JOIN [dbo].[aspnet_Users] users        ON members.[UserId] = users.[UserId]    "
465,AISystem_Category_Subject_UpdateWithPosition,"CREATE PROCEDURE [dbo].[AISystem_Category_Subject_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Subject WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Subject WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Subject WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Subject WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Subject WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Subject         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Subject SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
466,GetDatabaseVersion,"create procedure dbo.GetDatabaseVersion    as    select Major,         Minor,         Build  from   dbo.Version   where  VersionId = ( select max(VersionId) from dbo.Version )"
467,AIElearning_ClassLog_DeleteByClassIdAndUsername,"CREATE PROC [dbo].[AIElearning_ClassLog_DeleteByClassIdAndUsername]      @ClassId INT ,      @Username NVARCHAR(50)  AS      DELETE  FROM AIElearning_ClassLog      WHERE   ( ClassId = @ClassId ) AND ( Username = @Username )"
468,CK__AttemptObje__Key__1F054C92,(len([Key])<=(4096))
469,AIElearning_ClassUser_GetsBySearch,"CREATE proc [dbo].[AIElearning_ClassUser_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @LearnStatus int,  @classid int,  @Status int,  @ngaybd datetime,  @ngaykt datetime  as  --AIElearning_ClassUser_GetsBySearch 1,10,'',-1,26,-1,'01/01/1900','01/01/1900'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --t? khóa  if(@classid >-1)   set @Condition=@Condition+' AND c.classid='+str(@classid)    if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.EmployeeCode like N''%' + @Keyword + '%''))'   --m? khóa h?c     --tr?ng thái hoàn thành  if(@LearnStatus > -1)   set @Condition=@Condition+' AND c.LearnStatus='+str(@LearnStatus)   --tr?ng thái  if(@Status > -1)   set @Condition=@Condition+' AND c.Status='+str(@Status)   --gày b?t đ?u  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and c.CreatedDate >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''   --ngày k?t thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and c.CreatedDate <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''      exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*, i.Displayname, i.Phone, i.Email, i.Sex, i.Address,i.UnitChildPath, u.Title AS UnitName, j.Title AS JobTitleName,i.EmployeeCode,i.Mastercode     from AIElearning_ClassUser c left join  AISystem_UserInfo i on i.Username = c.Username  LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code LEFT JOIN dbo.AISystem_JobTitle_Title j ON c.JobTitleCode = j.Code where ' + @condition +' and u.Status = 1    )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
470,GetRelationshipsByPortalID,"CREATE PROCEDURE dbo.[GetRelationshipsByPortalID] @PortalID INT  AS       SELECT  RelationshipID,     RelationshipTypeID,                          Name,                          Description,     UserID,     PortalID,     DefaultResponse,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.Relationships       WHERE PortalID = @PortalID AND UserID IS NULL   ORDER BY RelationshipID ASC"
471,HasChildTab,CREATE FUNCTION dbo.[HasChildTab]  (     @TabId   Int  )    RETURNS Bit  AS  BEGIN      RETURN CASE WHEN EXISTS (SELECT 1 FROM dbo.Tabs WHERE ParentId = @TabId) THEN 1 ELSE 0 END  END
472,AIElearning_Exercise_GetsUser,"  CREATE proc [dbo].[AIElearning_Exercise_GetsUser]   @classid int,  @status int  as  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND classid='+str(@classid)        if(@status >-1)   set @Condition=@Condition+' AND Status='+str(@status)  exec('SELECT  * from AIElearning_Exercise  where ' + @condition +' ')  "
473,AIElearning_ClassItem_GetAllChildAndIncludeParentIDWithLevel,"  -- [AIElearning_ClassItem_GetAllChildAndIncludeParentIDWithLevel] 30,-1,0,1    CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetAllChildAndIncludeParentIDWithLevel]  @ClassId int,  @ParentId int,   @includeParentId BIT,  @Level INT,  @ParentType INT  AS  DECLARE @Rows int  --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title int  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.Id = @ParentId)      AND AIElearning_ClassItem.ClassId = @ClassId AND AIElearning_ClassItem.ParentType = @ParentType   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL))      AND AIElearning_ClassItem.ClassId = @ClassId AND AIElearning_ClassItem.ParentType = @ParentType   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_ClassItem  S ON S.ParentId=T.Id AND T.Level=@Level AND S.ClassId = @ClassId AND S.ParentType = @ParentType        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     'Id' = Id,    'Name' = Name,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'DataId' = Title  FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction  "
474,AISystem_Category_WorkPlace_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_WorkPlace_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_WorkPlace  WHERE   ParentId = @parentId      "
475,GetWorkflows,create procedure dbo.GetWorkflows   @PortalID int  as   select *   from   dbo.Workflow   where (PortalID = @PortalID or PortalID is null)   order by WorkflowName
476,GetTabModuleSettings,"CREATE PROCEDURE dbo.[GetTabModuleSettings]      @TabModuleId Int -- Null: all tabmodules  AS  BEGIN   SELECT SettingName,       CASE WHEN Lower(SettingValue) LIKE N'fileid=%'      THEN dbo.[FilePath](SettingValue)      ELSE SettingValue        END  AS SettingValue    FROM  dbo.[TabModuleSettings]     WHERE TabModuleID = @TabModuleId OR IsNull(@TabModuleId, -1) = -1    OPTION (OPTIMIZE FOR (@TabModuleId UNKNOWN))  END; -- Procedure"
477,AIElearning_TestCampaign_RegistorUserOffline_GetCampaignId,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserOffline_GetCampaignId]   @CampaignId int  as  select r.Code [Macathi],r.Name [Tencathi],u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi], roff.Mark, jo.Title [Tenchucdanh] from AIElearning_TestCampaign_RegistorUserTestOfline  roff  inner join AIElearning_TestCampaign_Registor r  on roff.RegistorId=r.id   left join AISystem_UserInfo u on u.UserId=roff.UserId    left join AISystem_Category_Unit su on su.Code=u.UnitCode  left join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where r.TestCampaignId=@CampaignId order by r.Id desc    "
478,GetOnlineUser,"CREATE PROCEDURE dbo.[GetOnlineUser]   @UserID int  AS     SELECT    U.UserID,    U.UserName   FROM dbo.Users U   WHERE U.UserID = @UserID    AND EXISTS (     select 1 from dbo.UsersOnline UO where UO.UserID = U.UserID    )"
479,AIElearning_UserTest_DeleteByClassIdAndUserId,"CREATE PROC [dbo].[AIElearning_UserTest_DeleteByClassIdAndUserId]      @ClassId INT ,      @UserId INT  AS      DELETE  FROM dbo.AIElearning_UserTest      WHERE   ( ClassId = @ClassId ) AND ( UserId = @UserId )"
480,AIElearning_ClassUnit_DeleteClassid,create proc [dbo].[AIElearning_ClassUnit_DeleteClassid]  @classid int  as  delete from AIElearning_ClassUnit where ClassId=@classid  
481,DeleteDesktopModulePermissionsByPortalDesktopModuleID,CREATE PROCEDURE dbo.[DeleteDesktopModulePermissionsByPortalDesktopModuleID]   @PortalDesktopModuleID int  AS      DELETE FROM dbo.DesktopModulePermission      WHERE PortalDesktopModuleID = @PortalDesktopModuleID
482,GetTabsByTabModuleID,"CREATE PROCEDURE dbo.[GetTabsByTabModuleID]   @TabModuleID Int -- NOT Null  AS   BEGIN    SELECT * FROM dbo.[vw_Tabs] T    WHERE IsDeleted = 0      AND TabID IN (SELECT TabID FROM dbo.[TabModules]        WHERE TabModuleID = @TabModuleID AND IsDeleted = 0)    ORDER BY PortalId, Level, ParentID, TabOrder -- PortalId added for query optimization   END"
483,GetEventMessages,CREATE PROCEDURE dbo.GetEventMessages      @EventName nvarchar(100)    AS   SELECT *    FROM dbo.EventQueue   WHERE EventName = @EventName    AND IsComplete = 0   ORDER BY SentDate
484,AIElearning_Exercise_Group_GetsBySearch,"CREATE proc [dbo].[AIElearning_Exercise_Group_GetsBySearch]  @pageIndex int,  @pageSize int,  @ExerciseId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  --  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)    exec('    WITH #AIElearning_Exercise_Group AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise_Group '+@Condition+'        )         SELECT     *   FROM #AIElearning_Exercise_Group   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
485,UpdateListEntry,"CREATE procedure dbo.[UpdateListEntry]      @EntryID int,    @Value nvarchar(100),    @Text nvarchar(150),    @Description nvarchar(500),   @LastModifiedByUserID int    AS   UPDATE dbo.Lists    SET      [Value] = @Value,     [Text] = @Text,      [Description] = @Description,     [LastModifiedByUserID] = @LastModifiedByUserID,      [LastModifiedOnDate] = getdate()    WHERE  [EntryID] = @EntryID"
486,AIElearning_LearingAndLecture_GetsBySearchCount,create proc [dbo].[AIElearning_LearingAndLecture_GetsBySearchCount]  as  select COUNT(*) from AIElearning_LearingAndLecture    SET QUOTED_IDENTIFIER OFF   
487,AISystem_Category_WorkPlace_GetsByArray,"CREATE proc [dbo].[AISystem_Category_WorkPlace_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_WorkPlace  where Id in(select * from Split(@arrId))      "
488,GetWorkflowStates,create procedure dbo.GetWorkflowStates   @WorkflowID int    as    select *  from   dbo.WorkflowStates  inner join dbo.Workflow on dbo.WorkflowStates.WorkflowID = dbo.Workflow.WorkflowID  where dbo.WorkflowStates.WorkflowID = @WorkflowID  order by [Order]
489,GetTabModuleSettingsByTab,"CREATE PROCEDURE dbo.[GetTabModuleSettingsByTab]      @TabId Int -- Not Null  AS  BEGIN   SELECT S.TabModuleID,       S.SettingName,       CASE WHEN Lower(S.SettingValue) LIKE N'fileid=%'      THEN dbo.[FilePath](S.SettingValue)      ELSE S.SettingValue        END AS SettingValue    FROM  dbo.[TabModuleSettings] S       JOIN  dbo.[TabModules]        M ON S.TabModuleID = M.TabModuleID    WHERE M.TabID = @TabId    ORDER BY S.TabModuleID  END; -- Procedure"
490,UpdateEventLogPendingNotif,CREATE PROCEDURE dbo.UpdateEventLogPendingNotif   @LogConfigID int  AS  UPDATE dbo.EventLog  SET LogNotificationPending = 0  WHERE LogNotificationPending = 1  AND LogConfigID = @LogConfigID
491,AIElearning_Document_User_GetInfoByDocIdAndUserInfo,"create PROC [dbo].[AIElearning_Document_User_GetInfoByDocIdAndUserInfo]  @documentId int,  @Username nvarchar(50),  @MasterCode nvarchar(50)  as  -- AIElearning_Document_User_GetInfoByDocIdAndUserInfo 2,'fgirl','fgirl'  SELECT TOP(1) *  FROM AIElearning_Document_User   WHERE  DocumentId= @documentId  AND Username= @Username  AND MasterCode= @MasterCode      "
492,AIElearning_Certificate_Offline_User_GetinfoNumber,"create proc AIElearning_Certificate_Offline_User_GetinfoNumber  @Userid int,  @Classid int  as  select * from AIElearning_Certificate_Offline_User where UserId=@Userid and ClassId=@Classid"
493,DeleteSearchCommonWord,CREATE PROCEDURE dbo.DeleteSearchCommonWord   @CommonWordID int  AS    DELETE FROM dbo.SearchCommonWords  WHERE   [CommonWordID] = @CommonWordID
494,DeleteHeirarchicalTerm,"CREATE PROCEDURE dbo.DeleteHeirarchicalTerm       @TermId   int      AS  BEGIN      DECLARE @Left int, @Right int, @VocabularyID int, @Width int     SELECT    @Left = tt.TermLeft    , @Right = tt.TermRight    , @VocabularyID = tt.VocabularyID    , @Width = @Right - @Left + 1   FROM    dbo.Taxonomy_Terms tt   WHERE    tt.TermID = @TermID     BEGIN TRANSACTION     -- Delete term(s)   DELETE FROM dbo.Taxonomy_Terms   WHERE TermLeft > = @Left AND TermLeft > 0     AND TermRight <= @Right AND TermRight > 0     AND VocabularyID = @VocabularyID     IF @@ERROR = 0   BEGIN    -- Update Left values for all items that are after deleted term    UPDATE dbo.Taxonomy_Terms       SET TermLeft = TermLeft - @Width    WHERE TermLeft >= @Left + @Width     AND VocabularyID = @VocabularyID            IF @@ERROR = 0          BEGIN              -- Update Right values for all items that are after deleted term              UPDATE dbo.Taxonomy_Terms              SET TermRight = TermRight - @Width              WHERE TermRight >= @Right                  AND VocabularyID = @VocabularyID                IF @@ERROR = 0              BEGIN                  COMMIT TRANSACTION                  RETURN              END          END      END         ROLLBACK TRANSACTION  END"
495,AIElearning_Exercise_Group_GetsMentorCount,"create proc [dbo].[AIElearning_Exercise_Group_GetsMentorCount]  @ExerciseId int,  @Mentorid int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Mentorid>-1)   set @Condition=@Condition+' AND Mentorid='+str(@Mentorid)   --  if(@ExerciseId >-1)   set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)      exec('   select COUNT(*) from AIElearning_Exercise_Group where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
496,GetTabModule,CREATE PROCEDURE dbo.[GetTabModule]      @TabModuleID int  AS      SELECT *   FROM dbo.vw_TabModules              WHERE  TabModuleID = @TabModuleID
497,AISystem_EmailTeamplate_GetsCountCode,CREATE proc [dbo].[AISystem_EmailTeamplate_GetsCountCode]  @Code nvarchar(250)  as  select COUNT(Id) from AISystem_EmailTemplate where code =@Code  
498,AISystem_Category_WorkPlace_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_WorkPlace AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_WorkPlace       )         SELECT     *   FROM #AISystem_Category_WorkPlace   where RowNumber between '+ @start +'  and  '+ @end +'   ')                "
499,Mobile_DeletePreviewProfile,CREATE PROCEDURE dbo.[Mobile_DeletePreviewProfile] @Id INT  AS           DELETE  FROM dbo.Mobile_PreviewProfiles      WHERE   Id = @Id
500,GetTabModuleSettingsByName,"CREATE PROCEDURE dbo.[GetTabModuleSettingsByName]   @PortalId    Int,         -- Not Null   @SettingName NVarChar(50) -- Not Null  AS  BEGIN   SELECT S.TabModuleID,        CASE WHEN Lower(S.SettingValue) LIKE N'fileid=%'      THEN dbo.[FilePath](S.SettingValue)      ELSE S.SettingValue        END AS SettingValue    FROM  dbo.[TabModuleSettings] S    JOIN  dbo.[TabModules]        M ON S.TabModuleID = M.TabModuleID    JOIN dbo.[Tabs]               T ON M.TabID       = T.TabID AND (T.PortalID = @PortalID OR T.PortalID IS NULL)    WHERE S.SettingName = @SettingName  END; -- Procedure"
501,AISystem_Category_Talent_AddWithPosition,"CREATE PROCEDURE [dbo].[AISystem_Category_Talent_AddWithPosition]   @Limit int,   @UnitCode nvarchar(50),   @Position int,   @ParentId int,/*nullable*/   @Title nvarchar(250),   @Code NVARCHAR(50),    @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Talent WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Talent (   [Limit],   [UnitCode],   [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @Limit,   @UnitCode,   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Talent WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Talent WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Talent WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Talent WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Talent WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Talent         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Talent (   [Limit],   [UnitCode],   [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @Limit ,   @UnitCode ,   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()          "
502,AIElearning_Class_GetClassInCateSubject,"CREATE PROC [dbo].[AIElearning_Class_GetClassInCateSubject]   @cateId INT,    @pageSize INT  AS -- AIElearning_Class_GetClassInCateSubject 1167,8      DECLARE @ChildId NVARCHAR(MAX)      SELECT  @ChildId = ChildId      FROM    dbo.AISystem_Category_Subject      WHERE   Id = @cateId        SELECT TOP(@pageSize) class.*,              unit.Title [Donvi] ,     catsubject.Title [CateName],     sub.Name [Tenkhoahoc],              ( SELECT    COUNT(*)                FROM      AIElearning_ClassUser                WHERE     ClassId = class.Id              ) [TongHV] ,              ( SELECT    SUM(MoneyReality)                FROM      AIElearning_Monney_Class                WHERE     ClassId = class.Id              ) [TongTien] ,              ( SELECT    Name                FROM      AISystem_Subject                WHERE     AISystem_Subject.Id = class.SubjectId              ) [Tenkhoahoc]       FROM    AIElearning_Class class    LEFT JOIN dbo.AISystem_Category_Unit unit ON class.Unitcode = unit.Code   LEFT JOIN dbo.AISystem_Category_Subject catsubject ON class.CateSubjectId = catsubject.Id   LEFT JOIN dbo.AISystem_Subject sub ON class.SubjectId = sub.Id                   WHERE   class.CateSubjectId IN ( SELECT   *                                 FROM     Split(@ChildId) )    ORDER BY class.Id DESC"
503,UpdateSchedule,"CREATE PROCEDURE dbo.UpdateSchedule   @ScheduleID int   ,@TypeFullName varchar(200)   ,@TimeLapse int   ,@TimeLapseMeasurement varchar(2)   ,@RetryTimeLapse int   ,@RetryTimeLapseMeasurement varchar(2)   ,@RetainHistoryNum int   ,@AttachToEvent varchar(50)   ,@CatchUpEnabled bit   ,@Enabled bit   ,@ObjectDependencies varchar(300)   ,@Servers varchar(150)   ,@LastModifiedByUserID int   ,@FriendlyName varchar(200)   ,@ScheduleStartDate datetime  AS  UPDATE dbo.Schedule   SET    TypeFullName = @TypeFullName   ,FriendlyName = @FriendlyName   ,TimeLapse = @TimeLapse   ,TimeLapseMeasurement = @TimeLapseMeasurement   ,RetryTimeLapse = @RetryTimeLapse   ,RetryTimeLapseMeasurement = @RetryTimeLapseMeasurement   ,RetainHistoryNum = @RetainHistoryNum   ,AttachToEvent = @AttachToEvent   ,CatchUpEnabled = @CatchUpEnabled   ,Enabled = @Enabled   ,ObjectDependencies = @ObjectDependencies   ,Servers = @Servers,   [LastModifiedByUserID] = @LastModifiedByUserID,    [LastModifiedOnDate] = getdate(),   ScheduleStartDate = @ScheduleStartDate   WHERE ScheduleID = @ScheduleID"
504,AIElearning_Exercise_Group_GetsMentorId,"create proc [dbo].[AIElearning_Exercise_Group_GetsMentorId]  @pageIndex int,  @pageSize int,  @ExerciseId int,  @Mentorid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  --  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)  if(@Mentorid>-1)   set @Condition=@Condition+' AND Mentorid='+str(@Mentorid)    exec('    WITH #AIElearning_Exercise_Group AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise_Group '+@Condition+'        )         SELECT     *   FROM #AIElearning_Exercise_Group   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
505,AISystem_Talent_GetsTalentNotInJobtitle,"  CREATE PROC [dbo].[AISystem_Talent_GetsTalentNotInJobtitle]      @pageIndex INT ,      @pageSize INT ,      @limit INT ,      @unitCode NVARCHAR(50) ,      @cateTalentId INT ,      @code NVARCHAR(250) ,      @type INT,   @jobtitleId INT  AS   -- AISystem_Talent_GetsTalentNotInJobtitle 1,100,0,'',0,'',2,0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    IF ( @limit <> 0 )      SET @Condition = @Condition + ' AND Limit=' + STR(@limit)  IF ( @unitCode <> '' )      SET @Condition = @Condition + ' AND UnitCode=''' + @unitCode + ''''  IF ( @cateTalentId <> 0 )      SET @Condition = @Condition + ' AND CateTalentId=' + STR(@cateTalentId)  IF ( @code <> '' )      SET @Condition = @Condition + ' AND Code=''' + @code + ''''    CREATE TABLE #AISystem_Talent_Temp      ( PK INT IDENTITY(1, 1) ,        Id INT ,        Title NVARCHAR(250) ,        Code NVARCHAR(250) ,        Description NVARCHAR(MAX) ,        Limit INT ,        UnitCode NVARCHAR(50) ,        UnitName NVARCHAR(250) ,        CateTalentId INT ,        LevelCode NVARCHAR(MAX) ,        LevelName NVARCHAR(250) ,        TalentLevelId INT ,        ChildTalentId INT ,        ChildTitle NVARCHAR(250) ,        ChildCode NVARCHAR(50) ,        IsChild INT ,        SortColumn NVARCHAR(MAX) )  --Tao bang chua nang luc da duoc gan cho chuc danh  CREATE TABLE #AISystem_Jobtitle_Talent      ( PK INT ,        Id INT ,        Limit INT ,        TalentLevelId INT ,        ChildTalentId INT ,        IsChild INT )  -- Thêm năng lực cha  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code, ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+ tl.Description,''), t.Limit, t.UnitCode, (SELECT Title FROM dbo.AISystem_Category_Unit WHERE Code = t.UnitCode) , t.CateTalentId, tl.LevelCode, r.Title,tl.Id, 0,'','', 0, STR(t.Id)          FROM    AISystem_Talent t                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = t.Id AND tl.IsLevelChild = 0 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode           WHERE   t.Type = @type AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child)    -- Them nang luc con  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code,ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tc.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, (SELECT Title FROM dbo.AISystem_Category_Unit WHERE Code = t.UnitCode), t.CateTalentId, tl.LevelCode, r.Title,tl.Id, tc.Id,tc.Title,tc.Code, 1,STR(tc.TalentId) + STR(tc.Id)          FROM    AISystem_Talent_Child tc                  INNER JOIN AISystem_Talent t ON t.Id = tc.TalentId                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = tc.Id AND tl.IsLevelChild = 1 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode          WHERE   t.Type = @type       -- Them nang luc được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON ( tt.id = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild)     WHERE jt.JobTitleId = @jobtitleId     PRINT('Added parent'+CAST(@@ROWCOUNT AS NVARCHAR(50)))   -- Them nang luc con  được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON (tt.ChildTalentId = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild) WHERE jt.JobTitleId = @jobtitleId      PRINT('Added child'+CAST(@@ROWCOUNT AS NVARCHAR(50)))   -- AISystem_Talent_GetsTalentNotInJobtitle 1,100,1,'',0,'',2,4    EXEC('   WITH #AISystem_Talent AS(    SELECT ROW_NUMB"
506,AISystem_Talent_GetsTalentNotInJobtitle,"ER() OVER (ORDER BY SortColumn desc, IsChild, PK desc ) AS RowNumber,  * from #AISystem_Talent_Temp  where   '+@Condition+' and  PK NOT IN  (SELECT PK FROM #AISystem_Jobtitle_Talent)  )       SELECT  *   FROM #AISystem_Talent   where RowNumber between '+ @start +'  and  '+ @end +'    order by SortColumn desc  ')    "
507,AISystem_Category_WorkPlace_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_WorkPlace_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_WorkPlace    SET QUOTED_IDENTIFIER OFF                   
508,GetLanguages,CREATE PROCEDURE dbo.[GetLanguages]  AS   SELECT *    FROM   dbo.Languages
509,UpdateTabModuleSetting,"CREATE PROCEDURE dbo.[UpdateTabModuleSetting]   @TabModuleID  int,           -- Not Null|-1   @SettingName  nvarchar( 50), -- Not Null|''   @SettingValue  nvarchar(Max), -- Null: remove setting   @UserID    int            -- for logging  AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[TabModuleSettings]     WHERE IsNull(TabModuleID, -1) = IsNull(@TabModuleID, -1)       AND SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' AND IsNull(@TabModuleID, -1) != -1 BEGIN -- key must be valid    MERGE INTO dbo.[TabModuleSettings] S     USING (SELECT @TabModuleID MID, @SettingName SN, @SettingValue SV) Q        ON (S.TabModuleID = Q.MID AND S.SettingName = Q.SN)     WHEN MATCHED AND IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( TabModuleID,  SettingName,  SettingValue, CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@TabModuleID, @SettingName, @SettingValue, IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());   END; -- Else If  END; -- Procedure"
510,AIElearning_Exercise_ThemeGetbyid,create proc  [dbo].[AIElearning_Exercise_ThemeGetbyid]   @ThemeId int  as  select * from AIElearning_Exercise_Theme where id in (select ThemeId from AIElearning_Exercise_User where ThemeId=@ThemeId) or id in (select ThemeId from AIElearning_Exercise_Group where ThemeId=@ThemeId)  
511,AIElearning_Money_Reimburse_DeleteUser,create proc [dbo].[AIElearning_Money_Reimburse_DeleteUser]  @Username nvarchar(250)  as  delete  from AIElearning_Money_Reimburse where Username=@Username       
512,DeletePropertyDefinition,CREATE PROCEDURE dbo.[DeletePropertyDefinition]     @PropertyDefinitionId int    AS    UPDATE dbo.ProfilePropertyDefinition    SET Deleted = 1   WHERE  PropertyDefinitionId = @PropertyDefinitionId
513,AIElearning_Exercise_Mentor_GetsBySearchCount,"create proc [dbo].[AIElearning_Exercise_Mentor_GetsBySearchCount]  @ExerciseId int,  @key nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)  --  if(@key<>'')  set @Condition=@Condition+' AND Username LIKE N''%'+@key+'%'' or Displayname LIKE N''%'+@key+'%'''  --  exec('select COUNT(*) from AIElearning_Exercise_Mentor '+@Condition)  SET QUOTED_IDENTIFIER OFF    "
514,UpdateDatabaseVersion,"create procedure dbo.UpdateDatabaseVersion    @Major  int,  @Minor  int,  @Build  int    as    insert into dbo.Version (    Major,    Minor,    Build,    CreatedDate  )  values (    @Major,    @Minor,    @Build,    getdate()  )"
515,AIElearning_ClassUser_TotalTime_SumTime,"CREATE proc [dbo].[AIElearning_ClassUser_TotalTime_SumTime]  @Username nvarchar(150),  @year int  as  begin  if exists( select * from AIElearning_Class  class  inner join AIElearning_ClassUser classuser  on class.id=classuser.ClassId  where classuser.Username=@Username and YEAR(class.StartDateClass)=@year and classuser.LearnStatus=2)  (  select sum(class.Offline_Time) from AIElearning_Class  class  inner join AIElearning_ClassUser classuser  on class.id=classuser.ClassId  where classuser.Username=@Username and YEAR(class.StartDateClass)=@year and classuser.LearnStatus=2  )  else  select distinct 0 from AIElearning_Class  end  "
516,AISystem_Category_WorkPlace_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_WorkPlace  SET    ChildId = @ChildId  WHERE Id = @Id                "
517,DeleteHtmlText,"create procedure dbo.DeleteHtmlText    @ModuleID int,  @ItemID int    as    delete  from   dbo.HtmlText  where  ModuleID = @ModuleID  and ItemID = @ItemID"
518,DeleteTabModuleSetting,"CREATE PROCEDURE dbo.[DeleteTabModuleSetting]   @TabModuleId   int,   @SettingName   nVarChar(50)  AS  BEGIN   DELETE    FROM  dbo.[TabModuleSettings]    WHERE TabModuleId = @TabModuleId      AND SettingName = @SettingName;  END; -- Procedure"
519,AIElearning_LiveClass_GetsBySearch,"  CREATE PROC [dbo].[AIElearning_LiveClass_GetsBySearch]      @PageIndex INT,      @PageSize INT,      @ClassId INT,      @Keyword NVARCHAR(250),      @Status INT  AS -- AIElearning_LiveClass_GetsBySearch 1,10,-1,'',-1  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @ClassId > 0 )      SET @condition = @condition + ' And  (ClassId= ' + STR(@ClassId) + ' )'  IF ( @Keyword <> '' )      SET @condition = @condition + ' And  (Name like  ''%' + @Keyword + '%'' )'  IF ( @Status > 0 )      SET @condition = @condition + ' And  (Status= ' + STR(@Status) + ' )'  EXEC('  WITH #AIElearning_LiveClass AS(   SELECT ROW_NUMBER() OVER (ORDER BY Id DESC) AS RowNumber, *  FROM AIElearning_LiveClass WHERE ' + @condition +'  )    SELECT *  FROM #AIElearning_LiveClass  WHERE RowNumber BETWEEN '+ @start +' AND '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF         "
520,AISystem_Category_Talent_ChildrenByParentId,"CREATE PROCEDURE [dbo].[AISystem_Category_Talent_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50),  @limit int  AS  SELECT * FROM AISystem_Category_Talent    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )    AND Limit = @limit    ORDER BY OrderNo      "
521,AIElearning_ClassUnit_GetByClassId,create proc [dbo].[AIElearning_ClassUnit_GetByClassId]   @ClassId int  as      SELECT  * from AIElearning_ClassUnit  where ClassId=@ClassId  
522,DeleteRelationship,CREATE PROCEDURE dbo.[DeleteRelationship] @RelationshipID INT   AS    BEGIN    DELETE FROM dbo.Relationships       WHERE RelationshipID = @RelationshipID   END
523,PersonaBar_GetPersonaBarPermissions,"CREATE PROCEDURE dbo.[PersonaBar_GetPersonaBarPermissions] AS  SELECT          [PermissionId],      [MenuId],      [PermissionKey],      [PermissionName],      [ViewOrder],      [CreatedByUserID],      [CreatedOnDate],      [LastModifiedByUserID],      [LastModifiedOnDate]     FROM dbo.[PersonaBarPermission] ORDER BY ViewOrder ASC"
524,AIElearning_Exercise_Mentor_GetsBySearch,"create proc [dbo].[AIElearning_Exercise_Mentor_GetsBySearch]  @pageIndex int,  @pageSize int,  @key nvarchar(250),  @ExerciseId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  --  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)  if(@key<>'')  set @Condition=@Condition+' AND Username LIKE N''%'+@key+'%'' or Displayname LIKE N''%'+@key+'%'''  exec('    WITH #AIElearning_Exercise_Mentor AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise_Mentor '+@Condition+'        )         SELECT     *   FROM #AIElearning_Exercise_Mentor   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
525,AIElearning_Class_GetAll,"CREATE proc [dbo].[AIElearning_Class_GetAll]  @key nvarchar(250),  @chuoi nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@key<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@key+''')'  end  if(@chuoi<>'')   set @condition = @condition + ' and Id not in (select * from [dbo].Split('''+@chuoi+'''))'    exec('   SELECT top(15)* from AIElearning_Class '+@Condition+' order by id desc     ')  SET QUOTED_IDENTIFIER OFF"
526,AISystem_UserPermissionScope_DeleteByUserInRoleId,"CREATE PROC  [dbo].[AISystem_UserPermissionScope_DeleteByUserInRoleId]  @UserId INT,  @DNNRoleId INT,  @ScopeCode NVARCHAR(500)  AS  DELETE FROM AISystem_UserPermissionScope WHERE UserId=@UserId AND DNNRoleId=@DNNRoleId   "
527,AISystem_Category_WorkPlace_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_WorkPlace_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_WorkPlace WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_WorkPlace WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_WorkPlace WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_WorkPlace WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_WorkPlace WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_WorkPlace         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_WorkPlace SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
528,SetEventMessageComplete,CREATE PROCEDURE dbo.SetEventMessageComplete      @EventMessageID int    AS   UPDATE dbo.EventQueue    SET IsComplete = 1   WHERE EventMessageID = @EventMessageID
529,GetHtmlText,"create procedure dbo.GetHtmlText    @ModuleID int,  @ItemID int    as    select dbo.HtmlText.*,         dbo.WorkflowStates.*,         dbo.Workflow.WorkflowName,         dbo.Users.DisplayName,         dbo.Modules.PortalID  from   dbo.HtmlText  inner join dbo.Modules on dbo.Modules.ModuleID = dbo.HtmlText.ModuleID  inner join dbo.WorkflowStates on dbo.WorkflowStates.StateID = dbo.HtmlText.StateID  inner join dbo.Workflow on dbo.WorkflowStates.WorkflowID = dbo.Workflow.WorkflowID  left outer join dbo.Users on dbo.HtmlText.LastModifiedByUserID = dbo.Users.UserID  where  dbo.HtmlText.ModuleID = @ModuleID  and ItemID = @ItemID"
530,DeleteTabModuleSettings,CREATE PROCEDURE dbo.[DeleteTabModuleSettings]   @TabModuleId Int  AS  BEGIN   DELETE    FROM  dbo.[TabModuleSettings]     WHERE TabModuleId = @TabModuleId;  END; -- Procedure
531,AIElearning_LiveClass_GetsBySearchCount,"  CREATE PROC [dbo].[AIElearning_LiveClass_GetsBySearchCount]      @ClassId INT,      @Keyword NVARCHAR(250),      @Status INT  AS -- AIElearning_LiveClass_GetsBySearchCount -1,'',-1  DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @ClassId > 0 )      SET @condition = @condition + ' And  (ClassId= ' + STR(@ClassId) + ' )'  IF ( @Keyword <> '' )      SET @condition = @condition + ' And  (Name like  ''%' + @Keyword + '%'' )'  IF ( @Status > 0 )      SET @condition = @condition + ' And  (Status= ' + STR(@Status) + ' )'  EXEC('  SELECT COUNT(*)  FROM AIElearning_LiveClass WHERE ' + @condition)  SET QUOTED_IDENTIFIER OFF     "
532,AIElearning_Document_User_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Document_User_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Document_User    SET QUOTED_IDENTIFIER OFF     
533,Journal_Types_List,CREATE PROCEDURE dbo.[Journal_Types_List]  @PortalId int  AS  SELECT *   FROM dbo.[Journal_Types]  WHERE (PortalId = -1 OR PortalId = @PortalId)
534,PersonaBar_SavePersonaBarPermission,"CREATE PROCEDURE dbo.PersonaBar_SavePersonaBarPermission  @MenuId          INT,  @PermissionKey  VARCHAR(50),  @PermissionName  VARCHAR(50),  @CurrentUserId     INT AS     IF EXISTS(SELECT PermissionId FROM dbo.[PersonaBarPermission]                 WHERE ((@MenuId IS NULL AND MenuId IS NULL) OR MenuId = @MenuId) AND PermissionKey = @PermissionKey)     BEGIN         UPDATE dbo.[PersonaBarPermission]  SET          [MenuId] = @MenuId,          [PermissionName] = @PermissionName,          [LastModifiedByUserID] = @CurrentUserId,          [LastModifiedOnDate] = GETDATE()         WHERE ((@MenuId IS NULL AND MenuId IS NULL) OR MenuId = @MenuId) AND PermissionKey = @PermissionKey          SELECT PermissionId FROM dbo.[PersonaBarPermission]                 WHERE ((@MenuId IS NULL AND MenuId IS NULL) OR MenuId = @MenuId) AND PermissionKey = @PermissionKey     END     ELSE     BEGIN         INSERT INTO dbo.[PersonaBarPermission] (          [MenuId],          [PermissionKey],          [PermissionName],          [CreatedByUserID],          [CreatedOnDate],          [LastModifiedByUserID],          [LastModifiedOnDate]         ) VALUES (          @MenuId,          @PermissionKey,          @PermissionName,          @CurrentUserId,          GETDATE(),          @CurrentUserId,          GETDATE()         )          SELECT SCOPE_IDENTITY()     END"
535,AIElearning_Exercise_User_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Exercise_User_GetsBySearchCount]  @ExerciseId int,  @Keyword nvarchar(250)  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND UserName LIKE N''%'+@Keyword+'%'''   --  if(@ExerciseId >-1)   set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)      exec('   select COUNT(*) from AIElearning_Exercise_User where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
536,AISystem_Talent_GetsTalentNotInJobtitleCount,"CREATE PROC [dbo].[AISystem_Talent_GetsTalentNotInJobtitleCount]      @limit INT ,      @unitCode NVARCHAR(50) ,      @cateTalentId INT ,      @code NVARCHAR(250) ,      @type INT,   @jobtitleId INT  AS   -- AISystem_Talent_GetsTalentNotInJobtitleCount 2,'28',1067,'',2,4  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'    IF ( @limit <> 0 )      SET @Condition = @Condition + ' AND Limit=' + STR(@limit)  IF ( @unitCode <> '' )      SET @Condition = @Condition + ' AND UnitCode=''' + @unitCode + ''''  IF ( @cateTalentId <> 0 )      SET @Condition = @Condition + ' AND CateTalentId=' + STR(@cateTalentId)  IF ( @code <> '' )      SET @Condition = @Condition + ' AND Code=''' + @code + ''''    CREATE TABLE #AISystem_Talent_Temp      ( PK INT IDENTITY(1, 1) ,        Id INT ,        Title NVARCHAR(250) ,        Code NVARCHAR(250) ,        Description NVARCHAR(MAX) ,        Limit INT ,        UnitCode NVARCHAR(50) ,        CateTalentId INT ,        LevelCode NVARCHAR(MAX) ,        LevelName NVARCHAR(250) ,        TalentLevelId INT ,        ChildTalentId INT ,        ChildTitle NVARCHAR(250) ,        IsChild INT ,        SortColumn NVARCHAR(MAX) )  --Tao bang chua nang luc da duoc gan cho chuc danh  CREATE TABLE #AISystem_Jobtitle_Talent      ( PK INT ,        Id INT ,        Limit INT ,        TalentLevelId INT ,        ChildTalentId INT ,        IsChild INT )  -- Thêm năng lực cha  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code, ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+ tl.Description,''), t.Limit, t.UnitCode, t.CateTalentId, tl.LevelCode, r.Title,tl.Id, 0,'', 0, STR(t.Id)          FROM    AISystem_Talent t                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = t.Id AND tl.IsLevelChild = 0 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode          WHERE   t.Type = @type AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child)    -- Them nang luc con  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code,ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tc.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, t.CateTalentId, tl.LevelCode, r.Title,tl.Id, tc.Id,tc.Title, 1,STR(tc.TalentId) + STR(tc.Id)          FROM    AISystem_Talent_Child tc                  INNER JOIN AISystem_Talent t ON t.Id = tc.TalentId                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = tc.Id AND tl.IsLevelChild = 1 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode          WHERE   t.Type = @type       -- Them nang luc được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON ( tt.id = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild) WHERE jt.JobTitleId = @jobtitleId       -- Them nang luc con  được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON (tt.ChildTalentId = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild) WHERE jt.JobTitleId = @jobtitleId    -- AISystem_Talent_GetsTalentNotInJobtitleCount 2,'28',1067,'',2,4    EXEC('  SELECT count(*) from #AISystem_Talent_Temp  where  '+@Condition+' and  PK NOT IN  (SELECT PK FROM #AISystem_Jobtitle_Talent)   ')"
537,GetTopHtmlText,"create procedure dbo.GetTopHtmlText    @ModuleID    int,  @IsPublished bit    as    select top 1 dbo.HtmlText.*,         dbo.WorkflowStates.*,         dbo.Workflow.WorkflowName,         dbo.Users.DisplayName,         dbo.Modules.PortalID  from   dbo.HtmlText  inner join dbo.Modules on dbo.Modules.ModuleID = dbo.HtmlText.ModuleID  inner join dbo.WorkflowStates on dbo.WorkflowStates.StateID = dbo.HtmlText.StateID  inner join dbo.Workflow on dbo.WorkflowStates.WorkflowID = dbo.Workflow.WorkflowID  left outer join dbo.Users on dbo.HtmlText.LastModifiedByUserID = dbo.Users.UserID  where  dbo.HtmlText.ModuleID = @ModuleID  and    (IsPublished = @IsPublished or @IsPublished = 0)  order by dbo.HtmlText.LastModifiedOnDate desc"
538,GetTabSetting,"CREATE PROCEDURE dbo.[GetTabSetting]      @TabId         Int,         -- not null!      @SettingName   nVarChar(50) -- not null or empty!  AS  BEGIN   SELECT SettingName,       CASE WHEN SettingValue LIKE N'fileid=%'      THEN dbo.[FilePath](SettingValue)      ELSE SettingValue         END AS SettingValue    FROM  dbo.[TabSettings]     WHERE TabID = @TabId       AND SettingName = @SettingName;  END; -- Procedure"
539,AISystem_Category_Talent_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROCEDURE [dbo].[AISystem_Category_Talent_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50),  @limit int  AS    -- exec AISystem_Category_Talent_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,1,0    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Talent.Id,      0,      AISystem_Category_Talent.ParentId,      AISystem_Category_Talent.Title,      STR(AISystem_Category_Talent.OrderNo),      AISystem_Category_Talent.Title,      AISystem_Category_Talent.Code          FROM      AISystem_Category_Talent    WHERE      (AISystem_Category_Talent.Status=@Status OR @Status = -1)       AND (AISystem_Category_Talent.Id = @ParentId)      AND AISystem_Category_Talent.LanguageId = @LanguageId      AND AISystem_Category_Talent.PortalId = @portalId      AND (AISystem_Category_Talent.UnitCode = @unitCode )      AND (AISystem_Category_Talent.Limit = @limit )     End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Talent.Id,      0,      AISystem_Category_Talent.ParentId,      AISystem_Category_Talent.Title,      STR(AISystem_Category_Talent.OrderNo),      AISystem_Category_Talent.Title,      AISystem_Category_Talent.Code          FROM      AISystem_Category_Talent    WHERE      (AISystem_Category_Talent.Status=@Status OR @Status = -1)       AND (AISystem_Category_Talent.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Talent.ParentId IS NULL or AISystem_Category_Talent.ParentId <=0))      AND AISystem_Category_Talent.LanguageId = @LanguageId      AND AISystem_Category_Talent.PortalId = @portalId      AND (AISystem_Category_Talent.UnitCode = @unitCode  )      AND (AISystem_Category_Talent.Limit = @limit )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_Talent  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction        "
540,GetContentWorkflowUsage,"CREATE PROCEDURE dbo.[GetContentWorkflowUsage]   @WorkflowId INT,   @PageIndex INT,   @PageSize INT  AS   DECLARE @StartIndex INT = ((@PageIndex - 1) * @PageSize) + 1   DECLARE @EndIndex INT = (@PageIndex * @PageSize)      ;WITH ContenResourcesSet AS      (    SELECT wu.*, ROW_NUMBER() OVER (Order BY wu.ContentType, wu.ContentName) AS [Index]    FROM dbo.[vw_ContentWorkflowUsage] wu       WHERE wu.WorkflowID = @WorkflowId      )     SELECT * FROM ContenResourcesSet WHERE [Index] BETWEEN @StartIndex AND @EndIndex"
541,Journal_Types_Save,"CREATE PROCEDURE dbo.[Journal_Types_Save]  @JournalTypeId int,  @JournalType nvarchar(25),  @icon nvarchar(25),  @PortalId int,  @IsEnabled bit,  @AppliesToProfile bit,  @AppliesToGroup bit,  @AppliesToStream bit,  @options nvarchar(max),  @SupportsNotify bit  AS  IF EXISTS(SELECT JournalTypeId from dbo.[Journal_Types] WHERE JournalTypeId=@JournalTypeId AND PortalId = @PortalId)   BEGIN    UPDATE dbo.[Journal_Types]     SET      JournalType=@JournalType,      icon=@icon,      IsEnabled = @IsEnabled,      AppliesToProfile = @AppliesToProfile,      AppliesToGroup = @AppliesToGroup,      AppliesToStream = @AppliesToStream,      Options = @options,      SupportsNotify = @SupportsNotify     WHERE      PortalId = @PortalId AND JournalTypeId = @JournalTypeId   END  ELSE   BEGIN    SET @JournalTypeId = (SELECT MAX(JournalTypeId)+1 FROM dbo.[Journal_Types])    INSERT INTO dbo.[Journal_Types]     (JournalTypeId, JournalType, icon, PortalId, IsEnabled, AppliesToProfile, AppliesToGroup, AppliesToStream, Options, SupportsNotify)     VALUES     (@JournalTypeId, @JournalType, @icon, @PortalId, @IsEnabled, @AppliesToProfile, @AppliesToGroup, @AppliesToStream, @options, @SupportsNotify)   END  SELECT @JournalTypeId"
542,PersonaBar_DeletePersonaBarPermission,CREATE PROCEDURE dbo.[PersonaBar_DeletePersonaBarPermission]     @PermissionId           INT AS     DELETE FROM dbo.[PersonaBarPermission]          WHERE PermissionId = @PermissionId
543,DeleteAuthentication,CREATE PROCEDURE dbo.[DeleteAuthentication]   @AuthenticationID int  AS   DECLARE @AuthType nvarchar(100)   SET @AuthType = (SELECT AuthenticationType FROM dbo.Authentication WHERE AuthenticationID = @AuthenticationID)      -- Delete UserAuthentication rows   IF (@AuthType Is Not Null)    BEGIN     DELETE FROM dbo.UserAuthentication      WHERE AuthenticationType = @AuthType    END     -- Delete Record   DELETE     FROM   dbo.Authentication    WHERE AuthenticationID = @AuthenticationID
544,AIElearning_Exercise_User_GetsBySearch,"CREATE proc [dbo].[AIElearning_Exercise_User_GetsBySearch]  @pageIndex int,  @pageSize int,  @ExerciseId int,  @Keyword nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  --  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)  if(@Keyword<>'')   set @Condition=@Condition+' AND  UserName LIKE N''%'+@Keyword+'%'''    exec('    WITH #AIElearning_Exercise_User AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise_User '+@Condition+'        )         SELECT     *   FROM #AIElearning_Exercise_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
545,AIElearning_ClassUser_GetByUser,"    CREATE PROC [dbo].[AIElearning_ClassUser_GetByUser]  @pageIndex int,  @pageSize int,  @Username nvarchar(150),  @Status int,  @OrderBy nvarchar(250),  @year int   AS  -- AIElearning_ClassUser_GetByUser 1,10,'admin_aivietnam',-1, 'c.id desc', '2017'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  set @condition = @condition + ' and (u.Username='''+ @Username + ''')'  if(@Status>0)   set @condition = @condition + ' and u.Status='+ str(@Status)  if(@year>-1)   set @condition = @condition + ' and Year(c.CreatedDate)='+ str(@year)  exec('    WITH #AIElearning_Class AS(    SELECT  ROW_NUMBER() OVER (ORDER BY '+@OrderBy+') AS RowNumber,    u.* ,          c.Name ,          c.Code ,    c.Offline_Time,          c.Description ,          ui.Avatar ,          ui.Displayname ,          ui.Mastercode ,          ui.EmployeeCode ,          ui.Email ,    ui.UnitChildPath,          cu.Title AS UnitName ,          jt.Title AS JobTitleName  FROM    AIElearning_ClassUser u          INNER JOIN AIElearning_Class c ON u.ClassId = c.Id          INNER JOIN dbo.AISystem_UserInfo ui ON u.UserId = ui.UserId          LEFT JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code          LEFT JOIN dbo.AISystem_JobTitle_Title jt ON ui.JobTitleCode = jt.Code       where ' + @condition + '      )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF "
546,AIElearning_ClassLecturers_TotalTime_SumTime,"create proc [dbo].[AIElearning_ClassLecturers_TotalTime_SumTime]  @Username nvarchar(150),  @year int  as  --[dbo].[AIElearning_ClassLecturers_TotalTime_SumTime] 'namnp',2017  begin  if exists(select * from AIElearning_Class  class  inner join AIElearning_Class_Lecturers Lecturer  on class.id=Lecturer.ClassId  inner join AIElearning_Lecturers lec  on lec.id=Lecturer.LecturersId  inner join AISystem_UserInfo u  on lec.UserInfoId=u.id  where u.Username=@Username and  YEAR(class.StartDateClass)=@year)  (  select sum(class.Offline_Time) from AIElearning_Class  class  inner join AIElearning_Class_Lecturers Lecturer  on class.id=Lecturer.ClassId  inner join AIElearning_Lecturers lec  on lec.id=Lecturer.LecturersId  inner join AISystem_UserInfo u  on lec.UserInfoId=u.id  where u.Username=@Username and  YEAR(class.StartDateClass)=@year  )  else  select distinct 0 from AIElearning_Class  end  "
547,AIElearning_ClassDocument_DeleteByClassId,"CREATE PROC [dbo].[AIElearning_ClassDocument_DeleteByClassId]      @ClassId INT,      @ParentType INT  AS  DELETE  FROM AIElearning_ClassDocument  WHERE   ClassId = @ClassId AND ParentType = @ParentType       "
548,GetAllHtmlText,"create procedure dbo.GetAllHtmlText    @ModuleID int    as    select dbo.HtmlText.*,         dbo.WorkflowStates.*,         dbo.Workflow.WorkflowName,         dbo.Users.DisplayName,         dbo.Modules.PortalID  from   dbo.HtmlText  inner join dbo.Modules on dbo.Modules.ModuleID = dbo.HtmlText.ModuleID  inner join dbo.WorkflowStates on dbo.WorkflowStates.StateID = dbo.HtmlText.StateID  inner join dbo.Workflow on dbo.WorkflowStates.WorkflowID = dbo.Workflow.WorkflowID  left outer join dbo.Users on dbo.HtmlText.LastModifiedByUserID = dbo.Users.UserID  where  dbo.HtmlText.ModuleID = @ModuleID  order by dbo.HtmlText.LastModifiedOnDate desc"
549,GetTabSettings,"CREATE PROCEDURE dbo.[GetTabSettings]      @PortalId Int -- Null|-1 for Host Pages  AS  BEGIN   SELECT S.TabID,       S.SettingName,       CASE WHEN Lower(S.SettingValue) LIKE N'fileid=%'       THEN dbo.[FilePath](S.SettingValue)      ELSE S.SettingValue        END AS SettingValue    FROM  dbo.[TabSettings] S    JOIN  dbo.[Tabs]        T ON t.TabID = S.TabID    WHERE  ISNull(PortalId, -1) = isNull(@PortalId, -1)    ORDER BY S.TabID;  END; -- Procedure"
550,GetContentWorkflowUsageCount,CREATE PROCEDURE dbo.[GetContentWorkflowUsageCount]   @WorkflowId INT  AS   SELECT COUNT(*)   FROM dbo.[vw_ContentWorkflowUsage] wu     WHERE wu.WorkflowID = @WorkflowId
551,GetPermissions,CREATE PROCEDURE dbo.GetPermissions  AS   SELECT * FROM dbo.Permission   ORDER BY ViewOrder
552,AIElearning_Exercise_User_GetsMentorCount,"create proc [dbo].[AIElearning_Exercise_User_GetsMentorCount]  @ExerciseId int,  @Mentorid int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Mentorid>-1)   set @Condition=@Condition+' AND Mentorid='+str(@Mentorid)   --  if(@ExerciseId >-1)   set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)      exec('   select COUNT(*) from AIElearning_Exercise_User where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
553,AIElearning_ClassUser_GetByUserCount,"CREATE PROC [dbo].[AIElearning_ClassUser_GetByUserCount]   @Username nvarchar(250),  @Status int,  @year int   AS  -- AIElearning_Class_GetByUserCount 'quantridaotao', 1    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  set @condition = @condition + ' and (u.Username='''+ @Username + ''')'  if(@Status>0)   set @condition = @condition + ' and u.Status='+ str(@Status)  if(@year>-1)   set @condition = @condition + ' and Year(c.CreatedDate)='+ str(@year)    exec('   SELECT      COUNT(u.ID)      from AIElearning_ClassUser u inner join AIElearning_Class c on u.ClassId=c.Id      where ' + @condition + '  ')  "
554,AISystem_Talent_Level_GetMaxOrderNo,"CREATE proc [dbo].[AISystem_Talent_Level_GetMaxOrderNo]   @talentId int  as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_Talent_Level   WHERE TalentId=@talentId   end    "
555,CoreMessaging_DeleteNotificationType,CREATE PROCEDURE dbo.[CoreMessaging_DeleteNotificationType]   @NotificationTypeID int  AS  BEGIN   -- First delete related data   DELETE   FROM dbo.[CoreMessaging_Messages]   WHERE [NotificationTypeID] = @NotificationTypeID      DELETE   FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeID] = @NotificationTypeID     -- Finally delete the Notification type   DELETE   FROM dbo.[CoreMessaging_NotificationTypes]   WHERE [NotificationTypeID] = @NotificationTypeID  END
556,AddHtmlTextLog,"create procedure dbo.AddHtmlTextLog    @ItemID          int,  @StateID         int,  @Comment         nvarchar(4000),  @Approved        bit,  @UserID          int    as    insert into dbo.HtmlTextLog (    ItemID,    StateID,    Comment,    Approved,    CreatedByUserID,    CreatedOnDate  )  values (    @ItemID,    @StateID,    @Comment,    @Approved,    @UserID,    getdate()  )"
557,PackageItem$UpdateSecurity,"  -- Create function for the update security on the PackageItem item type  CREATE FUNCTION [PackageItem$UpdateSecurity](@UserKey nvarchar(250),@Id bigint,@PackageFormat$Changed bit,@PackageFormat int,@Location$Changed bit,@Location nvarchar(260),@Manifest$Changed bit,@Manifest xml,@Owner$Changed bit,@Owner bigint,@FileName$Changed bit,@FileName nvarchar(260),@UploadDateTime$Changed bit,@UploadDateTime datetime)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN @PackageFormat$Changed=0 AND @Location$Changed=0 AND @Manifest$Changed=0 AND      EXISTS(SELECT * FROM PackageItem WHERE Id=@Id AND Owner IS NULL) AND @Owner$Changed=1 AND      EXISTS(SELECT * FROM UserItem WHERE Id=@Owner AND [Key]=@UserKey) THEN 1 ELSE 0 END)  END  "
558,UpdateTabSetting,"CREATE PROCEDURE dbo.[UpdateTabSetting]   @TabID            int,           -- Not Null|-1   @SettingName  nvarchar( 50), -- Not Null|''   @SettingValue  nvarchar(Max), -- Null: remove setting   @UserID    int            -- for logging  AS  BEGIN   -- empty value: remove setting   IF IsNull(@SettingValue, N'') = N'' AND IsNull(@SettingName, N'') != N''    DELETE FROM dbo.[TabSettings]     WHERE IsNull(TabID, -1) = IsNull(@TabID, -1)       AND SettingName = @SettingName;   ELSE IF IsNull(@SettingName, N'') != N'' AND IsNull(@TabID, -1) != -1 BEGIN -- key must be valid    MERGE INTO dbo.[TabSettings] S     USING (SELECT @TabID MID, @SettingName SN, @SettingValue SV) Q        ON (S.TabID = Q.MID AND S.SettingName = Q.SN)     WHEN MATCHED AND IsNull(S.SettingValue, N'') != IsNull(Q.SV, N'') THEN -- update only, if value has been modified:     UPDATE SET [SettingValue] = Q.SV, [LastModifiedByUserID] = @UserID, [LastModifiedOnDate] = GetDate()     WHEN NOT MATCHED THEN         INSERT ( TabID,  SettingName,  SettingValue, CreatedByUserID    , CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate)     VALUES (@TabID, @SettingName, @SettingValue, IsNull(@UserID, -1),     GetDate(),  IsNull(@UserID, -1),          GetDate());   END; -- Else If  END; -- Procedure"
559,GetPortalAliases,CREATE PROCEDURE dbo.GetPortalAliases  AS   SELECT * FROM dbo.PortalAlias
560,AIElearning_Exercise_User_GetsMentorId,"create proc [dbo].[AIElearning_Exercise_User_GetsMentorId]  @pageIndex int,  @pageSize int,  @ExerciseId int,  @Mentorid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  --  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@ExerciseId>-1)  set @Condition=@Condition+' AND ExerciseId='+str(@ExerciseId)  if(@Mentorid>-1)   set @Condition=@Condition+' AND Mentorid='+str(@Mentorid)    exec('    WITH #AIElearning_Exercise_User AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise_User '+@Condition+'        )         SELECT     *   FROM #AIElearning_Exercise_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
561,DeleteContentType,CREATE PROCEDURE dbo.[DeleteContentType]    @ContentTypeId int  AS   DELETE FROM dbo.ContentTypes   WHERE ContentTypeId = @ContentTypeId
562,AISystem_Subject_GetNotInClass,  CREATE proc [dbo].[AISystem_Subject_GetNotInClass]  @chuoi nvarchar(250)  as   SELECT *   from AISystem_Subject where Id  in (select * from [dbo].Split(@chuoi))  
563,GetHtmlTextLog,"create procedure dbo.GetHtmlTextLog    @ItemID int    as    select HtmlTextLog.ItemID,         HtmlTextLog.StateID,         WorkflowStates.StateName,         HtmlTextLog.Comment,         HtmlTextLog.Approved,         HtmlTextLog.CreatedByUserID,         Users.DisplayName,         HtmlTextLog.CreatedOnDate  from dbo.HtmlTextLog  inner join dbo.WorkflowStates on dbo.HtmlTextLog.StateID = dbo.WorkflowStates.StateID  left outer join dbo.Users on dbo.HtmlTextLog.CreatedByUserID = dbo.Users.UserID  where ItemID = @ItemID  order by HtmlTextLog.CreatedOnDate desc"
564,UserItem$AddSecurity,"  -- Create function for the add security on the UserItem item type  CREATE FUNCTION [UserItem$AddSecurity](@UserKey nvarchar(250),@Key nvarchar(250),@Name nvarchar(255),@AudioCaptioning int=0,@AudioLevel float(24)=1,@DeliverySpeed float(24)=1,@Language nvarchar(255)='')  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN @Key=@UserKey THEN 1 ELSE 0 END)  END  "
565,DeleteTabSetting,"CREATE PROCEDURE dbo.[DeleteTabSetting]   @TabID       Int,         -- Not Null   @SettingName nVarChar(50) -- Not Null or empty  AS  BEGIN   DELETE     FROM  dbo.[TabSettings]    WHERE TabID       = @TabID      AND SettingName = @SettingName;  END; -- Procedure"
566,AIElearning_DocumentGroup_File_ChangePosition,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_ChangePosition]   @id int,  @move int  as  begin  DECLARE @above AS int  DECLARE @below AS int  DECLARE @orderNo AS int  DECLARE @aboveId AS int  DECLARE @belowId AS int  DECLARE @documentGroupId as int    select @orderNo = OrderNo from AIElearning_DocumentGroup_File where Id= @id   SET @above = (@orderNo -1)  SET @below = (@orderNo + 1)  select @documentGroupId = DocumentGroupId from AIElearning_DocumentGroup_File where Id= @id    select @aboveId = Id from AIElearning_DocumentGroup_File where OrderNo= @above  and DocumentGroupId = @documentGroupId  select @belowId = Id from AIElearning_DocumentGroup_File where OrderNo= @below and DocumentGroupId = @documentGroupId  --1: Move up  if(@move = 1)  begin  update AIElearning_DocumentGroup_File set OrderNo= @below where Id= @id  update AIElearning_DocumentGroup_File set OrderNo= @orderNo where Id= @belowId    --0: Move down  end  if(@move = 0)  begin  update AIElearning_DocumentGroup_File set OrderNo= @above where Id= @id  update AIElearning_DocumentGroup_File set OrderNo= @orderNo where Id= @aboveId  end  end    "
567,AddPortalInfo,"CREATE PROCEDURE dbo.AddPortalInfo   @PortalName         nvarchar(128),   @Currency           char(3),   @ExpiryDate         datetime,   @HostFee            money,   @HostSpace          int,   @PageQuota          int,   @UserQuota          int,   @SiteLogHistory     int,   @HomeDirectory  varchar(100),   @CultureCode  nvarchar(50),   @CreatedByUserID int  AS    DECLARE @PortalID int    insert into dbo.Portals (    ExpiryDate,    UserRegistration,    BannerAdvertising,    Currency,    HostFee,    HostSpace,    PageQuota,    UserQuota,    SiteLogHistory,    DefaultLanguage,    HomeDirectory,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate  )  values (    @ExpiryDate,    0,    0,    @Currency,    @HostFee,    @HostSpace,    @PageQuota,    @UserQuota,    @SiteLogHistory,    @CultureCode,    @HomeDirectory,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()  )    SET @PortalID = SCOPE_IDENTITY()    IF @HomeDirectory = ''  BEGIN   UPDATE dbo.Portals SET HomeDirectory = 'Portals/' + convert(varchar(10), @PortalID) WHERE PortalID = @PortalID  END    insert into dbo.PortalLocalization (PortalID,CultureCode,PortalName,Description,KeyWords)     values (@PortalID,@CultureCode,@PortalName,@PortalName,@PortalName)                   SELECT @PortalID"
568,CK__CommentFr__Comme__288EB6CC,(len([Comment])<=(4096))
569,Journal_Types_Delete,"CREATE PROCEDURE dbo.[Journal_Types_Delete]  @JournalTypeId int,  @PortalId int  AS  IF @JournalTypeId > 200   BEGIN    DELETE FROM dbo.[Journal_Security]    WHERE JournalId IN (SELECT JournalId FROM dbo.[Journal] WHERE JournalTypeId=@JournalTypeId AND PortalId=@PortalId)    DELETE FROM dbo.[Journal]    WHERE      JournalTypeId = @JournalTypeId      AND      PortalId = @PortalId    DELETE FROM dbo.[Journal_TypeFilters]    WHERE     JournalTypeId = @JournalTypeId     AND      PortalId = @PortalId    DELETE FROM dbo.[Journal_Types]    WHERE      JournalTypeId = @JournalTypeId     AND     PortalId = @PortalId   END"
570,DeleteMetaData,"CREATE PROCEDURE dbo.[DeleteMetaData]    @ContentItemId  int,   @Name    nvarchar(100),   @Value    nvarchar(MAX)     AS   DELETE FROM dbo.ContentItems_MetaData   FROM dbo.ContentItems_MetaData AS cm    INNER JOIN dbo.MetaData AS m ON cm.MetaDataID = m.MetaDataID   WHERE cm.ContentItemId = @ContentItemId AND m.MetaDataName = @Name AND cm.MetaDataValue = @Value"
571,DeleteEventLogType,CREATE PROCEDURE dbo.DeleteEventLogType   @LogTypeKey nvarchar(35)  AS  DELETE FROM dbo.EventLogTypes  WHERE LogTypeKey = @LogTypeKey
572,AIElearning_GetTestCampaignUserid,"create proc [dbo].[AIElearning_GetTestCampaignUserid]   @pageIndex int,  @pageSize int,  @Userid int  as  -- AIElearning_Class_GetsBySearch 1,22, '', -1, 2, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    -- Tr?ng thái  if(@Userid>-1)  set @Condition=@Condition+' AND id  in(select distinct TestCampaignId from AIElearning_TestCampaign_Registor where id in (select TestRegistorId from AIElearning_TestCampaign_Registor_Staff where Userid='''+str(@Userid)+'''))'  exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
573,AISystem_Talent_Level_GetsBySearchCount,CREATE proc [dbo].[AISystem_Talent_Level_GetsBySearchCount]  as  select COUNT(*) from AISystem_Talent_Level    SET QUOTED_IDENTIFIER OFF       
574,AddHtmlTextUser,"create procedure dbo.AddHtmlTextUser    @ItemID          int,  @StateID         int,  @ModuleID        int,  @TabID           int,  @UserID          int    as    insert into dbo.HtmlTextUsers (    ItemID,    StateID,    ModuleID,    TabID,    UserID,    CreatedOnDate  )  values (    @ItemID,    @StateID,    @ModuleID,    @TabID,    @UserID,    getdate()  )"
575,SeqNavOrganizationGlobalObjectiveView,"  -- Create a function that implements the SeqNavOrganizationGlobalObjectiveView view  CREATE FUNCTION [SeqNavOrganizationGlobalObjectiveView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT GlobalObjectiveItem.OrganizationId OrganizationId, GlobalObjectiveItem.[Key] [Key], PackageGlobalObjectiveItem.LearnerId LearnerId, PackageGlobalObjectiveItem.ScaledScore ScaledScore, PackageGlobalObjectiveItem.SuccessStatus SuccessStatus      FROM GlobalObjectiveItem      INNER JOIN PackageGlobalObjectiveItem ON PackageGlobalObjectiveItem.GlobalObjectiveId=GlobalObjectiveItem.Id  )  "
576,DeleteTabSettings,CREATE PROCEDURE dbo.[DeleteTabSettings]   @TabID  Int -- Not Null!  AS  BEGIN   DELETE     FROM  dbo.[TabSettings]    WHERE TabID = @TabID;  END; -- Procedure
577,Journal_Delete,"CREATE PROCEDURE dbo.[Journal_Delete]   @JournalId int,   @SoftDelete int = 0   AS     -- Hard Delete   IF @SoftDelete <> 1    BEGIN    DELETE FROM dbo.[Journal_Security] WHERE JournalId = @JournalId    DELETE FROM dbo.[Journal_Comments] WHERE JournalId = @JournalId    DELETE FROM dbo.[Journal] WHERE JournalId = @JournalId   END     -- Soft Delete   IF @SoftDelete = 1    BEGIN    UPDATE dbo.[Journal] SET IsDeleted = 1 WHERE JournalId = @JournalId   END"
578,AIElearning_Money_GetsByNotId,create proc [dbo].[AIElearning_Money_GetsByNotId]  @NotId nvarchar(250)  as  select * from AIElearning_Money where id not in (select * from Split(@NotId))  
579,Journal_Types_GetById,CREATE PROCEDURE dbo.[Journal_Types_GetById]  @JournalTypeId int  AS  SELECT * from dbo.[Journal_Types] WHERE JournalTypeId = @JournalTypeId
580,AISystem_Category_Media_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Media_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Media_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Media  WHERE   ParentId = @parentId    "
581,DeleteUrl,"create procedure dbo.DeleteUrl    @PortalID     int,  @Url          nvarchar(255)    as    delete  from   dbo.Urls  where  PortalID = @PortalID  and    Url = @Url"
582,AIElearning_LearingAndLecture_GetsBySearch,"  create proc [dbo].[AIElearning_LearingAndLecture_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_LearingAndLecture AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_LearingAndLecture       )         SELECT     *   FROM #AIElearning_LearingAndLecture   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
583,DeleteVocabulary,CREATE PROCEDURE dbo.[DeleteVocabulary]    @VocabularyID   int  AS   DELETE FROM dbo.Taxonomy_Vocabularies   WHERE VocabularyID = @VocabularyID
584,AIElearning_Class_Lecturers_GetClassByLecturerId,"  CREATE PROC [dbo].[AIElearning_Class_Lecturers_GetClassByLecturerId]   @lecturerId INT,   @ParentType INT  AS      SELECT  ROW_NUMBER() OVER ( ORDER BY c.Id DESC ) AS RowNumber , c.*      FROM    AIElearning_Class c              INNER JOIN AIElearning_Class_Lecturers l ON c.Id = l.ClassId      WHERE   l.LecturersId = @lecturerId AND l.ParentType = @ParentType  "
585,SeqNavLearnerGlobalObjectiveView,"  -- Create a function that implements the SeqNavLearnerGlobalObjectiveView view  CREATE FUNCTION [SeqNavLearnerGlobalObjectiveView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT LearnerGlobalObjectiveItem.LearnerId LearnerId, GlobalObjectiveItem.[Key] [Key], LearnerGlobalObjectiveItem.ScaledScore ScaledScore, LearnerGlobalObjectiveItem.SuccessStatus SuccessStatus      FROM GlobalObjectiveItem      INNER JOIN LearnerGlobalObjectiveItem ON LearnerGlobalObjectiveItem.GlobalObjectiveId=GlobalObjectiveItem.Id  )  "
586,vw_Files,"CREATE VIEW dbo.[vw_Files]  AS      SELECT    fi.FileId,               fi.PortalId,               fi.FileName,               fi.Extension,               fi.Size,               fi.Width,               fi.Height,               fi.ContentType,               fi.FolderID,               fi.[Content],               fi.CreatedByUserID,               fi.CreatedOnDate,               fi.LastModifiedByUserID,               fi.LastModifiedOnDate,               fi.UniqueId,               fi.VersionGuid,               fi.SHA1Hash,               fi.LastModificationTime,               fi.Title,               fi.Description,              fi.StartDate,               fi.EnablePublishPeriod,               fi.EndDate,               fi.ContentItemID,               fi.PublishedVersion,               fo.FolderPath AS Folder,              fo.IsCached,              fo.FolderMappingID,              fo.StorageLocation,              fi.HasBeenPublished      FROM         dbo.[Files] AS fi       INNER JOIN dbo.[Folders] AS fo           ON fi.FolderID = fo.FolderID"
587,Journal_DeleteByGroupId,"CREATE PROCEDURE dbo.[Journal_DeleteByGroupId]   @PortalId int,   @GroupId int,   @SoftDelete int = 0   AS     -- Hard Delete   IF @SoftDelete <> 1    BEGIN    DELETE dbo.[Journal_Security]     FROM dbo.[Journal_Security] as js  INNER JOIN dbo.[Journal] as j        ON js.JournalId = j.JournalId    WHERE j.PortalId = @PortalId AND j.GroupId = @GroupId AND @GroupId > 0 AND j.GroupId IS NOT NULL      DELETE dbo.[Journal_Comments]     FROM dbo.[Journal_Comments] as jc  INNER JOIN dbo.[Journal] as j        ON jc.JournalId = j.JournalId    WHERE j.PortalId = @PortalId AND j.GroupId = @GroupId AND @GroupId > 0 AND j.GroupId IS NOT NULL      DELETE FROM dbo.[Journal] WHERE PortalId = @PortalId AND GroupId = @GroupId AND @GroupId > 0 AND GroupId IS NOT NULL   END     -- Soft Delete   IF @SoftDelete = 1    BEGIN    UPDATE dbo.[Journal] SET IsDeleted = 1 WHERE PortalId = @PortalId AND GroupId = @GroupId AND @GroupId > 0 AND GroupId IS NOT NULL   END"
588,AIElearning_DocumentGroup_File_DeleteAndUpdatePosition,CREATE PROC [dbo].[AIElearning_DocumentGroup_File_DeleteAndUpdatePosition]   @id int  as  begin  DECLARE @orderNo AS int  DECLARE @documentGroupId AS int  select @documentGroupId = DocumentGroupId from AIElearning_DocumentGroup_File where Id= @id   select @orderNo = OrderNo from AIElearning_DocumentGroup_File where Id= @id   delete from AIElearning_DocumentGroup_File where Id = @id  update AIElearning_DocumentGroup_File set OrderNo = (OrderNo-1) where OrderNo > @orderNo and DocumentGroupId =@documentGroupId  end      
589,GetUsersBasicSearch,"CREATE PROCEDURE dbo.[GetUsersBasicSearch]  (   @PortalID int,     -- portal   @PageSize int,     -- page size   @PageIndex int,     -- 0 based page index   @SortBy nvarchar(100),   -- sort field   @SortAscending bit,    -- sort flag indicating whether sort is asc or desc   @PropertyName nvarchar(256),    -- property to filter by (username, diaplayname, email)   @PropertyValue nvarchar(256) -- value of property  )  AS   -- Set up Top XX   DECLARE @topSql nvarchar(20)   SET @topSql = CONVERT(nvarchar(20), @PageSize)     --Set up Count   DECLARE @minRowNumberSql nvarchar(20)   SET @minRowNumberSql =  CONVERT(nvarchar(20), ((@PageIndex * @PageSize) + 1))     -- Set up Sort   DECLARE @sortSql nvarchar(1000)   SET @sortSql = dbo.GetSortSql(@SortBy, @SortAscending, 'UserID')     -- Setup Pivot Field List   DECLARE @pivotSql nvarchar(max)   SELECT @pivotSql = dbo.GetProfileFieldSql(@PortalID, '')     -- Setup FieldName Field List for temporary table   DECLARE @fieldNames nvarchar(max)   SELECT @fieldNames = dbo.GetProfileFieldSql(@PortalID, ' nvarchar(max)')     DECLARE @sql nvarchar(max)   SELECT @sql=      '       DECLARE @pivotedUsers TABLE       (        RowNumber int,        UserID int,        PortalID int,        Username nvarchar(100),        Email nvarchar(256),        DisplayName nvarchar(128),        IsSuperUser bit,        IsDeleted bit,        AffiliateID int,        UpdatePassword bit,        Authorised bit,        ' + @fieldNames + '       );         WITH TempUsers       AS       (        SELECT TOP ' + @topSql + ' * FROM (         SELECT          ROW_NUMBER() OVER(' + @sortSql + ') AS RowNumber,          U.UserID,          U.PortalID,          U.Username,          U.Email,          U.DisplayName,          U.IsSuperUser,          U.IsDeleted,          U.AffiliateID,          U.UpdatePassword,          U.Authorised          FROM dbo.vw_Users AS U         WHERE (U.PortalID = ' + CONVERT(nvarchar(20), @PortalID) + ' OR U.PortalID Is NULL )          AND ((U.' + @PropertyName + ' LIKE N''' + @PropertyValue + '%'')           OR (U.' + @PropertyName + ' LIKE N''% ' + @PropertyValue + '%''))          AND U.IsDeleted = 0        ) AS U        WHERE RowNumber >= ' + @minRowNumberSql + '       ),       TempUsersWithProfile       AS       (        SELECT         U.UserID,         U.PortalID,         U.Username,         U.Email,         U.DisplayName,         U.IsSuperUser,         U.IsDeleted,         U.AffiliateID,         U.UpdatePassword,         U.Authorised,         P.PropertyName,         P.PropertyValue        FROM TempUsers U         INNER JOIN dbo.vw_Profile P ON P.UserID = U.UserID       )          SELECT  * FROM (           SELECT  * FROM TempUsersWithProfile           PIVOT           (            MAX(PropertyValue) for PropertyName in (' + @pivotSql + ')           ) as pivotTable                      ) T       ' + @sortSql   EXEC(@sql)"
590,Journal_Types_Get,CREATE PROCEDURE dbo.[Journal_Types_Get]  @JournalType nvarchar(25)  AS  SELECT * from dbo.[Journal_Types] WHERE JournalType = @JournalType
591,AIElearning_Money_Reimburse_ReportClass,"  CREATE proc [dbo].[AIElearning_Money_Reimburse_ReportClass]  @username nvarchar(150),  @type int  as  begin  if(@type=1)  (  select class.name [Tenlop],class.Code [Malop],class.Offline_Time [Thoigian],  (select count(*) from  AIElearning_ClassUser where Classid=class.id) [TongHV],  (select title from AISystem_Category_Unit where code =class.Unitcode)[Donvi],  ( select Sum(MoneyReality) from  AIElearning_Monney_Class where Classid=class.id ) [TongTien],   (select Name from AISystem_Subject  where AISystem_Subject.Id=class.SubjectId)[Tenkhoahoc],   re.Money [Boihoan]    from AIElearning_Class  class  inner join AIElearning_Money_Reimburse re  on class.Id=re.ItemId  where re.Username=@username and re.type=@type  )  else  (  select class.name [Tenlop],(select title from AISystem_Category_Unit where code =class.Unitcode)[Donvi],  class.money [TongTien],  re.Money [Boihoan]    from AIElearning_Monney_Other_User  class  inner join AIElearning_Money_Reimburse re  on class.Id=re.ItemId  where re.Username=@username and re.type=@type  )  end"
592,AISystem_Category_Document_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Document_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Document_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Document  WHERE   ParentId = @parentId      "
593,CoreMessaging_GetLastSentMessage,"CREATE PROCEDURE dbo.[CoreMessaging_GetLastSentMessage]   @UserID int,   @PortalID INT  AS  BEGIN   SELECT TOP 1 *    FROM dbo.[CoreMessaging_Messages]   WHERE SenderUserID = @UserID    AND PortalID=@PortalID   AND NotificationTypeID IS NULL   ORDER BY MessageID DESC  END"
594,AISystem_Email_GetClassUserName,"CREATE proc [dbo].[AISystem_Email_GetClassUserName]  @classid int  as  BEGIN   DECLARE @result NVARCHAR(MAX)   SELECT @result = STUFF(                          (   SELECT ',""' + CONVERT(NVARCHAR(20), userinfo.Username)+' ('+Email+')""'                               FROM AISystem_UserInfo userinfo inner join AIElearning_ClassUser classuser on userinfo.Username=classuser.Username         where Email<>'' and ClassId=@classid                                FOR xml path('')                          )                          , 1                          , 1                          , '')    select @result as ToEmail   end  "
595,AIEventLog_InsertData,"  CREATE proc [dbo].[AIEventLog_InsertData]    @UserId int,   @Username nvarchar(100),   @ActionId int,   @IpAddress nvarchar(50),   @ObjectType int ,   @ObjectId int ,   @ObjectName nvarchar(255),   @Note nvarchar(1000) ,   @CreatedDate datetime,   @PortalId int ,   @LanguageId nvarchar(50),   @ObjectNewData nvarchar(max),   @ObjectOldData nvarchar(max),   @NameTable nvarchar(255)  as  --    --AIEventLog_InsertData 0,'2',3,'4',5,6,'7','8','01/01/2011',9,'10','11','12','AIEventLog_2018'  IF  EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME=@NameTable)  Begin  exec('  Insert into  '+@NameTable+'(   [UserId] ,   [Username] ,   [ActionId] ,   [IpAddress] ,   [ObjectType] ,   [ObjectId] ,   [ObjectName] ,   [Note] ,   [CreatedDate] ,   [PortalId],   [LanguageId] ,   [ObjectNewData] ,   [ObjectOldData])        Values (   '+@UserId+' ,   N'''+@Username+''' ,   '+ @ActionId +' ,   '''+@IpAddress+''' ,   '+@ObjectType+' ,   '+@ObjectId+',   N'''+@ObjectName+''' ,   N'''+@Note+''' ,   '''+@CreatedDate+''' ,   '+@PortalId+',   '''+@LanguageId+''' ,   N'''+@ObjectNewData+''' ,   N'''+@ObjectOldData+'''   )   ')  end  else  begin  exec('  CREATE TABLE '+@NameTable+'(   [Id] [bigint] IDENTITY(1,1) NOT NULL,   [UserId] [int] NULL,   [Username] [nvarchar](100) NULL,   [ActionId] [int] NULL,   [IpAddress] [nvarchar](50) NULL,   [ObjectType] [int] NULL,   [ObjectId] [int] NULL,   [ObjectName] [nvarchar](255) NULL,   [Note] [nvarchar](1000) NULL,   [CreatedDate] [datetime] NULL,   [PortalId] [int] NULL,   [LanguageId] [nvarchar](50) NULL,   [ObjectNewData] [nvarchar](max) NULL,   [ObjectOldData] [nvarchar](max) NULL,   CONSTRAINT [PK_'+@NameTable+'] PRIMARY KEY CLUSTERED   (   [Id] ASC  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]  ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]    ')  end    "
596,GetFileByUniqueID,CREATE PROCEDURE dbo.[GetFileByUniqueID]      @UniqueID   uniqueidentifier  AS   SELECT *    FROM dbo.Files   WHERE UniqueID = @UniqueID
597,AIElearning_LearingAndLecture_OutItem_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_LearingAndLecture_OutItem_GetsBySearchCount]  @UserName nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Type int  as  -- AIElearning_LearingAndLecture_OutItem_GetsBySearchCount 'hocvienvs01'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@UserName IS NOT NULL AND @UserName<>'')   set @condition = @condition +    ' And  (o.UserName= '''+ @UserName+''' )'  IF(@ReportYear > 0)   set @condition = @condition +    ' And  (o.ReportYear= '+ STR(@ReportYear)+' )'  IF (@UnitCode IS NOT NULL AND @UnitCode<>'')   set @condition = @condition +    ' And  (o.UnitCode= '''+ @UnitCode+''' )'  IF(@Type > 0)   set @condition = @condition +    ' And  (o.Type= '+ STR(@Type)+' )'  exec('   select COUNT(o.Id)    FROM  AIElearning_LearingAndLecture_OutItem AS i INNER JOIN         AIElearning_LearingAndLecture_Out AS o ON i.OutId = o.Id where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
598,GetUsersByEmail,"CREATE PROCEDURE dbo.[GetUsersByEmail]   @PortalID  int,   @EmailToMatch   nvarchar(256),   @PageIndex      int,   @PageSize       INT,   @IncludeDeleted bit,   @SuperUsersOnly bit    AS  BEGIN    -- Set the page bounds    DECLARE      @PageLowerBound INT,      @PageUpperBound INT,      @RowsToReturn int,      @TotalRecords int      exec dbo.CalculatePagingInformation @PageIndex, @PageSize, @RowsToReturn output, @PageLowerBound output, @PageUpperBound output      declare @tblPageIndex table (     IndexId int IDENTITY (0, 1) NOT NULL primary key,     UserId int     )      if @PortalId is null and @EmailToMatch IS NULL     begin      with [UsersByEmail] as (       SELECT U.*, ROW_NUMBER() OVER (ORDER BY Email ASC) AS ROWID        FROM    dbo.vw_Users U        WHERE U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0         AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      )      select *, ROWID - 1 AS IndexID, UserID        from [UsersByEmail]       where ROWID > @PageLowerBound AND ROWID < @PageUpperBound     end    else if @PortalId is null and @EmailToMatch IS NOT NULL      begin      with [UsersByEmail] as (       SELECT U.*, ROW_NUMBER() OVER (ORDER BY Email ASC) AS ROWID        FROM    dbo.vw_Users U        WHERE LOWER(U.Email) LIKE LOWER(@EmailToMatch)         AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END       )       select *, ROWID - 1 AS IndexID, UserID         from [UsersByEmail]        where ROWID > @PageLowerBound AND ROWID < @PageUpperBound     end    else if @EmailToMatch IS NULL      begin      with [UsersByEmail] as (       SELECT U.*, ROW_NUMBER() OVER (ORDER BY Email ASC) AS ROWID        FROM    dbo.vw_Users U        WHERE U.PortalId = @PortalID         AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      )      select *, ROWID - 1 AS IndexID, UserID        from [UsersByEmail]       where ROWID > @PageLowerBound AND ROWID < @PageUpperBound      end    else     begin      with [UsersByEmail] as (       SELECT U.*, ROW_NUMBER() OVER (ORDER BY Email ASC) AS ROWID        FROM    dbo.vw_Users U        WHERE U.PortalId = @PortalID         AND LOWER(U.Email) LIKE LOWER(@EmailToMatch)         AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      )      select *, ROWID - 1 AS IndexID, UserID        from [UsersByEmail]       where ROWID > @PageLowerBound AND ROWID < @PageUpperBound     end        if @PortalId is null and @EmailToMatch IS NULL     begin      SELECT count(*) as TotalRecords       FROM    dbo.vw_Users U       WHERE U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     end     else if @PortalId is null and @EmailToMatch IS NOT NULL      begin      SELECT count(*) as TotalRecords       FROM    dbo.vw_Users U       WHERE LOWER(U.Email) LIKE LOWER(@EmailToMatch)        AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     end     else if @EmailToMatch IS NULL      begin      SELECT count(*) as TotalRecords       FROM    dbo.vw_Users U       WHERE U.PortalId = @PortalID        AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     end     else      begin      SELECT count(*) as TotalRecords       FROM    dbo.vw_Users U       WHERE U.PortalId = @PortalID        AND LOWER(U.Email) LIKE LOWER(@EmailToMatch)        AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END "
599,GetUsersByEmail,   end   END
600,AISystem_Subject_GetClassBySubjectIdCount,CREATE proc [dbo].[AISystem_Subject_GetClassBySubjectIdCount]   @SubjectId int  as  -- AISystem_Subject_GetClassBySubjectIdCount 0  begin   select count(*) from AIElearning_Class where SubjectId = @SubjectId  end        
601,DeleteHtmlTextUsers,create procedure dbo.DeleteHtmlTextUsers    as    delete  from   HtmlTextUsers  where  HtmlTextUserID in     ( select HtmlTextUserID      from   HtmlTextUsers      inner join dbo.HtmlText on dbo.HtmlTextUsers.ItemID = dbo.HtmlText.ItemID      where HtmlTextUsers.ItemID = HtmlText.ItemID      and HtmlTextUsers.StateID <> HtmlText.StateID )
602,SeqNavActivityPackageView,"  -- Create a function that implements the SeqNavActivityPackageView view  CREATE FUNCTION [SeqNavActivityPackageView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ActivityPackageItem.Id, ActivityPackageItem.PackageId,PackageItem.PackageFormat PackageFormat, PackageItem.Location PackagePath      FROM ActivityPackageItem      INNER JOIN PackageItem ON ActivityPackageItem.PackageId=PackageItem.Id  )  "
603,vw_PublishedFiles,"CREATE VIEW dbo.[vw_PublishedFiles]  AS      SELECT              fi.[FileId]        ,fi.[PortalId]        ,fi.[FileName]        ,fi.[Extension]        ,fi.[Size]        ,fi.[Width]        ,fi.[Height]        ,fi.[ContentType]        ,fi.[FolderID]        ,fi.[Content]        ,fi.[CreatedByUserID]        ,fi.[CreatedOnDate]        ,fi.[LastModifiedByUserID]        ,fi.[LastModifiedOnDate]        ,fi.[UniqueId]        ,fi.[VersionGuid]        ,fi.[SHA1Hash]        ,fi.[LastModificationTime]        ,fi.[Title]        ,fi.[Description]        ,fi.[StartDate]        ,fi.[EnablePublishPeriod]        ,fi.[EndDate]        ,fi.[ContentItemID]        ,fi.[PublishedVersion]        ,fi.[Folder]        ,fi.[IsCached]        ,fi.[StorageLocation]        ,fi.[FolderMappingID]        ,fi.[HasBeenPublished]      FROM       dbo.[vw_Files] fi        WHERE ([EnablePublishPeriod] = 0 AND [HasBeenPublished] = 1)           OR ([StartDate] <= GETDATE()              AND ([EndDate] IS NULL OR GETDATE() <= [EndDate]) AND [HasBeenPublished] = 1)"
604,Journal_DeleteByKey,"CREATE PROCEDURE dbo.[Journal_DeleteByKey]   @PortalId int,   @ObjectKey nvarchar(255),   @SoftDelete int = 0   AS   DECLARE @JournalId int   SET @JournalId = (SELECT JournalId FROM dbo.[Journal] WHERE PortalId = @PortalId AND ObjectKey = @ObjectKey AND @ObjectKey <> '' AND ObjectKey IS NOT NULL)     -- Hard Delete   IF @JournalId > 0 AND @SoftDelete <> 1    BEGIN    DELETE FROM dbo.[Journal_Security] WHERE JournalId = @JournalId    DELETE FROM dbo.[Journal_Comments] WHERE JournalId = @JournalId    DELETE FROM dbo.[Journal] WHERE JournalId = @JournalId   END     -- Soft Delete   IF @JournalId > 0 AND @SoftDelete = 1    BEGIN    UPDATE dbo.[Journal] SET IsDeleted = 1 WHERE JournalId = @JournalId   END"
605,AISystem_Category_Talent_GetInfoByCode,CREATE proc [dbo].[AISystem_Category_Talent_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Talent_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Talent where   Code = @Code  SET QUOTED_IDENTIFIER OFF   
606,IsUserInRole,"create procedure dbo.IsUserInRole        @UserID        int,  @RoleId        int,  @PortalID      int    as    select dbo.UserRoles.UserId,         dbo.UserRoles.RoleId  from dbo.UserRoles  inner join dbo.Roles on dbo.UserRoles.RoleId = dbo.Roles.RoleId  where  dbo.UserRoles.UserId = @UserID  and    dbo.UserRoles.RoleId = @RoleId  and    dbo.Roles.PortalId = @PortalID  and    (dbo.UserRoles.ExpiryDate >= getdate() or dbo.UserRoles.ExpiryDate is null)"
607,CK__CommentFr__Comme__2B6B2377,(len([Comment])<=(4096))
608,Journal_UpdateContentItemId,"CREATE PROCEDURE dbo.[Journal_UpdateContentItemId]  @JournalId int,  @ContentItemId int  AS  UPDATE dbo.[Journal]   SET ContentItemId = @ContentItemId  WHERE JournalId = @JournalId"
609,AISystem_Category_Campaign_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Campaign_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Campaign_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Campaign  WHERE   ParentId = @parentId    "
610,AIElearning_LearingAndLecture_OutItem_GetsBySearch,"  CREATE proc [dbo].[AIElearning_LearingAndLecture_OutItem_GetsBySearch]  @pageIndex int,  @pageSize int,  @UserName nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Type int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@UserName IS NOT NULL AND @UserName<>'')   set @condition = @condition +    ' And  (o.UserName= '''+ @UserName+''' )'  IF(@ReportYear > 0)   set @condition = @condition +    ' And  (o.ReportYear= '+ STR(@ReportYear)+' )'  IF (@UnitCode IS NOT NULL AND @UnitCode<>'')   set @condition = @condition +    ' And  (o.UnitCode= '''+ @UnitCode+''' )'  IF(@Type > 0)   set @condition = @condition +    ' And  (o.Type= '+ STR(@Type)+' )'    exec('    WITH #AIElearning_LearingAndLecture_OutItem AS(    SELECT ROW_NUMBER() OVER (ORDER BY o.Id desc) AS RowNumber,     i.*     FROM  AIElearning_LearingAndLecture_OutItem AS i INNER JOIN         AIElearning_LearingAndLecture_Out AS o ON i.OutId = o.Id where ' + @condition +'      )         SELECT     *   FROM #AIElearning_LearingAndLecture_OutItem   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
611,GetUrls,create procedure dbo.GetUrls    @PortalID     int    as    select *  from   dbo.Urls  where  PortalID = @PortalID  order by Url
612,AIElearning_TestForm_Part_GetToTalQuestion,"  CREATE PROC [dbo].[AIElearning_TestForm_Part_GetToTalQuestion]  @TestFormId INT  AS  DECLARE @QCount AS INT =0  DECLARE @QPartCount AS INT =0      select @QCount=COUNT(Id) from AIElearning_TestForm_Part where Type=3 AND TestId=@TestFormId  select @QPartCount=SUM(ISNULL(QuestionNumber,0)) from AIElearning_TestForm_Part where Type=2  AND TestId=@TestFormId  SELECT (ISNULL(@QCount,0)+ISNULL(@QPartCount,0))  "
613,GetHtmlTextUser,"create procedure dbo.GetHtmlTextUser    @UserID int    as    select HtmlTextUsers.*,         WorkflowStates.StateName  from   dbo.HtmlTextUsers  inner join dbo.WorkflowStates on dbo.HtmlTextUsers.StateID = dbo.WorkflowStates.StateID  where  HtmlTextUsers.UserID = @UserID  order by HtmlTextUsers.CreatedOnDate asc"
614,SeqNavActivityTreeView,"  -- Create a function that implements the SeqNavActivityTreeView view  CREATE FUNCTION [SeqNavActivityTreeView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      WITH TreeQuery(Id, ParentActivityId, DataModelCache, RootActivityId, ObjectivesGlobalToSystem)      AS (      SELECT Id, ParentActivityId, DataModelCache, Id, ObjectivesGlobalToSystem      FROM ActivityPackageItem      UNION ALL      SELECT t1.Id, t1.ParentActivityId, t1.DataModelCache, t2.RootActivityId, t1.ObjectivesGlobalToSystem      FROM TreeQuery t2      INNER JOIN ActivityPackageItem t1 ON t1.ParentActivityId=t2.Id )      SELECT Id, ParentActivityId, DataModelCache, RootActivityId, ObjectivesGlobalToSystem      FROM TreeQuery  )  "
615,AddFile,"CREATE PROCEDURE dbo.[AddFile]   @PortalId   int,   @UniqueId   uniqueidentifier,   @VersionGuid  uniqueidentifier,   @FileName   nvarchar(246),   @Extension   nvarchar(100),   @Size    int,   @Width    int,   @Height    int,   @ContentType  nvarchar(200),   @Folder    nvarchar(246),   @FolderID   int,   @CreatedByUserID   int,   @Hash     varchar(40),   @LastModificationTime datetime,    @Title     nvarchar(256),      @Description            nvarchar(500),   @EnablePublishPeriod bit,   @StartDate    datetime,   @EndDate    datetime,   @ContentItemID   int  AS  BEGIN      SET NOCOUNT OFF;   DECLARE @FileID int     UPDATE dbo.[Files]   SET    /* retrieves FileId from table */    @FileID = FileId,    FileName = @FileName,    VersionGuid = @VersionGuid,    Extension = @Extension,    Size = @Size,    Width = @Width,    Height = @Height,    ContentType = @ContentType,    FolderID = @FolderID,    LastModifiedByUserID = @CreatedByUserID,    LastModifiedOnDate = getdate(),    SHA1Hash = @Hash,    LastModificationTime = @LastModificationTime,     Title = @Title,          Description = @Description,    EnablePublishPeriod = @EnablePublishPeriod,    StartDate = @StartDate,    EndDate = @EndDate,    ContentItemID = @ContentItemID   WHERE    FolderID = @FolderID AND FileName = @FileName      DECLARE @RowCount int = @@ROWCOUNT;   IF @RowCount = 0   BEGIN   INSERT INTO dbo.[Files] (    PortalId,    UniqueId,    VersionGuid,    FileName,    Extension,    Size,    Width,    Height,    ContentType,    FolderID,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate,    SHA1Hash,    LastModificationTime,     Title,          Description,    EnablePublishPeriod,    StartDate,    EndDate,    ContentItemID   )   VALUES (    @PortalId,    @UniqueId,    @VersionGuid,    @FileName,    @Extension,    @Size,    @Width,    @Height,    @ContentType,    @FolderID,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate(),    @Hash,    @LastModificationTime,     @Title,          @Description,    @EnablePublishPeriod,    @StartDate,    @EndDate,    @ContentItemID   )   SELECT @FileID = SCOPE_IDENTITY()   END     --UPDATE THE PARENT FOLDERS UPDATED DATE TO LATEST DATE   IF((@RowCount>0 OR @@ROWCOUNT>0) AND @FolderID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @FolderID   END      SELECT @FileID    END"
616,AISystem_Category_Talent_GetMaxOrderNoByParentId,"CREATE PROC AISystem_Category_Talent_GetMaxOrderNoByParentId @parentId INT  AS   -- AISystem_Category_Talent_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Talent  WHERE   ParentId = @parentId"
617,AIElearning_DocumentGroup_File_GetMaxOrderNo,"CREATE PROC [dbo].[AIElearning_DocumentGroup_File_GetMaxOrderNo]   @documentGroupId int  as  begin  select ISNULL(max(OrderNo),'0') from AIElearning_DocumentGroup_File WHERE DocumentGroupId=@documentGroupId   end        "
618,SearchProfilePropertyValues,"CREATE PROCEDURE dbo.SearchProfilePropertyValues   @PortalId INT,   @PropertyName NVARCHAR(50),   @SearchString NVARCHAR(100)  AS  SELECT DISTINCT   up.PropertyValue  FROM   dbo.UserProfile up   INNER JOIN dbo.ProfilePropertyDefinition ppd ON ppd.PropertyDefinitionID = up.PropertyDefinitionID  WHERE   ppd.PortalID = @PortalId   AND ppd.PropertyName = @PropertyName   AND up.PropertyValue LIKE '%' + @SearchString + '%'   AND up.PropertyValue IS NOT NULL  ORDER BY   up.PropertyValue"
619,AISystem_Category_Subject_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Subject_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Subject_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Subject  WHERE   ParentId = @parentId    "
620,SaveRelationship,"CREATE PROCEDURE dbo.[SaveRelationship]      @RelationshipID INT,      @RelationshipTypeID INT,          @Name NVARCHAR(50),      @Description NVARCHAR(500),   @UserID INT,   @PortalID INT,   @DefaultResponse INT,   @CreateUpdateUserID INT        AS       IF ( @RelationshipID = -1 )           BEGIN              INSERT  dbo.Relationships                      ( RelationshipTypeID,                        Name ,                                    Description,              UserID,         PortalID,           DefaultResponse,                           CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @RelationshipTypeID , -- @RelationshipTypeID INT                        @Name , -- Name - nvarchar(50)                        @Description , -- @Description NVARCHAR(500)         @UserID , -- @UserID int         @PortalID , -- @PortalID int         @DefaultResponse, -- @DefaultResponse int                        @CreateUpdateUserID , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @CreateUpdateUserID , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )                                    SELECT  @RelationshipID = SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.Relationships              SET     Name = @Name ,                                          Description = @Description,       RelationshipTypeID = @RelationshipTypeID,       UserID = @UserID,       PortalID = @PortalID,       DefaultResponse = @DefaultResponse,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   RelationshipID = @RelationshipID          END                SELECT  @RelationshipID"
621,AISystem_EmailReceiveUsers_GetsByCount,"CREATE proc [dbo].[AISystem_EmailReceiveUsers_GetsByCount]  @Keyword nvarchar(250),  @userid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end  -- Mã chuyên m?c  if(@userid >-1)  begin  set @Condition=@Condition+' AND ToUserId='+str(@userid)  end  exec('select COUNT(Id) from AISystem_EmailReceiveUsers '+@Condition+' ')    SET QUOTED_IDENTIFIER OFF  "
622,AIElearning_LearingAndLecture_Out_GetsBySearch,"  CREATE proc [dbo].[AIElearning_LearingAndLecture_Out_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_LearingAndLecture_Out AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_LearingAndLecture_Out       )         SELECT     *   FROM #AIElearning_LearingAndLecture_Out   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
623,GetRoleGroup,"CREATE PROCEDURE dbo.GetRoleGroup   @PortalID  int,   @RoleGroupId    int  AS   SELECT *    FROM dbo.RoleGroups    WHERE  (RoleGroupId = @RoleGroupId OR RoleGroupId IS NULL AND @RoleGroupId IS NULL)     AND    PortalId = @PortalID"
624,AddHtmlText,"create procedure dbo.AddHtmlText    @ModuleID        int,  @Content         ntext,  @Summary      ntext,  @StateID         int,  @IsPublished     bit,  @UserID          int,  @History         int    as    declare @Version int    select @Version = max(Version) from dbo.HtmlText where ModuleID = @ModuleID    if @Version is null    select @Version = 1  else    select @Version = @Version + 1    insert into dbo.HtmlText (    ModuleID,    Content,    Summary,    Version,    StateID,    IsPublished,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate  )   values (    @ModuleID,    @Content,    @Summary,    @Version,    @StateID,    @IsPublished,    @UserID,    getdate(),    @UserID,    getdate()  )    if @History > 0  begin    delete    from   dbo.HtmlText    where  ModuleID = @ModuleID    and    Version <= (@Version - @History)  end    select SCOPE_IDENTITY()"
625,SeqNavAttemptView,"  -- Create a function that implements the SeqNavAttemptView view  CREATE FUNCTION [SeqNavAttemptView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT AttemptItem.Id Id, AttemptItem.AttemptStatus, AttemptItem.LogDetailSequencing, AttemptItem.LogFinalSequencing, AttemptItem.LogRollup, AttemptItem.CurrentActivityId, AttemptItem.SuspendedActivityId, AttemptItem.RootActivityId,AttemptItem.StartedTimestamp, AttemptItem.FinishedTimestamp,PackageItem.Id PackageId, PackageItem.PackageFormat PackageFormat, PackageItem.Location PackagePath, UserItem.Id LearnerId, UserItem.Name LearnerName, UserItem.AudioCaptioning LearnerAudioCaptioning, UserItem.AudioLevel LearnerAudioLevel, UserItem.DeliverySpeed LearnerDeliverySpeed, UserItem.Language LearnerLanguage, AttemptItem.TotalPoints, AttemptItem.SuccessStatus, AttemptItem.CompletionStatus      FROM AttemptItem      INNER JOIN PackageItem ON AttemptItem.PackageId=PackageItem.Id      INNER JOIN UserItem ON AttemptItem.LearnerId=UserItem.Id  )  "
626,UpdateFile,"CREATE PROCEDURE dbo.[UpdateFile]      @FileId                 Int,      @VersionGuid            UniqueIdentifier,      @FileName               nVarChar(246),      @Extension              nVarChar(100),      @Size                   Int,      @Width                  Int,      @Height                 Int,      @ContentType            nVarChar(200),      @FolderID               Int,      @LastModifiedByUserID   Int,      @Hash                   VarChar(40),      @LastModificationTime   DateTime,      @Title                  nVarChar(256),      @Description            nVarChar(500),      @EnablePublishPeriod    Bit,      @StartDate              DateTime,      @EndDate                DateTime,      @ContentItemID          Int  AS  BEGIN      SET NOCOUNT OFF;      DECLARE @PortalID int;      SELECT @PortalID = PortalID FROM dbo.[Folders] WHERE FolderID = @FolderID;      UPDATE dbo.[Files]       SET   FileName             = @FileName,             VersionGuid          = @VersionGuid,             Extension            = @Extension,             Size                 = @Size,             Width                = @Width,             Height               = @Height,             ContentType          = @ContentType,             FolderID             = @FolderID,             PortalID             = @PortalID,             LastModifiedByUserID = @LastModifiedByUserID,             LastModifiedOnDate   = GetDate(),             SHA1Hash             = @Hash,             LastModificationTime = @LastModificationTime,             Title                = @Title,             Description          = @Description,             EnablePublishPeriod  = @EnablePublishPeriod,             StartDate            = @StartDate,             EndDate              = @EndDate,             ContentItemID        = @ContentItemID       WHERE FileId = @FileId         --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @FolderID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @FolderID   END    END"
627,AIElearning_SurveyUserQuestion_GetsQuestionByUserIdAndSurveyId,"create proc [dbo].[AIElearning_SurveyUserQuestion_GetsQuestionByUserIdAndSurveyId]  @userId int,  @surveyId int  as  -- AIElearning_SurveyUserQuestion_GetsQuestionByUserIdAndSurveyId 24,1074  select DISTINCT  suq.SurveyQuestionId  from AIElearning_SurveyUserQuestion suq inner join AIElearning_SurveyUser su   on suq.SurveyUserId = su.Id   where su.UserId = @userId and su.SurveyId = @surveyId      "
628,SaveJavaScriptLibrary,"CREATE PROCEDURE dbo.[SaveJavaScriptLibrary]   @JavaScriptLibraryID INT,   @PackageID INT,   @LibraryName NVARCHAR(200),   @Version NVARCHAR(50),   @FileName NVARCHAR(100),   @ObjectName NVARCHAR(100),   @PreferredScriptLocation int,   @CDNPath NVARCHAR(250)  AS     IF EXISTS (SELECT JavaScriptLibraryID FROM JavaScriptLibraries WHERE JavaScriptLibraryID = @JavaScriptLibraryID)    BEGIN     UPDATE dbo.[JavaScriptLibraries]        SET [PackageID] = @PackageID,       [LibraryName] = @LibraryName,       [Version] = @Version,       [FileName] = @FileName,       [ObjectName] = @ObjectName,       [PreferredScriptLocation] = @PreferredScriptLocation,       [CDNPath] = @CDNPath      WHERE JavaScriptLibraryID = @JavaScriptLibraryID     END   ELSE    BEGIN     INSERT INTO dbo.[JavaScriptLibraries] (      [PackageID],      [LibraryName],      [Version],      [FileName],      [ObjectName],      [PreferredScriptLocation],      [CDNPath]     )     VALUES (      @PackageID,      @LibraryName,      @Version,      @FileName,      @ObjectName,      @PreferredScriptLocation,      @CDNPath     )     SET @JavaScriptLibraryID = (SELECT @@IDENTITY)    END     SELECT @JavaScriptLibraryID"
629,Journal_Like,"CREATE PROCEDURE dbo.[Journal_Like]  @JournalId int,  @UserId int,  @UserName nvarchar(50)  AS   IF NOT EXISTS (SELECT JournalId from dbo.[Journal_Data] WHERE JournalId = @JournalId)   BEGIN    DECLARE @x xml    SET @x = '<items><item /></items>';    INSERT INTO dbo.[Journal_Data]      (JournalId, JournalXML)     VALUES     (@JournalId, @x)   END  IF EXISTS(SELECT j.JournalId      FROM dbo.Journal as j INNER JOIN      dbo.Journal_Data as jx ON j.JournalId = jx.JournalId      WHERE j.JournalId = @JournalId       AND       jx.journalxml.exist('/items/likes/u[@uid=sql:variable(""@userid"")]') = 1)  BEGIN  UPDATE dbo.Journal_Data  SET JournalXML.modify('delete (/items/likes/u[@uid=sql:variable(""@UserId"")])')  WHERE JournalId = @JournalId    AND journalxml.exist('/items/likes/u[@uid=sql:variable(""@UserId"")]') = 1  END  ELSE   BEGIN    BEGIN     IF NOT EXISTS(SELECT JournalId FROM dbo.Journal_Data         WHERE JournalId = @JournalId            AND          journalxml.exist('/items/likes') = 1)      BEGIN       UPDATE dbo.Journal_Data       SET JournalXML.modify('insert <likes /> as last into (/items)[1]')        WHERE JournalId = @JournalId AND journalxml.exist('/items') = 1      END    END    BEGIN     UPDATE dbo.Journal_Data     SET JournalXML.modify('insert <u uid=""{xs:string(sql:variable(""@UserId""))}"" un=""{xs:string(sql:variable(""@UserName""))}"" /> as last into (/items/likes)[1]')     Where JournalId = @JournalId AND journalxml.exist('/items/likes') = 1    END   END"
630,AIElearning_Document_ChangePosition,"CREATE PROC [dbo].[AIElearning_Document_ChangePosition]   @id int,  @move int  as  begin  DECLARE @above AS int  DECLARE @below AS int  DECLARE @orderNo AS int  DECLARE @aboveId AS int  DECLARE @belowId AS int  DECLARE @categoryId as int        select @orderNo = OrderNo from AIElearning_Document where Id= @id   SET @above = (@orderNo -1)  SET @below = (@orderNo + 1)  select @categoryId = CategoryId from AIElearning_Document where Id= @id    select @aboveId = Id from AIElearning_Document where OrderNo= @above  and CategoryId = @categoryId  select @belowId = Id from AIElearning_Document where OrderNo= @below and CategoryId = @categoryId  --1: Move up  if(@move = 1)  begin  update AIElearning_Document set OrderNo= @below where Id= @id  update AIElearning_Document set OrderNo= @orderNo where Id= @belowId    --0: Move down  end  if(@move = 0)  begin  update AIElearning_Document set OrderNo= @above where Id= @id  update AIElearning_Document set OrderNo= @orderNo where Id= @aboveId  end  end        "
631,AISystem_Category_Question_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_Question_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_Question_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Question  WHERE   ParentId = @parentId    "
632,CoreMessaging_CountNewThreads,"CREATE PROCEDURE dbo.[CoreMessaging_CountNewThreads]   @UserID int,   @PortalID INT  AS  BEGIN   SELECT COUNT(*) AS TotalNewThreads   FROM dbo.[CoreMessaging_MessageRecipients] MR   JOIN dbo.[CoreMessaging_Messages] M ON MR.MessageID = M.MessageID   WHERE MR.UserID = @UserID   AND MR.[Read] = 0   AND M.PortalID=@PortalID   AND M.NotificationTypeID IS NULL  END"
633,GetContentWorkflowSource,"CREATE PROCEDURE dbo.[GetContentWorkflowSource]   @WorkflowID INT,      @SourceName NVARCHAR(20)  AS      SELECT     [SourceID],    [WorkflowID],    [SourceName],    [SourceType]   FROM dbo.ContentWorkflowSources      WHERE WorkflowID = @WorkflowID AND SourceName = @SourceName"
634,AISystem_EmailReceiveUsers_GetsBySearch,"CREATE proc [dbo].[AISystem_EmailReceiveUsers_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @userid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end  --id người nhận--  if(@userid >-1)  begin  set @Condition=@Condition+' AND toUserId='+str(@userid)  end  exec('    WITH #AISystem_EmailReceiveUsers AS(    SELECT ROW_NUMBER() OVER (ORDER BY id desc) AS RowNumber,             *     from AISystem_EmailReceiveUsers '+@Condition+'    )         SELECT     *   FROM #AISystem_EmailReceiveUsers   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
635,AddUrlLog,"create procedure dbo.AddUrlLog    @UrlTrackingID int,  @UserID        int    as    insert into dbo.UrlLog (    UrlTrackingID,    ClickDate,    UserID  )  values (    @UrlTrackingID,    getdate(),    @UserID  )"
636,AIElearning_LearingAndLecture_Report,"CREATE proc [dbo].[AIElearning_LearingAndLecture_Report]  @UserName nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Learning int,  @lecture int  as  -- AIElearning_LearingAndLecture_Report '', 2017, '4986', -1, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  IF(@UserName IS NOT NULL AND @UserName<>'')    set @condition = @condition + ' and (ll.UserName = ''' + @UserName + ''') '  if(@ReportYear>-1)   set @Condition=@Condition+' AND ll.ReportYear='+str(@ReportYear)  if(@Unitcode<>'')  set @Condition=@Condition+' AND ll.UnitCode='''+@UnitCode+''''  if(@Learning>-1)   set @Condition=@Condition+' AND ll.Learning_TimePlan_System <> '+str(@Learning)  if(@lecture>-1)   set @Condition=@Condition+' AND ll.lecture_TimePlan_System <> '+str(@lecture)    exec('  SELECT       ll.*, u.Mastercode, u.EmployeeCode, u.Displayname, u.Email, u.InDate, u.AppointDate, u.InDateCompany, u.GroupJobTileCode, j.Title AS TenNhomChucDanh, jt.Title AS TenChucDanh, l.Title AS TenCapBac, un.Title AS TenDonVi,                            unc.Title AS TenDonViCon  FROM            AIElearning_LearingAndLecture AS ll INNER JOIN                  AISystem_UserInfo AS u ON ll.UserName = u.Username left JOIN                  AISystem_Category_Unit AS un ON u.UnitCode = un.Code left JOIN                  AISystem_Category_Unit AS unc ON u.UnitChildCode = unc.Code LEFT OUTER JOIN                  AISystem_JobTitle AS j ON u.GroupJobTileCode = j.Code LEFT OUTER JOIN                  AISystem_JobTitle_Title AS jt ON u.JobTitleCode = jt.Code LEFT OUTER JOIN                  AISystem_Level AS l ON u.LevelCode = l.Code  '+@Condition+' and un.Status =1 and unc.Status =1 order by ll.UserName  ')    SET QUOTED_IDENTIFIER OFF "
637,vw_ContentWorkflowStatePermissions,"CREATE VIEW dbo.[vw_ContentWorkflowStatePermissions]  AS      SELECT            WSP.WorkflowStatePermissionID,        WSP.StateID,        P.PermissionID,        WSP.RoleID,       CASE WSP.RoleID        when -1 then 'All Users'        when -2 then 'Superuser'        when -3 then 'Unauthenticated Users'        else  R.RoleName       END AS 'RoleName',       WSP.AllowAccess,        WSP.UserID,       U.Username,       U.DisplayName,        P.PermissionCode,        P.ModuleDefID,        P.PermissionKey,        P.PermissionName,           WSP.CreatedByUserID,           WSP.CreatedOnDate,           WSP.LastModifiedByUserID,           WSP.LastModifiedOnDate          FROM dbo.ContentWorkflowStatePermission AS WSP        LEFT OUTER JOIN dbo.Permission AS P ON WSP.PermissionID = P.PermissionID        LEFT OUTER JOIN dbo.Roles AS R ON WSP.RoleID = R.RoleID       LEFT OUTER JOIN dbo.Users AS U ON WSP.UserID = U.UserID"
638,UpdateHtmlText,"create procedure dbo.UpdateHtmlText    @ItemID          int,  @Content         ntext,  @Summary   ntext,  @StateID         int,  @IsPublished     bit,  @UserID          int    as    update dbo.HtmlText  set    Content              = @Content,      Summary    = @Summary,         StateID              = @StateID,         IsPublished          = @IsPublished,         LastModifiedByUserID = @UserID,         LastModifiedOnDate   = getdate()  where  ItemID = @ItemID"
639,SeqNavActivityAttemptView,"  -- Create a function that implements the SeqNavActivityAttemptView view  CREATE FUNCTION [SeqNavActivityAttemptView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ActivityAttemptItem.Id, ActivityAttemptItem.DataModelCache, ActivityAttemptItem.SequencingDataCache, ActivityAttemptItem.RandomPlacement, ActivityAttemptItem.AttemptId, ActivityAttemptItem.ActivityPackageId, ActivityPackageItem.DataModelCache StaticDataModelCache, ActivityPackageItem.ParentActivityId ParentId, ActivityPackageItem.ObjectivesGlobalToSystem ObjectivesGlobalToSystem, ActivityAttemptItem.CompletionStatus, ActivityAttemptItem.AttemptCount, ActivityAttemptItem.EvaluationPoints, ActivityAttemptItem.[Exit], ActivityAttemptItem.LessonStatus, ActivityAttemptItem.Location, ActivityAttemptItem.MinScore, ActivityAttemptItem.MaxScore, ActivityAttemptItem.ProgressMeasure, ActivityAttemptItem.RawScore, ActivityAttemptItem.ScaledScore, ActivityAttemptItem.SessionStartTimestamp, ActivityAttemptItem.SessionTime, ActivityAttemptItem.SuccessStatus, ActivityAttemptItem.SuspendData, ActivityAttemptItem.TotalTime      FROM ActivityAttemptItem      INNER JOIN ActivityPackageItem ON ActivityAttemptItem.ActivityPackageId=ActivityPackageItem.Id  )  "
640,AIElearning_Money_Reimburse_GetbyUser,"CREATE proc [dbo].[AIElearning_Money_Reimburse_GetbyUser]   @Username nvarchar(250),  @Itemid int,  @type int  as  select * from AIElearning_Money_Reimburse where Username=@Username and ItemId=@Itemid and type=@type  "
641,SavePackageDependency,"CREATE PROCEDURE dbo.[SavePackageDependency]   @PackageDependencyID INT,   @PackageID INT,   @PackageName NVARCHAR(128),   @Version NVARCHAR(50)  AS   IF EXISTS (SELECT PackageDependencyID FROM PackageDependencies WHERE PackageID = @PackageID AND PackageName = @PackageName AND Version = @Version)    BEGIN     UPDATE dbo.[PackageDependencies]        SET [PackageID] = @PackageID,       [PackageName] = @PackageName,       [Version] = @Version      WHERE PackageDependencyID = @PackageDependencyID    END   ELSE    BEGIN     INSERT INTO dbo.[PackageDependencies] (      [PackageID],      [PackageName],      [Version]     )     VALUES (      @PackageID,      @PackageName,      @Version     )     SET @PackageDependencyID = (SELECT @@IDENTITY)    END     SELECT @PackageDependencyID"
642,Journal_LikeList,"CREATE PROCEDURE dbo.[Journal_LikeList]  @PortalId int,  @JournalId int  AS  DECLARE @xdoc xml  set @xdoc = (SELECT journalxml.query('//likes')       from dbo.[Journal_Data] as jd      INNER JOIN dbo.[Journal] as j ON j.JournalId = jd.JournalId       WHERE j.JournalId = @JournalId AND j.PortalId = @PortalId)  Select u.UserId, u.DisplayName,u.FirstName,u.LastName,u.Email,u.Username    FROM @xdoc.nodes('/likes//u') as e(x)   CROSS APPLY dbo.[Users] as u  WHERE u.UserID = x.value('@uid[1]','int')"
643,AISystem_Category_TestForm_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_TestForm_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_TestForm_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_TestForm  WHERE   ParentId = @parentId    "
644,AddContentWorkflowSource,"CREATE PROCEDURE dbo.[AddContentWorkflowSource]   @WorkflowID INT,      @SourceName NVARCHAR(20),      @SourceType NVARCHAR(250)  AS      INSERT INTO  dbo.ContentWorkflowSources(    [WorkflowID],    [SourceName],    [SourceType])      VALUES(          @WorkflowID,          @SourceName,          @SourceType      )        SELECT SCOPE_IDENTITY()"
645,AISystem_EmailSend_GetsByContentId,CREATE proc [dbo].[AISystem_EmailSend_GetsByContentId]  @contentid int  as  select * from AISystem_EmailSendUsers where contentid=@contentid   
646,vw_PersonaBarMenuPermissions,"CREATE VIEW dbo.[vw_PersonaBarMenuPermissions] AS SELECT  MP.MenuPermissionId,         MP.MenuId,         MP.PortalId,         P.PermissionId,         MP.RoleID,         R.RoleName,         MP.AllowAccess,         MP.UserId,         U.Username,         U.DisplayName,         P.PermissionKey,         P.PermissionName,         -- Add Columns to compact core system API         -1 AS ModuleDefID,         'PERSONABAR_MENU' AS PermissionCode,         MP.CreatedByUserId,         MP.CreatedOnDate,         MP.LastModifiedByUserId,         MP.LastModifiedOnDate FROM dbo.[PersonaBarMenuPermission] AS MP     INNER JOIN dbo.[PersonaBarPermission]       AS P  ON MP.PermissionID = P.PermissionID     LEFT  JOIN dbo.[Roles]            AS R  ON MP.RoleID       = R.RoleID     LEFT  JOIN dbo.[Users]            AS U  ON MP.UserID       = U.UserID"
647,AIElearning_ClassLifeCycle_GetClassid,"CREATE proc [dbo].[AIElearning_ClassLifeCycle_GetClassid]   @classid int  as      SELECT  StartValue,id,ClassId, EndValue from AIElearning_ClassLifeCycle where ClassId=@classid"
648,GetSharedModulesByPortal,CREATE PROCEDURE dbo.[GetSharedModulesByPortal]   @Portald int  AS   SELECT * FROM dbo.vw_TabModules tb     WHERE tb.PortalID != tb.OwnerPortalID    AND tb.OwnerPortalID = @Portald
649,AIElearning_LearnRule_Table_GetsBySearch,"create proc [dbo].[AIElearning_LearnRule_Table_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_LearnRule_Table AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_LearnRule_Table       )         SELECT     *   FROM #AIElearning_LearnRule_Table   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
650,GetUsersByUserName,"CREATE PROCEDURE dbo.[GetUsersByUserName]      @PortalID  int,      @UserNameToMatch nvarchar(256),      @PageIndex  int,      @PageSize  INT,      @IncludeDeleted     bit,      @SuperUsersOnly     bit    AS   BEGIN    -- Set the page bounds    DECLARE @PageLowerBound INT    DECLARE @PageUpperBound INT    SET @PageLowerBound = @PageSize * @PageIndex    SET @PageUpperBound = @PageSize - 1 + @PageLowerBound      -- Create a temp table TO store the select results    CREATE TABLE #PageIndexForUsers    (     IndexId int IDENTITY (0, 1) NOT NULL,     UserId int    )      -- Insert into our temp table    INSERT INTO #PageIndexForUsers (UserId)     SELECT UserId FROM dbo.vw_Users      WHERE  Username LIKE @UserNameToMatch      AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0           OR IsDeleted Is NULL)             AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      AND ( PortalId = @PortalID OR (@PortalID is null ))     ORDER BY UserName      SELECT  *    FROM dbo.vw_Users u,       #PageIndexForUsers p    WHERE  u.UserId = p.UserId      AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0           OR IsDeleted Is NULL)             AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      AND ( PortalId = @PortalID OR (@PortalID is null ))      AND p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound    ORDER BY u.UserName      SELECT  TotalRecords = COUNT(*)    FROM    #PageIndexForUsers   END"
651,AddContentWorkflow,"CREATE PROCEDURE dbo.AddContentWorkflow  @PortalID int,  @WorkflowName nvarchar(40),  @Description nvarchar(256),  @IsDeleted bit,  @StartAfterCreating bit,  @StartAfterEditing bit,  @DispositionEnabled bit  AS    INSERT INTO dbo.ContentWorkflows (    [PortalID],    [WorkflowName],    [Description],    [IsDeleted],    [StartAfterCreating],    [StartAfterEditing],    [DispositionEnabled]  )  VALUES (    @PortalID,    @WorkflowName,    @Description,    @IsDeleted,    @StartAfterCreating,    @StartAfterEditing,    @DispositionEnabled  )    SELECT SCOPE_IDENTITY()"
652,AISystem_LayoutUnit_Album_GetsInfoByUnit,create proc [dbo].[AISystem_LayoutUnit_Album_GetsInfoByUnit]   @unitCode nvarchar(50)  as  -- AISystem_LayoutUnit_Album_GetsInfoByUnit -1  select top(1) * from AISystem_LayoutUnit_Album where UnitCode = @unitCode  
653,Journal_GetSearchItems,"CREATE PROCEDURE dbo.[Journal_GetSearchItems]   @PortalId INT,   @ModuleId INT,   @StartDate DATETIME,   @StartJournalId INT,   @NumbersOfResult INT = 500  AS   WITH ValidJournals AS (   SELECT JournalId     FROM (       SELECT *, ROW_NUMBER() OVER (ORDER BY JournalId) rownumber FROM (        SELECT  DISTINCT(j.JournalId)                   FROM dbo.Journal j        INNER JOIN dbo.Journal_Security js ON js.JournalId = j.JournalId        INNER JOIN dbo.Users u ON u.UserID = j.UserId        INNER JOIN dbo.ContentItems ci ON ci.ContentItemID = j.ContentItemId                          LEFT JOIN dbo.Journal_Comments jc ON jc.JournalId = j.JournalId        WHERE ci.ModuleID = @ModuleId        AND (j.DateUpdated > @StartDate OR jc.DateUpdated > @StartDate) --check the update time both for journal item and journal comment        AND j.JournalId > @StartJournalId                          AND j.JournalTypeId IN (1,2,3,4)) AS T       ) AS T WHERE rownumber <= @NumbersOfResult )         SELECT  j.JournalId,          JournalTypeId,          j.UserId,          DateUpdated,          ProfileId,          GroupId,          u.DisplayName AS Title,          Summary,          js.SecurityKey,                                  ci.TabID,          ci.ModuleID         FROM dbo.Journal j        INNER JOIN dbo.Journal_Security js ON js.JournalId = j.JournalId        INNER JOIN ValidJournals vj ON vj.JournalId = j.JournalId        INNER JOIN dbo.Users u ON u.UserID = j.UserId                          INNER JOIN dbo.ContentItems ci ON ci.ContentItemID = j.ContentItemId"
654,SeqNavCurrentActivityAttemptView,"  -- Create a function that implements the SeqNavCurrentActivityAttemptView view  CREATE FUNCTION [SeqNavCurrentActivityAttemptView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ActivityAttemptItem.Id, ActivityAttemptItem.DataModelCache DataModelCache, ActivityAttemptItem.SequencingDataCache, ActivityAttemptItem.RandomPlacement, ActivityAttemptItem.AttemptId, ActivityPackageItem.DataModelCache StaticDataModelCache, ActivityPackageItem.ObjectivesGlobalToSystem ObjectivesGlobalToSystem, ActivityPackageItem.Credit Credit      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN ActivityPackageItem ON ActivityAttemptItem.ActivityPackageId=ActivityPackageItem.Id      WHERE AttemptItem.CurrentActivityId=ActivityPackageItem.Id  )  "
655,GetFile,"CREATE PROCEDURE dbo.[GetFile]      @FileName nvarchar(246),      @FolderID int,      @RetrieveUnpublishedFiles bit = 0  AS  BEGIN      IF @RetrieveUnpublishedFiles = 0 BEGIN          SELECT FileId,                 PortalId,                 [FileName],                 Extension,                 Size,                 Width,                 Height,                 ContentType,                 FolderID,                 Folder,                 StorageLocation,                 IsCached,                 UniqueId,                 VersionGuid,                        SHA1Hash,                 FolderMappingID,                 LastModificationTime,                 Title,                 Description,                 EnablePublishPeriod,                 StartDate,                 EndDate,                 CreatedByUserID,                 CreatedOnDate,                 LastModifiedByUserID,                 LastModifiedOnDate,                 ContentItemID,                 PublishedVersion,                 HasBeenPublished          FROM dbo.[vw_PublishedFiles]                       WHERE [FileName] = @FileName AND FolderID = @FolderID      END      ELSE BEGIN          SELECT FileId,                 PortalId,                 [FileName],                 Extension,                 Size,                 Width,                 Height,                 ContentType,                 FolderID,                 Folder,                 StorageLocation,                 IsCached,                 UniqueId,                 VersionGuid,                        SHA1Hash,                 FolderMappingID,                 LastModificationTime,                 Title,                 Description,                 EnablePublishPeriod,                 StartDate,                 EndDate,                 CreatedByUserID,                 CreatedOnDate,                 LastModifiedByUserID,                 LastModifiedOnDate,                 ContentItemID,                 PublishedVersion,                 HasBeenPublished          FROM dbo.[vw_Files]          WHERE [FileName] = @FileName AND FolderID = @FolderID      END  END"
656,AISystem_JobTitle_Title_GetsByCode,CREATE proc [dbo].[AISystem_JobTitle_Title_GetsByCode]   @code nvarchar(50)  as  -- AISystem_JobTitle_Title_GetsByCode 'CD1'  begin  select top(1) *  from AISystem_JobTitle_Title   WHERE Code=@code   end  
657,RemoveUser,"CREATE PROCEDURE dbo.[RemoveUser]   @UserID  int,   @PortalID   int  AS   IF @PortalID IS NULL    BEGIN     -- Delete SuperUser     DELETE FROM dbo.Users      WHERE  UserId = @UserID    END   ELSE    BEGIN     -- Remove User from Portal     DELETE FROM dbo.UserPortals      WHERE  UserId = @UserID                   AND PortalId = @PortalID     IF NOT EXISTS (SELECT 1 FROM dbo.UserPortals WHERE  UserId = @UserID)      -- Delete User (but not if SuperUser)      BEGIN       DELETE FROM dbo.Users        WHERE  UserId = @UserID         AND IsSuperUser = 0       DELETE FROM dbo.UserRoles        WHERE  UserID = @UserID      END     ELSE      BEGIN       DELETE ur FROM dbo.UserRoles ur        INNER JOIN dbo.Roles r ON r.RoleID = ur.RoleID        WHERE  UserID = @UserID AND r.PortalID = @PortalID      END    END"
658,UpdateFileHashCode,"CREATE PROCEDURE dbo.[UpdateFileHashCode]   @FileId      Int,   -- Not Null   @HashCode VARCHAR(40)  -- Not NULL  AS  BEGIN      UPDATE dbo.[Files]      SET    SHA1Hash = @HashCode      WHERE  FileId = @FileId  END"
659,AISystem_EmailSend_GetsByCount,"CREATE proc [dbo].[AISystem_EmailSend_GetsByCount]  @Keyword nvarchar(250),  @userid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end  -- Mã chuyên m?c  if(@userid >-1)  begin  set @Condition=@Condition+' AND FromUserId='+str(@userid)  end  --  set @Condition=@Condition+' AND id in (select contentid from AISystem_EmailSendUsers )'  exec('select COUNT( id) from AISystem_EmailContent  '+@Condition+'  ')      SET QUOTED_IDENTIFIER OFF      "
660,PersonaBar_SavePersonaBarMenuPermission,"CREATE PROCEDURE dbo.[PersonaBar_SavePersonaBarMenuPermission]     @PortalId                   INT,     @MenuId                     INT,     @PermissionId               INT,     @RoleId                     INT,     @UserId                     INT,     @AllowAccess                BIT,     @CurrentUserId              INT AS BEGIN     DECLARE @MenuPermissionId INT     SELECT @MenuPermissionId = MenuPermissionId FROM dbo.[PersonaBarMenuPermission]          WHERE      (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))             AND    MenuId = @MenuId              AND    PermissionId = @PermissionId             AND    (RoleId = @RoleId OR (RoleId IS NULL AND @RoleId IS NULL))             AND    (UserId = @UserId OR (UserId IS NULL AND @UserId IS NULL))      IF @MenuPermissionId > 0     BEGIN         UPDATE dbo.[PersonaBarMenuPermission]             SET                  AllowAccess = @AllowAccess,                 LastModifiedByUserId = CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,                 LastModifiedOnDate = GETDATE()             WHERE MenuPermissionId = @MenuPermissionId              SELECT @MenuPermissionId     END     ELSE     BEGIN         INSERT INTO dbo.[PersonaBarMenuPermission] (             [PortalId],             [MenuId],             [PermissionId],             [RoleId],             [AllowAccess],             [UserId],             [CreatedByUserId],             [CreatedOnDate],             [LastModifiedByUserId],             [LastModifiedOnDate]         ) VALUES (             @PortalId,             @MenuId,             @PermissionId,             @RoleId,             @AllowAccess,             CASE WHEN @UserId = -1 THEN Null ELSE @UserId END,             CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,             GETDATE(),             CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,             GETDATE()         )          SELECT SCOPE_IDENTITY()     END END"
661,AIEventLog_GetsByParamYear,"CREATE PROC [dbo].[AIEventLog_GetsByParamYear]      @pageIndex INT ,      @pageSize INT ,      @keyword NVARCHAR(50) ,      @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT ,      @ObjectType INT ,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME,   @Year int  AS   -- AIEventLog_GetsByParam 1,1000,'host','',0,0,0,'01/01/1900','01/01/1900'  -- Phan trang      DECLARE @start AS INT      DECLARE @end AS INT      SET @start = @pageSize * ( @pageIndex - 1 ) + 1      SET @end = @pageSize * @pageIndex         DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.ObjectName like N''%' + @ObjectName + '%'') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectType= ' + STR(@ObjectType) + ' )'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF ( @keyword <> '' )          SET @condition = @condition + ' AND (tbLog.Username like ''%' + @keyword + '%'' or userinfo.EmployeeCode like ''%' + @keyword + '%'')'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''      EXEC('      WITH #AIEventLog AS(       SELECT    ROW_NUMBER() OVER ( ORDER BY tbLog.Id DESC ) AS RowNumber, tbLog.*      FROM      dbo.AIEventLog_'+@Year+' tbLog left join AISystem_UserInfo userinfo on tbLog.Username=userinfo.Username where '+@condition+'      )      SELECT  *      FROM #AIEventLog      where RowNumber between '+ @start +'  and  '+ @end +'       ')      SET QUOTED_IDENTIFIER OFF  "
662,AddRole,"CREATE PROCEDURE dbo.AddRole    @PortalID         int,   @RoleGroupId      int,   @RoleName         nvarchar(50),   @Description      nvarchar(1000),   @ServiceFee       money,   @BillingPeriod    int,   @BillingFrequency char(1),   @TrialFee         money,   @TrialPeriod      int,   @TrialFrequency   char(1),   @IsPublic         bit,   @AutoAssignment   bit,   @RSVPCode         nvarchar(50),   @IconFile         nvarchar(100),   @CreatedByUserID  int,   @Status     int,   @SecurityMode   int,   @IsSystemRole bit  AS   INSERT INTO dbo.Roles (     PortalId,     RoleGroupId,     RoleName,     Description,     ServiceFee,     BillingPeriod,     BillingFrequency,     TrialFee,     TrialPeriod,     TrialFrequency,     IsPublic,     AutoAssignment,     RSVPCode,     IconFile,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate,     Status,     SecurityMode,     IsSystemRole   )   VALUES (     @PortalID,     @RoleGroupId,     @RoleName,     @Description,     @ServiceFee,     @BillingPeriod,     @BillingFrequency,     @TrialFee,     @TrialPeriod,     @TrialFrequency,     @IsPublic,     @AutoAssignment,     @RSVPCode,     @IconFile,     @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate(),     @Status,     @SecurityMode,     @IsSystemRole   )   SELECT SCOPE_IDENTITY()"
663,GetSharedModulesWithPortal,CREATE PROCEDURE dbo.[GetSharedModulesWithPortal]   @Portald int  AS   SELECT * FROM dbo.vw_TabModules tb     WHERE tb.PortalID != tb.OwnerPortalID    AND tb.PortalID = @Portald
664,AIElearning_Lecturers_GetReportData,"CREATE proc [dbo].[AIElearning_Lecturers_GetReportData]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @UnitCode nvarchar(50),  @Status int,  @Type int,  @TeachingTopic int,  @partnerId INT,  @domain NVARCHAR(250)  as  --  AIElearning_Lecturers_GetReportData 1,100,'','tpbank',-1,-1,-1,-1,'http://tpbank.kienthucviet.vn'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   set @Condition=@Condition+' AND ( i.Username = N''' +@Keyword +''' or i.Displayname like N''%' +@Keyword+ '%'' )'  if(@Status>-1)   set @Condition=@Condition+' AND l.Status='+str(@Status)  if(@UnitCode <> '')   set @Condition=@Condition+' AND i.UnitCode='''+ @UnitCode + ''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)  if(@TeachingTopic>-1)   set @Condition=@Condition+' AND (l.TeachingTopic = '''+CONVERT(varchar(10), @TeachingTopic) +'''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic)+''')'  if(@partnerId>0)   set @Condition=@Condition+' AND UserInfoId in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId = ' +str(@partnerId) +' )'    exec('  WITH #AIElearning_Lecturers AS(  SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Displayname, i.Sex, i.Email, i.Phone, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, l.Status ,   (SELECT STUFF(( select CHAR(10) +''- ''  + Title  from AISystem_Category_TeachingTopic where Id in(select * from Split(l.TeachingTopic)) FOR XML PATH('''')),1,1,'''') ) as TeachingTopicList, i.UnitChildPath , i.Username , l.UserInfoId,  (SELECT STUFF(( select CHAR(10) +''- ''  + p.Name from AISystem_UserInfo_Partner up inner join AISystem_Partner p on up.PartnerId = p.Id where UserInfoId = l.UserInfoId FOR XML PATH('''')),1,1,'''')) as PartnerList, (select count(*) from AIElearning_Class_Lecturers where LecturersId = l.Id) as ClassCount, ISNULL((SELECT AVG(CASE WHEN RateMark <> 0 THEN RateMark ELSE NULL END) from AIElearning_Class_Lecturers where LecturersId = l.Id ),0) as AVGRateMark, l.TaxCode, l.AccountID,l.ContractDate, l.Bonus,  wp.Title AS WorkplaceName, CONCAT('''+@domain+''',SUBSTRING(l.LinkCV, CHARINDEX(''/'',l.LinkCV) ,LEN(l.LinkCV))) AS LinkCVFull  from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id LEFT JOIN dbo.AISystem_Category_WorkPlace wp ON wp.Code = l.Workplace      where '+@Condition+')   SELECT *   FROM #AIElearning_Lecturers   where RowNumber between '+ @start +' and '+ @end +'   ')    "
665,InsertPortalLocalization,"CREATE PROCEDURE dbo.[InsertPortalLocalization]  @PortalID           int,  @CultureCode nvarchar(10),   @PortalName         nvarchar(128),   @LogoFile           nvarchar(50),   @FooterText         nvarchar(100),   @Description        nvarchar(500),   @KeyWords           nvarchar(500),   @BackgroundFile     nvarchar(50),   @HomeTabId          int,   @LoginTabId         int,   @UserTabId          int,   @AdminTabid   int,   @SplashTabId          int,  @CreatedByUserID  int  AS  INSERT INTO dbo.[PortalLocalization]             ([PortalID]             ,[CultureCode]             ,[PortalName]             ,[LogoFile]             ,[FooterText]             ,[Description]             ,[KeyWords]             ,[BackgroundFile]             ,[HomeTabId]             ,[LoginTabId]             ,[UserTabId]             ,[AdminTabId]             ,[SplashTabId]             ,[CreatedByUserID]             ,[CreatedOnDate]             ,[LastModifiedByUserID]             ,[LastModifiedOnDate])       VALUES       (       @PortalID,       @CultureCode,       @PortalName,   @LogoFile,    @FooterText,   @Description,   @KeyWords,   @BackgroundFile,   @HomeTabId ,   @LoginTabId ,   @UserTabId,   @AdminTabid,   @SplashTabId  ,  -1,    getdate(),    -1,    getdate()    )"
666,UpdateContentWorkflow,"CREATE PROCEDURE dbo.UpdateContentWorkflow  @WorkflowID int,  @WorkflowName nvarchar(40),  @Description nvarchar(256),  @IsDeleted bit,  @StartAfterCreating bit,  @StartAfterEditing bit,  @DispositionEnabled bit  AS    UPDATE dbo.ContentWorkflows  SET    WorkflowName = @WorkflowName,         Description = @Description,         IsDeleted = @IsDeleted,      StartAfterCreating = @StartAfterCreating,      StartAfterEditing = @StartAfterEditing,      DispositionEnabled = @DispositionEnabled  WHERE  WorkflowID = @WorkflowID"
667,Mobile_DeleteRedirection,CREATE PROCEDURE dbo.[Mobile_DeleteRedirection] @Id INT  AS       DELETE  FROM dbo.Mobile_RedirectionRules      WHERE   RedirectionId = @id          DELETE  FROM dbo.Mobile_Redirections      WHERE   Id = @Id
668,SeqNavCurrentCommentFromLmsView,"  -- Create a function that implements the SeqNavCurrentCommentFromLmsView view  CREATE FUNCTION [SeqNavCurrentCommentFromLmsView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT CommentFromLmsItem.Comment, CommentFromLmsItem.Location, CommentFromLmsItem.Timestamp, AttemptItem.Id AttemptId, ActivityAttemptItem.DataModelCache      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN ActivityPackageItem ON ActivityAttemptItem.ActivityPackageId=ActivityPackageItem.Id      INNER JOIN CommentFromLmsItem ON ActivityPackageItem.Id=CommentFromLmsItem.ActivityPackageId      WHERE AttemptItem.CurrentActivityId=ActivityPackageItem.Id  )  "
669,GetFileById,"CREATE PROCEDURE dbo.[GetFileById]      @FileId int    ,      @RetrieveUnpublishedFiles bit = 0  AS  BEGIN      IF @RetrieveUnpublishedFiles = 0 BEGIN          SELECT FileId,                 PortalId,                 [FileName],                 Extension,                 Size,                 Width,                 Height,                 ContentType,                 FolderID,                 Folder,                 StorageLocation,                 IsCached,                 UniqueId,                 VersionGuid,                 SHA1Hash,                 FolderMappingID,                 LastModificationTime,                 Title,                 Description,                 EnablePublishPeriod,                 StartDate,                 EndDate,                 CreatedByUserID,                 CreatedOnDate,                 LastModifiedByUserID,                 LastModifiedOnDate,                 PublishedVersion,                 ContentItemID,                 HasBeenPublished          FROM dbo.[vw_PublishedFiles]          WHERE FileId = @FileId      END      ELSE BEGIN          SELECT FileId,                 PortalId,                 [FileName],                 Extension,                 Size,                 Width,                 Height,                 ContentType,                 FolderID,                 Folder,                 StorageLocation,                 IsCached,                 [UniqueId],                 [VersionGuid],                 SHA1Hash,                 FolderMappingID,                 LastModificationTime,                 Title,                 Description,                 EnablePublishPeriod,                 StartDate,                 EndDate,                 CreatedByUserID,                 CreatedOnDate,                 LastModifiedByUserID,                 LastModifiedOnDate,                 PublishedVersion,                 ContentItemID,                 HasBeenPublished          FROM dbo.[vw_Files]           WHERE FileId = @FileId      END      END"
670,AISystem_Category_Talent_GetsBySearchCount,CREATE proc [dbo].[AISystem_Category_Talent_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Talent    SET QUOTED_IDENTIFIER OFF       
671,GetRolesBasicSearch,"CREATE PROCEDURE dbo.[GetRolesBasicSearch]      @PortalID           Int,                    -- might be null for all portals      @PageIndex          Int,                    -- page number starting at 0      @PageSize           Int,                    -- number of items per page      @FilterBy           nVarChar(100)           -- pattern for role name, do not use preceding or trailing wildcards  AS  BEGIN      IF IsNull(@FilterBy, '') <> '' BEGIN          IF Substring(@FilterBy, 1, 1) = '%'              SET @FilterBy = Substring(@FilterBy, 2, Len(@FilterBy) - 1)          IF Substring(@FilterBy, Len(@FilterBy), 1) = '%'              SET @FilterBy = Substring(@FilterBy, 1, Len(@FilterBy) - 1)       END;     IF IsNull(@PageIndex,-1) >= 0 AND IsNull(@PageSize, 0) > 0 AND IsNull(@PageSize, 0) < Cast(0x7fffffff AS Int)    WITH OrderedRoles AS (     SELECT RoleID, PortalID, RoleName, [Description], ServiceFee, BillingFrequency, TrialPeriod, TrialFrequency, BillingPeriod, TrialFee,         IsPublic, AutoAssignment, RoleGroupID, RSVPCode, dbo.FilePath(IconFile) AS IconFile, Status, SecurityMode,         CreatedByUserID,CreatedOnDate,LastModifiedByUserID,LastModifiedOnDate,         ROW_NUMBER() OVER (ORDER BY RoleName ASC, PortalID DESC) AS RowNum      FROM dbo.[Roles]      WHERE (RoleName LIKE '%' + @FilterBy + '%' OR IsNull(@FilterBy,'') = '')        AND (PortalID = @PortalID OR IsNull(@PortalID, -1)  = -1)        AND (RoleId  >= 0) -- DNN-4288: ignore virtual roles     )    SELECT * FROM OrderedRoles WHERE RowNum >= dbo.PageLowerBound(@PageIndex, @Pagesize)            AND RowNum <= dbo.PageUpperBound(@PageIndex, @Pagesize) ORDER BY RowNum     OPTION (OPTIMIZE FOR (@PortalId UNKNOWN));   ELSE -- no paging          SELECT RoleID, PortalID, RoleName, [Description], ServiceFee, BillingFrequency, TrialPeriod, TrialFrequency, BillingPeriod, TrialFee,                 IsPublic, AutoAssignment, RoleGroupID, RSVPCode, dbo.FilePath(IconFile) AS IconFile, Status, SecurityMode,                 CreatedByUserID,CreatedOnDate,LastModifiedByUserID,LastModifiedOnDate,                 ROW_NUMBER() OVER (ORDER BY RoleName ASC, PortalID DESC) AS RowNum           FROM dbo.[Roles]           WHERE (RoleName LIKE '%' + @FilterBy + '%' OR IsNull(@FilterBy,'') = '')             AND (PortalID = @PortalID OR IsNull(@PortalID, -1)  = -1)             AND (RoleId  >= 0) -- DNN-4288: ignore virtual roles     OPTION (OPTIMIZE FOR (@PortalId UNKNOWN))  END"
672,CK__Evaluatio__Comme__302FD894,(len([Comment])<=(4096))
673,Journal_TypeFilters_Save,"CREATE PROCEDURE dbo.[Journal_TypeFilters_Save]  @PortalId int,  @ModuleId int,  @JournalTypeId int  AS  INSERT INTO dbo.[Journal_TypeFilters]    (PortalId, ModuleId, JournalTypeId)   VALUES   (@PortalId, @ModuleId, @JournalTypeId)"
674,AIElearning_Certificate_Offline_Report,"CREATE proc [dbo].[AIElearning_Certificate_Offline_Report]   @classid int  as  select u.Username [Taikhoan],us.Displayname [HoTen],unit.Title [Donvi],jb.Title [Chucdanh],  o.name [Tenchungchi],o.code [Machungchi], o.UserAllocation [Nguoicap],o.DateAllocation [Ngaycap],  o.UnitAllocation [Donvicap], o.EndDate [Ngayhethieuluc],offuser.number [Sochungchi]   from AIElearning_Certificate_Offline o   inner join AIElearning_ClassUser u  on u.ClassId=o.Classid  inner join AIElearning_Certificate_Offline_User offuser  on u.UserId=offuser.UserId  inner join AISystem_UserInfo us  on us.Username=u.Username  left join AISystem_Category_Unit unit  on unit.Code=us.unitcode  left join AISystem_JobTitle_Title jb  on jb.Code=us.JobTitleCode     where o.Classid=@classid and offuser.CertificateId=o.id    "
675,AISystem_EmailSend_GetsBySearch,"CREATE proc [dbo].[AISystem_EmailSend_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @userid int      as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end  --id người nhận--  if(@userid >-1)  begin  set @Condition=@Condition+' AND FromUserId='+str(@userid)  end  --  set @Condition=@Condition+' AND id in (select contentid from AISystem_EmailSendUsers )'        exec('    WITH #AISystem_EmailContent AS(    SELECT ROW_NUMBER() OVER (ORDER BY id desc) AS RowNumber,             *     from AISystem_EmailContent '+@Condition+'     )         SELECT     *   FROM #AISystem_EmailContent   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF      "
676,PersonaBar_DeletePersonaBarMenuPermissionById,CREATE PROCEDURE dbo.[PersonaBar_DeletePersonaBarMenuPermissionById]  @MenuPermissionId INT AS DELETE FROM dbo.[PersonaBarMenuPermission] WHERE  [MenuPermissionId] = @MenuPermissionId
677,AIElearning_ClassTopic_DeleteByParentId,CREATE proc [dbo].[AIElearning_ClassTopic_DeleteByParentId]  @ParentId int  as  delete AIElearning_ClassTopic where ParentId =@ParentId  
678,GetAuthenticationServices,CREATE PROCEDURE dbo.GetAuthenticationServices  AS   SELECT *    FROM   dbo.Authentication
679,AIElearning_Lecturers_ReportData,"create proc [dbo].[AIElearning_Lecturers_ReportData]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @UnitCode nvarchar(50),  @Status int,  @Type int,  @TeachingTopic int,  @partnerId int  as  --  AIElearning_Lecturers_ReportData 1,100,'','28',-1,-1,-1,30  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   set @Condition=@Condition+' AND ( i.Username = N''' +@Keyword +''' or i.Displayname like N''%' +@Keyword+ '%'' )'  if(@Status>-1)   set @Condition=@Condition+' AND i.Status='+str(@Status)  if(@UnitCode <> '')   set @Condition=@Condition+' AND i.UnitCode='''+ @UnitCode + ''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)  if(@TeachingTopic>-1)   set @Condition=@Condition+' AND (l.TeachingTopic = '''+CONVERT(varchar(10), @TeachingTopic) +'''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''' + CONVERT(varchar(10), @TeachingTopic) + ',%''    or l.TeachingTopic like ''%,' + CONVERT(varchar(10), @TeachingTopic)+''')'  if(@partnerId>-1)   set @Condition=@Condition+' AND UserInfoId in (select UserInfoId from AISystem_UserInfo_Partner where PartnerId = ' +str(@partnerId) +' )'    exec('  WITH #AIElearning_Lecturers AS(  SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Displayname, i.Sex, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, l.Status ,   (SELECT STUFF(( select '', ''+ Title from AISystem_Category_TeachingTopic where Id in(select * from Split(l.TeachingTopic)) FOR XML PATH('''')),1,1,'''') ) as TeachingTopicName, (select Title from AISystem_Category_Unit where Code = i.UnitCode) as UnitName , i.Username , l.UserInfoId,  (SELECT STUFF(( select '', ''+ p.Name from AISystem_UserInfo_Partner up inner join AISystem_Partner p on up.PartnerId = p.Id where UserInfoId = l.UserInfoId FOR XML PATH('''')),1,1,'''')) as PartnerList, (select count(*) from AIElearning_Class_Lecturers where LecturersId = l.Id) as ClassCount, ISNULL((SELECT AVG(CASE WHEN RateMark <> 0 THEN RateMark ELSE NULL END) from AIElearning_Class_Lecturers where LecturersId = l.Id ),0) as AVGRateMark  from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id       where '+@Condition+')   SELECT *   FROM #AIElearning_Lecturers   where RowNumber between '+ @start +' and '+ @end +'   ')      "
680,DeleteSearchWord,CREATE PROCEDURE dbo.DeleteSearchWord   @SearchWordsID int  AS    DELETE FROM dbo.SearchWord  WHERE   [SearchWordsID] = @SearchWordsID
681,GetContentWorkflow,"CREATE PROCEDURE dbo.GetContentWorkflow  @WorkflowID int  AS    SELECT     [WorkflowID],    [PortalID],    [WorkflowName],    [Description],    [IsDeleted],    [StartAfterCreating],    [StartAfterEditing],    [DispositionEnabled]  FROM dbo.ContentWorkflows  WHERE WorkflowID = @WorkflowID"
682,GetAuthenticationServiceByPackageID,CREATE PROCEDURE dbo.GetAuthenticationServiceByPackageID     @PackageID int    AS   SELECT *    FROM  dbo.Authentication    WHERE PackageID = @PackageID
683,AISystem_Talent_Subject_GetByTalentAndSubject,"Create PROC [dbo].[AISystem_Talent_Subject_GetByTalentAndSubject]      @talentId INT,      @talentChildId INT,      @talentLevelId INT,      @talentChildLevelId INT,      @subjectId INT  AS   -- AISystem_Talent_Subject_GetByTalentAndSubject  31,-1,84,-1,39  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'    IF ( @talentId <> 0 )      SET @Condition = @Condition + ' AND TalentId=' + STR(@talentId)  IF ( @talentChildId <> 0 )      SET @Condition = @Condition + ' AND TalentChildId=' + STR(@talentChildId)  IF ( @talentLevelId <> 0 )      SET @Condition = @Condition + ' AND TalentLevelId=' + STR(@talentLevelId)  IF ( @talentChildLevelId <> 0 )      SET @Condition = @Condition + ' AND TalentChildLevelId=' + STR(@talentChildLevelId)  IF ( @subjectId > 0 )      SET @Condition = @Condition + ' AND SubjectId=' + STR(@subjectId)     EXEC('select * from AISystem_Talent_Subject where '+@Condition+' ')  SET QUOTED_IDENTIFIER OFF"
684,SeqNavAttemptObjectiveView,"  -- Create a function that implements the SeqNavAttemptObjectiveView view  CREATE FUNCTION [SeqNavAttemptObjectiveView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT AttemptObjectiveItem.Id AttemptObjectiveId, AttemptItem.Id AttemptId, AttemptObjectiveItem.CompletionStatus, AttemptObjectiveItem.Description, AttemptObjectiveItem.[Key], AttemptObjectiveItem.LessonStatus, AttemptObjectiveItem.RawScore, AttemptObjectiveItem.MinScore, AttemptObjectiveItem.MaxScore, AttemptObjectiveItem.ProgressMeasure, AttemptObjectiveItem.ScaledScore, AttemptObjectiveItem.SuccessStatus, AttemptObjectiveItem.ActivityAttemptId, AttemptObjectiveItem.IsPrimaryObjective      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN AttemptObjectiveItem ON AttemptObjectiveItem.ActivityAttemptId=ActivityAttemptItem.Id  )  "
685,AISystem_UserInfo_ReportCheck,"    CREATE proc [dbo].[AISystem_UserInfo_ReportCheck]  @LisetUser nvarchar(max)    as  --[dbo].[AISystem_UserInfo_Report]'',1,-1,'','','',-1,'01/01/1900','01/01/2900',-1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@LisetUser IS NOT NULL AND @LisetUser<>'')    set @condition = @condition + ' and tblUser.id in (select * from dbo.split('''+@LisetUser+'''))  '    exec(' SELECT tblUser.Username ,tblUser.displayname,  tblUser.Mastercode,tblUser.EmployeeCode,  unit.Title [Donvi],(select title from AISystem_Category_Unit where code=tblUser.UnitChildCode) [Donvicon],  job.title [Nhomchucdanh],jb.title [Chucdanh], lv.title [Capbac],  tblUser.Email,tblUser.InDate ,tblUser.AppointDate,tblUser.*,  tblUser.InDateCompany   from AISystem_UserInfo  tblUser  left join AISystem_Category_Unit unit  on tblUser.unitcode=unit.Code  left join AISystem_JobTitle_Title jb  on tblUser.JobTitleCode=jb.Code  left join AISystem_JobTitle job  on tblUser.GroupJobTileCode=job.Code  left join AISystem_Level lv  on  tblUser.LevelCode=lv.Code   where ' + @condition +'')         "
686,GetFiles,"CREATE PROCEDURE dbo.[GetFiles]      @FolderID Int,                      -- not null!      @RetrieveUnpublishedFiles Bit = 0   -- include files, hidden by status or date?  AS      IF @RetrieveUnpublishedFiles = 0       BEGIN          SELECT              F.FileId,              F.PortalId,              F.[FileName],              F.Extension,              F.[Size],              F.Width,              F.Height,              F.ContentType,              F.FolderID,              F.Folder,              F.StorageLocation,              F.IsCached,              F.FolderMappingID,              F.UniqueId,              F.VersionGuid,              F.SHA1Hash,              F.LastModificationTime,              F.Title,              F.Description,              F.EnablePublishPeriod,              F.StartDate,              F.EndDate,              F.CreatedByUserID,              F.CreatedOnDate,              F.LastModifiedByUserID,              F.LastModifiedOnDate,              F.PublishedVersion,              F.ContentItemID,              F.HasBeenPublished          FROM dbo.[vw_PublishedFiles] F                      WHERE F.FolderID = @FolderID          ORDER BY [FolderID], [FileName]      END      ELSE BEGIN          SELECT              F.FileId,              F.PortalId,              F.[FileName],              F.Extension,              F.[Size],              F.Width,              F.Height,              F.ContentType,              F.FolderID,              F.Folder,              F.StorageLocation,              F.IsCached,              F.FolderMappingID,              F.UniqueId,              F.VersionGuid,              F.SHA1Hash,              F.LastModificationTime,              F.Title,              F.Description,              F.EnablePublishPeriod,              F.StartDate,              F.EndDate,              F.CreatedByUserID,              F.CreatedOnDate,              F.LastModifiedByUserID,              F.LastModifiedOnDate,              F.PublishedVersion,              F.ContentItemID,              F.HasBeenPublished          FROM dbo.[vw_Files] F                      WHERE F.FolderID = @FolderID          ORDER BY [FolderID], [FileName]      END"
687,AIElearning_Monney_Class_DeleteClassid,create proc [dbo].[AIElearning_Monney_Class_DeleteClassid]  @Classid int  as  delete from AIElearning_Monney_Class where Classid=@Classid  
688,GetFileContent,CREATE PROCEDURE dbo.[GetFileContent]   @FileId int  AS  BEGIN   SELECT Content   FROM dbo.[Files]   WHERE FileId = @FileId  END
689,GetPortals,"CREATE PROCEDURE dbo.[GetPortals]   @CultureCode nVarChar(50) -- pass Null | '' to return portal default language  AS  BEGIN   SELECT *    FROM  dbo.[vw_Portals]   WHERE CultureCode =     CASE      WHEN IsNull(@CultureCode, N'') = N'' THEN DefaultLanguage     ELSE @CultureCode     END    ORDER BY PortalName;  END"
690,Journal_TypeFilters_Delete,"CREATE PROCEDURE dbo.[Journal_TypeFilters_Delete]  @PortalId int,  @ModuleId int  AS  DELETE FROM dbo.[Journal_TypeFilters] WHERE PortalId = @PortalId AND ModuleId=@ModuleId"
691,AIElearning_Document_Delete,CREATE PROC [dbo].[AIElearning_Document_Delete]   @id int  as  begin  DECLARE @orderNo AS int  DECLARE @category AS int  select @category = CategoryId from AIElearning_Document where Id= @id   select @orderNo = OrderNo from AIElearning_Document where Id= @id   delete from AIElearning_Document where Id = @id  update AIElearning_Document set OrderNo = (OrderNo-1) where OrderNo > @orderNo and CategoryId =@category  end          
692,PersonaBar_DeletePersonaBarMenuPermissionsByMenuId,"CREATE PROCEDURE dbo.[PersonaBar_DeletePersonaBarMenuPermissionsByMenuId]     @PortalId INT,  @MenuId INT AS DELETE FROM dbo.[PersonaBarMenuPermission] WHERE  [MenuId] = @MenuId AND (PortalId = @PortalId OR @PortalId IS NULL AND PortalId IS NULL)"
693,AIElearning_ClassTopic_GetClassid,"CREATE proc [dbo].[AIElearning_ClassTopic_GetClassid]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @itemid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- Mã chuyên m?c  -- mã khóa học  if(@classid>-1)  set @Condition=@Condition+' AND classid='+str(@classid)  -- mã bài giảng  if(@itemid>-1)  set @Condition=@Condition+' AND itemid='+str(@itemid)  exec('    WITH #AIElearning_ClassTopic AS(    SELECT ROW_NUMBER() OVER (ORDER BY UpdatedDate desc) AS RowNumber,     *     from AIElearning_ClassTopic '+@Condition+' and ParentId=-1      )         SELECT     *   FROM #AIElearning_ClassTopic   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF      "
694,DeleteModuleDefinition,CREATE PROCEDURE dbo.DeleteModuleDefinition   @ModuleDefId int  AS    -- delete custom permissions  DELETE FROM dbo.Permission  WHERE moduledefid = @ModuleDefId     DELETE FROM dbo.ModuleDefinitions  WHERE  ModuleDefId = @ModuleDefId
695,UnRegisterAssembly,"CREATE PROCEDURE dbo.UnRegisterAssembly   @PackageID     INT,   @AssemblyName   NVARCHAR(250)  AS   DECLARE @ReturnCode BIT   SET @ReturnCode = 1 -- 1 = Can Delete Assembly, 0 = Cannot Delete Assembly     -- First remove the Assembly Reference for this Package   DELETE FROM dbo.Assemblies    WHERE PackageID = @PackageID     AND AssemblyName = @AssemblyName     IF EXISTS(SELECT TOP 1 PackageID FROM dbo.Assemblies WHERE AssemblyName = @AssemblyName)    -- Set ReturnCode = 0, so assembly is not deleted    SET @ReturnCode = 0     SELECT @ReturnCode"
696,AIElearning_Money_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Money_GetsBySearchCount]  @Keyword nvarchar(250)    as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'      IF(@Keyword IS NOT NULL AND @Keyword<>'')     set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '    exec('select COUNT(Id) from AIElearning_Money '+@Condition)  SET QUOTED_IDENTIFIER OFF      
697,GetScheduleByTypeFullName,"CREATE PROCEDURE dbo.[GetScheduleByTypeFullName]   @TypeFullName varchar(200),   @Server   varchar(150)  AS      SELECT S.*   FROM dbo.[Schedule] S   WHERE S.TypeFullName = @TypeFullName     AND (@Server IS NULL OR ISNULL(s.Servers, '') = '' OR ',' + s.Servers + ',' LIKE '%,' + @Server + ',%')"
698,GetContentWorkflows,"CREATE PROCEDURE dbo.GetContentWorkflows   @PortalID int  AS    SELECT   [WorkflowID],   [PortalID],   [WorkflowName],   [Description],   [IsDeleted],   [StartAfterCreating],   [StartAfterEditing],   [DispositionEnabled]  FROM dbo.ContentWorkflows  WHERE (PortalID = @PortalID OR PortalID IS null)"
699,AIElearning_TestCampaign_Unit_DeleteByTestCampaignId,create PROC [dbo].[AIElearning_TestCampaign_Unit_DeleteByTestCampaignId]  @TestCampaignId int  AS  DELETE FROM AIElearning_TestCampaign_Unit  WHERE        (TestCampaignId = @TestCampaignId)  
700,SeqNavAttemptCommentFromLearnerView,"  -- Create a function that implements the SeqNavAttemptCommentFromLearnerView view  CREATE FUNCTION [SeqNavAttemptCommentFromLearnerView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT CommentFromLearnerItem.Id CommentFromLearnerId, AttemptItem.Id AttemptId, CommentFromLearnerItem.Comment, CommentFromLearnerItem.Location, CommentFromLearnerItem.Timestamp, CommentFromLearnerItem.ActivityAttemptId, CommentFromLearnerItem.Ordinal      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN CommentFromLearnerItem ON CommentFromLearnerItem.ActivityAttemptId=ActivityAttemptItem.Id  )  "
701,AIElearning_TestCampaign_RegistorUser_GetByTestFormIdOrTestRegistor,"CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUser_GetByTestFormIdOrTestRegistor]      @TestFormId INT,      @TestRegistorId INT,      @Status INT  AS -- AIElearning_TestCampaign_RegistorUser_GetByTestFormIdOrTestRegistor 1,-1,3    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = 'where (1=1)'  IF ( @TestFormId > -1 )      SET @Condition = @Condition + ' AND tf.Id=' + STR(@TestFormId)  IF ( @TestRegistorId > -1 )      SET @Condition = @Condition + ' AND tcr.Id =' + STR(@TestRegistorId)  IF ( @Status > -1 )      SET @Condition = @Condition + ' AND tcrut.Status <> ' + STR(@Status)  EXEC('  SELECT ROW_NUMBER() OVER (ORDER BY tcru.Id desc) AS RowNumber,  tcru.* FROM dbo.AIElearning_TestCampaign_Registor tcr INNER JOIN  dbo.AIElearning_TestCampaign_RegistorUser tcru ON tcr.Id = tcru.TestRegistorId INNER JOIN dbo.AIElearning_TestCampaign_RegistorUserTest tcrut ON tcru.Id = tcrut.RegistorUserId INNER JOIN dbo.AIElearning_TestForm tf ON tcr.TestFormId = tf.Id '+@Condition  )    SET QUOTED_IDENTIFIER OFF     "
702,AIElearning_ClassUser_GetInfoByClassIdANdUserName,"CREATE proc [dbo].[AIElearning_ClassUser_GetInfoByClassIdANdUserName]  @ClassId int,  @UserName nvarchar(150)  as    select top(1) * from AIElearning_ClassUser where ClassId=@ClassId and Username=@UserName  "
703,DeleteList,"CREATE PROCEDURE dbo.[DeleteList]   @ListName  nVarChar( 50), -- Not Null   @ParentKey nVarChar(150)  -- Not Null  AS  BEGIN   DELETE L    FROM  dbo.[Lists] L    WHERE ListName = @ListName       AND dbo.[GetListParentKey](L.ParentID, L.ListName, N'ParentKey',  0) = @ParentKey;  END"
704,Journal_TypeFilters_List,"CREATE PROCEDURE dbo.[Journal_TypeFilters_List]  @PortalId int,  @ModuleId int  AS  SELECT jt.JournalTypeId, jt.JournalType from dbo.[Journal_Types] as jt INNER JOIN   dbo.[Journal_TypeFilters] as jf ON jf.JournalTypeId = jt.JournalTypeId  WHERE jt.PortalId = @PortalId AND jf.ModuleId = @ModuleId"
705,AIElearning_Document_GetMaxOrderNo,"CREATE PROC [dbo].[AIElearning_Document_GetMaxOrderNo]   @CategoryId int  as  begin  select ISNULL(max(OrderNo),'0') from AIElearning_Document WHERE CategoryId=@CategoryId   end        "
706,AddSchedule,"CREATE PROCEDURE dbo.[AddSchedule]   @TypeFullName varchar(200)   ,@TimeLapse int   ,@TimeLapseMeasurement varchar(2)   ,@RetryTimeLapse int   ,@RetryTimeLapseMeasurement varchar(2)   ,@RetainHistoryNum int   ,@AttachToEvent varchar(50)   ,@CatchUpEnabled bit   ,@Enabled bit   ,@ObjectDependencies varchar(300)   ,@Servers varchar(150)   ,@CreatedByUserID int   ,@FriendlyName varchar(200)   ,@ScheduleStartDate datetime  AS   INSERT INTO  dbo.Schedule(     TypeFullName    ,TimeLapse    ,TimeLapseMeasurement    ,RetryTimeLapse    ,RetryTimeLapseMeasurement    ,RetainHistoryNum    ,AttachToEvent    ,CatchUpEnabled    ,Enabled    ,ObjectDependencies    ,Servers    ,FriendlyName    ,[CreatedByUserID]    ,[CreatedOnDate]    ,[LastModifiedByUserID]    ,[LastModifiedOnDate]    ,ScheduleStartDate    )   VALUES    (@TypeFullName    ,@TimeLapse    ,@TimeLapseMeasurement    ,@RetryTimeLapse    ,@RetryTimeLapseMeasurement    ,@RetainHistoryNum    ,@AttachToEvent    ,@CatchUpEnabled    ,@Enabled    ,@ObjectDependencies    ,@Servers    ,@FriendlyName    ,@CreatedByUserID    ,getdate()    ,@CreatedByUserID    ,getdate()    ,@ScheduleStartDate    )    select SCOPE_IDENTITY()"
707,PersonaBar_GetPersonaBarMenuPermissionsByPortal,"CREATE PROCEDURE dbo.[PersonaBar_GetPersonaBarMenuPermissionsByPortal]  @PortalID INT AS  SELECT          MenuPermissionId,          MenuId,          PortalId,          PermissionId,          RoleID,          RoleName,          AllowAccess,          UserId,          Username,          DisplayName,          PermissionKey,          PermissionName,          ModuleDefID,         PermissionCode,         CreatedByUserId,          CreatedOnDate,          LastModifiedByUserId,          LastModifiedOnDate      FROM dbo.[vw_PersonaBarMenuPermissions]         WHERE PortalId = @PortalId OR PortalId IS NULL"
708,AIElearning_ClassNotifi_GetClassid,"CREATE proc [dbo].[AIElearning_ClassNotifi_GetClassid]   @classid int,  @TypeSent int,  @type int,  @sendDate nvarchar(250),  @userid int,  @Testid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)   --  if(@TypeSent>-1)   set @Condition=@Condition+' AND TypeSent='+str(@TypeSent)   --  if(@classid>-1)   set @Condition=@Condition+' AND ClassId='+str(@classid)   --  IF (@sendDate<>'')   set @condition = @condition + ' and SentDate = ''' + @sendDate + ''''   --   if(@userid>-1)   set @Condition=@Condition+' AND ClassId='+str(@userid)  if(@Testid>-1)   set @Condition=@Condition+' AND Testid='+str(@Testid)   --  exec('select * from AIElearning_ClassNotifi '+@Condition)  "
709,AIElearning_ClassTopic_GetClassidCount,"CREATE proc [dbo].[AIElearning_ClassTopic_GetClassidCount]     @Keyword nvarchar(250),  @classid int,  @itemid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- Mã chuyên m?c  -- mã khóa học  if(@classid>-1)  set @Condition=@Condition+' AND classid='+str(@classid)  -- mã bài giảng  if(@itemid>-1)  set @Condition=@Condition+' AND itemid='+str(@itemid)  exec('        select COUNT(*)          from AIElearning_ClassTopic '+@Condition+' and ParentId=-1                ')  SET QUOTED_IDENTIFIER OFF      "
710,GetListParentKey,"CREATE FUNCTION dbo.[GetListParentKey]  (   @ParentID AS int,   @ListName as nvarchar(500),   @Type as nvarchar(50),   @Count as int   )  RETURNS nvarchar(2000)    AS   BEGIN    DECLARE @KeyValue nvarchar(2000)    DECLARE @ListValue nvarchar(2000)    DECLARE @TextValue nvarchar(2000)    DECLARE @ReturnValue nvarchar(2000)    DECLARE @Key nvarchar(2000)        IF @ParentID = 0     IF @Count = 0      SET @ReturnValue = ''     ELSE      SET @ReturnValue = @ListName    ELSE     BEGIN      SELECT @KeyValue = ListName + '.' + [Value],        @TextValue = ListName + '.' + [Text],         @ListValue = ListName,         @ParentID = ParentID         FROM dbo.Lists        WHERE EntryID = @ParentID      If @Type = 'ParentKey' Or (@Type = 'ParentList' AND @Count > 0)       SET @ReturnValue = @KeyValue      ELSE        IF @Type = 'ParentList'        SET @ReturnValue = @ListValue       ELSE        SET @ReturnValue = @TextValue      IF @Count > 0       If @Count = 1 AND @Type = 'ParentList'        SET @ReturnValue = @ReturnValue + ':' + @ListName       ELSE        SET @ReturnValue = @ReturnValue + '.' + @ListName      SET @ReturnValue = dbo.GetListParentKey(@ParentID, @ReturnValue, @Type, @Count+1)     END      RETURN    @ReturnValue   END"
711,AIElearning_Money_GetsBySearch,"create proc [dbo].[AIElearning_Money_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250)    as    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa    IF(@Keyword IS NOT NULL AND @Keyword<>'')     set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  exec('    WITH #AIElearning_Money AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Money '+@Condition+'       )         SELECT     *   FROM #AIElearning_Money   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF      "
712,UpdateTabVersion,"CREATE PROCEDURE dbo.[UpdateTabVersion]      @TabID   int,      @VersionGuid uniqueidentifier  AS      UPDATE dbo.Tabs          SET    VersionGuid = @VersionGuid      WHERE  TabID = @TabID"
713,AddContentWorkflowState,"CREATE PROCEDURE dbo.[AddContentWorkflowState]   @WorkflowID int,   @StateName nvarchar(40),   @Order int,   @IsActive bit,   @SendEmail bit,   @SendMessage bit,   @IsDisposalState bit,   @OnCompleteMessageSubject nvarchar(256),   @OnCompleteMessageBody nvarchar(1024),   @OnDiscardMessageSubject nvarchar(256),   @OnDiscardMessageBody nvarchar(1024)  AS    INSERT INTO dbo.ContentWorkflowStates (   [WorkflowID],   [StateName],   [Order],   [IsActive],   [SendEmail],   [SendMessage],   [IsDisposalState],   [OnCompleteMessageSubject],   [OnCompleteMessageBody],   [OnDiscardMessageSubject],   [OnDiscardMessageBody]  )  VALUES (   @WorkflowID,   @StateName,   @Order,   @IsActive,   @SendEmail,   @SendMessage,   @IsDisposalState,   @OnCompleteMessageSubject,   @OnCompleteMessageBody,   @OnDiscardMessageSubject,   @OnDiscardMessageBody  )    SELECT SCOPE_IDENTITY()"
714,CKE_DeleteAllModuleSettingsByTab,CREATE PROCEDURE dbo.CKE_DeleteAllModuleSettingsByTab   @TabID int  AS  SET NOCOUNT ON  Delete ms   FROM dbo.ModuleSettings ms   INNER JOIN    dbo.TabModules tm  ON tm.TabID = @TabID   Where SettingName like 'DNNCKMI#%' AND ms.ModuleID  = tm.ModuleID
715,SeqNavAttemptInteractionView,"  -- Create a function that implements the SeqNavAttemptInteractionView view  CREATE FUNCTION [SeqNavAttemptInteractionView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT InteractionItem.Id InteractionId, AttemptItem.Id AttemptId, InteractionItem.InteractionIdFromCmi, InteractionItem.InteractionType, InteractionItem.Timestamp, InteractionItem.Weighting, InteractionItem.ResultState, InteractionItem.ResultNumeric, InteractionItem.Latency, InteractionItem.Description, InteractionItem.LearnerResponseBool, InteractionItem.LearnerResponseString, InteractionItem.LearnerResponseNumeric, InteractionItem.ScaledScore, InteractionItem.RawScore, InteractionItem.MinScore, InteractionItem.MaxScore, InteractionItem.ActivityAttemptId, InteractionItem.EvaluationPoints      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id  )  "
716,AIElearning_SurveyUser_CheckCompleteCondition,"CREATE proc [dbo].[AIElearning_SurveyUser_CheckCompleteCondition]   @SurveyID int,  @Required int,  @UserId int  as  --    AIElearning_SurveyUser_CheckCompleteCondition 1075,1,24  DECLARE @Condition AS NVARCHAR(MAX)  -- So cau hoi bat buoc  DECLARE @RequiredQST AS INT  select @RequiredQST = count(*)  from AIElearning_SurveyQuestion q inner join AIElearning_SurveyPart p on q.SurveyPartId = p.Id   where p.SurveyId = @SurveyID and q.Required = @Required    -- So cau hoi bat buoc da tra loi  DECLARE @RequiredASW AS INT  select @RequiredASW = count (distinct suq.SurveyQuestionId ) from   AIElearning_SurveyUserQuestion suq inner join AIElearning_SurveyQuestion sq on suq.SurveyQuestionId = sq.Id   inner join AIElearning_SurveyUser su on su.Id = suq.SurveyUserId inner join AIElearning_SurveyPart sp on sp.Id = sq.SurveyPartId  where su.UserId = @UserId and sp.SurveyId = @SurveyID and sq.Required = @Required    -- tra loi het cau hoi bat buoc = 1  if(@RequiredQST = @RequiredASW)   select 1  else   select 0  "
717,AddUrlTracking,"create procedure dbo.AddUrlTracking    @PortalID     int,  @Url          nvarchar(255),  @UrlType      char(1),  @LogActivity  bit,  @TrackClicks  bit,  @ModuleId     int,  @NewWindow    bit    as    insert into dbo.UrlTracking (    PortalID,    Url,    UrlType,    Clicks,    LastClick,    CreatedDate,    LogActivity,    TrackClicks,    ModuleId,    NewWindow  )  values (    @PortalID,    @Url,    @UrlType,    0,    null,    getdate(),    @LogActivity,    @TrackClicks,    @ModuleId,    @NewWindow  )"
718,AISystem_Subject_GetReportData,"  CREATE proc [dbo].[AISystem_Subject_GetReportData]  @pageIndex int,  @pageSize int,  @keyword nvarchar(max),  @categorysubjectId int,  @unitCode nvarchar(50)  as  -- AISystem_Subject_GetReportData 1,100,'',-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@keyword<>'')    set @condition = @condition + ' and (s.Name like N''%' + @Keyword + '%'') '  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND s.CateSubjectId='+str(@categorysubjectId)  if(@unitCode <> '')   set @Condition=@Condition+' AND s.UnitCode='''+@unitCode+''''  exec('  WITH #AISystem_Subject AS(     SELECT  ROW_NUMBER() OVER ( ORDER BY s.Id DESC ) AS RowNumber, s.*, ( SELECT STUFF(( SELECT  CHAR(10) + ''- '' + Title FROM    AISystem_Category_TrainingField  WHERE   Id IN ( SELECT * FROM  Split(s.TrainingField) ) FOR XML PATH('''') ), 1, 1, '''') ) AS TrainingFieldList, COUNT(1) AS TongHV, COUNT(CASE cu.LearnStatus  WHEN 2 THEN 1  ELSE NULL END) AS UserCompleteCount, ROUND(CAST(COUNT(CASE cu.LearnStatus WHEN 2 THEN 1 ELSE NULL END) AS FLOAT) / CAST(COUNT(1) AS FLOAT) * 100, 2) AS CompletePercent, ( CONVERT(NVARCHAR(250), s.StartTime, 103) + '' '' + CONVERT(NVARCHAR(250), s.StartTime, 8) + N'' đến '' + CONVERT(NVARCHAR(250), s.EndTime, 103) + '' '' + CONVERT(NVARCHAR(250), s.EndTime, 8) ) AS [ThoiGian], jt.Title AS [ViTriChucDanh]  FROM    AISystem_Subject s          INNER JOIN dbo.AIElearning_Class c ON s.Id = c.SubjectId          INNER JOIN dbo.AIElearning_ClassUser cu ON c.Id = cu.ClassId     INNER JOIN dbo.AISystem_UserInfo ui ON ui.UserId = cu.UserID    LEFT JOIN dbo.AISystem_JobTitle_Title jt ON jt.Code = s.UserObject  WHERE '+@Condition+'  GROUP BY s.Id, s.CateSubjectId, s.Name, s.Code, s.Description, s.OrderNo, s.CreatedDate, s.Time, s.Limit, s.UnitCode, s.Avatar, s.TrainingField, s.TrainingType, s.MaxUser, s.TypePartner, s.PartnerId, s.Address, s.Contact, s.Area, s.StartTime, s.EndTime, s.UserObject, s.ClassCount, s.UserCount, s.ExpectedCost, s.IsDivide, s.CommitTraining, s.UnitCodeChild,jt.Title )       SELECT     *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
719,GetUserRelationship,"CREATE PROCEDURE dbo.[GetUserRelationship] @UserRelationshipID INT  AS       SELECT  UserRelationshipID,     UserID,     RelatedUserID,     RelationshipID,                 Status,                          CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.UserRelationships       WHERE UserRelationshipID = @UserRelationshipID   ORDER BY UserRelationshipID ASC"
720,AISystem_EmailReceiveUsers_GetUserNameByClassUserId,create proc  [dbo].[AISystem_EmailReceiveUsers_GetUserNameByClassUserId]  @ClassUserId int  as  select top(1) * from AIElearning_ClassUser where Id=@ClassUserId  
721,SecurityAnalyzer_SearchAllTables,"CREATE PROCEDURE dbo.[SecurityAnalyzer_SearchAllTables] ( @SearchStr NVARCHAR(100) ) AS BEGIN      CREATE TABLE #Results (ColumnName nvarchar(370), ColumnValue nvarchar(3630))      SET NOCOUNT ON      DECLARE @TableName nvarchar(256), @ColumnName nvarchar(128), @SearchStr2 nvarchar(110)     SET  @TableName = ''     SET @SearchStr2 = QUOTENAME('%' + @SearchStr + '%','''')      WHILE @TableName IS NOT NULL      BEGIN         SET @ColumnName = ''         SET @TableName =          (             SELECT MIN(QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME))             FROM     INFORMATION_SCHEMA.TABLES             WHERE         TABLE_TYPE = 'BASE TABLE'                 AND    QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME) > @TableName                 AND    OBJECTPROPERTY(                         OBJECT_ID(                             QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME)                              ), 'IsMSShipped'                                ) = 0         )          WHILE (@TableName IS NOT NULL) AND (@ColumnName IS NOT NULL)          BEGIN             SET @ColumnName =             (                 SELECT MIN(QUOTENAME(COLUMN_NAME))                 FROM     INFORMATION_SCHEMA.COLUMNS                 WHERE         TABLE_SCHEMA    = PARSENAME(@TableName, 2)                     AND    TABLE_NAME    = PARSENAME(@TableName, 1)                     AND    DATA_TYPE IN ('char', 'varchar', 'nchar', 'nvarchar', 'int', 'decimal')                     AND    QUOTENAME(COLUMN_NAME) > @ColumnName             )              IF @ColumnName IS NOT NULL              BEGIN                 INSERT INTO #Results                 EXEC                 (                     'SELECT ''' + @TableName + '.' + @ColumnName + ''', LEFT(' + @ColumnName + ', 3630)                      FROM ' + @TableName + 'WITH (NOLOCK) ' +                     ' WHERE ' + @ColumnName + ' LIKE ' + @SearchStr2                 )             END         END         END      SELECT ColumnName, ColumnValue FROM #Results END"
722,AIElearning_ClassTopic_GetCountParentId,create proc [dbo].[AIElearning_ClassTopic_GetCountParentId]  @ParentId int  as  select count(*)  from AIElearning_ClassTopic where ParentId=@ParentId  
723,BrowserFromUserAgent,"CREATE FUNCTION dbo.[BrowserFromUserAgent]   (@UserAgent nVarChar(2000))  RETURNS nVarChar(2000)  AS  BEGIN   DECLARE @ident1   nVarChar( 20) = '';   DECLARE @ident2   nVarChar( 20) = '';   DECLARE @Browser     nVarChar(100) = '';   DECLARE @Version  nVarChar( 10) = '';   DECLARE @Pos         Smallint = -1;   DECLARE @End   Smallint =  0;      -- Detect Browser family (Name|Version Prefix):   SET @Browser = CASE    WHEN @UserAgent LIKE '%Opera Mini/%' THEN 'Opera Mini|Opera Mini/|Version/'    WHEN @UserAgent LIKE '%Opera Mobi/%' THEN 'Opera Mobile|Version/|Opera Mobi/'    WHEN @UserAgent LIKE '%Opera/%'   THEN 'Opera|Version/|Opera/'    WHEN @UserAgent LIKE '%Opera %'   THEN 'Opera|Opera '    WHEN @UserAgent LIKE '%Opera'   THEN 'Opera|Opera'    WHEN @UserAgent LIKE '%Firefox/%'  THEN 'Mozilla Firefox|Firefox/'    WHEN @UserAgent LIKE '%Firebird/%'  THEN 'Mozilla Firebird|Firebird/'    WHEN @UserAgent LIKE '%SeaMonkey/%'  THEN 'Mozilla SeaMonkey|SeaMonkey/'    WHEN @UserAgent LIKE '%Kindle/%'  THEN 'Amazon Kindle|Kindle/'    WHEN @UserAgent LIKE '%Kindle %'  THEN 'Amazon Kindle|Version/'    WHEN @UserAgent LIKE '%Silk/%'   THEN 'Amazon Kindle|Version/'    WHEN @UserAgent LIKE '%Chrome/%'  THEN 'Google Chrome|Chrome/'    WHEN @UserAgent Like '%Blackberry'  THEN 'Blackberry|Mobile Safari/'    WHEN @UserAgent LIKE '%Android%'   THEN 'Android|Mobile Safari/'    WHEN @UserAgent LIKE '%Safari/%'  THEN 'Apple Safari|Safari/'    WHEN @UserAgent LIKE '%ChromePlus/%' THEN 'ChromePlus|ChromePlus/'    WHEN @UserAgent LIKE '%AOL %'   THEN 'AOL Browser|AOL '    WHEN @USerAgent LIKE '%Crazy Browser %' THEN 'Crazy Browser|Crazy Browser '    WHEN @USerAgent LIKE '%Maxthon/%'  THEN 'Maxthon|Maxthon/'    WHEN @USerAgent LIKE '%IEMobile %'  THEN 'IE Mobile|IEMobile '    WHEN @USerAgent LIKE '%IEMobile/%'  THEN 'IE Mobile|IEMobile/'    WHEN @UserAgent LIKE '%MSIE %'       THEN 'Internet Explorer|MSIE '    WHEN @UserAgent LIKE '%(IE %'        THEN 'Internet Explorer|(IE '    WHEN @UserAgent LIKE '%Netscape/%'   THEN 'Netscape Navigator|Netscape/'    WHEN @UserAgent LIKE '%Navigator/%'  THEN 'Netscape Navigator|Navigator/'    WHEN @UserAgent LIKE '%PLAYSTATION %'  THEN 'Sony Playstation|PLAYSTATION '    WHEN @UserAgent LIKE '%WGet/%'   THEN 'WGet|WGet/'   END   IF @Browser <> '' -- separate elements:    SET @Pos = CharIndex('|', @Browser)    IF @Pos > 0 BEGIN      SET @ident1  = SubString(@Browser, @Pos + 1, 100)     SET @Browser = Left(@Browser, @Pos - 1)     SET @Pos     = CharIndex('|', @ident1)     IF  @Pos > 0 BEGIN      SET @Ident2 = SubString(@Ident1, @Pos + 1, 100)      SET @Ident1 = Left(@Ident1, @Pos - 1)     END      -- get major version number from UserAgent string:     SET @Pos = CharIndex(@ident1, @UserAgent) + Len(@ident1 + '|') - 1 -- correct to catch trailing space     IF @Pos = 0 SET @Pos = CharIndex(@ident2, @UserAgent) + Len(@ident2 + '|') - 1 -- again     IF @Pos > 0 BEGIN      WHILE SubString(@UserAgent, @Pos + @End, 1) >= '0' AND SubString(@UserAgent, @Pos + @End, 1) <= 9       SET @End = @End + 1      IF @End > 0 SET @Version = SubString(@UserAgent, @Pos, @End)     END    END   ELSE -- Search bots, ignore version    SET @Browser = CASE     WHEN @UserAgent LIKE '%GoogleBot%'  THEN 'Google Bot'    WHEN @UserAgent LIKE 'BingBot%'   THEN 'Bing Bot'    WHEN @UserAgent LIKE 'MSNBot%'   THEN 'MSN Bot'    WHEN @UserAgent LIKE '%BaiduSpider%' THEN 'Baidu Spider'    WHEN @UserAgent LIKE '%Arachmo%'  THEN 'Arachmo Bot'    WHEN @UserAgent LIKE '%NewsGator%'  THEN 'NewsGator Bot'    WHEN @UserAgent LIKE '%Seekbot%'  THEN 'SeekPort Bot'    WHEN @UserAgent LIKE '%Yahoo%'   THEN 'Yahoo Bot'    WHEN @UserAgent LIKE '%Yandex%'   THEN 'Yandex Bot'    WHEN @UserAgent LIKE '%Bot%'   THEN 'Other Bot'    ELSE 'Other'   END   RETURN RTRIM(@Browser + ' ' + @Version)  END"
724,AIElearning_Monney_Class_GetsBySearch,"  create proc [dbo].[AIElearning_Monney_Class_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Monney_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Monney_Class       )         SELECT     *   FROM #AIElearning_Monney_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
725,GetVocabularies,CREATE PROCEDURE dbo.[GetVocabularies]   AS   SELECT *    FROM dbo.Taxonomy_Vocabularies
726,AIElearning_Media_CheckMediaInDocumnet,create proc [dbo].[AIElearning_Media_CheckMediaInDocumnet]   @mediaId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@mediaId>0)   set @Condition=@Condition+' AND Id='+str(@mediaId)  exec('   select count(*) from AIElearning_Media where Id in (select MediaId from AIElearning_ClassDocument)  and '+@Condition+'    ')
727,UpdateContentWorkflowState,"CREATE PROCEDURE dbo.UpdateContentWorkflowState   @StateID int,   @StateName nvarchar(40),   @Order int,   @IsActive bit,   @SendEmail bit,   @SendMessage bit,   @IsDisposalState bit,   @OnCompleteMessageSubject nvarchar(256),   @OnCompleteMessageBody nvarchar(1024),   @OnDiscardMessageSubject nvarchar(256),   @OnDiscardMessageBody nvarchar(1024)  AS    UPDATE dbo.ContentWorkflowStates  SET [StateName] = @StateName,   [Order] = @Order,   [IsActive] = @IsActive,   [SendEmail] = @SendEmail,   [SendMessage] = @SendMessage,   [IsDisposalState] = @IsDisposalState,   [OnCompleteMessageSubject] = @OnCompleteMessageSubject,   [OnCompleteMessageBody] = @OnCompleteMessageBody,   [OnDiscardMessageSubject] = @OnDiscardMessageSubject,   [OnDiscardMessageBody] = @OnDiscardMessageBody  WHERE  [StateID] = @StateID"
728,AIElearning_Class_Hot_GetsByCategoryIdAndTeachInfo,"CREATE proc [dbo].[AIElearning_Class_Hot_GetsByCategoryIdAndTeachInfo]  @CategoryId int,  @NumberView int  as  -- AIElearning_Class_Hot_GetsByCategoryIdAndTeachInfo 246, 8  SELECT      top(@NumberView) h.*, c.Type, c.Name, c.Code, c.Price, c.Avatar, c.AvatarHot, c.Description     FROM            AIElearning_Class AS c INNER JOIN                           AIElearning_Class_Hot AS h ON c.Id = h.ClassId  WHERE        h.CategoryId = @CategoryId  Order by OrderNo    SET QUOTED_IDENTIFIER OFF"
729,CKE_DeleteAllModuleSettings,CREATE PROCEDURE dbo.CKE_DeleteAllModuleSettings   @PortalID varchar  AS  SET NOCOUNT ON  Delete ms   FROM dbo.ModuleSettings ms   INNER JOIN    dbo.Modules m  ON m.PortalID = @PortalID    Where SettingName like 'DNNCKMI#%' AND ms.ModuleID  = m.ModuleID
730,SeqNavAttemptEvaluationCommentLearnerView,"  -- Create a function that implements the SeqNavAttemptEvaluationCommentLearnerView view  CREATE FUNCTION [SeqNavAttemptEvaluationCommentLearnerView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT EvaluationCommentItem.Id EvaluationCommentId, AttemptItem.Id AttemptId, EvaluationCommentItem.Comment, EvaluationCommentItem.Location, EvaluationCommentItem.Timestamp, EvaluationCommentItem.InteractionId, EvaluationCommentItem.Ordinal      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN EvaluationCommentItem ON EvaluationCommentItem.InteractionId=InteractionItem.Id  )  "
731,AISystem_Category_Talent_UpdateChildId,"CREATE PROCEDURE [dbo].[AISystem_Category_Talent_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Talent  SET    ChildId = @ChildId  WHERE Id = @Id    "
732,CoreMessaging_DeleteUserNotifications,"CREATE PROCEDURE dbo.[CoreMessaging_DeleteUserNotifications]   @UserId INT,   @PortalId INT  AS  BEGIN   DELETE FROM dbo.CoreMessaging_Messages   WHERE PortalId = @PortalId     AND NotificationTypeID IS NOT NULL     AND MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_MessageRecipients WHERE UserID = @UserId)     SELECT @@ROWCOUNT  END"
733,AISystem_UserInfo_GetsListByUserId,create proc [dbo].[AISystem_UserInfo_GetsListByUserId]  @UserID int  as  Select * from AISystem_UserInfo where UserID = @UserID    SET QUOTED_IDENTIFIER OFF
734,AddHeirarchicalTerm,"CREATE PROCEDURE dbo.[AddHeirarchicalTerm]    @VocabularyID  int,   @ParentTermID  int,   @Name    nvarchar(250),   @Description  nvarchar(2500),   @Weight    int,   @CreatedByUserID int  AS     DECLARE @Left int      -- Get Left value of Sibling that we are inserting before   SET @Left = (SELECT TOP 1 TermLeft FROM dbo.Taxonomy_Terms         WHERE VocabularyID = @VocabularyID          AND ParentTermID = @ParentTermID         AND Name > @Name        ORDER BY Name)           -- Term is to be inserted at end of sibling list so get the Right value of the parent, which will become our new left value         IF @Left IS NULL    SET @Left = (SELECT TermRight FROM dbo.Taxonomy_Terms          WHERE VocabularyID = @VocabularyID           AND TermID = @ParentTermID)             -- Left is still null means this is the first term in this vocabulary - set the Left to 1   IF @Left IS NULL    SET @Left = 1             BEGIN TRANSACTION    -- Update Left values for all items that are after new term    UPDATE dbo.Taxonomy_Terms      SET TermLeft = TermLeft + 2      WHERE TermLeft >= @Left      AND VocabularyID = @VocabularyID      IF @@ERROR = 0     BEGIN     -- Update Right values for all items that are after new term      UPDATE dbo.Taxonomy_Terms        SET TermRight = TermRight + 2        WHERE TermRight >= @Left        AND VocabularyID = @VocabularyID        IF @@ERROR = 0       BEGIN         -- Insert new term         INSERT INTO dbo.Taxonomy_Terms (          VocabularyID,          ParentTermID,          [Name],          Description,          Weight,          TermLeft,          TermRight,          CreatedByUserID,          CreatedOnDate,          LastModifiedByUserID,          LastModifiedOnDate         )           VALUES (          @VocabularyID,          @ParentTermID,          @Name,          @Description,          @Weight,          @Left,          @Left + 1,          @CreatedByUserID,          getdate(),          @CreatedByUserID,          getdate()         )           SELECT SCOPE_IDENTITY()           IF @@ERROR = 0          BEGIN           COMMIT TRANSACTION          END         ELSE          BEGIN           -- Rollback the transaction           ROLLBACK TRANSACTION            END        END      ELSE       BEGIN        -- Rollback the transaction        ROLLBACK TRANSACTION       END     END    ELSE     BEGIN      -- Rollback the transaction      ROLLBACK TRANSACTION       END"
735,SecurityAnalyzer_GetModulesHasHeaderFooter,"CREATE PROCEDURE dbo.[SecurityAnalyzer_GetModulesHasHeaderFooter] AS BEGIN     SELECT * FROM dbo.[TabModules]         WHERE (Header IS NOT NULL AND CONVERT(NVARCHAR(MAX), Header) <> N'') OR (Footer IS NOT NULL AND CONVERT(NVARCHAR(MAX), Footer) <> N'') END"
736,AIElearning_ClassTopic_GetParentId,"CREATE proc [dbo].[AIElearning_ClassTopic_GetParentId]   @pageIndex int,  @pageSize int,    @parentId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa    -- m? bài b?nh lu?n cha  if(@parentId>-1)  set @Condition=@Condition+' AND ParentId='+str(@parentId)  --    exec('  WITH #AIElearning_ClassTopic AS(    SELECT ROW_NUMBER() OVER (ORDER BY UpdatedDate) AS RowNumber,     *     from AIElearning_ClassTopic '+@Condition+'  AND id not in (select top(1) id  from AIElearning_ClassTopic where ParentId='+@parentId+'   order by id desc)    )     SELECT     *   FROM #AIElearning_ClassTopic   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
737,AdjustedReferrer,"CREATE FUNCTION dbo.[AdjustedReferrer](   @Referrer   nVarChar(2000),   @PortalAlias nVarChar( 255)   )  RETURNS nVarChar(2000)  AS  BEGIN   RETURN CASE     WHEN @Referrer LIKE '%' + @PortalAlias + '%' THEN Null     ELSE @Referrer   END  END"
738,AIElearning_Monney_Orther_Class_DeleteClassid,create proc [dbo].[AIElearning_Monney_Orther_Class_DeleteClassid]  @classid int  as  delete from AIElearning_Monney_Orther_Class where Classid=@classid  
739,DeleteContentWorkflowState,CREATE PROCEDURE dbo.[DeleteContentWorkflowState]   @StateID int  AS      DELETE FROM dbo.ContentWorkflowStates      WHERE StateID = @StateID
740,AISystem_JobTitle_Title_GetsBySearchCount,"CREATE PROC [dbo].[AISystem_JobTitle_Title_GetsBySearchCount]      @KeyWord NVARCHAR(MAX),      @UnitCode NVARCHAR(50),      @JobTitleCode NVARCHAR(50)  AS   -- AISystem_JobTitle_Title_GetsBySearchCount '', 28, ''  DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' and (Title like N''%' + @KeyWord + '%'') '  IF ( @UnitCode <> '' )      SET @condition = @condition + ' And UnitCode = N''' + @UnitCode + ''''  IF ( @JobTitleCode <> '' AND @JobTitleCode <> '-1' )      SET @condition = @condition + ' And JobTitleCode = N''' + @JobTitleCode + ''''  EXEC('   select COUNT(*) from AISystem_JobTitle_Title where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF"
741,AISystem_Category_TrainingField_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_TrainingField_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_TrainingField WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_TrainingField (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TrainingField WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TrainingField WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TrainingField WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TrainingField WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TrainingField WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_TrainingField         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_TrainingField (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()  "
742,AISystem_Category_LaborContract_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_LaborContract_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_LaborContract WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_LaborContract (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_LaborContract WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_LaborContract WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_LaborContract WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_LaborContract WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_LaborContract WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_LaborContract         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_LaborContract (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()                "
743,CKE_DeleteAllPageSettings,CREATE PROCEDURE dbo.CKE_DeleteAllPageSettings   @PortalID varchar  AS  SET NOCOUNT ON  DELETE  hs   FROM dbo.CKE_Settings hs   INNER JOIN    dbo.Tabs t  ON t.PortalID = @PortalID    Where SettingName like 'DNNCKT#%' AND t.TabID  = t.TabID
744,SeqNavAttemptCorrectResponseView,"  -- Create a function that implements the SeqNavAttemptCorrectResponseView view  CREATE FUNCTION [SeqNavAttemptCorrectResponseView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT CorrectResponseItem.Id CorrectResponseId, AttemptItem.Id AttemptId, CorrectResponseItem.InteractionId, CorrectResponseItem.ResponsePattern      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN CorrectResponseItem ON CorrectResponseItem.InteractionId=InteractionItem.Id  )  "
745,Messaging_UpdateMessage,"CREATE PROCEDURE dbo.[Messaging_UpdateMessage]      @MessageID bigint,     @ToUserID int,     @ToRoleID int,     @Status int,     @Subject nvarchar(max),     @Body nvarchar(max),     @Date datetime,     @ReplyTo bigint,     @AllowReply bit,     @SkipPortal bit  AS   UPDATE dbo.Messaging_Messages   SET ToUserID=@ToUserID,     ToRoleID=@ToRoleID,     Status=@Status,     Subject=@Subject,     Body=@Body,     Date= @Date,    ReplyTo= @ReplyTo,    AllowReply = @AllowReply,    SkipPortal = @SkipPortal   WHERE MessageID=@MessageID"
746,UpdateLanguagePack,"CREATE PROCEDURE dbo.[UpdateLanguagePack]   @LanguagePackID   int,   @PackageID       int,   @LanguageID       int,   @DependentPackageID  int,   @LastModifiedByUserID int    AS   UPDATE dbo.LanguagePacks    SET     PackageID = @PackageID,     LanguageID = @LanguageID,     DependentPackageID = @DependentPackageID,     [LastModifiedByUserID] = @LastModifiedByUserID,      [LastModifiedOnDate] = GETDATE()   WHERE LanguagePackID = @LanguagePackID     SELECT @LanguagePackID"
747,AIElearning_Answer_DeleteAllByQuestionId,  Create PROC [dbo].[AIElearning_Answer_DeleteAllByQuestionId]  @QuestionId int  AS  -- AIElearning_Answer_DeleteAllByQuestionId 1032  DELETE FROM [dbo].[AIElearning_Answer] WHERE QuestionID=@QuestionId     
748,AISystem_Partner_CheckCode,CREATE proc [dbo].[AISystem_Partner_CheckCode]  @code nvarchar(250)  as  -- AISystem_Partner_CheckCode 'DT1'    select count(*) from AISystem_Partner where Code = @code  
749,SecurityAnalyzer_GetModifiedSettings,"CREATE PROCEDURE dbo.[SecurityAnalyzer_GetModifiedSettings] AS BEGIN     SELECT TOP 20             PortalID ,             SettingName ,             SettingValue ,             LastModifiedByUserID ,             LastModifiedOnDate     FROM    dbo.[PortalSettings]     ORDER BY LastModifiedOnDate DESC;      SELECT TOP 20             SettingName ,             SettingValue ,             LastModifiedByUserID ,             LastModifiedOnDate     FROM    dbo.[HostSettings]     ORDER BY LastModifiedOnDate DESC;      SELECT TOP 20             t.TabID ,             t.PortalID ,             s.SettingName ,             s.SettingValue ,             s.LastModifiedByUserID ,             s.LastModifiedOnDate     FROM    dbo.[TabSettings] s             INNER JOIN dbo.[Tabs] t ON t.TabID = s.TabID     ORDER BY s.LastModifiedOnDate DESC;      SELECT TOP 20             T.*     FROM    ( SELECT    'Module Settings' as Type,                         m.ModuleID ,                         m.PortalID ,                         SettingName ,                         SettingValue ,                         ms.LastModifiedByUserID ,                         ms.LastModifiedOnDate               FROM      dbo.[ModuleSettings] ms                         INNER JOIN dbo.[Modules] m ON m.ModuleID = ms.ModuleID               UNION               ( SELECT  'TabModule Settings' as Type,                         tm.ModuleID ,                         m.PortalID ,                         ts.SettingName ,                         ts.SettingValue ,                         ts.LastModifiedByUserID ,                         ts.LastModifiedOnDate                 FROM    dbo.[TabModuleSettings] ts                         INNER JOIN dbo.[TabModules] tm ON tm.TabModuleID = ts.TabModuleID                         INNER JOIN dbo.[Modules] m ON m.ModuleID = tm.ModuleID               )             ) T             INNER JOIN dbo.[Modules] m ON m.ModuleID = T.ModuleID     ORDER BY T.LastModifiedOnDate DESC; END"
750,AIElearning_ClassTopic_GetParentIdTop1,CREATE proc [dbo].[AIElearning_ClassTopic_GetParentIdTop1]   @ParentId int  as  select top(1)*  from AIElearning_ClassTopic where ParentId=@ParentId order by id  
751,AddProfile,"create procedure dbo.AddProfile    @UserID        int,   @PortalID      int    as    insert into dbo.Profile (    UserId,    PortalId,    ProfileData,    CreatedDate  )  values (    @UserID,    @PortalID,    '',    getdate()  )"
752,AIElearning_Monney_Orther_Class_GetsbyClassid,create proc [dbo].[AIElearning_Monney_Orther_Class_GetsbyClassid]  @classid int  as  select * from AIElearning_Monney_Orther_Class where Classid=@classid  
753,GetContentWorkflowState,"CREATE PROCEDURE dbo.[GetContentWorkflowState]   @StateID int  AS      SELECT    [StateID],    [WorkflowID],    [StateName],    [Order],    [IsActive],    [SendEmail],    [SendMessage],    [IsDisposalState],    [OnCompleteMessageSubject],    [OnCompleteMessageBody],    [OnDiscardMessageSubject],    [OnDiscardMessageBody]   FROM dbo.ContentWorkflowStates      WHERE StateID = @StateID"
754,AISystem_JobTitle_Title_GetsBySearch,"CREATE PROC [dbo].[AISystem_JobTitle_Title_GetsBySearch]      @pageIndex INT,      @pageSize INT,      @KeyWord NVARCHAR(MAX),      @UnitCode NVARCHAR(50),      @JobTitleCode NVARCHAR(50)  AS   -- AISystem_JobTitle_Title_GetsBySearch 1,10,'', '45002501', '96000023'  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' and (Title like N''%' + @KeyWord + '%'') '  IF ( @UnitCode <> '' )      SET @condition = @condition + ' And UnitCode = N''' + @UnitCode + ''''  IF ( @JobTitleCode <> '' AND @JobTitleCode <> '-1' )      SET @condition = @condition + ' And JobTitleCode = N''' + @JobTitleCode + ''''  EXEC('   WITH #AISystem_JobTitle_Title AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *   from AISystem_JobTitle_Title where ' + @condition +' )    SELECT *   FROM #AISystem_JobTitle_Title   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
755,AISystem_Category_LaborContract_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_LaborContract_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_LaborContract    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo              "
756,Mobile_DeleteRedirectionRule,CREATE PROCEDURE dbo.[Mobile_DeleteRedirectionRule] @Id INT  AS       DELETE  FROM dbo.Mobile_RedirectionRules      WHERE   Id = @id
757,CKE_DeleteCurrentPageSettings,CREATE PROCEDURE dbo.CKE_DeleteCurrentPageSettings   @TabID varchar  AS  SET NOCOUNT ON  delete from dbo.CKE_Settings where SettingName like 'DNNCKT#' + @TabID + '%'
758,SeqNavAttemptInteractionObjectiveView,"  -- Create a function that implements the SeqNavAttemptInteractionObjectiveView view  CREATE FUNCTION [SeqNavAttemptInteractionObjectiveView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT InteractionObjectiveItem.Id InteractionObjectiveId, AttemptItem.Id AttemptId, InteractionObjectiveItem.AttemptObjectiveId, InteractionObjectiveItem.InteractionId      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN InteractionObjectiveItem ON InteractionObjectiveItem.InteractionId=InteractionItem.Id  )  "
759,UpdateOnlineUser,"CREATE PROCEDURE dbo.UpdateOnlineUser  @UserID  INT,  @PortalID  INT,  @TabID   INT,  @LastActiveDate DATETIME   AS  BEGIN   IF EXISTS (SELECT UserID FROM dbo.Users WHERE UserID = @UserID)   BEGIN    IF EXISTS (SELECT UserID FROM dbo.UsersOnline WHERE UserID = @UserID and PortalID = @PortalID)     UPDATE       dbo.UsersOnline     SET       TabID = @TabID,      LastActiveDate = @LastActiveDate     WHERE      UserID = @UserID      and       PortalID = @PortalID    ELSE     INSERT INTO      dbo.UsersOnline      (UserID, PortalID, TabID, CreationDate, LastActiveDate)      VALUES      (@UserID, @PortalID, @TabID, GetDate(), @LastActiveDate)   END    END"
760,AIElearning_Monney_Class_GetsbyClassid,create proc [dbo].[AIElearning_Monney_Class_GetsbyClassid]  @Classid int  as  select * from AIElearning_Monney_Class where Classid=@Classid  
761,AIElearning_Class_MarkOffLine_Code_GetsbyCode,"CREATE proc [dbo].[AIElearning_Class_MarkOffLine_Code_GetsbyCode]  @code nvarchar(250),  @classid int  as  select * from AIElearning_Class_MarkOffLine_Code where Code=@code and ClassId=@classid  "
762,CoreMessaging_CountTotalConversations,"CREATE PROCEDURE dbo.[CoreMessaging_CountTotalConversations]   @UserID int,   @PortalID int  AS  BEGIN   SELECT COUNT(DISTINCT M.ConversationID) AS TotalConversations   FROM dbo.[CoreMessaging_Messages] M   JOIN dbo.[CoreMessaging_MessageRecipients] MR ON M.MessageID = MR.MessageID   WHERE NotificationTypeID IS NULL AND PortalID = @PortalID AND Archived = 0 AND UserID = @UserID  END"
763,vw_Profile,"CREATE VIEW dbo.[vw_Profile]  AS   SELECT         UP.UserID,     PD.PortalID,     PD.PropertyName,     CASE WHEN PropertyText IS NULL THEN PropertyValue ELSE PropertyText END AS PropertyValue,     UP.Visibility,    UP.ExtendedVisibility,    UP.LastUpdatedDate,    PD.PropertyDefinitionID   FROM dbo.[UserProfile] AS UP     INNER JOIN dbo.[ProfilePropertyDefinition] AS PD ON PD.PropertyDefinitionID = UP.PropertyDefinitionID"
764,Personabar_GetUsersByUserIds,"CREATE PROCEDURE dbo.Personabar_GetUsersByUserIds (  @PortalId INT,  @UserIds nvarchar(max) -- comma separated list of UserIds ) AS BEGIN   SELECT DISTINCT U.UserID, U.Username, U.DisplayName, U.Email, U.CreatedOnDate, U.IsDeleted, U.Authorised   FROM dbo.vw_Users U WITH (NOLOCK)   INNER JOIN (Select RowValue FROM dbo.ConvertListToTable(',',@UserIds)) UserIds    ON U.UserID = UserIds.RowValue   INNER JOIN dbo.UserPortals UP WITH (NOLOCK)    ON U.UserID = UP.UserId   WHERE UP.PortalId = @PortalId END"
765,UpdateRole,"CREATE PROCEDURE dbo.UpdateRole   @RoleId     int,   @RoleGroupId   int,   @RoleName    nvarchar(50),   @Description   nvarchar(1000),   @ServiceFee    money,   @BillingPeriod   int,   @BillingFrequency  char(1),   @TrialFee    money,   @TrialPeriod   int,   @TrialFrequency   char(1),   @IsPublic    bit,   @AutoAssignment   bit,   @RSVPCode    nvarchar(50),   @IconFile    nvarchar(100),   @LastModifiedByUserID int,   @Status     int,   @SecurityMode   int,   @IsSystemRole   bit  AS   UPDATE dbo.Roles   SET    RoleGroupId   = @RoleGroupId,       RoleName    = @RoleName,       Description   = @Description,       ServiceFee   = @ServiceFee,       BillingPeriod  = @BillingPeriod,       BillingFrequency  = @BillingFrequency,       TrialFee    = @TrialFee,       TrialPeriod   = @TrialPeriod,       TrialFrequency  = @TrialFrequency,       IsPublic    = @IsPublic,       AutoAssignment  = @AutoAssignment,       RSVPCode    = @RSVPCode,       IconFile    = @IconFile,       LastModifiedByUserID = @LastModifiedByUserID,       LastModifiedOnDate  = getdate(),       Status    = @Status,       SecurityMode   = @SecurityMode,       IsSystemRole   = @IsSystemRole   WHERE  RoleId = @RoleId"
766,AIElearning_Monney_User_GetsBySearch,"  CREATE proc [dbo].[AIElearning_Monney_User_GetsBySearch]   @classid int,  @username nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- mã khóa học    if(@classid>-1)  set @Condition=@Condition+' AND Classid='+str(@classid)  -- tài khoản  if(@classid<>'')  set @Condition=@Condition+' AND username=  '''+@username+''''    exec(' SELECT  * from AIElearning_Monney_User '+@Condition+'  ')    SET QUOTED_IDENTIFIER OFF     "
767,GetContentTypes,CREATE PROCEDURE dbo.[GetContentTypes]   AS   SELECT *   FROM dbo.ContentTypes
768,Split,"CREATE FUNCTION [dbo].[Split]   (      -- Add the parameters for the function here      @myString varchar(500)       )  RETURNS   @ReturnTable TABLE   (      -- Add the column definitions for the TABLE variable here      --[id] [int] IDENTITY(1,1) NOT NULL,      [SplitItem] [varchar](50) NULL  )  AS  BEGIN   Declare @iSpaces INT   Declare @part varchar(50)      --initialize spaces   Select @iSpaces = charindex(',',@myString,0)   While @iSpaces > 0      BEGIN    Select @part = substring(@myString,0,charindex(',',@myString,0))     Insert Into @ReturnTable(SplitItem)     Select @part     Select @myString = substring(@mystring,charindex(',',@myString,0)+ len(','),len(@myString) - charindex(',',@myString,0))     Select @iSpaces = charindex(',',@myString,0)   END         If len(@myString) > 0      Insert Into @ReturnTable      Select @myString            RETURN   END    "
769,GetContentWorkflowStates,"CREATE PROCEDURE dbo.[GetContentWorkflowStates]   @WorkflowID int  AS      SELECT     [StateID],    [WorkflowID],    [StateName],    [Order],    [IsActive],    [SendEmail],    [SendMessage],    [IsDisposalState],    [OnCompleteMessageSubject],    [OnCompleteMessageBody],    [OnDiscardMessageSubject],    [OnDiscardMessageBody]   FROM dbo.ContentWorkflowStates      WHERE WorkflowID = @WorkflowID"
770,AISystem_Category_LaborContract_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_LaborContract_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_LaborContract_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_LaborContract.Id,      0,      AISystem_Category_LaborContract.ParentId,      AISystem_Category_LaborContract.Title,      STR(AISystem_Category_LaborContract.OrderNo),      AISystem_Category_LaborContract.Title,      AISystem_Category_LaborContract.Code          FROM      AISystem_Category_LaborContract    WHERE      (AISystem_Category_LaborContract.Status=@Status OR @Status = -1)       AND (AISystem_Category_LaborContract.Id = @ParentId)      AND AISystem_Category_LaborContract.LanguageId = @LanguageId      AND AISystem_Category_LaborContract.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_LaborContract.Id,      0,      AISystem_Category_LaborContract.ParentId,      AISystem_Category_LaborContract.Title,      STR(AISystem_Category_LaborContract.OrderNo),      AISystem_Category_LaborContract.Title,      AISystem_Category_LaborContract.Code          FROM      AISystem_Category_LaborContract    WHERE      (AISystem_Category_LaborContract.Status=@Status OR @Status = -1)       AND (AISystem_Category_LaborContract.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_LaborContract.ParentId IS NULL or AISystem_Category_LaborContract.ParentId <=0))      AND AISystem_Category_LaborContract.LanguageId = @LanguageId      AND AISystem_Category_LaborContract.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_LaborContract  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction                    "
771,DeleteContentItem,CREATE PROCEDURE dbo.[DeleteContentItem]    @ContentItemId   int  AS   DELETE FROM dbo.ContentItems   WHERE ContentItemId = @ContentItemId
772,CKE_DeleteAllChildPageSettings,CREATE PROCEDURE dbo.CKE_DeleteAllChildPageSettings   @TabID int  AS  SET NOCOUNT ON  DELETE  hs   FROM dbo.CKE_Settings hs   INNER JOIN    dbo.Tabs t  ON t.ParentId = @TabID   Where SettingName like 'DNNCKT#%' AND t.TabID  = t.TabID
773,SeqNavAttemptExtensionDataView,"  -- Create a function that implements the SeqNavAttemptExtensionDataView view  CREATE FUNCTION [SeqNavAttemptExtensionDataView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ExtensionDataItem.Id ExtensionDataId, AttemptItem.Id AttemptId, ExtensionDataItem.Name, ExtensionDataItem.StringValue, ExtensionDataItem.IntValue, ExtensionDataItem.BoolValue, ExtensionDataItem.DoubleValue, ExtensionDataItem.DateTimeValue, ExtensionDataItem.AttachmentGuid, ExtensionDataItem.ActivityAttemptId      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN ExtensionDataItem ON ExtensionDataItem.ActivityAttemptId=ActivityAttemptItem.Id      WHERE ExtensionDataItem.AttemptObjectiveId IS NULL AND      ExtensionDataItem.InteractionId IS NULL  )  "
774,AISystem_Category_Talent_UpdateWithPosition,"CREATE PROCEDURE [dbo].[AISystem_Category_Talent_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Talent WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Talent WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Talent WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Talent WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Talent WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Talent         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Talent SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
775,DeleteUserRole,"create procedure dbo.DeleteUserRole    @UserID int,  @RoleId int    as    delete  from dbo.UserRoles  where  UserId = @UserID  and    RoleId = @RoleId"
776,GetServers,"CREATE PROCEDURE dbo.GetServers   AS   SELECT *   FROM dbo.WebServers   ORDER BY ServerName, IISAppName"
777,TotalTime_SumTime,"  CREATE function [dbo].[TotalTime_SumTime]  (  @Username nvarchar(150),  @year int  )  returns float  as  begin      DECLARE  @SumTime float      if exists( select * from AIElearning_Class  class  inner join AIElearning_ClassUser classuser  on class.id=classuser.ClassId  where classuser.Username=@Username and YEAR(class.StartDateClass)=@year and classuser.LearnStatus=2)    Set @SumTime=(select sum(class.Offline_Time) from AIElearning_Class  class  inner join AIElearning_ClassUser classuser  on class.id=classuser.ClassId  where classuser.Username=@Username and YEAR(class.StartDateClass)=@year and classuser.LearnStatus=2)  else  Set @SumTime=0    return @SumTime  end  --  "
778,AIElearning_Question_Media_GetsByQuestionId,"  CREATE proc [dbo].[AIElearning_Question_Media_GetsByQuestionId]  @questionId int  as  -- AIElearning_Question_Media_GetsByQuestionId 1,10,7  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@questionId>-1)   set @Condition=@Condition+' AND QuestionId='+str(@questionId)    exec('   SELECT ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber,     *     from AIElearning_Question_Media     where '+@Condition)    SET QUOTED_IDENTIFIER OFF   "
779,GetScheduleByEvent,"CREATE PROCEDURE dbo.[GetScheduleByEvent]   @EventName varchar(50),   @Server  varchar(150)  AS      SELECT S.*   FROM dbo.[Schedule] S   WHERE S.AttachToEvent = @EventName    AND (@Server IS NULL OR ISNULL(s.Servers, '') = '' OR ',' + s.Servers + ',' LIKE '%,' + @Server + ',%')"
780,AIElearning_class_GetTemporary,CREATE proc [dbo].[AIElearning_class_GetTemporary]  @chuoi nvarchar(250)  as    select * from AIElearning_Class where Id in (select * from [dbo].Split(@chuoi))
781,GetContentWorkflowStatePermission,CREATE PROCEDURE dbo.[GetContentWorkflowStatePermission]   @WorkflowStatePermissionID int  AS      SELECT *      FROM dbo.vw_ContentWorkflowStatePermissions      WHERE WorkflowStatePermissionID = @WorkflowStatePermissionID
782,AIElearning_Class_UnitChild_DeleteByClassid,create PROC [dbo].[AIElearning_Class_UnitChild_DeleteByClassid]  @Classid int  AS  DELETE FROM AIElearning_Class_UnitChild  WHERE        (Classid = @Classid)  
783,AISystem_Category_LaborContract_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_LaborContract_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_LaborContract_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_LaborContract AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')                "
784,CKE_DeleteAllPortalSettings,CREATE PROCEDURE dbo.CKE_DeleteAllPortalSettings   @PortalID varchar  AS  SET NOCOUNT ON  delete from dbo.CKE_Settings where SettingName like 'DNNCKP#' + @PortalID + '%'
785,SeqNavAttemptObjectiveExtensionDataView,"  -- Create a function that implements the SeqNavAttemptObjectiveExtensionDataView view  CREATE FUNCTION [SeqNavAttemptObjectiveExtensionDataView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ExtensionDataItem.Id ExtensionDataId, ExtensionDataItem.AttemptObjectiveId, AttemptItem.Id AttemptId, ExtensionDataItem.Name, ExtensionDataItem.StringValue, ExtensionDataItem.IntValue, ExtensionDataItem.BoolValue, ExtensionDataItem.DoubleValue, ExtensionDataItem.DateTimeValue, ExtensionDataItem.AttachmentGuid, ExtensionDataItem.AttachmentValue      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN AttemptObjectiveItem ON AttemptObjectiveItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN ExtensionDataItem ON ExtensionDataItem.AttemptObjectiveId=AttemptObjectiveItem.Id      WHERE ExtensionDataItem.InteractionId IS NULL AND      ExtensionDataItem.AttemptObjectiveId IS NOT NULL  )  "
786,AISystem_Talent_GetByCode,"CREATE PROC [dbo].[AISystem_Talent_GetByCode] @code NVARCHAR(50)  AS -- AISystem_Talent_GetByCode 'NLC6'  CREATE TABLE #Talent_Temp      ( [Id] INT,        [Limit] INT,        [UnitCode] NVARCHAR(50),        [CateTalentId] INT,        [Title] NVARCHAR(250),        [Code] NVARCHAR(50),        [Description] NVARCHAR(MAX),        [Type] INT,        [IsShare] INT,        [CreateDate] DATETIME,        [ChildTalentId] INT )  -- Lay nang luc (cha)  INSERT  INTO #Talent_Temp          SELECT  t.Id, t.Limit, t.UnitCode, t.CateTalentId, t.Title, t.Code, t.Description, t.Type, t.IsShare, t.CreateDate, 0          FROM    dbo.AISystem_Talent t          WHERE   t.Code = @code  -- Lay nang luc con  IF ( @@ROWCOUNT = 0 )      BEGIN          INSERT  INTO #Talent_Temp                  SELECT  t.Id, t.Limit, t.UnitCode, t.CateTalentId, t.Title, t.Code, t.Description, t.Type, t.IsShare, t.CreateDate, tc.Id                  FROM    dbo.AISystem_Talent_Child tc                          INNER JOIN dbo.AISystem_Talent t ON tc.TalentId = t.Id                  WHERE   tc.Code = @code      END    SELECT * FROM #Talent_Temp  DROP TABLE #Talent_Temp"
787,AIElearning_LearnRule_Level_Table_Deleteall,CREATE proc [dbo].[AIElearning_LearnRule_Level_Table_Deleteall]  @TableId int  as  Delete from AIElearning_LearnRule_Level_Table where TableId=@TableId  
788,DeletePortalInfo,CREATE PROCEDURE dbo.DeletePortalInfo   @PortalID int    AS   /* Delete all the Portal Modules */   DELETE   FROM dbo.Modules   WHERE PortalId = @PortalID     /* Delete all the Portal Skins */   DELETE   FROM dbo.Packages   WHERE  PortalId = @PortalID     /* Delete Portal */   DELETE   FROM dbo.Portals   WHERE  PortalId = @PortalID
789,vw_MasterPortals,"CREATE VIEW dbo.[vw_MasterPortals]  AS   SELECT  P.PortalID,     P.PortalGroupID,     IsNull(G.MasterPortalID, P.PortalID) AS MasterPortalID   FROM      dbo.[Portals] AS P   LEFT JOIN dbo.[PortalGroups] AS G ON P.PortalGroupID = G.PortalGroupID"
790,AISystem_JobTitle_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_JobTitle_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_JobTitle_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_Talent  WHERE   ParentId = @parentId"
791,AIElearning_UserTest_GetMaxMark,"CREATE PROC AIElearning_UserTest_GetMaxMark  @UserId INT,  @ClassItemId INT  AS  SELECT ISNULL(MAX(Mark),0) FROM AIElearning_UserTest WHERE UserId=@UserId and ClassItemId=@ClassItemId"
792,UpdateTimeClassUser,"CREATE proc [dbo].[UpdateTimeClassUser]  @ClassId int,  @I int,  @length int    AS  BEGIN         DECLARE  @UnitCode nvarchar(Max);   DECLARE @Username nvarchar(Max);   DECLARE @Year  int;      SET @Year=(select year(StartDateClass) from AIElearning_Class where id=@ClassId)       WHILE (@I <= @length)       BEGIN    --Username    Set @Username=(select top 1 Username FROM (SELECT  top(@I) Username,id from AIElearning_ClassUser       where Classid=@ClassId order by id desc)A order by id asc);    ----Unitcode    Set @UnitCode=(select top 1 Unitcode FROM  AISystem_UserInfo where Username=@Username)    --    if exists(select * from AIElearning_ClassUser_TotalTime where   ReportYear=@Year and Username=@Username)    Update AIElearning_ClassUser_TotalTime    Set TotalTime=dbo.TotalTime_SumTime(@Username,@Year)    where UnitCode=@UnitCode and ReportYear=@Year and Username=@Username    else     insert into AIElearning_ClassUser_TotalTime    values (@Username,@Year,@UnitCode,dbo.TotalTime_SumTime(@Username,@Year),getdate())    --set i++    SET @I = @I+1    --       END  END  "
793,AIElearning_Reimburse_GetsBySearchCount,CREATE proc [dbo].[AIElearning_Reimburse_GetsBySearchCount]    as exec('select COUNT(Id) from AIElearning_Reimburse ')  
794,GetFolderPermissionsByFolderPath,"CREATE PROCEDURE dbo.GetFolderPermissionsByFolderPath      @PortalID int,   @FolderPath nvarchar(300),    @PermissionID int    AS  SELECT *  FROM dbo.vw_FolderPermissions    WHERE ((FolderPath = @FolderPath       AND ((PortalID = @PortalID) OR (PortalID IS NULL AND @PortalID IS NULL)))     OR (FolderPath IS NULL AND PermissionCode = 'SYSTEM_FOLDER'))   AND (PermissionID = @PermissionID OR @PermissionID = -1)"
795,GetContentWorkflowStatePermissions,CREATE PROCEDURE dbo.[GetContentWorkflowStatePermissions]  AS      SELECT *      FROM dbo.vw_ContentWorkflowStatePermissions
796,AISystem_Category_TrainingField_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_TrainingField_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_TrainingField    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo  "
797,AISystem_Category_LaborContract_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_LaborContract_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_LaborContract_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_LaborContract where   Code = @Code  SET QUOTED_IDENTIFIER OFF               
798,GetList,"CREATE procedure dbo.[GetList]   @ListName nvarchar(50),   @ParentKey nvarchar(150),   @PortalID int  AS  SELECT DISTINCT    ListName,    [Level],    DefinitionID,    PortalID,    SystemList,    EntryCount,    ParentID,    ParentKey,    Parent,    ParentList,    MaxSortOrder   FROM dbo.vw_Lists   WHERE ListName = @ListName    AND ParentKey = @ParentKey    AND PortalID = @PortalID   ORDER BY [Level], ListName"
799,CKE_GetEditorHostSettings,"CREATE PROCEDURE dbo.CKE_GetEditorHostSettings   AS  SET NOCOUNT ON     SELECT SettingName,         SettingValue     FROM dbo.CKE_Settings"
800,SeqNavAttemptInteractionExtensionDataView,"  -- Create a function that implements the SeqNavAttemptInteractionExtensionDataView view  CREATE FUNCTION [SeqNavAttemptInteractionExtensionDataView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT ExtensionDataItem.Id ExtensionDataId, ExtensionDataItem.InteractionId, AttemptItem.Id AttemptId, ExtensionDataItem.Name, ExtensionDataItem.StringValue, ExtensionDataItem.IntValue, ExtensionDataItem.BoolValue, ExtensionDataItem.DoubleValue, ExtensionDataItem.DateTimeValue, ExtensionDataItem.AttachmentGuid, ExtensionDataItem.AttachmentValue      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN ExtensionDataItem ON ExtensionDataItem.InteractionId=InteractionItem.Id      WHERE ExtensionDataItem.AttemptObjectiveId IS NULL AND      ExtensionDataItem.InteractionId IS NOT NULL  )  "
801,AISystem_JobTitle_Talent_GetByTalentIdAndLevelId,"CREATE PROC AISystem_JobTitle_Talent_GetByTalentIdAndLevelId  @jobTitleId INT,  @talentId int,  @talentLevelId INT,  @isChild int  AS   -- AISystem_JobTitle_Talent_GetByTalentIdAndLevelId -1,21,-1,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@jobTitleId > -1 )   set @Condition=@Condition+' AND JobTitleId='+str(@jobTitleId)  if(@talentId > -1)   set @Condition=@Condition+' AND TalentId='+str(@talentId)  if(@talentLevelId > -1)   set @Condition=@Condition+' AND TalentLevelId='+str(@talentLevelId)  if(@isChild > -1)   set @Condition=@Condition+' AND IsChild='+STR(@isChild)  exec('  WITH #AISystem_JobTitle_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *   from AISystem_JobTitle_Talent where '+@Condition+' )    SELECT     *   FROM #AISystem_JobTitle_Talent  ')              "
802,AISystem_UserPermissionScope_DeleteByAIRoleId,"CREATE PROC  [dbo].[AISystem_UserPermissionScope_DeleteByAIRoleId]  @UserId INT,  @AIRoleId INT,  @ScopeCode NVARCHAR(150)  AS  DELETE FROM AISystem_UserPermissionScope WHERE UserId=@UserId AND AIRoleId=@AIRoleId AND (ScopeCode=@ScopeCode OR @ScopeCode='0')"
803,CoreMessaging_SaveMessage,"CREATE PROCEDURE dbo.[CoreMessaging_SaveMessage]      @MessageID INT,   @PortalID INT,   @To nvarchar(2000),   @From nvarchar(200),      @Subject nvarchar(400),      @Body nvarchar(max),      @ConversationID int,      @ReplyAllAllowed bit,      @SenderUserID int,   @CreateUpdateUserID INT        AS       IF ( @MessageID = -1 )           BEGIN              INSERT dbo.CoreMessaging_Messages(                             [PortalID],       [To],       [From],            [Subject],       [Body],       [ConversationID],       [ReplyAllAllowed],       [SenderUserID],                      [CreatedByUserID],                      [CreatedOnDate],                      [LastModifiedByUserID],                      [LastModifiedOnDate]                                 )              VALUES  (                     @PortalID,       @To,       @From,          @Subject,          @Body,       NULL,       @ReplyAllAllowed,       @SenderUserID,                      @CreateUpdateUserID , -- CreatedBy - int                      GETUTCDATE(), -- CreatedOn - datetime                      @CreateUpdateUserID , -- LastModifiedBy - int                      GETDATE() -- LastModifiedOn - datetime                                 )                                    SELECT  @MessageID = SCOPE_IDENTITY()     UPDATE  dbo.CoreMessaging_Messages SET [ConversationID] = @MessageID WHERE [MessageID] = @MessageID           END      ELSE           BEGIN              UPDATE  dbo.CoreMessaging_Messages              SET     [To] = @To,       [From] = @From,       [Subject] = @Subject,          [Body] = @Body,       [ConversationID] = @ConversationID,       [ReplyAllAllowed] = @ReplyAllAllowed,       [SenderUserID] = SenderUserID,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   MessageID = @MessageID          END                SELECT  @MessageID"
804,AIElearning_UserTest_GetAVGMark,"CREATE PROC AIElearning_UserTest_GetAVGMark  @UserId INT,  @ClassItemId INT  AS  SELECT ISNULL(AVG(Mark),0) FROM AIElearning_UserTest WHERE UserId=@UserId and ClassItemId=@ClassItemId"
805,AIElearning_ClassLecturers_TotalTime_GetUnit,"CREATE proc [dbo].[AIElearning_ClassLecturers_TotalTime_GetUnit]  @UnitCode nvarchar(50),  @Year int  as  select * from AIElearning_ClassLecturers_TotalTime where UnitCode=@UnitCode and ReportYear=@Year      "
806,UpdateServerActivity,"CREATE PROCEDURE dbo.UpdateServerActivity      @ServerName   NVARCHAR(50),      @IISAppName   NVARCHAR(200),      @CreatedDate  DATETIME,      @LastActivityDate DATETIME,      @PingFailureCount   INT,      @Enabled            BIT  AS     DECLARE @ServerID int   SET @ServerID = (SELECT ServerID FROM dbo.WebServers WHERE ServerName = @ServerName AND IISAppName = @IISAppName)     IF @ServerID IS NULL    BEGIN     -- Insert     INSERT INTO dbo.WebServers (      ServerName,      IISAppName,      CreatedDate,      LastActivityDate,                  PingFailureCount,      [Enabled]     )     VALUES (      @ServerName,      @IISAppName,      @CreatedDate,      @LastActivityDate,                  @PingFailureCount,      @Enabled     )                SELECT @ServerID = SCOPE_IDENTITY()    END   ELSE    BEGIN     -- Update     UPDATE dbo.WebServers       SET        LastActivityDate = @LastActivityDate, PingFailureCount = @PingFailureCount, [Enabled] = @Enabled      WHERE  ServerName = @ServerName AND IISAppName = @IISAppName    END        SELECT @ServerID"
807,AIElearning_SurveyUserQuestion_GetsResultByQuestionId,"create proc [dbo].[AIElearning_SurveyUserQuestion_GetsResultByQuestionId]  @userId int,  @surveyId int,  @questionId int  as  -- AIElearning_SurveyUserQuestion_GetsResultByQuestionId 7,1074,1231  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@userId > 0)   set @Condition=@Condition+' AND su.UserId = ' + str(@userId)  if(@questionId > 0)   set @Condition=@Condition+' AND  su.SurveyId =' +str(@surveyId)  if(@questionId > 0)   set @Condition=@Condition+' AND suq.SurveyQuestionId =' +str(@questionId)  exec('  select *   from AIElearning_SurveyUserQuestion suq inner join AIElearning_SurveyUser su   on suq.SurveyUserId = su.Id   where ' + @Condition +' order by suq.Answer')    "
808,AddUser,"CREATE PROCEDURE dbo.[AddUser]     @PortalID  int,   @Username  nvarchar(100),   @FirstName  nvarchar(50),   @LastName  nvarchar(50),   @AffiliateId    int,   @IsSuperUser    bit,   @Email          nvarchar(256),   @DisplayName    nvarchar(100),   @UpdatePassword bit,   @Authorised  bit,   @CreatedByUserID int  AS    DECLARE @UserID int    SELECT @UserID = UserID   FROM dbo.Users   WHERE  Username = @Username    IF @UserID is null   BEGIN    INSERT INTO dbo.Users (     Username,     FirstName,      LastName,      AffiliateId,     IsSuperUser,     Email,     DisplayName,     UpdatePassword,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate      )    VALUES (     @Username,     @FirstName,      @LastName,      @AffiliateId,     @IsSuperUser,     @Email,     @DisplayName,     @UpdatePassword,     @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate()    )      SELECT @UserID = SCOPE_IDENTITY()   END     IF not exists ( SELECT 1 FROM dbo.UserPortals WHERE UserID = @UserID AND PortalID = @PortalID ) AND @PortalID > -1    BEGIN     INSERT INTO dbo.UserPortals (      UserID,      PortalID,      Authorised,      CreatedDate     )     VALUES (      @UserID,      @PortalID,      @Authorised,      getdate()     )    END    SELECT @UserID"
809,GetContentWorkflowStatePermissionsByStateID,CREATE PROCEDURE dbo.[GetContentWorkflowStatePermissionsByStateID]   @StateID int  AS      SELECT *      FROM dbo.vw_ContentWorkflowStatePermissions   WHERE StateID = @StateID
810,AISystem_Category_LaborContract_GetInfoById,CREATE PROC [dbo].[AISystem_Category_LaborContract_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_LaborContract where Id=@Id  SET QUOTED_IDENTIFIER OFF                 
811,CKE_AddOrUpdateEditorHostSetting,"CREATE PROCEDURE dbo.CKE_AddOrUpdateEditorHostSetting     @SettingName  nvarchar(300),  @SettingValue  ntext AS     if exists (select 1 from dbo.CKE_Settings where SettingName = @SettingName)      begin       update dbo.CKE_Settings        set           SettingValue = @SettingValue       where           SettingName = @SettingName   end     else       begin       insert into dbo.CKE_Settings (SettingName, SettingValue)                       values (@SettingName,@SettingValue)   end"
812,SeqNavAttemptRubricView,"  -- Create a function that implements the SeqNavAttemptRubricView view  CREATE FUNCTION [SeqNavAttemptRubricView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT RubricItem.Id RubricItemId, AttemptItem.Id AttemptId, RubricItem.InteractionId, RubricItem.Ordinal, RubricItem.IsSatisfied, RubricItem.Points      FROM AttemptItem      INNER JOIN ActivityAttemptItem ON AttemptItem.Id=ActivityAttemptItem.AttemptId      INNER JOIN InteractionItem ON InteractionItem.ActivityAttemptId=ActivityAttemptItem.Id      INNER JOIN RubricItem ON RubricItem.InteractionId=InteractionItem.Id  )  "
813,AISystem_UserInfo_GetsAllUserSystemNotInTestRegistorCount,"create proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInTestRegistorCount]  @Keyword nvarchar(250),  @TestRegistorId int,  @status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- trang thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  IF(@TestRegistorId > 0)   set @condition = @condition +  ' And  userid not in (select userid from AIElearning_TestCampaign_RegistorUser where TestRegistorId='+str(@TestRegistorId)+') '    exec('select COUNT(userId) from AISystem_UserInfo '+@Condition+'')  SET QUOTED_IDENTIFIER OFF      "
814,AISystem_Subject_User_GetsBySearch,"CREATE PROC [dbo].[AISystem_Subject_User_GetsBySearch]      @pageIndex INT,      @pageSize INT,      @cateSubjectId INT,      @subjectId INT,      @status INT,      @user NVARCHAR(250),      @job NVARCHAR(50),      @jobtitle NVARCHAR(50),      @unitCode NVARCHAR(50),      @unitChidCode NVARCHAR(MAX),      @startDate DATETIME,      @endDate DATETIME  AS -- AISystem_Subject_User_GetsBySearch 1,10,-1,-1,-1,'','-1','','aivietnam','','01/01/1900','01/01/1900'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    IF ( @cateSubjectId > -1 )      SET @Condition = @Condition + ' AND cs.Id=' + STR(@cateSubjectId)  IF ( @subjectId > -1 )      SET @Condition = @Condition + ' AND su.SubjectId=' + STR(@subjectId)  IF ( @status > -1 )      SET @Condition = @Condition + ' AND su.Status=' + STR(@status)  IF ( @user <> '' )      SET @Condition = @Condition + ' AND ui.Username = ''' + @user + ''''  IF ( @job <> '' AND @job <> '-1' )      SET @Condition = @Condition + ' AND jt.Code = ''' + @job + ''''  IF ( @jobtitle <> '' )   SET @Condition = @Condition + ' AND su.JobtitleCode = ''' + @jobtitle + ''''  IF ( @unitCode <> '' )      SET @Condition = @Condition + ' AND ui.UnitCode = ''' + @unitCode + ''''  IF ( @unitChidCode IS NOT NULL AND @unitChidCode <> '' )      SET @Condition = @Condition + ' And  ( ui.UnitChildcode in  (select * from split(''' + @unitChidCode + ''')) )'  IF CONVERT(DATETIME, @startDate, 121) > '01/01/1900'      SET @Condition = @Condition + ' and su.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @startDate, 121) + ''''  IF CONVERT(DATETIME, @endDate, 121) > '01/01/1900'      SET @Condition = @Condition + ' and su.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @endDate, 121) + ''''  -- Neu truyen vao la khoa hoc nguoi dung nhap  IF(@subjectId = 0)  EXEC('   WITH #AISystem_Subject_User AS(    SELECT  ROW_NUMBER() OVER ( ORDER BY su.Id DESC ) AS RowNumber, su.*, CONCAT(RIGHT(''00'' + CAST(su.IntendMonth AS VARCHAR(2)), 2), ''/'', su.IntendYear) AS IntendDate, ui.Displayname, ui.Mastercode, ui.Username, cu.Title AS UnitName, ui.UnitChildPath, jtt.Title AS JobtitleName, cs.Title AS CateSubjectTitle, s.Name AS SubjectName    FROM    AISystem_Subject_User su   INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId   LEFT JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId   LEFT JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id   LEFT JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code   LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code   where ' + @Condition +')     SELECT  *   FROM #AISystem_Subject_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')  ELSE  EXEC('   WITH #AISystem_Subject_User AS(    SELECT  ROW_NUMBER() OVER ( ORDER BY su.Id DESC ) AS RowNumber, su.*, CONCAT(RIGHT(''00'' + CAST(su.IntendMonth AS VARCHAR(2)), 2), ''/'', su.IntendYear) AS IntendDate, ui.Displayname, ui.Mastercode, ui.Username, cu.Title AS UnitName, ui.UnitChildPath, jtt.Title AS JobtitleName, cs.Title AS CateSubjectTitle, s.Name AS SubjectName    FROM    AISystem_Subject_User su   INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId   INNER JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId   INNER JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id   INNER JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code   LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code   where ' + @Condition +')     SELECT  *   FROM #AISystem_Subject_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    "
815,AISystem_JobTitle_GetInfoById,create proc [dbo].[AISystem_JobTitle_GetInfoById]  @Id int  as  select Top(1) * from AISystem_JobTitle where Id=@Id  SET QUOTED_IDENTIFIER OFF 
816,vw_ContentWorkflowUsage,"CREATE VIEW dbo.[vw_ContentWorkflowUsage]  AS      SELECT COALESCE(cm.MetaDataValue, ci.Content) as 'ContentName', ct.ContentType, ws.WorkflowID    FROM dbo.[ContentItems] ci    INNER JOIN dbo.[ContentTypes] ct     ON ci.ContentTypeID = ct.ContentTypeID    INNER JOIN dbo.[ContentWorkflowStates] ws      ON ci.StateID = ws.StateID    LEFT JOIN dbo.[ContentItems_MetaData] cm     ON ci.ContentItemID = cm.ContentItemID       AND cm.MetaDataID = (SELECT MetaDataID FROM dbo.[MetaData] WHERE MetaDataName = 'Title')   WHERE ct.ContentType != 'Tab' -- Tabs will be managed specifically    AND ct.ContentType != 'File' -- Exclude Files   UNION ALL   SELECT t.TabPath, ct.ContentType, ws.WorkflowID    FROM dbo.[ContentItems] ci    INNER JOIN dbo.[ContentTypes] ct     ON ci.ContentTypeID = ct.ContentTypeID    INNER JOIN dbo.[Tabs] t     ON ci.TabID = t.TabID    INNER JOIN dbo.[ContentWorkflowStates] ws      ON ci.StateID = ws.StateID   WHERE ct.ContentType = 'Tab'    AND LOWER(t.TabPath) not like '//admin/%'    AND LOWER(t.TabPath) != '//admin'    AND t.IsSystem = 0    AND LOWER(t.TabPath) not like '//host/%'    AND LOWER(t.TabPath) != '//host'    AND ci.StateID IS NOT NULL   UNION ALL   SELECT t.TabPath, ct.ContentType,     (SELECT CAST(ps.SettingValue AS INT) value      FROM dbo.[PortalSettings] ps     WHERE ps.SettingName = 'DefaultTabWorkflowKey'      AND ps.PortalID = t.PortalID) as WorkflowID    FROM dbo.[ContentItems] ci    INNER JOIN dbo.[ContentTypes] ct     ON ci.ContentTypeID = ct.ContentTypeID    INNER JOIN dbo.[Tabs] t     ON ci.TabID = t.TabID   WHERE ct.ContentType = 'Tab'    AND LOWER(t.TabPath) NOT LIKE '//admin/%'    AND LOWER(t.TabPath) != '//admin'    AND t.IsSystem = 0    AND LOWER(t.TabPath) NOT LIKE '//host/%'    AND LOWER(t.TabPath) != '//host'    AND ci.StateID IS NULL   UNION ALL   SELECT '/' + f.FolderPath, 'Folder', f.WorkflowID    FROM dbo.[Folders] f   WHERE f.WorkflowID IS NOT NULL   UNION ALL   SELECT '/' + f.FolderPath, 'Folder',     (SELECT wf.WorkflowID      FROM dbo.[ContentWorkflows] wf     WHERE wf.WorkflowKey = 'DirectPublish'      AND wf.PortalID = f.PortalID) AS WorkflowID    FROM dbo.[Folders] f   WHERE f.WorkflowID IS NULL"
817,AIElearning_UserTest_GetLastMark,"CREATE PROC AIElearning_UserTest_GetLastMark  @UserId INT,  @ClassItemId INT  AS  SELECT top 1 IsNULL(MARK,0) FROM AIElearning_UserTest WHERE UserId=@UserId and ClassItemId=@ClassItemId ORDER By Id Desc"
818,CoreMessaging_DeleteUserFromConversation,"CREATE PROCEDURE dbo.[CoreMessaging_DeleteUserFromConversation]   @ConversationID INT,      @UserID INT  AS      --Remove the User from recipients list   DELETE FROM dbo.[CoreMessaging_MessageRecipients]    WHERE [UserID] = @UserID    AND MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = @ConversationID)            --Remove Messages which has no recipient      DELETE FROM dbo.[CoreMessaging_Messages]          FROM dbo.[CoreMessaging_Messages] m          LEFT JOIN dbo.[CoreMessaging_MessageRecipients] mr on MR.MessageID = m.MessageID          WHERE ConversationID = @ConversationID AND mr.MessageID IS NULL"
819,AISystem_Category_GetParentId,create proc [dbo].[AISystem_Category_GetParentId]     as    SELECT  * from AISystem_Category  where ParentId=-1
820,AIElearning_Survey_GetsTemplateByUnitCodeCount,"CREATE PROC [dbo].[AIElearning_Survey_GetsTemplateByUnitCodeCount]      @keyword NVARCHAR(250) ,      @isTemplate INT ,      @status INT ,      @unitCode NVARCHAR(50)  AS -- AIElearning_Survey_GetsTemplateByUnitCodeCount N'mẫu','a',''      DECLARE @Condition AS NVARCHAR(MAX)      SET @Condition = ' (1=1)'        IF ( @keyword <> '' )          SET @Condition = @Condition + ' AND Name like N''%' + @keyword + '%'''      IF ( @isTemplate > -1 )          SET @Condition = @Condition + ' AND IsTemplate=' + STR(@isTemplate)      IF ( @status > -1 )          SET @Condition = @Condition + ' AND Status=' + STR(@status)      IF ( @unitCode <> '' )          SET @Condition = @Condition + ' AND UnitCode=''' + @unitCode + ''''      EXEC(' SELECT count(*) from AIElearning_Survey where '+@Condition)"
821,UpdateSystemMessage,"create procedure dbo.UpdateSystemMessage    @PortalID     int,  @MessageName  nvarchar(50),  @MessageValue ntext    as    update dbo.SystemMessages  set    MessageValue = @MessageValue  where  ((PortalID = @PortalID) or (PortalID is null and @PortalID is null))  and    MessageName = @MessageName"
822,DeleteContentWorkflowStatePermission,CREATE PROCEDURE dbo.[DeleteContentWorkflowStatePermission]   @WorkflowStatePermissionID int  AS      DELETE FROM dbo.ContentWorkflowStatePermission      WHERE WorkflowStatePermissionID = @WorkflowStatePermissionID
823,AISystem_Category_LaborContract_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_LaborContract_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_LaborContract_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_LaborContract  WHERE   ParentId = @parentId      "
824,UpdateHeirarchicalTerm,"CREATE PROCEDURE dbo.[UpdateHeirarchicalTerm]    @TermID     int,    @VocabularyID   int,   @ParentTermID   int,   @Name     nvarchar(250),   @Description   nvarchar(2500),   @Weight     int,   @LastModifiedByUserID int  AS     DECLARE @Left    int   DECLARE @Right    int   DECLARE @Width    int      SET @Left = (SELECT TermLeft FROM dbo.Taxonomy_Terms WHERE TermID = @TermID)   SET @Right = (SELECT TermRight FROM dbo.Taxonomy_Terms WHERE TermID = @TermID)   SET @Width = @Right - @Left + 1      BEGIN TRANSACTION    BEGIN     -- Temporarily remove term from heirarchy - but retain information about term and children      -- (these should now be -n, ...,-2,-1 etc)     UPDATE dbo.Taxonomy_Terms       SET TermLeft = TermLeft - @Right - 1,       TermRight = TermRight - @Right - 1      WHERE TermLeft >= @Left       AND TermRight <= @Right       AND VocabularyID = @VocabularyID          IF @@ERROR = 0      BEGIN       -- Update Left values for all items that are after the original term       UPDATE dbo.Taxonomy_Terms         SET TermLeft = TermLeft - @Width         WHERE TermLeft >= @Left + @Width         AND VocabularyID = @VocabularyID         IF @@ERROR = 0        BEGIN        -- Update Right values for all items that are after the original term         UPDATE dbo.Taxonomy_Terms           SET TermRight = TermRight - @Width           WHERE TermRight >= @Right           AND VocabularyID = @VocabularyID           IF @@ERROR = 0          BEGIN           -- Get Left value of Sibling that we are inserting before           SET @Left = (SELECT TOP 1 TermLeft FROM dbo.Taxonomy_Terms                 WHERE VocabularyID = @VocabularyID                  AND ParentTermID = @ParentTermID                 AND Name > @Name                ORDER BY Name)                           -- Term is to be inserted at end of sibling list so get the Right value of the parent, which will become our new left value                 IF @Left IS NULL            SET @Left = (SELECT TermRight FROM dbo.Taxonomy_Terms                  WHERE VocabularyID = @VocabularyID                   AND TermID = @ParentTermID)             -- Left is still null means this is the first term in this vocabulary - set the Left to 1           IF @Left IS NULL            SET @Left = 1                    SET @Right = @Left + @Width - 1                              -- Update Left values for all items that are after the updated term           UPDATE dbo.Taxonomy_Terms             SET TermLeft = TermLeft + @Width             WHERE TermLeft >= @Left             AND VocabularyID = @VocabularyID             IF @@ERROR = 0            BEGIN            -- Update Right values for all items that are after the term             UPDATE dbo.Taxonomy_Terms               SET TermRight = TermRight + @Width               WHERE TermRight >= @Left               AND VocabularyID = @VocabularyID               IF @@ERROR = 0              BEGIN               -- Update Left/Right values for all items temporarily removed from heirarchy               UPDATE dbo.Taxonomy_Terms                 SET TermLeft = TermLeft + @Left + @Width,                 TermRight = TermRight + @Left + @Width                WHERE TermLeft < 0                 AND TermRight < 0                 AND VocabularyID = @VocabularyID                 IF @@ERROR = 0                BEGIN                 -- Update Term                 UPDATE dbo.Taxonomy_Terms                  SET                    VocabularyID = @VocabularyID,                   ParentTermID = @ParentTermID,                   [Name] = @Name,                   Description = @Description,                   Weight = @Weight,                   LastModifiedByUserID = @LastModifiedByUserID,                   LastModifiedOnDate = getdate()                 WHERE TermID = @TermID                   IF @@ERROR = 0                  BEGIN                   COMMIT TRANSACTION                  END                 ELSE                  BEGIN                   -- Rollback the transaction                   "
825,UpdateHeirarchicalTerm,ROLLBACK TRANSACTION                    END                 END               ELSE                BEGIN                 -- Rollback the transaction                 ROLLBACK TRANSACTION                END               END             ELSE              BEGIN               -- Rollback the transaction               ROLLBACK TRANSACTION              END             END           ELSE            BEGIN             -- Rollback the transaction             ROLLBACK TRANSACTION            END           END          ELSE           BEGIN            -- Rollback the transaction            ROLLBACK TRANSACTION             END         END       ELSE        BEGIN         -- Rollback the transaction         ROLLBACK TRANSACTION        END      END     ELSE      BEGIN       -- Rollback the transaction       ROLLBACK TRANSACTION        END    END
826,Me,"  -- Create a function that implements the Me view  CREATE FUNCTION [Me](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id AS UserId,      Name AS UserName      FROM UserItem      WHERE [Key]=@UserKey  )  "
827,AISystem_UserInfo_GetsAllUserSystemNotInRegistorUser,"  CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInRegistorUser]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @registorId int,  @Limit int,  @Type int,  @Unitcode NVARCHAR(150),   @UnitChildcode NVARCHAR(150),   @Job NVARCHAR(150),  @JobTitlecode NVARCHAR(150),  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- AISystem_UserInfo_GetsAllUserSystemNotInRegistorUser 1, 9, N'TP-CSKHVINID', 10, -1, -1, '', '', '' ,1  -- AISystem_UserInfo_GetsAllUserSystemNotInRegistorUserCount  N'TP-CSKHVINID', 10, -1, -1, '', '','', '' ,1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --T? khóa  IF ( @Keyword <> '' )      SET @Condition = @Condition + ' and (ui.Username like N''%' + @Keyword + '%'' OR ui.EmployeeCode like N''%' + @Keyword + '%'') '  IF ( @Limit > 0 )      SET @Condition = @Condition + ' And  (ui.Limit= ' + STR(@Limit) + ' )'  IF ( @Type > 0 )      SET @Condition = @Condition + ' And  (ui.Type= ' + STR(@Type) + ' )'  IF ( @Unitcode IS NOT NULL AND @Unitcode <> '' )      SET @Condition = @Condition + ' And  (ui.Unitcode= ''' + @Unitcode + ''' )'  IF ( @UnitChildcode IS NOT NULL AND @UnitChildcode <> '' )      SET @Condition = @Condition + ' And  ( ui.UnitChildcode in  (select * from split(''' + @UnitChildcode + ''')) )'  IF ( @Job <> '' AND @Job <> '-1' )      SET @Condition = @Condition + ' AND jt.Code = ''' + @Job + ''''  IF ( @JobTitlecode IS NOT NULL AND @JobTitlecode <> '' )      SET @Condition = @Condition + ' And  (ui.JobTitlecode= ''' + @JobTitlecode + ''' )'  IF ( @status > -1 )      SET @Condition = @Condition + ' AND ui.Status=' + STR(@status)  IF ( @registorId > 0 )      SET @Condition = @Condition + ' And ui.UserId not in (select userId from AIElearning_TestCampaign_RegistorUser where TestRegistorId=' + STR(@registorId) + ')  '     exec('    WITH #users AS(    SELECT ROW_NUMBER() OVER (ORDER BY ui.userid desc) AS RowNumber,       ui.* from AISystem_UserInfo ui  LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON ui.JobTitleCode = jtt.Code  and ui.UnitCode = jtt.UnitCode   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code where  ' +@Condition+ '      )       SELECT     *   FROM #users   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF          "
828,AIElearning_ClassUser_GetsBySearchReport,"CREATE proc [dbo].[AIElearning_ClassUser_GetsBySearchReport]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Unitcode nvarchar(250),  @ClassId int,  @Status int,  @UnitChidcode nvarchar(250)  as  --AIElearning_ClassUser_GetsBySearchReport 1,10000,'','-1',6,-1,''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.Mastercode like N''%' + @Keyword + '%''))'   --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)   --trạng thái  if(@Status > -1)   set @Condition=@Condition+' AND c.Status='+str(@Status)  if(@Unitcode <>'-1')   set @Condition=@Condition+' AND i.UnitCode='''+@Unitcode+''''  if(@UnitChidcode<>'')   set @Condition=@Condition+' AND i.UnitChildCode in (select * from dbo.split('''+@UnitChidcode+'''))'      exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,c.*, i.Displayname, i.UnitChildPath, u.Title AS UnitName, j.Title AS JobTitleName,i.EmployeeCode,i.Mastercode,             (SELECT top (1) EndDate FROM AIElearning_Classlog WHERE Username=c.username and ClassId=c.ClassId order by id desc) [TGTruyCapGanNhat],       (select COUNT(id) from AIElearning_ClassLog where ClassId=c.ClassId and Username =c.username) [SoLanHoc],       (SELECT ISNULL(SUM(TotalTime),0) FROM AIElearning_Classlog WHERE ClassId=c.ClassId and Username=c.username AND Type<>3) [TGTruyCap],       dbo.GeResurl(c.LearnStatus) [TrangThai],       dbo.GetMark(c.ClassId,c.UserId,3,2) [KetQuaChiTiet],         dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) [KetQuaCuoiCung]     from AIElearning_ClassUser c inner join  AISystem_UserInfo i on i.UserId = c.UserID       LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code      LEFT JOIN dbo.AISystem_JobTitle_Title j ON c.JobTitleCode = j.Code                where ' + @condition +' and u.Status = 1    )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
829,AISystem_Subject_User_GetsBySearchCount,"CREATE PROC [dbo].[AISystem_Subject_User_GetsBySearchCount]      @cateSubjectId INT,      @subjectId INT,      @status INT,      @user NVARCHAR(250),      @job NVARCHAR(50),      @jobtitle NVARCHAR(50),      @unitCode NVARCHAR(50),      @unitChidCode NVARCHAR(MAX),      @startDate DATETIME,      @endDate DATETIME  AS -- AISystem_Subject_User_GetsBySearchCount -1,0,-1,'','-1','','aivietnam','','01/01/1900','01/01/1900'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'    IF ( @cateSubjectId > -1 )      SET @Condition = @Condition + ' AND cs.Id=' + STR(@cateSubjectId)  IF ( @subjectId > -1 )      SET @Condition = @Condition + ' AND su.SubjectId=' + STR(@subjectId)  IF ( @status > -1 )      SET @Condition = @Condition + ' AND su.Status=' + STR(@status)  IF ( @user <> '' )      SET @Condition = @Condition + ' AND ui.Username = ''' + @user + ''''  IF ( @job <> '' AND @job <> '-1' )      SET @Condition = @Condition + ' AND jt.Code = ''' + @job + ''''  IF ( @jobtitle <> '' )   SET @Condition = @Condition + ' AND su.JobtitleCode = ''' + @jobtitle + ''''  IF ( @unitCode <> '' )      SET @Condition = @Condition + ' AND ui.UnitCode = ''' + @unitCode + ''''  IF ( @unitChidCode IS NOT NULL AND @unitChidCode <> '' )      SET @Condition = @Condition + ' And  ( ui.UnitChildcode in  (select * from split(''' + @unitChidCode + ''')) )'  IF CONVERT(DATETIME, @startDate, 121) > '01/01/1900'      SET @Condition = @Condition + ' and su.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @startDate, 121) + ''''  IF CONVERT(DATETIME, @endDate, 121) > '01/01/1900'      SET @Condition = @Condition + ' and su.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @endDate, 121) + ''''  -- Neu truyen vao la khoa hoc nguoi dung nhap  IF(@subjectId = 0)  EXEC('  SELECT count(su.Id) FROM  AISystem_Subject_User su   INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId   LEFT JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId   LEFT JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id   LEFT JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code   LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code  where ' + @Condition )  ELSE  EXEC('  SELECT count(su.Id)   FROM    AISystem_Subject_User su   INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId   INNER JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId   INNER JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id   INNER JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code   LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code   LEFT JOIN  dbo.AISystem_JobTitle jt ON jtt.JobTitleCode = jt.Code  where ' + @Condition )"
830,GetUserRolesByUsername,"CREATE PROCEDURE dbo.[GetUserRolesByUsername]   @PortalID int,    @Username nvarchar(100),    @Rolename nvarchar(50)  AS   IF @UserName Is Null    BEGIN     SELECT *      FROM dbo.vw_UserRoles      WHERE PortalId = @PortalID AND (Rolename = @Rolename or @RoleName is NULL)    END   ELSE    BEGIN     IF @RoleName Is NULL      BEGIN       SELECT *        FROM dbo.vw_UserRoles        WHERE PortalId = @PortalID AND (Username = @Username or @Username is NULL)      END     ELSE      BEGIN       SELECT *        FROM dbo.vw_UserRoles        WHERE PortalId = @PortalID         AND (Rolename = @Rolename or @RoleName is NULL)         AND (Username = @Username or @Username is NULL)      END    END"
831,GetSkinControlByPackageID,CREATE PROCEDURE dbo.[GetSkinControlByPackageID]   @PackageID int  AS      SELECT *      FROM   dbo.SkinControls   WHERE PackageID = @PackageID
832,CoreMessaging_GetSentBox,"CREATE PROCEDURE dbo.[CoreMessaging_GetSentBox]   @UserID INT,   @PortalID INT,   @AfterMessageId INT,   @NumberOfRecords INT,   @SortField NVARCHAR(25) = 'CreatedOnDate',   @SortAscending BIT = 0  AS  BEGIN   ;WITH RollUpMessageIDs AS   (    SELECT MAX(m.MessageID) AS TopMessageID    FROM dbo.[CoreMessaging_MessageRecipients] mr    INNER JOIN dbo.[CoreMessaging_Messages] m ON mr.MessageID = m.MessageID AND mr.UserID = m.SenderUserID --make sure sender haven't delete the message.    WHERE SenderUserID = @UserID AND NotificationTypeID IS NULL AND PortalID = @PortalID    GROUP BY ConversationID   ), SentBox AS   (    SELECT DISTINCT m.[MessageID], [ConversationID], [Subject], CONVERT(NVARCHAR(50), [Body]) AS Body,      [To], [From], [ReplyAllAllowed], [SenderUserID],      m.[CreatedByUserID], m.[CreatedOnDate],      m.[LastModifiedByUserID], m.[LastModifiedOnDate],      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageAttachments WHERE MessageID = m.MessageID) AS AttachmentCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID AND [READ] = 0) AS NewThreadCount,      (SELECT COUNT(*) FROM dbo.CoreMessaging_MessageRecipients WHERE MessageID IN (SELECT MessageID FROM dbo.CoreMessaging_Messages WHERE ConversationID = m.ConversationID) AND UserID = @UserID) AS ThreadCount,      ROW_NUMBER() OVER(ORDER BY        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 1 THEN m.[CreatedOnDate] END ASC,        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 0 THEN m.[CreatedOnDate] END DESC,        CASE WHEN @SortField = 'From' AND @SortAscending = 1 THEN [From] END ASC,        CASE WHEN @SortField = 'From' AND @SortAscending = 0 THEN [From] END DESC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 1 THEN [Subject] END ASC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 0 THEN [Subject] END DESC       ) AS RowNumber    FROM dbo.CoreMessaging_Messages AS m    WHERE m.MessageID IN (SELECT TopMessageID FROM RollUpMessageIDs)   )   SELECT * FROM SentBox   WHERE (@AfterMessageID > 0 AND RowNumber BETWEEN (SELECT RowNumber + 1 FROM SentBox WHERE [MessageID] = @AfterMessageID) AND (SELECT RowNumber + @NumberOfRecords FROM SentBox WHERE [MessageID] = @AfterMessageID)) OR   (@AfterMessageID = -1 AND RowNumber BETWEEN 1 AND @NumberOfRecords)   ORDER BY RowNumber ASC  END"
833,AISystem_Category_GetbyCode,create proc [dbo].[AISystem_Category_GetbyCode]  @code nvarchar(250)  as  select * from AISystem_Category where code =@code
834,AIElearning_Survey_GetsTemplateByUnitCode,"CREATE PROC [dbo].[AIElearning_Survey_GetsTemplateByUnitCode]      @pageIndex INT ,      @pageSize INT ,      @keyword NVARCHAR(250) ,      @isTemplate INT ,      @status INT ,      @unitCode NVARCHAR(50)  AS --AIElearning_Survey_GetsTemplateByUnitCode 1,10,'',1,''      DECLARE @Condition AS NVARCHAR(MAX)      SET @Condition = ' (1=1)'      DECLARE @start AS INT      DECLARE @end AS INT      SET @start = @pageSize * ( @pageIndex - 1 ) + 1      SET @end = @pageSize * @pageIndex      IF ( @keyword <> '' )          SET @Condition = @Condition + ' AND Name like N''%' + @keyword + '%'''      IF ( @isTemplate > -1 )          SET @Condition = @Condition + ' AND IsTemplate=' + STR(@isTemplate)      IF ( @status > -1 )          SET @Condition = @Condition + ' AND Status=' + STR(@status)      IF ( @unitCode <> '' )          SET @Condition = @Condition + ' AND UnitCode=''' + @unitCode + ''''      EXEC('      WITH #AIElearning_Survey AS(       SELECT ROW_NUMBER() OVER (ORDER BY ID DESC ) AS RowNumber, *      from AIElearning_Survey where '+@Condition+')      SELECT *      FROM #AIElearning_Survey      where RowNumber between '+ @start +'  and  '+ @end +'       ')"
835,GetUsersByPropertyName,"CREATE FUNCTION dbo.[GetUsersByPropertyName]  (   @PropertyName nvarchar(100),   @PropertyValue nvarchar(max),   @PortalID int  )  RETURNS TABLE  AS   RETURN    SELECT *     FROM dbo.[vw_Profile]     WHERE PropertyName = @PropertyName       AND PropertyValue LIKE @PropertyValue      AND PortalID = @PortalID"
836,AddContentWorkflowStatePermission,"CREATE PROCEDURE dbo.[AddContentWorkflowStatePermission]   @StateID int,   @PermissionID int,   @RoleID int,   @AllowAccess bit,   @UserID int,   @CreatedByUserID int  AS     INSERT INTO dbo.ContentWorkflowStatePermission (    [StateID],    [PermissionID],    [RoleID],    [AllowAccess],    [UserID],    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   ) VALUES (    @StateID,    @PermissionID,    @RoleID,    @AllowAccess,    @UserID,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
837,AISystem_PermissionInRole_GetByRoleId,  CREATE PROC [dbo].[AISystem_PermissionInRole_GetByRoleId]  @RoleId INT  AS  SELECT * FROm AISystem_PermissionInRole WHERE RoleId=@RoleId  
838,AISystem_Category_LaborContract_GetsByArray,"CREATE proc [dbo].[AISystem_Category_LaborContract_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_LaborContract  where Id in(select * from Split(@arrId))      "
839,Mobile_GetPreviewProfiles,"CREATE PROCEDURE dbo.[Mobile_GetPreviewProfiles] @PortalId INT  AS       SELECT  Id, PortalId, Name, Width, Height, UserAgent, SortOrder, CreatedByUserID, CreatedOnDate, LastModifiedByUserID, LastModifiedOnDate      FROM    dbo.Mobile_PreviewProfiles      WHERE   PortalId = @PortalId   ORDER BY SortOrder ASC"
840,Me$Security,  -- Create function for the security on the Me view  CREATE FUNCTION [Me$Security](@UserKey nvarchar(250))  RETURNS bit  AS  BEGIN      RETURN (1)  END  
841,ClassUserGetClassId,CREATE FUNCTION [dbo].[ClassUserGetClassId]   (   @classId int  )  RETURNS TABLE   AS  RETURN   (   select UserId from AISystem_UserInfo where UserId not in (select UserId from AIElearning_ClassUser where Classid=@classId))
842,AISystem_JobTitle_Talent_GetMaxOrderNo,"CREATE proc [dbo].[AISystem_JobTitle_Talent_GetMaxOrderNo]   @jobTitleId int  as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_JobTitle_Talent  WHERE  JobTitleId=@jobTitleId   end  "
843,UpdateDatabaseVersionIncrement,"CREATE PROCEDURE dbo.UpdateDatabaseVersionIncrement      @Major  int,   @Minor  int,   @Build  int,   @Increment int,   @Name nvarchar(50)    AS     UPDATE dbo.Version   SET Increment=@Increment where Major=@Major AND Minor=@Minor AND Build=@Build AND Name=@Name"
844,AISystem_Category_Media_GetInfoById,create PROC [dbo].[AISystem_Category_Media_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Media where Id=@Id  SET QUOTED_IDENTIFIER OFF         
845,GetUserRelationshipsByMultipleIDs,"CREATE PROCEDURE dbo.[GetUserRelationshipsByMultipleIDs]    @UserID INT,   @RelatedUserID INT,   @RelationshipID INT,   @Direction INT  AS    IF ( @Direction = 1 ) --OneWay     BEGIN    SELECT  UserRelationshipID,      UserID,      RelatedUserID,      RelationshipID,                  Status,                  CreatedByUserID ,      CreatedOnDate ,      LastModifiedByUserID ,      LastModifiedOnDate    FROM    dbo.UserRelationships        WHERE UserID = @UserID    AND   RelatedUserID = @RelatedUserID    AND   RelationshipID = @RelationshipID    ORDER BY UserRelationshipID ASC         END     ELSE IF ( @Direction = 2 ) --TwoWay     BEGIN    SELECT  UserRelationshipID,      UserID,      RelatedUserID,      RelationshipID,                  Status,                  CreatedByUserID ,      CreatedOnDate ,      LastModifiedByUserID ,      LastModifiedOnDate    FROM    dbo.UserRelationships          WHERE (  (UserID = @UserID AND RelatedUserID = @RelatedUserID)        OR (RelatedUserID = @UserID AND UserID = @RelatedUserID) --swap userids and check       )    AND   RelationshipID = @RelationshipID    ORDER BY UserRelationshipID ASC         END"
846,AISystem_Subject_GetsByCode,create proc [dbo].[AISystem_Subject_GetsByCode]   @code nvarchar(50)  as  begin  select top(1)*  from AISystem_Subject   WHERE Code=@code   end  
847,CoreMessaging_GetArchiveBox,"CREATE PROCEDURE dbo.[CoreMessaging_GetArchiveBox]   @UserID INT,   @PortalID INT,   @AfterMessageID INT,   @NumberOfRecords INT,   @SortField NVARCHAR(25) = 'CreatedOnDate',   @SortAscending BIT = 0  AS  BEGIN   ;WITH RollUpMessageIDs AS   (    SELECT MAX(m.MessageID) AS TopMessageID    FROM dbo.[CoreMessaging_MessageRecipients] mr    INNER JOIN dbo.[CoreMessaging_Messages] m ON mr.MessageID = m.MessageID    WHERE NotificationTypeID IS NULL AND PortalID = @PortalID AND MR.UserID = @UserID AND MR.Archived = 1    GROUP BY ConversationID   ), ArchiveBox AS   (    SELECT DISTINCT m.[MessageID], [ConversationID], [Subject], convert(nvarchar(50), [Body]) AS Body,      [To], [From], [ReplyAllAllowed], [SenderUserID],      m.[CreatedByUserID], m.[CreatedOnDate],      m.[LastModifiedByUserID], m.[LastModifiedOnDate],      (SELECT COUNT(*) FROM dbo.[CoreMessaging_MessageAttachments] WHERE MessageID = m.MessageID) AS AttachmentCount,      (SELECT COUNT(*) FROM dbo.[CoreMessaging_MessageRecipients] WHERE MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = m.ConversationID) AND UserID = @UserID AND [READ] = 0) AS NewThreadCount,      (SELECT COUNT(*) FROM dbo.[CoreMessaging_MessageRecipients] WHERE MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = m.ConversationID) AND UserID = @UserID) AS ThreadCount,      ROW_NUMBER() OVER(ORDER BY        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 1 THEN m.[CreatedOnDate] END ASC,        CASE WHEN @SortField = 'CreatedOnDate' AND @SortAscending = 0 THEN m.[CreatedOnDate] END DESC,        CASE WHEN @SortField = 'From' AND @SortAscending = 1 THEN [From] END ASC,        CASE WHEN @SortField = 'From' AND @SortAscending = 0 THEN [From] END DESC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 1 THEN [Subject] END ASC,        CASE WHEN @SortField = 'Subject' AND @SortAscending = 0 THEN [Subject] END DESC       ) AS RowNumber    FROM dbo.[CoreMessaging_Messages] AS m    WHERE m.MessageID IN (SELECT TopMessageID FROM RollUpMessageIDs)   )   SELECT * FROM ArchiveBox   WHERE (@AfterMessageID > 0 AND RowNumber BETWEEN (SELECT RowNumber + 1 FROM ArchiveBox WHERE [MessageID] = @AfterMessageID) AND (SELECT RowNumber + @NumberOfRecords FROM ArchiveBox WHERE [MessageID] = @AfterMessageID)) OR   (@AfterMessageID = -1 AND RowNumber BETWEEN 1 AND @NumberOfRecords)   ORDER BY RowNumber ASC  END"
848,AIElearning_TestCampaign_RegistorStaffTest_GetStatusCount,"create proc [dbo].[AIElearning_TestCampaign_RegistorStaffTest_GetStatusCount]  @TestRegistorId int,  @StaffId int,  @status int   as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@TestRegistorId>-1)  set @Condition=@Condition+' AND TestRegistorId='+str(@TestRegistorId)  if(@StaffId>-1)  set @Condition=@Condition+' AND StaffId='+str(@StaffId)  if(@status>-1)  set @Condition=@Condition+' AND status='+str(@status)  exec('SELECT count(*) from AIElearning_TestCampaign_RegistorStaffTest '+@Condition+'')    SET QUOTED_IDENTIFIER OFF   "
849,UpdateVocabulary,"CREATE PROCEDURE dbo.[UpdateVocabulary]    @VocabularyID   int,   @VocabularyTypeID  int,   @Name     nvarchar(250),   @Description   nvarchar(2500),   @Weight     int,   @ScopeID    int,   @ScopeTypeID   int,   @LastModifiedByUserID int  AS   UPDATE dbo.Taxonomy_Vocabularies    SET      VocabularyTypeID = @VocabularyTypeID,     [Name] = @Name,     Description = @Description,     Weight = @Weight,     ScopeID = @ScopeID,     ScopeTypeID = @ScopeTypeID,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()   WHERE VocabularyId = @VocabularyId"
850,UpdateContentWorkflowStatePermission,"CREATE PROCEDURE dbo.[UpdateContentWorkflowStatePermission]   @WorkflowStatePermissionID int,    @StateID int,    @PermissionID int,    @RoleID int ,   @AllowAccess bit,      @UserID int,   @LastModifiedByUserID int  AS      UPDATE dbo.ContentWorkflowStatePermission       SET            [StateID] = @StateID,       [PermissionID] = @PermissionID,       [RoleID] = @RoleID,       [AllowAccess] = @AllowAccess,          [UserID] = @UserID,          [LastModifiedByUserID] = @LastModifiedByUserID,       [LastModifiedOnDate] = getdate()      WHERE    [WorkflowStatePermissionID] = @WorkflowStatePermissionID"
851,AISystem_JobTitle_Title_GetInfoByParam,"CREATE proc [dbo].[AISystem_JobTitle_Title_GetInfoByParam]  @UnitCode nvarchar(50),  @JobTitleCode nvarchar(50),  @Code nvarchar(50)  AS  -- AISystem_JobTitle_Title_GetInfoByParam '','11',''  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@UnitCode <> '')   set @condition = @condition +    ' And  (UnitCode= '+ STR(@UnitCode)+' )'  IF (@JobTitleCode IS NOT NULL AND @JobTitleCode<>'')   set @condition = @condition +    ' And  (JobTitleCode in('''+ @JobTitleCode+''' ))'  IF(@Code IS NOT NULL AND @Code<>'')   set @condition = @condition + ' and Code = ''' + @Code + ''''    exec('   SELECT top(1) *   FROM            AISystem_JobTitle_Title    where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF "
852,AISystem_Category_TrainingField_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_TrainingField_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_TrainingField_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TrainingField.Id,      0,      AISystem_Category_TrainingField.ParentId,      AISystem_Category_TrainingField.Title,      STR(AISystem_Category_TrainingField.OrderNo),      AISystem_Category_TrainingField.Title,      AISystem_Category_TrainingField.Code          FROM      AISystem_Category_TrainingField    WHERE      (AISystem_Category_TrainingField.Status=@Status OR @Status = -1)       AND (AISystem_Category_TrainingField.Id = @ParentId)      AND AISystem_Category_TrainingField.LanguageId = @LanguageId      AND AISystem_Category_TrainingField.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TrainingField.Id,      0,      AISystem_Category_TrainingField.ParentId,      AISystem_Category_TrainingField.Title,      STR(AISystem_Category_TrainingField.OrderNo),      AISystem_Category_TrainingField.Title,      AISystem_Category_TrainingField.Code          FROM      AISystem_Category_TrainingField    WHERE      (AISystem_Category_TrainingField.Status=@Status OR @Status = -1)       AND (AISystem_Category_TrainingField.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_TrainingField.ParentId IS NULL or AISystem_Category_TrainingField.ParentId <=0))      AND AISystem_Category_TrainingField.LanguageId = @LanguageId      AND AISystem_Category_TrainingField.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_TrainingField  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction  "
853,AISystem_Category_LaborContract_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_LaborContract_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_LaborContract AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_LaborContract       )         SELECT     *   FROM #AISystem_Category_LaborContract   where RowNumber between '+ @start +'  and  '+ @end +'   ')                "
854,GetUnAuthorizedUsers,"CREATE PROCEDURE dbo.GetUnAuthorizedUsers   @PortalID       int,   @IncludeDeleted bit,   @SuperUsersOnly bit    AS   SELECT  *   FROM dbo.vw_Users   WHERE  PortalId = @PortalID    AND Authorised = 0    AND IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END    --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0    AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END   ORDER BY UserName"
855,MyAttemptsAndPackages,"  -- Create a function that implements the MyAttemptsAndPackages view  CREATE FUNCTION [MyAttemptsAndPackages](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT PackageItem.Id AS PackageId,      PackageItem.FileName AS PackageFileName,      ActivityPackageItem.Id AS OrganizationId,      ActivityPackageItem.Title AS OrganizationTitle,      AttemptItem.Id AS AttemptId,      PackageItem.UploadDateTime,      AttemptItem.AttemptStatus,      AttemptItem.TotalPoints      FROM ActivityPackageItem      INNER JOIN PackageItem ON ActivityPackageItem.PackageId = PackageItem.Id      LEFT OUTER JOIN ActivityAttemptItem ON ActivityPackageItem.Id = ActivityAttemptItem.ActivityPackageId      LEFT OUTER JOIN AttemptItem ON ActivityAttemptItem.AttemptId = AttemptItem.Id      INNER JOIN UserItem ON PackageItem.Owner = UserItem.Id      WHERE (ActivityPackageItem.ParentActivityId IS NULL)      AND (UserItem.[Key] = @UserKey)  )  "
856,GetContentItemsByVocabularyId,CREATE PROCEDURE dbo.[GetContentItemsByVocabularyId]    @VocabularyID int  AS  BEGIN   SELECT c.*   FROM dbo.ContentItems As c    INNER JOIN dbo.ContentItems_Tags ct ON ct.ContentItemID = c.ContentItemID    INNER JOIN dbo.Taxonomy_Terms t ON t.TermID = ct.TermID   WHERE t.VocabularyID = @VocabularyID  END
857,AIElearning_Monney_Class_GetsBySearchCount,create proc [dbo].[AIElearning_Monney_Class_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Monney_Class    SET QUOTED_IDENTIFIER OFF     
858,GetLastAppliedIteration,"CREATE PROCEDURE dbo.GetLastAppliedIteration      @Major  int,   @Minor  int,   @Build  int     AS     SELECT ISNULL(MAX(Increment),0) from dbo.Version WHERE Major=@Major AND Minor=@Minor AND Build=@Build"
859,AIElearning_TestCampaign_Registor_CheckPassword,"create proc [dbo].[AIElearning_TestCampaign_Registor_CheckPassword]  @testCampaignId int,  @password nvarchar(50)  as  -- AIElearning_TestCampaign_Registor_CheckPassword 1,''    select count(*) from AIElearning_TestCampaign_Registor where TestCampaignId = @testCampaignId and [Password]  = @password  "
860,CoreMessaging_CountArchivedConversations,"CREATE PROCEDURE dbo.[CoreMessaging_CountArchivedConversations]   @UserID INT,   @PortalID INT  AS  BEGIN   SELECT COUNT(DISTINCT M.ConversationID) AS TotalRecords       FROM dbo.[CoreMessaging_Messages] M       JOIN dbo.[CoreMessaging_MessageRecipients] MR ON M.MessageID = MR.MessageID       WHERE Archived = 1           AND NotificationTypeID IS NULL AND PortalID = @PortalID AND UserID = @UserID  END"
861,AIElearning_TestCampaign_RegistorStaffTest_GetStatus,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorStaffTest_GetStatus]  @pageIndex int,  @pageSize int,  @TestRegistorId int,  @StaffId int,  @status int   as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@TestRegistorId>-1)  set @Condition=@Condition+' AND TestRegistorId='+str(@TestRegistorId)  if(@StaffId>-1)  set @Condition=@Condition+' AND StaffId='+str(@StaffId)  if(@status>-1)  set @Condition=@Condition+' AND status='+str(@status)  exec('    WITH #AIElearning_Certificate AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_RegistorStaffTest '+@Condition+'      )         SELECT     *   FROM #AIElearning_Certificate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
862,AISystem_UserInfo_GetsAllUserSystemNotInClassUserCount,"CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInClassUserCount]   @Keyword nvarchar(250),  @classid int,  @GroupJobTileCode nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),  @JobTitlecode nvarchar(250),  @status int,  @limit int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' or EmployeeCode like N''%' + @Keyword + '%'' or Displayname like N''%' + @Keyword + '%'') '    IF(@GroupJobTileCode IS NOT NULL AND @GroupJobTileCode<>'')   set @condition = @condition +    ' And  (GroupJobTileCode= '''+ @GroupJobTileCode+''' )'    IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   set @condition = @condition +    ' And  ( UnitChildcode in  (select code from AISystem_Category_Unit where id in ( select * from split('''+ @UnitChildcode+'''))) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@classid > 0)   set @condition = @condition +    ' And not EXISTS(select 1 from AIElearning_ClassUser classuser where Classid='+str(@classid)+' and classuser.UserId = userinfo.UserId ) '     exec('select COUNT(id) from AISystem_UserInfo userinfo where '+@Condition+'')      SET QUOTED_IDENTIFIER OFF  "
863,AddContentWorkflowLog,"CREATE PROCEDURE dbo.[AddContentWorkflowLog]   @Action nvarchar(40),   @Comment nvarchar(256),   @User int,   @WorkflowID int,   @ContentItemID int  AS      INSERT INTO dbo.[ContentWorkflowLogs] (    [Action],    [Comment],    [Date],    [User],    [WorkflowID],    [ContentItemID]   ) VALUES (    @Action,    @Comment,    getdate(),    @User,    @WorkflowID,    @ContentItemID   )     SELECT SCOPE_IDENTITY()"
864,AISystem_PermissionInRole_DeleteByRoleIdAndDNNRoleId,"    CREATE PROC [dbo].[AISystem_PermissionInRole_DeleteByRoleIdAndDNNRoleId]  @RoleId INT,  @DNNRoleId INT  AS  delete FROm AISystem_PermissionInRole WHERE RoleId=@RoleId AND DNNRoleId=@DNNRoleId  "
865,AISystem_Category_LaborContract_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_LaborContract_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_LaborContract    SET QUOTED_IDENTIFIER OFF                   
866,MyAttemptsAndPackages$Security,  -- Create function for the security on the MyAttemptsAndPackages view  CREATE FUNCTION [MyAttemptsAndPackages$Security](@UserKey nvarchar(250))  RETURNS bit  AS  BEGIN      RETURN (1)  END  
867,AIElearning_ClassItem_Users_UpdateItemStatusByParam,"create proc [dbo].[AIElearning_ClassItem_Users_UpdateItemStatusByParam]   @UserName  nvarchar(150),  @ClassId int,  @ClassItemId int,  @ItemStatus int  as  begin  update AIElearning_ClassItem_Users set ItemStatus = @ItemStatus  where (UserName = @UserName or @UserName ='') and ClassId = @ClassId and (ClassItemId = @ClassItemId or @ClassItemId =-1)  end"
868,AIElearning_Document_CheckDocInDocGroup,CREATE PROC [dbo].[AIElearning_Document_CheckDocInDocGroup]  @docId int  AS  -- [AIElearning_Document_CheckDocInDocGroup] 4  SELECT COUNT(*) FROM dbo.AIElearning_DocumentGroup_File WHERE DocumentId = @docId  
869,Journal_Save,"CREATE PROCEDURE dbo.[Journal_Save]  @PortalId int,  @JournalId int,  @JournalTypeId int,  @UserId int,  @ProfileId int,  @GroupId int,  @Title nvarchar(255),  @Summary nvarchar(2000),  @ItemData nvarchar(2000),  @JournalXML xml,  @ObjectKey nvarchar(255),  @AccessKey uniqueidentifier,  @SecuritySet nvarchar(2000),  @CommentsDisabled bit,  @CommentsHidden bit  AS  INSERT INTO dbo.[Journal]   (JournalTypeId, UserId, DateCreated, DateUpdated, PortalId, ProfileId, GroupId,Title,Summary, ObjectKey, AccessKey, ItemData, CommentsHidden, CommentsDisabled)   VALUES   (@JournalTypeId, @UserId, GETUTCDATE(), GETUTCDATE(), @PortalId, @ProfileId, @GroupId, @Title, @Summary, @ObjectKey, @AccessKey, @ItemData, @CommentsHidden, @CommentsDisabled)  SET @JournalId = SCOPE_IDENTITY()  BEGIN  INSERT INTO dbo.[Journal_Security]   (JournalId, SecurityKey)    SELECT @JournalId, string from dbo.[Journal_SplitText](@SecuritySet,',')  END  IF @JournalXML IS NOT NULL  BEGIN  INSERT INTO dbo.[Journal_Data]   (JournalId, JournalXML)   VALUES   (@JournalId, @JournalXML)  END  SELECT @JournalId"
870,CK__Extension__Strin__3D89D3B2,(len([StringValue])<=(4096))
871,AIElearning_ClassLecturers_TotalTime_GetUnitUser,"CREATE proc [dbo].[AIElearning_ClassLecturers_TotalTime_GetUnitUser]  @UnitCode nvarchar(50),  @Year int,  @Username nvarchar(150)  as  select top(1) * from AIElearning_ClassLecturers_TotalTime where UnitCode=@UnitCode and ReportYear=@Year and Username=@Username    "
872,CoreMessaging_CountMessagesByConversation,CREATE PROCEDURE dbo.[CoreMessaging_CountMessagesByConversation]   @ConversationID int  AS  BEGIN   SELECT COUNT(*) AS TotalRecords   FROM dbo.CoreMessaging_Messages   WHERE (ConversationID = @ConversationID)  END
873,CoreMessaging_CountSentConversations,"CREATE PROCEDURE dbo.[CoreMessaging_CountSentConversations]   @UserID INT,   @PortalID INT  AS  BEGIN   SELECT COUNT(DISTINCT ConversationID) AS TotalRecords       FROM dbo.[CoreMessaging_Messages] m          INNER JOIN dbo.[CoreMessaging_MessageRecipients] mr ON mr.MessageID = m.MessageID AND mr.UserID = m.SenderUserID --make sure sender haven't delete the message.       WHERE SenderUserID = @UserID           AND NotificationTypeID IS NULL AND PortalID = @PortalID  END"
874,DNNUOL_GetOnlineUserStatistics,"CREATE PROCEDURE dbo.DNNUOL_GetOnlineUserStatistics    @PortalID  int,  @IncludeHosts bit  AS  -- Anonymous User Count  SELECT count(UserID)   FROM  dbo.AnonymousUsers  WHERE PortalId = @PortalID    -- Users Online Count  IF @IncludeHosts = 0  BEGIN   SELECT count(UO.UserID)    FROM dbo.UsersOnline UO    INNER JOIN dbo.Users U on UO.UserID = U.UserID   WHERE UO.PortalId = @PortalID AND U.IsSuperUser = 0  END  ELSE  BEGIN  SELECT count(UserID)    FROM dbo.UsersOnline   WHERE PortalId = @PortalID  END    -- Last User Registered  SELECT UserID, UserName, DisplayName, FirstName, LastName, FirstName + ' ' + LastName AS FullName  FROM   dbo.Users  WHERE  UserID = (select top 1 UserId from dbo.UserPortals where PortalID = @PortalID AND Authorised = 1 AND IsDeleted = 0 order by UserPortalId desc, UserID desc)    -- Membership Count  SELECT count(UserID)   FROM   dbo.UserPortals  WHERE PortalId = @PortalID AND Authorised = 1    -- Members in last day  SELECT count(UserID)   FROM dbo.UserPortals  WHERE PortalId = @PortalID and CreatedDate > DateAdd(d, -1, GetDate()) AND IsDeleted = 0 AND Authorised = 1    -- Members day before  SELECT count(UserID)  FROM dbo.UserPortals  WHERE PortalId = @PortalID and CreatedDate > DateAdd(d, -2, GetDate()) and CreatedDate < DateAdd(d, -1, GetDate()) AND IsDeleted = 0 AND Authorised = 1"
875,AISystem_UserInfo_GetsByMastercode,  create proc [dbo].[AISystem_UserInfo_GetsByMastercode]  @Mastercode nvarchar(50)  as  -- AISystem_UserInfo_GetsByMastercode 'hainv'  Select top(1) * from AISystem_UserInfo where   Mastercode = @Mastercode  SET QUOTED_IDENTIFIER OFF     
876,AIElearning_TestCampaign_RegistorUserTestOfline_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTestOfline_GetsBySearchCount]  @Keyword nvarchar(250),  @RegistorId  int  as  -- AIElearning_TestCampaign_RegistorUserTestOfline_GetsBySearchCount '', -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode like N''%' + @Keyword + '%'') '  --  if(@RegistorId>-1)   set @Condition=@Condition+' AND RegistorId='+str(@RegistorId)    exec('select COUNT(*) from  AIElearning_TestCampaign_RegistorUserTestOfline c inner join  AISystem_UserInfo i on i.UserId = c.UserID ' + @condition +' ')    SET QUOTED_IDENTIFIER OFF   "
877,AISystem_UserInfo_GetsAllUserSystemNotInClassUser,"CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInClassUser]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @GroupJobTileCode nvarchar(250),  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),   @JobTitlecode nvarchar(250),  @Status int,  @Limit int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- AISystem_UserInfo_GetsAllUserSystemNotInClassUser 1,10,  '',6,'','','','',1,2  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' or EmployeeCode like N''%' + @Keyword + '%'' or Displayname like N''%' + @Keyword + '%'') '    IF(@GroupJobTileCode IS NOT NULL AND @GroupJobTileCode<>'')   set @condition = @condition +    ' And  (GroupJobTileCode= '''+ @GroupJobTileCode+''' )'    IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   set @condition = @condition +    ' And  ( UnitChildcode in  (select code from AISystem_Category_Unit where id in ( select * from split('''+ @UnitChildcode+'''))) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@classid > 0)   set @condition = @condition +    ' And not EXISTS(select 1 from AIElearning_ClassUser classuser where Classid='+str(@classid)+' and classuser.UserId = userinfo.UserId ) '   exec('    WITH #users AS(    SELECT ROW_NUMBER() OVER (ORDER BY userid desc) AS RowNumber,       *     from AISystem_UserInfo userinfo where ' +@Condition+ '      )       SELECT     *   FROM #users   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
878,GetContentWorkflowLogs,"CREATE PROCEDURE dbo.[GetContentWorkflowLogs]   @ContentItemID int,   @WorkflowID int  AS      SELECT *   FROM dbo.[ContentWorkflowLogs]   WHERE ContentItemID = @ContentItemID AND WorkflowID = @WorkflowID"
879,AISystem_Category_TrainingField_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_TrainingField_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_TrainingField_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_TrainingField where   Code = @Code  SET QUOTED_IDENTIFIER OFF  
880,AISystem_Category_LaborContract_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_LaborContract_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_LaborContract  SET    ChildId = @ChildId  WHERE Id = @Id                "
881,SequencingLog,"  -- Create a function that implements the SequencingLog view  CREATE FUNCTION [SequencingLog](@UserKey nvarchar(250),@AttemptId bigint=NULL)  RETURNS TABLE  AS  RETURN (      SELECT Id,      Timestamp,      EventType,      NavigationCommand,      Message      FROM SequencingLogEntryItem      WHERE AttemptId=@AttemptId  )  "
882,AIElearning_ClassLog_DeleteByClassIdAndUsernameAndClassItem,"CREATE PROC [dbo].[AIElearning_ClassLog_DeleteByClassIdAndUsernameAndClassItem]      @ClassId INT ,      @Username NVARCHAR(50),   @ClassItemId int  AS      DELETE  FROM AIElearning_ClassLog      WHERE   ( ClassId = @ClassId ) AND ( Username = @Username or @Username ='') AND ( ClassItemId = @ClassItemId )"
883,Journal_Update,"CREATE PROCEDURE dbo.[Journal_Update]  @PortalId int,  @JournalId int,  @JournalTypeId int,  @UserId int,  @ProfileId int,  @GroupId int,  @Title nvarchar(255),  @Summary nvarchar(2000),  @ItemData nvarchar(2000),  @JournalXML xml,  @ObjectKey nvarchar(255),  @AccessKey uniqueidentifier,  @SecuritySet nvarchar(2000),  @CommentsDisabled bit,  @CommentsHidden bit  AS  UPDATE dbo.[Journal]   SET     JournalTypeId = @JournalTypeId,    UserId = @UserId,    DateUpdated = GETUTCDATE(),    PortalId = @PortalId,    ProfileId = @ProfileId,    GroupId = @GroupId,    Title = @Title,    Summary = @Summary,    ObjectKey = @ObjectKey,    AccessKey = @AccessKey,    ItemData = @ItemData,    CommentsHidden = @CommentsHidden,    CommentsDisabled = @CommentsDisabled   WHERE JournalId = @JournalId  IF @SecuritySet IS NOT NULL AND @SecuritySet <> ''  BEGIN  DELETE FROM dbo.[Journal_Security] WHERE JournalId = @JournalId  INSERT INTO dbo.[Journal_Security]   (JournalId, SecurityKey)    SELECT @JournalId, string from dbo.[Journal_SplitText](@SecuritySet,',')  END  SELECT @JournalId"
884,AddScheduleItemSetting,"CREATE PROCEDURE dbo.[AddScheduleItemSetting]   @ScheduleID int,   @Name nvarchar(50),   @Value nvarchar(256)  AS  BEGIN   UPDATE dbo.[ScheduleItemSettings]   SET SettingValue = @Value   WHERE ScheduleID = @ScheduleID   AND SettingName = @Name     IF @@ROWCOUNT = 0 BEGIN    INSERT INTO dbo.[ScheduleItemSettings] (ScheduleID, SettingName, Settingvalue)    VALUES (@ScheduleID, @Name, @Value)   END  END"
885,GetSchedule,"CREATE PROCEDURE dbo.GetSchedule   @Server varchar(150)  AS  BEGIN  SELECT    S.*    , (SELECT max(S1.NextStart)     FROM dbo.ScheduleHistory S1     WHERE S1.ScheduleID = S.ScheduleID) as NextStart   FROM dbo.Schedule S   WHERE   (    @Server IS NULL OR     S.Servers LIKE '%,' + @Server + ',%' OR    S.Servers LIKE @Server + ',%' OR    S.Servers LIKE '%,' + @Server OR    S.Servers = @Server OR    S.Servers IS NULL)   ORDER BY FriendlyName ASC  END"
886,AISystem_Category_GetsByArray,"create proc [dbo].[AISystem_Category_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category  where Id in(select * from Split(@arrId))  "
887,RestoreUser,"CREATE PROCEDURE dbo.RestoreUser   @UserID  int,   @PortalID   int  AS   IF @PortalID IS NULL    BEGIN     UPDATE dbo.Users      SET IsDeleted = 0      WHERE  UserId = @UserID    END   ELSE    BEGIN     UPDATE dbo.UserPortals      SET IsDeleted = 0      WHERE  UserId = @UserID       AND PortalId = @PortalID   END"
888,DNNUOL_GetOnlineUsers,"CREATE PROCEDURE dbo.DNNUOL_GetOnlineUsers  @PortalID int,  @IncludeHosts bit  AS  IF @IncludeHosts = 0  BEGIN  SELECT    UO.UserID,   U.UserName,   U.DisplayName,   U.FirstName,    U.LastName,    U.FirstName + ' ' + U.LastName AS FullName  FROM   dbo.UsersOnline UO INNER JOIN dbo.Users U ON UO.UserID = U.UserID INNER JOIN dbo.UserPortals UP ON U.UserID = UP.UserID  WHERE   UO.PortalID = @PortalID AND UO.UserID = U.UserID AND UP.IsDeleted = 0 AND UP.Authorised = 1 AND U.IsSuperUser = 0 -- Inner Join takes care of SU = 0, but for sanity.  END  ELSE  BEGIN  SELECT DISTINCT   UO.UserID,   U.UserName,   U.DisplayName,   U.FirstName,    U.LastName,    U.FirstName + ' ' + U.LastName AS FullName  FROM   dbo.UsersOnline UO INNER JOIN dbo.Users U ON UO.UserID = U.UserID, dbo.UserPortals UP  WHERE   UO.PortalID = @PortalID AND UO.UserID = U.UserID AND UP.IsDeleted = 0 AND UP.Authorised = 1  END"
889,AIElearning_TestFormGen_GetData,  CREATE PROC [dbo].[AIElearning_TestFormGen_GetData]  @Id int  AS  SELECT Data from AIElearning_TestFormGen  where Id=@Id  
890,AIElearning_TestCampaign_RegistorUserTestOfline_GetsBySearch,"  create proc [dbo].[AIElearning_TestCampaign_RegistorUserTestOfline_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @RegistorId  int    as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode like N''%' + @Keyword + '%'') '  if(@RegistorId>-1)   set @Condition=@Condition+' AND RegistorId='+str(@RegistorId)  exec('    WITH #AIElearning_TestCampaign_RegistorUserTestOfline AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*,i.Username,i.Displayname,i.Mastercode,i.JobTitleCode,i.UnitCode,i.UnitChildCode      from AIElearning_TestCampaign_RegistorUserTestOfline c inner join  AISystem_UserInfo i on i.UserId = c.UserID  ' + @condition +'      )         SELECT     *   FROM #AIElearning_TestCampaign_RegistorUserTestOfline   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
891,GetContentItems,"CREATE PROCEDURE dbo.[GetContentItems]    @ContentTypeId int,   @TabId   int,   @ModuleId  int  AS   SELECT *   FROM dbo.ContentItems   WHERE (ContentTypeId = @ContentTypeId OR @ContentTypeId IS NULL)    AND (TabId = @TabId OR @TabId IS NULL)    AND (ModuleId = @ModuleId OR @ModuleId IS NULL)"
892,DeleteContentWorkflowLogs,"CREATE PROCEDURE dbo.[DeleteContentWorkflowLogs]   @ContentItemID int,   @WorkflowID int  AS      DELETE FROM dbo.[ContentWorkflowLogs]   WHERE ContentItemID = @ContentItemID AND WorkflowID = @WorkflowID     SELECT @@ROWCOUNT"
893,AIElearning_TestCampaign_Unit_CheckUserUnit,"  CREATE proc [dbo].[AIElearning_TestCampaign_Unit_CheckUserUnit]  @testCampaignId int,  @unitChildCode nvarchar(50)  as  -- AIElearning_TestCampaign_Unit_CheckUserUnit 2,'a'  select * from AIElearning_TestCampaign_Unit where TestCampaignId = @testCampaignId and UnitChildCode = @unitChildCode  "
894,AISystem_Category_LaborContract_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_LaborContract_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_LaborContract WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_LaborContract WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_LaborContract WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_LaborContract WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_LaborContract WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_LaborContract         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_LaborContract SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur      "
895,CoreMessaging_AddNotificationTypeAction,"CREATE PROCEDURE dbo.[CoreMessaging_AddNotificationTypeAction]   @NotificationTypeID int,   @NameResourceKey nvarchar(100),   @DescriptionResourceKey nvarchar(100),   @ConfirmResourceKey nvarchar(100),   @APICall nvarchar(500),   @CreatedByUserID int  AS  BEGIN   DECLARE @Order int       SELECT @Order = MAX([Order])   FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeID] = @NotificationTypeID      IF @Order IS NULL    SET @Order = 1   ELSE    SET @Order = @Order + 2       INSERT INTO dbo.[CoreMessaging_NotificationTypeActions] (    [NotificationTypeID],    [NameResourceKey],    [DescriptionResourceKey],    [ConfirmResourceKey],    [Order],    [APICall],    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   ) VALUES (    @NotificationTypeID,    @NameResourceKey,    @DescriptionResourceKey,    @ConfirmResourceKey,    @Order,    @APICall,    @CreatedByUserID,    GETDATE(),    @CreatedByUserID,    GETDATE()   )      SELECT SCOPE_IDENTITY()  END"
896,SequencingLog$Security,"  -- Create function for the security on the SequencingLog view  CREATE FUNCTION [SequencingLog$Security](@UserKey nvarchar(250),@AttemptId bigint=NULL)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN EXISTS(SELECT * FROM AttemptItem INNER JOIN UserItem ON AttemptItem.LearnerId=UserItem.Id WHERE AttemptItem.Id=@AttemptId AND UserItem.[Key]=@UserKey) THEN 1 ELSE 0 END)  END  "
897,Journal_Comments_ToggleDisable,"CREATE PROCEDURE dbo.[Journal_Comments_ToggleDisable]  @PortalId int,  @JournalId int,  @Disabled bit  AS  UPDATE dbo.[Journal]   SET CommentsDisabled = @Disabled   WHERE PortalId = @PortalId AND JournalId = @JournalId"
898,AISystem_Category_TrainingType_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_TrainingType_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_TrainingType  SET    ChildId = @ChildId  WHERE Id = @Id  "
899,GetTabPaths,"CREATE PROCEDURE dbo.[GetTabPaths]    @PortalID  INT,   @CultureCode NVARCHAR(10)  AS   SELECT    TabID,     PortalID,     TabPath   FROM dbo.vw_Tabs   WHERE (PortalID = @PortalID AND (CultureCode = @CultureCode OR CultureCode Is NULL OR ISNULL(@CultureCode, '') = ''))    OR @PortalID Is NULL"
900,DeleteUserRelationship,CREATE PROCEDURE dbo.[DeleteUserRelationship] @UserRelationshipID INT   AS    BEGIN    DELETE FROM dbo.UserRelationships       WHERE UserRelationshipID = @UserRelationshipID   END
901,Journal_GetByKey,"CREATE PROCEDURE dbo.[Journal_GetByKey]   @PortalId INT,   @ObjectKey NVARCHAR(255),   @IncludeAllItems INT = 0,   @IsDeleted INT = 0   AS   SELECT     j.JournalId, j.JournalTypeId, j.Title, j.Summary, j.UserId, j.DateCreated, j.DateUpdated, j.PortalId,      j.ProfileId, j.GroupId, j.ObjectKey, j.AccessKey,      ""JournalOwner"" = '<entity><id>' + CAST(p.UserId as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name></entity>',      ""JournalAuthor"" = CASE WHEN ISNULL(a.UserId,-1) >0 THEN '<entity><id>' + CAST(a.UserId as nvarchar(150)) + '</id><name><![CDATA[' + a.DisplayName + ']]></name></entity>' ELSE '' END,      ""JournalOwnerId"" = ISNULL(j.ProfileId,j.UserId),       jt.Icon, jt.JournalType,      ""Profile"" = CASE WHEN j.ProfileId > 0 THEN '<entity><id>' + CAST(p.UserID as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name><vanity></vanity></entity>' ELSE '' END,      ""SimilarCount"" = (SELECT COUNT(JournalId) FROM dbo.Journal WHERE ContentItemId = j.ContentItemId AND JournalTypeId = j.JournalTypeId),      jd.JournalXML, ContentItemId, j.ItemData, j.IsDeleted, j.CommentsDisabled, j.CommentsHidden   FROM        dbo.[Journal] AS j INNER JOIN      dbo.[Journal_Types] as jt ON jt.JournalTypeId = j.JournalTypeId LEFT OUTER JOIN      dbo.[Journal_Data] as jd on jd.JournalId = j.JournalId LEFT OUTER JOIN      dbo.[Users] AS p ON j.ProfileId = p.UserID LEFT OUTER JOIN      dbo.[Users] AS a ON j.UserId = a.UserID   WHERE  ((@IncludeAllItems = 0) AND (j.ObjectKey = @ObjectKey AND j.ObjectKey IS NOT NULL AND @ObjectKey <> '' AND j.IsDeleted = @IsDeleted))       OR       ((@IncludeAllItems = 1) AND (j.ObjectKey = @ObjectKey AND j.ObjectKey IS NOT NULL AND @ObjectKey <> ''))"
902,AIElearning_TestFormGen_UpdateData,"  CREATE PROC [dbo].[AIElearning_TestFormGen_UpdateData]  @Id int,  @Data ntext  AS  Update AIElearning_TestFormGen set Data=@Data where Id=@Id  "
903,GetUrlLog,"CREATE PROCEDURE dbo.GetUrlLog   @URLTrackingID Int,   @StartDate DateTime,   @EndDate DateTime  AS   BEGIN    SELECT      L.*,     dbo.[UserDisplayname](L.UserId) AS 'FullName'    FROM dbo.UrlLog L     INNER JOIN dbo. UrlTracking T ON L.UrlTrackingId = T.UrlTrackingId    WHERE L.UrlTrackingID = @UrlTrackingID     AND ((ClickDate >= @StartDate) OR @StartDate Is Null)     AND ((ClickDate <= @EndDate ) OR @EndDate Is Null)    ORDER BY ClickDate   END"
904,AIElearning_TestCampaign_RegistorUserTest_GetsByCampaignId,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetsByCampaignId]   @CampaignId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsAllByUserIdCount 6, 7, 2  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Ma dot thi  if(@CampaignId>-1)   set @Condition=@Condition+' AND  CampaignId ='+str(@CampaignId)  -- Trang thai lam bai  if(@status>-1)   set @Condition=@Condition+' AND Status ='+str(@status)  exec('      SELECT * from AIElearning_TestCampaign_RegistorUserTest    WHERE  '+@Condition+'          ')  SET QUOTED_IDENTIFIER OFF     "
905,DeleteModuleControl,create procedure dbo.DeleteModuleControl    @ModuleControlId int    as    delete  from   dbo.ModuleControls  where  ModuleControlId = @ModuleControlId
906,AISystem_Category_TrainingField_GetInfoById,CREATE PROC [dbo].[AISystem_Category_TrainingField_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_TrainingField where Id=@Id  SET QUOTED_IDENTIFIER OFF  
907,MoveTabModule,"CREATE PROCEDURE dbo.MoveTabModule   @FromTabId    int,   @ModuleId    int,   @ToTabId    int,   @PaneName    nvarchar(50),   @LastModifiedByUserID int    AS   UPDATE dbo.TabModules    SET      TabId = @ToTabId,        ModuleOrder = -1,     PaneName = @PaneName,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()    WHERE  TabId = @FromTabId    AND    ModuleId = @ModuleId"
908,AddPackageReferenceRight,  -- Create function for the security on the AddPackageReferenceRight right  CREATE FUNCTION [AddPackageReferenceRight](@UserKey nvarchar(250))  RETURNS bit  AS  BEGIN      RETURN (1)  END  
909,Journal_Comments_ToggleHidden,"CREATE PROCEDURE dbo.[Journal_Comments_ToggleHidden]  @PortalId int,  @JournalId int,  @Hidden bit  AS  UPDATE dbo.[Journal]   SET CommentsHidden = @Hidden   WHERE PortalId = @PortalId AND JournalId = @JournalId"
910,AISystem_Category_TrainingType_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_TrainingType_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TrainingType WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TrainingType WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TrainingType WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TrainingType WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TrainingType WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_TrainingType         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_TrainingType SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur  "
911,GetLists,"CREATE procedure dbo.[GetLists]      @PortalID int    AS   SELECT DISTINCT     ListName,    [Level],    DefinitionID,    PortalID,    SystemList,    EntryCount,    ParentID,    ParentKey,    Parent,    ParentList,    MaxSortOrder   FROM dbo.vw_Lists   WHERE PortalID = @PortalID   ORDER BY [Level], ListName"
912,AddDesktopModule,"CREATE PROCEDURE [dbo].[AddDesktopModule]   @PackageID  int,   @ModuleName  nvarchar(128),   @FolderName  nvarchar(128),   @FriendlyName  nvarchar(128),   @Description  nvarchar(2000),   @Version  nvarchar(8),   @IsPremium  bit,   @IsAdmin  bit,   @BusinessController nvarchar(200),   @SupportedFeatures int,   @Shareable  int,   @CompatibleVersions nvarchar(500),   @Dependencies  nvarchar(400),   @Permissions  nvarchar(400),   @ContentItemId  int,   @CreatedByUserID int,   @AdminPage  nvarchar(128),   @HostPage  nvarchar(128)    AS   INSERT INTO dbo.DesktopModules (    PackageID,    ModuleName,    FolderName,    FriendlyName,    Description,    Version,    IsPremium,    IsAdmin,    BusinessControllerClass,    SupportedFeatures,    Shareable,    CompatibleVersions,    Dependencies,    Permissions,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate,    ContentItemId,    AdminPage,    HostPage   )   VALUES (    @PackageID,    @FriendlyName,    @FolderName,    @FriendlyName,    @Description,    @Version,    @IsPremium,    @IsAdmin,    @BusinessController,    @SupportedFeatures,    @Shareable,    @CompatibleVersions,    @Dependencies,    @Permissions,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate(),    @ContentItemId,    @AdminPage,    @HostPage   )     SELECT SCOPE_IDENTITY()"
913,AddSimpleTerm,"CREATE PROCEDURE dbo.[AddSimpleTerm]    @VocabularyID  int,   @Name    nvarchar(250),   @Description  nvarchar(2500),   @Weight    int,   @CreatedByUserID int  AS   INSERT INTO dbo.Taxonomy_Terms (    VocabularyID,    [Name],    Description,    Weight,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )     VALUES (    @VocabularyID,    @Name,    @Description,    @Weight,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
914,Journal_ListForGroup,"CREATE PROCEDURE dbo.[Journal_ListForGroup]   @PortalId int,   @ModuleId int,   @CurrentUserId int,   @GroupId int,   @RowIndex int,   @MaxRows int,   @IncludeAllItems int = 0,   @IsDeleted int = 0   AS   DECLARE @EndRow int   SET @EndRow = @RowIndex + @MaxRows;    DECLARE @j TABLE(id int IDENTITY, journalid int, datecreated datetime)   IF EXISTS(SELECT * from dbo.[Journal_TypeFilters] WHERE ModuleId = @ModuleId)   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j       INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t        ON t.seckey = js.SecurityKey AND (js.SecurityKey = 'R' + CAST(@GroupId as nvarchar(100)) OR js.SecurityKey = 'E')       WHERE j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId AND jt.GroupId = @GroupId     INNER JOIN dbo.[Journal_TypeFilters] as jf ON jf.JournalTypeId = jt.JournalTypeId AND jf.ModuleId = @ModuleId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   ELSE   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j      INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t        ON t.seckey = js.SecurityKey AND (js.SecurityKey = 'R' + CAST(@GroupId as nvarchar(100)) OR js.SecurityKey = 'E')       WHERE j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId AND jt.GroupId = @GroupId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   WITH journalItems  AS   (    SELECT j.JournalId,      ROW_NUMBER() OVER (ORDER BY j.JournalId DESC) AS RowNumber    FROM dbo.[Journal] as j INNER JOIN @j as jtmp ON jtmp.JournalId = j.JournalId    WHERE j.PortalId = @PortalId   )   SELECT j.JournalId, j.JournalTypeId, j.Title, j.Summary, j.UserId, j.DateCreated, j.DateUpdated, j.PortalId,      j.ProfileId, j.GroupId, j.ObjectKey, j.AccessKey,      ""JournalOwner"" = '<entity><id>' + CAST(r.RoleId as nvarchar(150)) + '</id><name><![CDATA[' + r.RoleName + ']]></name></entity>',      ""JournalAuthor"" = CASE WHEN ISNULL(a.UserId,-1) >0 THEN '<entity><id>' + CAST(a.UserId as nvarchar(150)) + '</id><name><![CDATA[' + a.DisplayName + ']]></name></entity>' ELSE '' END,      ""JournalOwnerId"" = ISNULL(j.ProfileId,j.UserId),       jt.Icon, jt.JournalType,      ""Profile"" = CASE WHEN j.ProfileId > 0 THEN '<entity><id>' + CAST(p.UserID as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name><vanity></vanity></entity>' ELSE '' END,      ""SimilarCount"" = (SELECT COUNT(JournalId) FROM dbo.Journal WHERE ContentItemId = j.ContentItemId AND JournalTypeId = j.JournalTypeId),      jd.JournalXML, j.ContentItemId, j.ItemData, RowNumber, j.IsDeleted, j.CommentsDisabled, j.CommentsHidden   FROM journalItems as ji INNER JOIN     dbo.[Journal] as j ON j.JournalId = ji.JournalId INNER JOIN    dbo.[Journal_Types] as jt ON jt.JournalTypeId = j.JournalTypeId INNER JOIN    dbo.[Roles] as r ON j.GroupId = r.RoleId LEFT OUTER JOIN      dbo.[Journal_Data] as jd on jd.JournalId = j.JournalId LEFT OUTER JOIN      dbo.[Users] AS p ON j.ProfileId = p.UserID LEFT OUTER JOIN      dbo.[Users] AS a ON j.UserId = a.UserID   WHERE  ((@IncludeAllItems = 0) AND (RowNumber BETWEEN @RowIndex AND @EndRow AND j.IsDeleted = @IsDeleted))       OR       ((@IncludeAllItems = 1) AND (RowNumber BETWEEN @RowIndex AND @EndRow))   ORDER BY RowNumber ASC;"
915,AISystem_Category_Unit_GetByIndependent,"CREATE PROC [dbo].[AISystem_Category_Unit_GetByIndependent]  @ParentId int,  @Independent int  AS  -- AISystem_Category_Unit_GetByIndependent 0,2  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  IF(@ParentId >0)   SET @Condition +='  and  ParentId=' + str(@ParentId)  IF(@Independent >0)   SET @Condition +='  and  Independent=' + str(@Independent)  exec('   SELECT * FROM AISystem_Category_Unit   WHERE '+ @condition + '   AND status =1  ')  "
916,AIElearning_TestCampaign_RegistorUserTest_GetsByRegistorId,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetsByRegistorId]   @RegistorId int,  @status int  as    -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Ma ca thi  if(@RegistorId>-1)   set @Condition=@Condition+' AND  RegistorId ='+str(@RegistorId)  -- Trang thai lam bai  if(@status>-1)   set @Condition=@Condition+' AND Status ='+str(@status)  exec('      SELECT * from AIElearning_TestCampaign_RegistorUserTest    WHERE  '+@Condition+'          ')  SET QUOTED_IDENTIFIER OFF   "
917,AIElearning_TestCampaign_RegistorUserTest_GetAllTest,"  CREATE PROC AIElearning_TestCampaign_RegistorUserTest_GetAllTest  @RegistorUserId int ,  @Status int  AS  select * from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@RegistorUserId and (Status=@Status OR @Status=-1) order by StartTime desc"
918,AIElearning_LearingAndLecture_Out_GetInfoByParam,"CREATE proc [dbo].[AIElearning_LearingAndLecture_Out_GetInfoByParam]  @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Type int  as  Select top(1) * from AIElearning_LearingAndLecture_Out  where   UserName = @UserName and ReportYear = @ReportYear and UnitCode = @UnitCode and Type = @Type  SET QUOTED_IDENTIFIER OFF    "
919,Mobile_GetRedirectionRules,"CREATE PROCEDURE dbo.[Mobile_GetRedirectionRules] @RedirectionId INT  AS       SELECT  Id ,              RedirectionId ,              Capability ,              Expression      FROM    Mobile_RedirectionRules      WHERE RedirectionId = @RedirectionId"
920,RemovePackageReferenceRight,"  -- Create function for the security on the RemovePackageReferenceRight right  CREATE FUNCTION [RemovePackageReferenceRight](@UserKey nvarchar(250),@PackageId bigint=NULL)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN EXISTS(SELECT * FROM PackageItem INNER JOIN UserItem ON PackageItem.Owner=UserItem.Id WHERE PackageItem.Id=@PackageId AND UserItem.[Key]=@UserKey) THEN 1 ELSE 0 END)  END  "
921,AISystem_JobTitle_Talent_GetsBaseTalent,"CREATE proc [dbo].[AISystem_JobTitle_Talent_GetsBaseTalent]  @pageIndex int,  @pageSize int,  @type int,  @unitCode nvarchar(50),  @limit int  as  -- AISystem_JobTitle_Talent_GetsBaseTalent 1,10,1,1,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      Create table #AISystem_Talent_Temp (   PK int IDENTITY (1,1),   Id int,      Title nvarchar(250),   Code nvarchar(250),   Description nvarchar(max),   Limit int,   UnitCode nvarchar(50),   CateTalentId int,   LevelCode nvarchar(max),   ParentId int,   IsChild int,   SortColumn nvarchar(max)  )    -- Thêm năng lực cha (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,         STUFF( ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'') AS [LevelId] , -1, 0, str(t.Id)  From AISystem_Talent t  Where t.Limit = @limit and t.Type = @type  -- Them nang luc con (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  select tc.Id, tc.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,         STUFF(  ( Select ','+ CONVERT(varchar(50), tl.LevelCode)                From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'')  as [LevelId], tc.TalentId, 1,str(tc.TalentId)  +  str(  '-'+tc.Id)   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit = @limit and t.Type = @type    -- Thêm năng lực cha (nang luc don vi)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,           STUFF(   ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'')  as [LevelId], -1, 0, str(t.Id)  From AISystem_Talent t  Where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    -- Them nang luc con (nang luc don vi)  Insert Into #AISystem_Talent_Temp  select tc.Id, tc.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,         STUFF(     ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'')  as [LevelId], tc.TalentId, 1,str(tc.TalentId) + '-'+  str('-'+tc.Id)   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type     exec('  WITH #AISystem_Jobtitle_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY SortColumn desc) AS RowNumber,  * from #AISystem_Talent_Temp  where '+@Condition+'  )       SELECT  *   FROM #AISystem_Jobtitle_Talent   where RowNumber between '+ @start +'  and  '+ @end +'     ')"
922,AISystem_UserPermissionScope_GetByAIRoleId,"CREATE proc [dbo].[AISystem_UserPermissionScope_GetByAIRoleId]  @UserId int,  @AIRoleId int  as     exec('select * from AISystem_UserPermissionScope where UserId = ' + @UserId + ' and  [AIRoleId]=' +@AIRoleId)  "
923,UpdateDesktopModule,"CREATE PROCEDURE dbo.[UpdateDesktopModule]   @DesktopModuleId  int,       @PackageID   int,   @ModuleName   nvarchar(128),   @FolderName   nvarchar(128),   @FriendlyName   nvarchar(128),   @Description   nvarchar(2000),   @Version   nvarchar(8),   @IsPremium   bit,   @IsAdmin   bit,   @BusinessController  nvarchar(200),   @SupportedFeatures  int,   @Shareable   int,   @CompatibleVersions  nvarchar(500),   @Dependencies   nvarchar(400),   @Permissions   nvarchar(400),   @ContentItemId   int,   @LastModifiedByUserID  int,   @AdminPage  nvarchar(128),   @HostPage  nvarchar(128)    AS    UPDATE dbo.DesktopModules    SET          PackageID = @PackageID,     ModuleName = @ModuleName,     FolderName = @FolderName,     FriendlyName = @FriendlyName,     Description = @Description,     Version = @Version,     IsPremium = @IsPremium,     IsAdmin = @IsAdmin,     BusinessControllerClass = @BusinessController,     SupportedFeatures = @SupportedFeatures,     Shareable = @Shareable,     CompatibleVersions = @CompatibleVersions,     Dependencies = @Dependencies,     Permissions = @Permissions,     ContentItemId = @ContentItemId,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate(),     AdminPage=@AdminPage,     HostPage=@HostPage   WHERE  DesktopModuleId = @DesktopModuleId"
924,CK__GlobalObjec__Key__415A6496,(len([Key])<=(4096))
925,ClearFileContent,CREATE PROCEDURE dbo.[ClearFileContent]     @FileId      int    AS    UPDATE dbo.Files   SET    Content = NULL   WHERE  FileId = @FileId
926,AISystem_Category_Campaign_AddWithPosition,"    CREATE PROC [dbo].[AISystem_Category_Campaign_AddWithPosition]   @unitCode nvarchar(50),   @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),    @ObjectUse int,   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Campaign WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Campaign (   [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @unitCode,   @ParentId,   @Title,   @Code,   @ObjectUse,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Campaign WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Campaign WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Campaign WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Campaign WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Campaign WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Campaign         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Campaign (     [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (     @unitCode ,   @ParentId,   @Title,   @Code,   @ObjectUse ,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()            "
927,DeletePackage,CREATE PROCEDURE dbo.DeletePackage   @PackageID  int  AS   DELETE     FROM   dbo.Packages    WHERE  [PackageID] = @PackageID
928,Journal_ListForProfile,"CREATE PROCEDURE dbo.[Journal_ListForProfile]   @PortalId int,   @ModuleId int,   @CurrentUserId int,   @ProfileId int,   @RowIndex int,   @MaxRows int,   @IncludeAllItems int = 0,   @IsDeleted int = 0   AS   DECLARE @EndRow int   SET @EndRow = @RowIndex + @MaxRows;   DECLARE @j TABLE(id int IDENTITY, journalid int, datecreated datetime)   IF EXISTS(SELECT * from dbo.[Journal_TypeFilters] WHERE ModuleId = @ModuleId)   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j      INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t ON t.seckey = js.SecurityKey      WHERE j.ProfileId = @ProfileId AND j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId     INNER JOIN dbo.[Journal_TypeFilters] as jf ON jf.JournalTypeId = jt.JournalTypeId AND jf.ModuleId = @ModuleId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   ELSE   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j      INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t ON t.seckey = js.SecurityKey      WHERE j.ProfileId = @ProfileId AND j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   WITH journalItems  AS   (    SELECT j.JournalId,      ROW_NUMBER() OVER (ORDER BY j.JournalId DESC) AS RowNumber    FROM dbo.[Journal] as j INNER JOIN @j as jtmp ON jtmp.JournalId = j.JournalId    WHERE j.PortalId = @PortalId AND j.ProfileId = @ProfileId   )   SELECT j.JournalId, j.JournalTypeId, j.Title, j.Summary, j.UserId, j.DateCreated, j.DateUpdated, j.PortalId,      j.ProfileId, j.GroupId, j.ObjectKey, j.AccessKey,      ""JournalOwner"" = '<entity><id>' + CAST(p.UserId as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name></entity>',      ""JournalAuthor"" = CASE WHEN ISNULL(a.UserId,-1) >0 THEN '<entity><id>' + CAST(a.UserId as nvarchar(150)) + '</id><name><![CDATA[' + a.DisplayName + ']]></name></entity>' ELSE '' END,      ""JournalOwnerId"" = ISNULL(j.ProfileId,j.UserId),       jt.Icon, jt.JournalType,      ""Profile"" = CASE WHEN j.ProfileId > 0 THEN '<entity><id>' + CAST(p.UserID as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name><vanity></vanity></entity>' ELSE '' END,      ""SimilarCount"" = (SELECT COUNT(JournalId) FROM dbo.Journal WHERE ContentItemId = j.ContentItemId AND JournalTypeId = j.JournalTypeId),      jd.JournalXML, j.ContentItemId, j.ItemData, RowNumber, j.IsDeleted, j.CommentsDisabled, j.CommentsHidden   FROM journalItems as ji INNER JOIN     dbo.[Journal] as j ON j.JournalId = ji.JournalId INNER JOIN   dbo.[Journal_Types] as jt ON jt.JournalTypeId = j.JournalTypeId LEFT OUTER JOIN      dbo.[Journal_Data] as jd on jd.JournalId = j.JournalId LEFT OUTER JOIN      dbo.[Users] AS p ON j.ProfileId = p.UserID LEFT OUTER JOIN      dbo.[Users] AS a ON j.UserId = a.UserID   WHERE ((@IncludeAllItems = 0) AND (RowNumber BETWEEN @RowIndex AND @EndRow AND j.IsDeleted = @IsDeleted))      OR      ((@IncludeAllItems = 1) AND (RowNumber BETWEEN @RowIndex AND @EndRow))    ORDER BY RowNumber ASC;"
929,AddEventLogType,"CREATE PROCEDURE dbo.AddEventLogType   @LogTypeKey nvarchar(35),   @LogTypeFriendlyName nvarchar(50),   @LogTypeDescription nvarchar(128),   @LogTypeOwner nvarchar(100),   @LogTypeCSSClass nvarchar(40)  AS   INSERT INTO dbo.EventLogTypes   (LogTypeKey,   LogTypeFriendlyName,   LogTypeDescription,   LogTypeOwner,   LogTypeCSSClass)  VALUES   (@LogTypeKey,   @LogTypeFriendlyName,   @LogTypeDescription,   @LogTypeOwner,   @LogTypeCSSClass)"
930,AIElearning_TestCampaign_RegistorUser_GetsAllByUserIdCount,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsAllByUserIdCount]  @TestCampaignId int,  @UserId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsAllByUserIdCount 6, 7, 2  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Ma dot thi  if(@TestCampaignId>-1)   set @Condition=@Condition+' AND  tc.Id ='+str(@TestCampaignId)  -- UserId  if(@UserId>-1)   set @Condition=@Condition+' AND ru.UserId='+str(@UserId)  -- Trang thai lam bai  if(@status>-1)   set @Condition=@Condition+' AND ISNULL(ut.Status, 3 ) ='+str(@status)  exec('  WITH #AIElearning_TestCampaign_RegistorUser AS(     SELECT ROW_NUMBER() OVER (ORDER BY ru.Id desc) AS RowNumber,     ru.*, r.Name, r.Id as IdCaThi, u.UnitCode, u.UnitChildCode, u.JobTitleCode, r.Code, ISNULL(ut.Status, 3 )  as CompleteStatus     FROM  AIElearning_TestCampaign_Registor AS r INNER JOIN     AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId INNER JOIN     AISystem_UserInfo AS u ON ru.UserId = u.UserId inner join AIElearning_TestCampaign tc on tc.Id = r.TestCampaignId      left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId    WHERE (ut.Id = (select max(rut.Id)    FROM AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null) and '+@Condition+'      )     SELECT  count(*)   FROM #AIElearning_TestCampaign_RegistorUser  ')  SET QUOTED_IDENTIFIER OFF     "
931,SearchTypes_GetAll,CREATE PROCEDURE dbo.[SearchTypes_GetAll]  AS      SELECT *   FROM dbo.[SearchTypes]
932,AIElearning_TestCampaign_RegistorStaffTest_DeleteStaffId,"create proc [dbo].[AIElearning_TestCampaign_RegistorStaffTest_DeleteStaffId]  @StaffId int,  @TestRegistorId int  as  delete from AIElearning_TestCampaign_RegistorStaffTest where StaffId=@StaffId and TestRegistorId=@TestRegistorId  "
933,CreateAttemptRight,"  -- Create function for the security on the CreateAttemptRight right  CREATE FUNCTION [CreateAttemptRight](@UserKey nvarchar(250),@RootActivityId bigint=NULL,@LearnerId bigint=NULL)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN      (EXISTS(SELECT * FROM ActivityPackageItem INNER JOIN PackageItem ON ActivityPackageItem.PackageId=PackageItem.Id INNER JOIN UserItem ON PackageItem.Owner=UserItem.Id WHERE ActivityPackageItem.Id=@RootActivityId AND UserItem.[Key]=@UserKey)) AND      (EXISTS(SELECT * FROM UserItem WHERE UserItem.[Key]=@UserKey AND Id=@LearnerId)) THEN 1 ELSE 0 END)  END  "
934,AIElearning_Monney_Class_GetSumClassidMoney,CREATE proc [dbo].[AIElearning_Monney_Class_GetSumClassidMoney]   @classid int  --AIElearning_Monney_Class_GetSumClassidMoney 4  as  begin  if Exists(select * from AIElearning_Monney_Class where Classid=@classid)  (  select sum(MoneyReality) from AIElearning_Monney_Class where Classid=@classid  )  else  (  select distinct 0 from AIElearning_Monney_Class   )  end  
935,AISystem_Category_TrainingType_GetsByArray,"CREATE proc [dbo].[AISystem_Category_TrainingType_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_TrainingType  where Id in(select * from Split(@arrId))  "
936,GetUserByDisplayName,"CREATE PROCEDURE dbo.[GetUserByDisplayName]     @PortalID int,   @DisplayName nvarchar(128)    AS   SELECT * FROM dbo.vw_Users   WHERE  DisplayName = @DisplayName    AND  ((@PortalId IS NULL) OR (PortalId = @PortalID) OR IsSuperUser = 1)"
937,vw_DesktopModules,"CREATE VIEW dbo.[vw_DesktopModules]  AS   SELECT    DM.DesktopModuleID,    DM.FriendlyName,    DM.Description,    DM.Version,    DM.IsPremium,    DM.IsAdmin,    DM.BusinessControllerClass,    DM.FolderName,    DM.ModuleName,    DM.SupportedFeatures,    DM.CompatibleVersions,    DM.Dependencies,    DM.Permissions,    DM.PackageID,    DM.CreatedByUserID,    DM.CreatedOnDate,    DM.LastModifiedByUserID,    DM.LastModifiedOnDate,    CI.ContentItemID,    CI.[Content],    CI.ContentTypeID,    CI.TabID,    CI.ModuleID,    CI.ContentKey,    CI.Indexed,    DM.Shareable,    DM.AdminPage,    DM.HostPage   FROM dbo.[DesktopModules] AS DM    LEFT OUTER JOIN dbo.[ContentItems] AS CI ON DM.ContentItemId = CI.ContentItemID"
938,KillConnectionsHost,"CREATE PROCEDURE [dbo].[KillConnectionsHost] @hostname varchar(MAX)  AS          DECLARE @spid int          DECLARE @sql varchar(MAX)            DECLARE cur CURSOR FOR                  SELECT spid FROM sys.sysprocesses P                          JOIN sys.sysdatabases D ON (D.dbid = P.dbid)                          JOIN sys.sysusers U ON (P.uid = U.uid)                          WHERE hostname = @hostname AND hostname != ''                          AND P.spid != @@SPID            OPEN cur            FETCH NEXT FROM cur                  INTO @spid            WHILE @@FETCH_STATUS = 0          BEGIN                  PRINT CONVERT(varchar, @spid)                    SET @sql = 'KILL ' + RTRIM(@spid)                  PRINT @sql                  EXEC(@sql)                    FETCH NEXT FROM cur                          INTO @spid          END            CLOSE cur          DEALLOCATE cur"
939,AISystem_Category_GetInfoById,create PROC [dbo].[AISystem_Category_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category where Id=@Id  SET QUOTED_IDENTIFIER OFF         
940,CoreMessaging_CountArchivedMessagesByConversation,CREATE PROCEDURE dbo.[CoreMessaging_CountArchivedMessagesByConversation]   @ConversationID int  AS  BEGIN   SELECT COUNT(*) AS TotalArchivedThreads   FROM dbo.[CoreMessaging_MessageRecipients]   WHERE MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = @ConversationID)   AND [Archived] = 1  END
941,Journal_ListForSummary,"CREATE PROCEDURE dbo.[Journal_ListForSummary]   @PortalId int,   @ModuleId int,   @CurrentUserId int,   @RowIndex int,   @MaxRows int,   @IncludeAllItems int = 0,   @IsDeleted int = 0    AS   IF @RowIndex = 0   BEGIN    SET @RowIndex = 1   END   DECLARE @EndRow int   SET @EndRow = @RowIndex + @MaxRows - 1;   DECLARE @j TABLE(id int IDENTITY, journalid int, datecreated datetime)   IF EXISTS(SELECT * from dbo.[Journal_TypeFilters] WHERE ModuleId = @ModuleId)   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j      INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t ON t.seckey = js.SecurityKey      WHERE j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId     INNER JOIN dbo.[Journal_TypeFilters] as jf ON jf.JournalTypeId = jt.JournalTypeId AND jf.ModuleId = @ModuleId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   ELSE   INSERT INTO @j     SELECT j.journalid, jt.datecreated from (     SELECT DISTINCT js.JournalId from dbo.[Journal] as j      INNER JOIN dbo.[Journal_Security] as js ON js.JournalId = j.JournalId      INNER JOIN dbo.[Journal_User_Permissions](@PortalId,@CurrentUserId ,1) as t ON t.seckey = js.SecurityKey      WHERE j.PortalId = @PortalId     ) as j INNER JOIN dbo.[Journal] jt ON jt.JournalId = j.JournalId AND jt.PortalId = @PortalId     ORDER BY jt.DateCreated DESC, jt.JournalId DESC;   WITH journalItems  AS   (    SELECT j.JournalId,      ROW_NUMBER() OVER (ORDER BY j.JournalId DESC) AS RowNumber    FROM dbo.[Journal] as j INNER JOIN @j as jtmp ON jtmp.JournalId = j.JournalId    WHERE j.PortalId = @PortalId   )   SELECT j.JournalId, j.JournalTypeId, j.Title, j.Summary, j.UserId, j.DateCreated, j.DateUpdated, j.PortalId,      j.ProfileId, j.GroupId, j.ObjectKey, j.AccessKey,      ""JournalOwner"" = '<entity><id>' + CAST(p.UserId as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name></entity>',      ""JournalAuthor"" = CASE WHEN ISNULL(a.UserId,-1) >0 THEN '<entity><id>' + CAST(a.UserId as nvarchar(150)) + '</id><name><![CDATA[' + a.DisplayName + ']]></name></entity>' ELSE '' END,      ""JournalOwnerId"" = ISNULL(j.ProfileId,j.UserId),       jt.Icon, jt.JournalType,      ""Profile"" = CASE WHEN j.ProfileId > 0 THEN '<entity><id>' + CAST(p.UserID as nvarchar(150)) + '</id><name><![CDATA[' + p.DisplayName + ']]></name><vanity></vanity></entity>' ELSE '' END,      ""SimilarCount"" = (SELECT COUNT(JournalId) FROM dbo.Journal WHERE ContentItemId = j.ContentItemId AND JournalTypeId = j.JournalTypeId),      jd.JournalXML, j.ContentItemId, j.ItemData, RowNumber, j.IsDeleted, j.CommentsDisabled, j.CommentsHidden   FROM journalItems as ji INNER JOIN     dbo.[Journal] as j ON j.JournalId = ji.JournalId INNER JOIN   dbo.[Journal_Types] as jt ON jt.JournalTypeId = j.JournalTypeId LEFT OUTER JOIN      dbo.[Journal_Data] as jd on jd.JournalId = j.JournalId LEFT OUTER JOIN      dbo.[Users] AS p ON j.ProfileId = p.UserID LEFT OUTER JOIN      dbo.[Users] AS a ON j.UserId = a.UserID   WHERE ((@IncludeAllItems = 0) AND (RowNumber BETWEEN @RowIndex AND @EndRow AND j.IsDeleted = @IsDeleted))      OR      ((@IncludeAllItems = 1) AND (RowNumber BETWEEN @RowIndex AND @EndRow ))   ORDER BY RowNumber ASC;"
942,AISystem_Category_CheckExistsCode,create proc [dbo].[AISystem_Category_CheckExistsCode]  @code nvarchar(50)  as  select count(*) from AISystem_Category where Code = @code
943,AISystem_Introl_GetsBySearchCount,create proc AISystem_Introl_GetsBySearchCount  as  select COUNT(*) from AISystem_Introl    SET QUOTED_IDENTIFIER OFF   
944,AISystem_UserInfo_GetsUsersNotInLecturersCount,"CREATE proc [dbo].[AISystem_UserInfo_GetsUsersNotInLecturersCount]   @username nvarchar(250),  @Limit int,  @Type int,  @UnitCode nvarchar(50),   @UnitChildCode nvarchar(50),   @JobTitleCode nvarchar(50),   @Status int,  @tungay datetime,  @denngay datetime  as  -- AISystem_UserInfo_GetsUsersNotInLecturersCount '',-1,-1,'','','',1,'01/01/1900','01/01/1900'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (tblUser.Username like N''%' + @username + '%'' or tblUser.EmployeeCode like N''%' + @username + '%'' ) '  IF(@Limit > 0)   set @condition = @condition +    ' And  ( tblUser.Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  ( tblUser.Type= '+ STR(@Type)+' )'  IF(@UnitCode <> '')   set @condition = @condition +    ' And  ( tblUser.UnitCode= '''+ @UnitCode+''' )'  IF(@UnitChildCode <> '' and @UnitChildCode <> '-1' )   set @condition = @condition +    ' And  ( tblUser.UnitChildCode= '''+ @UnitChildCode+''' )'  IF(@JobTitleCode <> '')   set @condition = @condition +    ' And  ( tblUser.JobTitle= '''+ @JobTitleCode+''' )'  IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'  IF CONVERT(datetime,@tungay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate >= ''' + convert(nvarchar(23),@tungay,121) + ''''  IF CONVERT(datetime,@denngay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate <= ''' + convert(nvarchar(23),@denngay,121) + ''''    exec('   select COUNT(*) from AISystem_UserInfo as tblUser where Id not in (select UserInfoId from AIElearning_Lecturers) and ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF  "
945,AIElearning_TestCampaign_RegistorUser_GetsAllByUserId,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsAllByUserId]  @pageIndex int,   @pageSize int,  @TestCampaignId int,  @UserId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsAllByUserId 1, 111, -1, 7, 3  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    --Ma dot thi  if(@TestCampaignId>-1)   set @Condition=@Condition+' AND  tc.Id ='+str(@TestCampaignId)  -- UserId  if(@UserId>-1)   set @Condition=@Condition+' AND ru.UserId='+str(@UserId)  -- Trang thai lam bai  if(@status>-1)   set @Condition=@Condition+' AND ISNULL(ut.Status, 3 ) ='+str(@status)    exec('  WITH #AIElearning_TestCampaign_RegistorUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY ru.Id desc) AS RowNumber,     ru.*, r.Name, r.Id as IdCaThi, u.UnitCode, u.UnitChildCode, u.JobTitleCode, r.Code, ISNULL(ut.Status, 3 )  as CompleteStatus     FROM  AIElearning_TestCampaign_Registor AS r INNER JOIN     AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId INNER JOIN     AISystem_UserInfo AS u ON ru.UserId = u.UserId inner join AIElearning_TestCampaign tc on tc.Id = r.TestCampaignId      left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId   where (ut.Id = (select max(rut.Id)   from AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null) and '+@Condition+'      )       SELECT  *   FROM #AIElearning_TestCampaign_RegistorUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF       "
946,UpdateProfile,"create procedure dbo.UpdateProfile    @UserID        int,   @PortalID      int,  @ProfileData   ntext    as    update dbo.Profile  set    ProfileData = @ProfileData,         CreatedDate = getdate()  where  UserId = @UserID  and    PortalId = @PortalID"
947,DeleteAttemptRight,"  -- Create function for the security on the DeleteAttemptRight right  CREATE FUNCTION [DeleteAttemptRight](@UserKey nvarchar(250),@AttemptId bigint=NULL)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN EXISTS(SELECT * FROM AttemptItem INNER JOIN UserItem ON AttemptItem.LearnerId=UserItem.Id WHERE AttemptItem.Id=@AttemptId AND UserItem.[Key]=@UserKey) THEN 1 ELSE 0 END)  END  "
948,AIElearning_LearnRule_Level_Table_GetsBySearch,"CREATE proc [dbo].[AIElearning_LearnRule_Level_Table_GetsBySearch]  @TableId int,  @typetime int,  @startyear int,  @endyear int,  @Time int  as  select * from AIElearning_LearnRule_Level_Table where TableId = @TableId and TypeTime=@typetime  and startyear=@startyear and endyear=@endyear and Time = @Time  "
949,AISystem_Category_TrainingType_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_TrainingType_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_TrainingType AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_TrainingType       )         SELECT     *   FROM #AISystem_Category_TrainingType   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
950,AddException,"CREATE PROCEDURE dbo.AddException   @ExceptionHash varchar(100),   @Message nvarchar(500),   @StackTrace nvarchar(max),   @InnerMessage nvarchar(500),   @InnerStackTrace nvarchar(max),   @Source nvarchar(500)  AS    BEGIN TRY   IF NOT EXISTS (SELECT * FROM dbo.[Exceptions] WHERE ExceptionHash=@ExceptionHash)   INSERT INTO dbo.[Exceptions]    (ExceptionHash,    [Message],    StackTrace,    InnerMessage,    InnerStackTrace,    Source)   VALUES    (@ExceptionHash,    @Message,    @StackTrace,    @InnerMessage,    @InnerStackTrace,    @Source)  END TRY  BEGIN CATCH    END CATCH"
951,CK__GlobalObj__Descr__4342AD08,(len([Description])<=(4096))
952,AISystem_Subject_GetAllUserInSubjectReport,"CREATE proc [dbo].[AISystem_Subject_GetAllUserInSubjectReport]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Unitcode nvarchar(250),  @subjectId int,  @Status int,  @UnitChidcode nvarchar(250)  as  --AISystem_Subject_GetAllUserInSubjectReport 1,100,'','-1',110,-1,''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.EmployeeCode like N''%' + @Keyword + '%''))'   --mã khóa học  if(@subjectId > -1)   set @Condition=@Condition+' AND cls.SubjectId ='+str(@subjectId)   --trạng thái  if(@Status > -1)   set @Condition=@Condition+' AND c.Status='+str(@Status)  if(@Unitcode <>'-1')   set @Condition=@Condition+' AND i.UnitCode='''+@Unitcode+''''  if(@UnitChidcode<>'')   set @Condition=@Condition+' AND i.UnitChildCode in (select * from dbo.split('''+@UnitChidcode+'''))'      exec('    WITH #AIElearning_ClassUser AS(     SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,c.*, i.Displayname, i.UnitChildPath, u.Title AS UnitName, j.Title AS JobTitleName,i.EmployeeCode,i.Mastercode, i.Email,             (SELECT top (1) EndDate FROM AIElearning_Classlog WHERE Username=c.username and ClassId=c.ClassId order by id desc) [TGTruyCapGanNhat],       (select COUNT(id) from AIElearning_ClassLog where ClassId=c.ClassId and Username =c.username) [SoLanHoc],       (SELECT ISNULL(SUM(TotalTime),0) FROM AIElearning_Classlog  WHERE ClassId=c.ClassId and Username=c.username AND Type<>3) [TGTruyCap],       dbo.GeResurl(c.LearnStatus) [TrangThai],       dbo.GetMark(c.ClassId,c.UserId,3,2) [KetQuaChiTiet] ,(CASE WHEN dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) <> '''' THEN  SUBSTRING(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2),1, LEN(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2)) -1) ELSE ''N/A'' END) as [KetQuaCuoiCung], CASE WHEN  dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) = '''' THEN N''Chưa thi'' else       (CASE  WHEN  CAST((CASE WHEN dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) <> '''' THEN  SUBSTRING(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2),1, LEN(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2)) -1) ELSE ''0'' END) AS FLOAT) > (ISNULL((SELECT TOP 1 WeightScore FROM dbo.AIElearning_ClassItem WHERE Type = 3 AND ClassId =c.ClassId ORDER BY id DESC),0))  THEN N''Đạt'' ELSE N''Không đạt'' END) END AS [KetQuaDat]     from AIElearning_ClassUser c inner join  AISystem_UserInfo i on i.UserId = c.UserID       LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code      LEFT JOIN dbo.AISystem_JobTitle_Title j ON c.JobTitleCode = j.Code     JOIN dbo.AIElearning_Class cls ON c.ClassId = cls.Id  JOIN dbo.AISystem_Subject s ON cls.SubjectId = s.Id       where ' + @condition +' and u.Status = 1    )     SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
953,AIElearning_TestCampaign_Registor_GetInfoByPassword,"create proc [dbo].[AIElearning_TestCampaign_Registor_GetInfoByPassword]  @testCampaignId int,  @password nvarchar(50)  as  -- AIElearning_TestCampaign_Registor_GetInfoByPassword 1,''    select * from AIElearning_TestCampaign_Registor where TestCampaignId = @testCampaignId and [Password]  = @password  "
954,SaveUserRelationship,"CREATE PROCEDURE dbo.[SaveUserRelationship]      @UserRelationshipID INT,   @UserID INT,   @RelatedUserID INT,   @RelationshipID INT,   @Status INT,   @CreateUpdateUserID INT        AS       IF ( @UserRelationshipID = -1 )           BEGIN              INSERT  dbo.UserRelationships                      ( UserID,         RelatedUserID,              RelationshipID,         Status,                        CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @UserID , -- @UserID int         @RelatedUserID , -- @RelatedUserlID int         @RelationshipID, -- @RelationshipID int         @Status , -- @Status int                        @CreateUpdateUserID , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @CreateUpdateUserID , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )                                    SELECT  @UserRelationshipID = SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.UserRelationships              SET     UserID = @UserID,       RelatedUserID = @RelatedUserID,       RelationshipID = @RelationshipID,       Status = @Status,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   UserRelationshipID = @UserRelationshipID          END                SELECT  @UserRelationshipID"
955,AISystem_JobTitle_GetInfoByCode,  create proc [dbo].[AISystem_JobTitle_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_JobTitle_GetInfoByCode 'hainv'  Select top(1) * from AISystem_JobTitle where   Code = @Code  SET QUOTED_IDENTIFIER OFF     
956,AISystem_Introl_GetsBySearch,"  create proc AISystem_Introl_GetsBySearch  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Introl AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Introl       )         SELECT     *   FROM #AISystem_Introl   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
957,AISystem_UserInfo_GetsUsersNotInLecturers,"CREATE proc [dbo].[AISystem_UserInfo_GetsUsersNotInLecturers]   @pageIndex int,  @pageSize int,  @username nvarchar(250),  @Limit int,  @Type int,  @UnitCode nvarchar(50),   @UnitChildCode nvarchar(50),   @JobTitleCode nvarchar(50),   @Status int,  @tungay datetime,  @denngay datetime  as  -- AISystem_UserInfo_GetsUsersNotInLecturers 1,10,'dsa',-1,-1,'','','',1,'01/01/1900','01/01/1900'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (tblUser.Username like N''%' + @username + '%'' or tblUser.EmployeeCode like N''%' + @username + '%'' ) '  IF(@Limit > 0)   set @condition = @condition +    ' And  ( tblUser.Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  ( tblUser.Type= '+ STR(@Type)+' )'  IF(@UnitCode <> '')   set @condition = @condition +    ' And  ( tblUser.UnitCode= '''+ @UnitCode+''' )'  IF(@UnitChildCode <> '' and @UnitChildCode <> '-1')   set @condition = @condition +    ' And  ( tblUser.UnitChildCode= '''+ @UnitChildCode+''' )'  IF(@JobTitleCode <> '')   set @condition = @condition +    ' And  ( tblUser.JobTitle= '''+ @JobTitleCode+''' )'  IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'  IF CONVERT(datetime,@tungay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate >= ''' + convert(nvarchar(23),@tungay,121) + ''''  IF CONVERT(datetime,@denngay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate <= ''' + convert(nvarchar(23),@denngay,121) + ''''    exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, Id, Username,Displayname, Mastercode,EmployeeCode, ISNULL(UnitCode,'''') as UnitCode, UnitChildPath, IsNULL(JobTitleCode,'''') as JobTitleCode, Status     from AISystem_UserInfo as tblUser     where Id not in (select UserInfoId from AIElearning_Lecturers) and ' + @condition +' )    SELECT   *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
958,AIElearning_ClassItem_CopyFromCurriculum,"      CREATE PROCEDURE [dbo].[AIElearning_ClassItem_CopyFromCurriculum]   @CurriculumId int,   @ClassId int  AS  INSERT INTO [dbo].[AIElearning_ClassItem]             ([ClassId]             ,[ParentId]             ,[Type]             ,[Name]             ,[Description]             ,[DataId]             ,[Required]             ,[PassCore]             ,[WeightScore]             ,[ViewCount]             ,[StartTime]             ,[EndTime]             ,[LevelNo]             ,[OrderNo]             ,[ChildId])  SELECT @ClassId        ,[ParentId]        ,[Type]        ,[Name]        ,[Description]        ,[DataId]        ,[Required]        ,[PassCore]        ,[WeightScore]        ,[ViewCount]        ,[StartTime]        ,[EndTime]        ,[LevelNo]        ,[OrderNo]        ,[ChildId]    FROM [dbo].[AIElearning_CurriculumItem] where [AIElearning_CurriculumItem].CurriculumId=@CurriculumId      "
959,AIElearning_classObject,create proc [dbo].[AIElearning_classObject]    as         SELECT *   from AISystem_category 
960,AIElearning_TestCampaign_RegistorUser_GetsByDistinctMajor,    create proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByDistinctMajor]  @TestRegistorId int as -- AIElearning_TestCampaign_RegistorUser_GetsByDistinctMajor 20 DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@TestRegistorId > 0)   set @condition = @condition +    ' And  (TestRegistorId= '+ STR(@TestRegistorId)+' )'    exec('   SELECT Distinct(Major)   FROM            AIElearning_TestCampaign_RegistorUser    where ' + @condition +' and Major is not null  and Major <> ''''  ')  SET QUOTED_IDENTIFIER OFF  
961,UpdateContentType,"CREATE PROCEDURE dbo.[UpdateContentType]    @ContentTypeId  int,   @ContentType  nvarchar(250)  AS   UPDATE dbo.ContentTypes     SET      ContentType = @ContentType   WHERE ContentTypeId = @ContentTypeId"
962,GetPortalDesktopModules,"CREATE PROCEDURE dbo.GetPortalDesktopModules   @PortalId int,   @DesktopModuleId int    AS   SELECT PortalDesktopModules.*,       PortalName,       FriendlyName   FROM   PortalDesktopModules    INNER JOIN vw_Portals ON PortalDesktopModules.PortalId = vw_Portals.PortalId    INNER JOIN DesktopModules ON PortalDesktopModules.DesktopModuleId = DesktopModules.DesktopModuleId   WHERE  ((PortalDesktopModules.PortalId = @PortalId) OR @PortalId is null)    AND    ((PortalDesktopModules.DesktopModuleId = @DesktopModuleId) OR @DesktopModuleId is null)   ORDER BY PortalDesktopModules.PortalId, PortalDesktopModules.DesktopModuleId"
963,AISystem_JobTitle_Title_GetsByDistinctTitle,"CREATE proc [dbo].[AISystem_JobTitle_Title_GetsByDistinctTitle] @UnitCode nvarchar(50),  @JobTitleCode nvarchar(50) as -- AISystem_JobTitle_Title_GetsByDistinctTitle 0, 0 DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@UnitCode <> '')   set @condition = @condition +    ' And  (UnitCode= '+ STR(@UnitCode)+' )'  IF(@JobTitleCode > 0)   set @condition = @condition +    ' And  (JobTitleCode= '+ STR(@JobTitleCode)+' )'    exec('   SELECT Distinct(Title)   FROM            AISystem_JobTitle_Title    where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF      "
964,ExecuteSessionRight,"  -- Create function for the security on the ExecuteSessionRight right  CREATE FUNCTION [ExecuteSessionRight](@UserKey nvarchar(250),@AttemptId bigint=NULL)  RETURNS bit  AS  BEGIN      RETURN (CASE WHEN EXISTS(SELECT * FROM AttemptItem INNER JOIN UserItem ON AttemptItem.LearnerId=UserItem.Id WHERE AttemptItem.Id=@AttemptId AND UserItem.[Key]=@UserKey) THEN 1 ELSE 0 END)  END  "
965,AIElearning_ClassLog_CheckSuccess,"create proc [dbo].[AIElearning_ClassLog_CheckSuccess]  @Username nvarchar(500),  @ClassItemId int,  @Data nvarchar(500)  AS  SELECT COUNT(Id) FROM AIElearning_ClassLog WHERE Username=@Username AND ClassItemId=@ClassItemId AND Data=@Data  "
966,AISystem_Category_TrainingType_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_TrainingType_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_TrainingType    SET QUOTED_IDENTIFIER OFF  
967,CoreMessaging_GetMessagesBySender,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessagesBySender]      @SenderUserID INT,   @PortalID INT  AS  BEGIN   SELECT [MessageID], [To], [From], [Subject], [Body], [ConversationID], [ReplyAllAllowed], [SenderUserID], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]    FROM   dbo.[CoreMessaging_Messages]    WHERE  [SenderUserID] = @SenderUserID AND [PortalID] = @PortalID   AND [NotificationTypeID] IS NULL  END"
968,AISystem_Category_Campaign_ChildrenByParentId,"    CREATE PROC [dbo].[AISystem_Category_Campaign_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50)  AS  SELECT * FROM AISystem_Category_Campaign    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )   ORDER BY OrderNo        "
969,AIEventLog_CountList,"CREATE proc [dbo].[AIEventLog_CountList]  @ObjName nvarchar(500),---Full text search  @ObjId int,  @ObjType int,  @DateBegin nvarchar(15),  @DateEnd nvarchar(15),  @Action int,  @UserId int,  @PortalId int,  @LanguageId nvarchar(50)  as  Begin   if @ObjName='""""' set @ObjName=null   if @DateBegin='""""' set @DateBegin=null   if @DateEnd='""""' set @DateEnd=null   if(@ObjName is not null) and (@ObjName<>'')    set @ObjName='""'+@ObjName+'""'   else    set @ObjName=null   Declare @Sql nvarchar(2000)   Declare @SqlObj nvarchar(2000)   Declare @SqlDate nvarchar(2000)   Declare @SqlAction nvarchar(2000)   Declare @SqlUser nvarchar(2000)   Declare @SqlPortal nvarchar(500)   set @SqlPortal = ' (PortalId = ' + STR(@PortalId) +  ') and (LanguageId = ''' + @LanguageId + ''')'   set @SqlObj=' 1=1'   set @SqlDate=' 1=1'   set @SqlAction=' 1=1'   set @SqlUser=' 1=1'   if(@ObjId=-1)    set @ObjId=null   if(@ObjType=-1)     set @ObjType=null   if(@Action=-1)     set @Action=null   if(@UserId=-1)     set @UserId=null   ------------------------------------   if(@Action is not null)    begin      set @SqlAction=' [ActionId] = '+str(@Action)    end   else    begin     set @SqlAction='1=1'    end   ----------------------------------   if(@UserId is not null)    begin      set @SqlUser=' [UserId] = ' +str(@UserId)    end   else    begin     set @SqlUser='1=1'    end   --------------------------------------    if(@DateBegin is not null)  and (@DateBegin<>'')     begin      if(@DateEnd is not null)  and (@DateEnd<>'')       set @SqlDate=' (convert(nvarchar,CreatedDate,103) between '''+ @DateBegin+''' and '''+ @DateEnd+''')'      else       set @SqlDate=' (convert(nvarchar,CreatedDate,103) >= '''+ @DateBegin+''')'     end    else     begin      if(@DateEnd is not null)  and (@DateEnd<>'')        set @SqlDate=' (convert(nvarchar,CreatedDate,103) <= '''+ @DateEnd+''')'     end   -------------------------------------------    if(@ObjName is not null) and (@ObjName <>'')     Begin      if(@ObjId is not null)       set @SqlObj=' contains(ObjectName,'''+@ObjName+''') and ObjectId='+str(@ObjId)      else       set @SqlObj=' contains(ObjectName,'''+@ObjName+''')'     end    else     begin      if(@ObjId is not null)       set @SqlObj='ObjectId='+ str(@ObjId)      else       set @SqlObj=' 1=1'     end   ---------------------------------------------   if(@ObjType is not null)     begin     set @SqlObj=@SqlObj+' and ObjectType='+STR(@ObjType)    end   ----------------------------------------------   set @Sql=' Select count(Id)      FROM [AIEventLog]   where '+ @SqlObj + ' And ' + @SqlDate +' And '+ @SqlAction + ' And '+ @SqlUser + ' And ' + @SqlPortal   exec(@Sql)   --select @Sql  End        "
970,AISystem_UserInfo_CheckEmail,Create PROC [dbo].[AISystem_UserInfo_CheckEmail]  @Email nvarchar(150)  AS  SELECT COUNT(ID) FROM AISystem_UserInfo where Email=@Email  
971,GetUserAuthentication,CREATE PROCEDURE dbo.[GetUserAuthentication]    @UserID          int    AS    select * from dbo.UserAuthentication       where UserId = @UserID
972,AIElearning_ClassItem_DeleteAllChildAndIncludeParentID,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_DeleteAllChildAndIncludeParentID]  @ClassId int,  @ParentId int,   @includeParentId BIT,  @ParentType INT  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.Id = @ParentId)      AND AIElearning_ClassItem.ClassId = @ClassId AND AIElearning_ClassItem.ParentType = @ParentType   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL))      AND AIElearning_ClassItem.ClassId = @ClassId AND AIElearning_ClassItem.ParentType = @ParentType   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_ClassItem  S ON S.ParentId=T.Id AND T.Level=@Level AND S.ClassId = @ClassId AND S.ParentType = @ParentType    SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    DELETE FROM AIElearning_ClassItem where ID in(SELECT ID FROM #PathConstruction )    DROP TABLE #PathConstruction    "
973,AIElearning_TestCampaign_RegistorUser_GetsByDistinctRegion,  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByDistinctRegion]  @TestRegistorId int as -- AIElearning_TestCampaign_RegistorUser_GetsByDistinctRegion 0 DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@TestRegistorId > 0)   set @condition = @condition +    ' And  (TestRegistorId= '+ STR(@TestRegistorId)+' )'    exec('   SELECT Distinct(Region)   FROM            AIElearning_TestCampaign_RegistorUser    where ' + @condition +' and  Region is not null and Region <> ''''  ')  SET QUOTED_IDENTIFIER OFF      
974,UpdateSkinPackage,"CREATE PROCEDURE dbo.[UpdateSkinPackage]   @SkinPackageID  int,   @PackageID      int,   @PortalID       int,   @SkinName       nvarchar(50),   @SkinType       nvarchar(20),   @LastModifiedByUserID int  AS   UPDATE dbo.SkinPackages    SET     PackageID = @PackageID,     PortalID = @PortalID,     SkinName = @SkinName,     SkinType = @SkinType,      [LastModifiedByUserID] = @LastModifiedByUserID,      [LastModifiedOnDate] = getdate()   WHERE SkinPackageID = @SkinPackageID"
975,AIElearning_LearingAndLecture_OutItem_GetSumTime,CREATE proc [dbo].[AIElearning_LearingAndLecture_OutItem_GetSumTime]   @OutId int  as  -- AIElearning_LearingAndLecture_OutItem_GetSumTime 2  begin  if EXISTS(select * from AIElearning_LearingAndLecture_OutItem where OutId=@OutId)   select Sum(Time) from AIElearning_LearingAndLecture_OutItem where OutId=@OutId  else    select 0  end      
976,CoreMessaging_DeleteNotificationTypeAction,CREATE PROCEDURE dbo.[CoreMessaging_DeleteNotificationTypeAction]   @NotificationTypeActionID int  AS  BEGIN   DELETE    FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeActionID] = @NotificationTypeActionID  END
977,ActivityAttemptItem$DefaultView,"  -- Create function that implements the default view for the ActivityAttemptItem item type  CREATE FUNCTION [ActivityAttemptItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [AttemptId], [ActivityPackageId], [CompletionStatus], [AttemptCount], [DataModelCache], [EvaluationPoints], [Exit], [LessonStatus], [Location], [MinScore], [MaxScore], [ProgressMeasure], [RandomPlacement], [RawScore], [ScaledScore], [SequencingDataCache], [SessionStartTimestamp], [SessionTime], [SuccessStatus], [SuspendData], [TotalTime]      FROM [ActivityAttemptItem]  )  "
978,GetAllUsers,"CREATE PROCEDURE dbo.[GetAllUsers]   @PortalID        int,   @PageIndex       int,   @PageSize        INT,   @IncludeDeleted  bit,   @SuperUsersOnly  bit   AS   BEGIN    -- Set the page bounds    DECLARE      @PageLowerBound INT,      @PageUpperBound INT,      @RowsToReturn int      EXEC dbo.CalculatePagingInformation @PageIndex, @PageSize, @RowsToReturn output, @PageLowerBound output, @PageUpperBound output      IF @PortalID IS NULL     BEGIN      WITH [tmpUsers] AS (       SELECT U.*, row_number() over (ORDER BY U.UserName) AS rowid        FROM dbo.vw_Users u        WHERE U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0           AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      )      SELECT * FROM [tmpUsers]       WHERE rowid > @PageLowerBound AND rowid < @PageUpperBound       ORDER BY rowid     END     ELSE      BEGIN      WITH [tmpUsers] AS (       SELECT U.*, row_number() over (order by U.UserName) AS rowid        FROM dbo.vw_Users u        WHERE U.PortalID = @PortalID AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END          AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      )      SELECT * FROM [tmpUsers]       WHERE rowid > @PageLowerBound AND rowid < @PageUpperBound       ORDER by rowid     END      SET ROWCOUNT 0       IF @PortalId IS NULL     BEGIN      SELECT COUNT(*) as TotalRecords       FROM   dbo.vw_Users as U       WHERE U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END                AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     END     ELSE      BEGIN      SELECT COUNT(*) as TotalRecords       FROM   dbo.vw_Users U        WHERE U.PortalId = @PortalId         AND U.IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         AND U.IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     END   END"
979,AISystem_JobTitle_Talent_GetsBySearch,"CREATE proc [dbo].[AISystem_JobTitle_Talent_GetsBySearch]  @pageIndex int,  @pageSize int,  @jobTitleId int  as  -- AISystem_JobTitle_Talent_GetsBySearch 1,10,14  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    Create table #AISystem_JobtitleTalent_Temp (   PK int IDENTITY (1,1),   Id int,      Title nvarchar(250),   Code nvarchar(250),   Description nvarchar(max),   Limit int,   UnitCode nvarchar(50),   CateTalentId int,   LevelCode nvarchar(max),   ParentId int  )    -- Thêm năng lực cha  Insert Into #AISystem_JobtitleTalent_Temp  SELECT   jt.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,           STUFF(( Select ','+ CONVERT(varchar(50), tl.LevelCode)              From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'') AS [LevelId], -1  From AISystem_Talent t inner join AISystem_JobTitle_Talent jt   on jt.TalentId = t.Id where jt.IsChild = 0 and JobTitleId =@jobTitleId   -- Thêm năng lực con  Insert Into #AISystem_JobtitleTalent_Temp  select jt.Id, tc.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,      STUFF((SELECT ','+ CONVERT(varchar(50), tl.LevelCode)                From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'') as [LevelId], tc.TalentId   from AISystem_Talent_Child tc inner join AISystem_Talent t    on t.Id = tc.TalentId  inner join AISystem_JobTitle_Talent jt    on jt.TalentId = tc.Id     where jt.IsChild =1 and JobTitleId =@jobTitleId       exec('  WITH #AISystem_JobtitleTalent AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,  * from #AISystem_JobtitleTalent_Temp  where '+@Condition+'  )       SELECT  *   FROM #AISystem_JobtitleTalent   where RowNumber between '+ @start +'  and  '+ @end +'   ')      SET QUOTED_IDENTIFIER OFF"
980,DeleteFolderMapping,CREATE PROCEDURE dbo.[DeleteFolderMapping]   @FolderMappingID int  AS  BEGIN   DELETE   FROM dbo.[FolderMappings]   WHERE FolderMappingID = @FolderMappingID  END
981,CoreMessaging_GetToasts,"CREATE PROCEDURE dbo.[CoreMessaging_GetToasts]     @UserId INT   ,@PortalId INT  AS  BEGIN   SELECT DISTINCT m.*   FROM dbo.[CoreMessaging_MessageRecipients] mr    INNER JOIN dbo.[CoreMessaging_Messages] m      ON (mr.MessageID = m.MessageID)   WHERE mr.UserID = @UserID    AND m.PortalID = @PortalID    --Added to allow a single index to cover both this and the other two messaging procs:    --dbo.[CoreMessaging_CountNotifications]    --CoreMessaging_CountNewThreads    AND mr.[Read] in (0,1)    AND mr.SendToast = 1  END"
982,AISystem_UserInfo_UpdateIsSyn,create proc [dbo].[AISystem_UserInfo_UpdateIsSyn]  @IsSyn int  as  update AISystem_UserInfo  set IsSyn=@IsSyn  
983,vw_Modules,"CREATE VIEW dbo.[vw_Modules]  AS      SELECT          M.PortalID AS [OwnerPortalID],          DM.PackageID,          T.PortalID,          TM.TabID,          TM.TabModuleID,          M.ModuleID,          M.ModuleDefID,          TM.ModuleOrder,          TM.PaneName,          TM.ModuleTitle,          TM.CacheTime,          TM.CacheMethod,          TM.Alignment,          TM.Color,          TM.Border,          CASE WHEN TM.IconFile LIKE 'fileid=%'      THEN (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]        WHERE FileId = CAST(SUBSTRING(TM.IconFile, 8, 10) AS Int))     ELSE Coalesce(TM.IconFile,'')    END AS IconFile,          TM.Visibility,          TM.Header,          TM.Footer,          TM.ContainerSrc,          TM.DisplayTitle,          TM.DisplayPrint,          TM.DisplaySyndicate,          TM.IsWebSlice,          TM.WebSliceTitle,          TM.WebSliceExpiryDate,          TM.WebSliceTTL,          TM.UniqueId,          TM.VersionGuid,          TM.DefaultLanguageGuid,          TM.LocalizedVersionGuid,          TM.CultureCode,          M.AllTabs,          M.StartDate,          M.EndDate,          T.StartDate AS TabStartDate,          T.EndDate AS TabEndDate,          M.InheritViewPermissions,          M.IsShareable,          M.IsShareableViewOnly,          M.CreatedByUserID,          M.CreatedOnDate,          M.LastModifiedByUserID,          M.LastModifiedOnDate,          M.LastContentModifiedOnDate,          MD.DesktopModuleID,          MD.DefaultCacheTime,          MD.DefinitionName,          MC.ModuleControlID,          DM.BusinessControllerClass,          DM.IsAdmin,          DM.SupportedFeatures,          CI.ContentItemID,          CI.Content,          CI.ContentTypeID,          CI.ContentKey,          CI.Indexed,          CI.StateID,          TM.IsDeleted AS IsDeleted,          M.IsDeleted  AS IsModuleDeleted,    T.IsDeleted  AS IsTabDeleted      FROM        dbo.[ModuleDefinitions] AS MD       INNER JOIN dbo.[Modules]           AS M  ON M.ModuleDefID = MD.ModuleDefID       INNER JOIN dbo.[ModuleControls]    AS MC ON MD.ModuleDefID = MC.ModuleDefID       INNER JOIN dbo.[DesktopModules]    AS DM ON MD.DesktopModuleID = DM.DesktopModuleID       LEFT  JOIN dbo.[ContentItems]      AS CI ON M.ContentItemID = CI.ContentItemID       LEFT  JOIN dbo.[TabModules]        AS TM ON M.ModuleID = TM.ModuleID       LEFT  JOIN dbo.[Tabs]              AS T  ON TM.TabID = T.TabID      WHERE (MC.ControlKey IS NULL)"
984,AIEventLog_GetByObjectAndType,"create PROC [dbo].[AIEventLog_GetByObjectAndType]  @ObjectType INT ,  @ObjectId INT  AS  SELECT ROW_NUMBER() OVER (ORDER BY Id desc  ) AS RowNumber,*  FROM AIEventLog  WHERE ObjectId=@ObjectId AND (ObjectType=@ObjectType)        "
985,AIElearning_Survey_CheckUserIsCompleteBySurveyIdAndUserId,"  CREATE PROC [dbo].[AIElearning_Survey_CheckUserIsCompleteBySurveyIdAndUserId]      @classId INT,      @userId INT,      @completeStatus INT,      @type INT,      @required INT,      @parentType INT  AS -- [AIElearning_Survey_CheckUserIsCompleteBySurveyIdAndUserId] 275,2156,3,1,1,1  DECLARE @today AS CHAR(10)  SET @today = CONVERT(CHAR(10), GETDATE(), 110)  DECLARE @count AS INT  SELECT  @count = COUNT(*)  FROM    AIElearning_Survey  WHERE   ClassId = @classId AND Required = @required AND Type = @type AND Status > 0 AND StartDate <= @today AND @today <= EndDate AND ParentType = @parentType  IF ( @count = 0 )      SELECT  1  ELSE      BEGIN          DECLARE @completeCount AS INT          SELECT  @completeCount = COUNT(*)          FROM    AIElearning_SurveyUser su                  INNER JOIN AIElearning_Survey s ON su.SurveyId = s.Id          WHERE   s.ClassId = @classId  AND s.ParentType = @parentType AND s.Required = @required AND s.Type = @type AND s.Status > 0 AND s.StartDate <= @today AND @today <= EndDate AND su.UserId = @userId AND su.CompleteStatus = @completeStatus AND su.Id     IN ( SELECT   SurveyUserId  FROM    AIElearning_SurveyUserQuestion )          IF ( @completeCount < @count )              SELECT  0          ELSE              SELECT  1      END     "
986,PageLowerBound,"-- new helperfunction for paging, replacing inefficient stored procedure  CREATE FUNCTION dbo.[PageLowerBound]  (      @PageIndex Int, -- Page number starting with 0 or Null for all      @PageSize  Int  -- number of items per page or Null for all  )    RETURNS    Int  AS  BEGIN      DECLARE @bound Int = 1      IF IsNull(@PageSize, -1) > 0 AND IsNull(@PageIndex, -1) >= 0 AND IsNull(@PageIndex, 0) <= (Cast(0x7fffffff AS Int) / IsNull(@PageSize, 1) -1)          SET @bound  = @PageSize * @PageIndex + 1      RETURN @bound  END"
987,AIElearning_ClassItem_DeleteAllChildAndIncludeParentID1,"  CREATE PROCEDURE [dbo].[AIElearning_ClassItem_DeleteAllChildAndIncludeParentID1]  @ClassId int,  @ParentId int,   @includeParentId bit  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.Id = @ParentId)      AND AIElearning_ClassItem.ClassId = @ClassId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL))      AND AIElearning_ClassItem.ClassId = @ClassId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_ClassItem  S ON S.ParentId=T.Id AND T.Level=@Level AND S.ClassId = @ClassId        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END  SELECT * from #PathConstruction  "
988,AIElearning_TestCampaign_RegistorUser_GetsByStatusCount,"  create proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByStatusCount]  @TestRegistorId int,  @UserId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsByStatusCount  10, -1, -1  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  --ma ca thi  if(@TestRegistorId>-1)   set @Condition=@Condition+' AND  ru.TestRegistorId ='+str(@TestRegistorId)  -- userid  if(@UserId>-1)   set @Condition=@Condition+' AND ru.UserId='+str(@UserId)  -- trang thai  if(@status>-1)   set @Condition=@Condition+' AND ISNULL(ut.Status, 3 ) ='+str(@status)    exec('  WITH #AIElearning_TestCampaign_RegistorUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY ru.Id desc) AS RowNumber,     ru.*, r.Name, r.Id as IdCaThi, u.UnitCode, u.UnitChildCode, u.JobTitleCode, r.Code, ISNULL(ut.Status, 3 )  as CompleteStatus     FROM  AIElearning_TestCampaign_Registor AS r INNER JOIN     AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId INNER JOIN     AISystem_UserInfo AS u ON ru.UserId = u.UserId inner join AIElearning_TestCampaign tc on tc.Id = r.TestCampaignId      left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId    WHERE (ut.Id = (select max(rut.Id)    FROM AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null) and '+@Condition+'      )    SELECT  count(*)   FROM #AIElearning_TestCampaign_RegistorUser  ')    SET QUOTED_IDENTIFIER OFF     "
989,GetDesktopModulePermission,CREATE PROCEDURE dbo.[GetDesktopModulePermission]   @DesktopModulePermissionID int  AS      SELECT *      FROM dbo.vw_DesktopModulePermissions      WHERE DesktopModulePermissionID = @DesktopModulePermissionID
990,AIElearning_Exercise_DeleteExerciseId,CREATE proc [dbo].[AIElearning_Exercise_DeleteExerciseId]  @ExerciseId int  as  delete from AIElearning_Exercise_Theme where ExerciseId=@ExerciseId  
991,ActivityObjectiveItem$DefaultView,"  -- Create function that implements the default view for the ActivityObjectiveItem item type  CREATE FUNCTION [ActivityObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityPackageId], [IsPrimaryObjective], [Key], [MinNormalizedMeasure], [SatisfiedByMeasure]      FROM [ActivityObjectiveItem]  )  "
992,AIElearning_LearnRule_Level_Table_GetsBySearchCount,create proc [dbo].[AIElearning_LearnRule_Level_Table_GetsBySearchCount]  as  select COUNT(*) from AIElearning_LearnRule_Level_Table  
993,AISystem_Category_Subject_DeleteAndUpdateChildId,"CREATE PROC [dbo].[AISystem_Category_Subject_DeleteAndUpdateChildId]  @Id NVARCHAR(50)  AS  -- AISystem_Category_Subject_DeleteAndUpdateChildId 1193  -- Xoa chinh no  DELETE AISystem_Category_Subject WHERE Id = @Id   -- Xoa bo no khoi chuoi ChildId cuan ban ghi khac  UPDATE dbo.AISystem_Category_Subject SET ChildId = REPLACE(ChildId,@Id,'')  WHERE ChildId = @Id OR ChildId LIKE '%,' + @Id+',%' OR ChildId LIKE '%,' + @Id  OR ChildId LIKE @Id + ',%'  -- Xoa bo ky tu ,, trong chuoi ChildId  UPDATE dbo.AISystem_Category_Subject SET ChildId = REPLACE(ChildId,',,',',')  WHERE ChildId LIKE '%,,%'  -- Xoa bo ky tu , dau tien trong chuoi ChildId  UPDATE dbo.AISystem_Category_Subject SET ChildId = SUBSTRING(ChildId,2,LEN(ChildId))   WHERE ChildId LIKE ',%'  -- -- Xoa bo ky tu , cuoi cung trong chuoi ChildId  UPDATE dbo.AISystem_Category_Subject SET ChildId = SUBSTRING(ChildId,1,(LEN(ChildId) -1))   WHERE ChildId LIKE '%,'  "
994,UpdateUserLastIpAddress,"CREATE PROCEDURE dbo.[UpdateUserLastIpAddress]    @UserID         int,   @LastIPAddress nvarchar(50)  AS   UPDATE dbo.[Users]    SET LastIPAddress = @LastIPAddress   WHERE  UserId = @UserID"
995,CK__Interacti__Inter__461F19B3,(len([InteractionIdFromCmi])<=(4096))
996,AISystem_Category_Campaign_GetInfoById,create PROC [dbo].[AISystem_Category_Campaign_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Campaign where Id=@Id  SET QUOTED_IDENTIFIER OFF         
997,GetModuleByDefinition,"CREATE PROCEDURE dbo.[GetModuleByDefinition]        @PortalId int,        @DefinitionName nvarchar(128)  AS  IF(@PortalId IS NULL)   SELECT M.*   FROM dbo.vw_Modules M   WHERE M.PortalId IS NULL     AND M.DefinitionName = @DefinitionName     AND M.IsDeleted = 0     AND M.IsTabDeleted = 0  ELSE   SELECT M.*   FROM dbo.vw_Modules M   WHERE M.PortalId = @PortalId     AND M.DefinitionName = @DefinitionName     AND M.IsDeleted = 0     AND M.IsTabDeleted = 0"
998,AIEventLog_GetList,"CREATE proc [dbo].[AIEventLog_GetList]  @ObjName nvarchar(500),---Full text search  @ObjId int,  @ObjType int,  @DateBegin nvarchar(12),  @DateEnd nvarchar(12),  @PageSize int,  @PageNum int,  @Action int,  @UserId int,  @PortalId int,  @LanguageId nvarchar(50)  as  Begin   Declare @begin int   Declare @end int   if @ObjName='""""' set @ObjName=null   if @DateBegin='""""' set @DateBegin=null   if @DateEnd='""""' set @DateEnd=null   set @begin=((@PageNum-1)*@PageSize) +1   set @end=@PageNum*@PageSize   if(@ObjName is not null) and (@ObjName<>'')    set @ObjName='""'+@ObjName+'""'   else    set @ObjName=null   Declare @Sql nvarchar(2000)   Declare @SqlObj nvarchar(2000)   Declare @SqlDate nvarchar(2000)   Declare @SqlAction nvarchar(2000)   Declare @SqlUser nvarchar(2000)   Declare @SqlPortal nvarchar(500)   set @SqlPortal = ' (PortalId = ' + STR(@PortalId) +  ') and (LanguageId = ''' + @LanguageId + ''')'   set @SqlObj=' 1=1'   set @SqlDate=' 1=1'   set @SqlAction=' 1=1'   set @SqlUser=' 1=1'   if(@ObjId=-1)    set @ObjId=null   if(@ObjType=-1)     set @ObjType=null   if(@Action=-1)     set @Action=null   if(@UserId=-1)     set @UserId=null  ------------------------------------  if(@Action is not null)   begin    if(@Action = -1)     set @SqlAction=' 1=1'    else     set @SqlAction=' [ActionId] = '+str(@Action)   end  else   begin    set @SqlAction='1=1'   end  ----------------------------------  if(@UserId is not null)   begin    if(@UserId = -1)     set @SqlUser=' 1=1'    else     set @SqlUser=' [UserId] = ' +str(@UserId)   end  else   begin    set @SqlUser='1=1'   end  --------------------------------------   if(@DateBegin is not null)  and (@DateBegin<>'')    begin     if(@DateEnd is not null)  and (@DateEnd<>'')      set @SqlDate=' (convert(nvarchar,CreatedDate,103) between '''+ @DateBegin+''' and '''+ @DateEnd+''')'     else      set @SqlDate=' (convert(nvarchar,CreatedDate,103) >= '''+ @DateBegin+''')'    end   else    begin     if(@DateEnd is not null)  and (@DateEnd<>'')       set @SqlDate=' (convert(nvarchar,CreatedDate,103) <= '''+ @DateEnd+''')'    end  -------------------------------------------   if(@ObjName is not null) and (@ObjName <>'')    Begin     if(@ObjId is not null)      set @SqlObj=' contains(ObjectName,'''+@ObjName+''') and ObjectId='+str(@ObjId)     else      set @SqlObj=' contains(ObjectName,'''+@ObjName+''')'    end   else    begin     if(@ObjId is not null)      set @SqlObj='ObjId='+ str(@ObjId)     else      set @SqlObj=' 1=1'    end  ---------------------------------------------  if(@ObjType is not null)    begin    set @SqlObj=@SqlObj+' and ObjectType='+STR(@ObjType)   end  ----------------------------------------------  set @Sql='WITH tblResult AS    (SELECT ROW_NUMBER() OVER(ORDER BY Id DESC) AS STT, *    FROM [AIEventLog]  where '+ @SqlObj + ' And ' + @SqlDate +' And '+ @SqlAction + ' And '+ @SqlUser + ' And ' + @SqlPortal +' )     SELECT *   FROM tblResult   WHERE STT BETWEEN '''+str(@Begin)+''' AND '''+str(@end)+''''   Exec(@Sql)  --select @Sql  End        "
999,AISystem_Introl_GetInfoByCategoryId,create proc [dbo].[AISystem_Introl_GetInfoById]  @CategoryId int  as  select Top(1) * from AISystem_Introl where CategoryId=@CategoryId  SET QUOTED_IDENTIFIER OFF 
1000,AIElearning_Survey_GetAvaliableSurvey,"  CREATE PROC [dbo].[AIElearning_Survey_GetAvaliableSurvey]      @ClassID INT,      @userId INT,      @status INT,      @parentType INT  AS -- [AIElearning_Survey_GetAvaliableSurvey] 19,2156,1  DECLARE @today AS CHAR(20)  SET @today = CONVERT(CHAR(20), GETDATE(), 120)    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  --SET @Condition=' and StartDate <= '''+@today+''' and '''+@today+''' <= EndDate and IsTemplate = 0 '  SET @Condition = @Condition + ' and IsTemplate = 0 '  SET @Condition = @Condition + ' AND ClassId in (select Id from AIElearning_Class where Id in (select ClassId from AIElearning_ClassUser where UserId = ' + STR(@userId) + ' )) '    IF ( @ClassID > -1 )      SET @Condition = @Condition + ' AND ClassId=' + STR(@ClassID)  IF ( @status > -1 )      SET @Condition = @Condition + ' AND Status=' + STR(@status)  IF ( @parentType > -1 )      SET @Condition = @Condition + ' AND ParentType=' + STR(@parentType)  EXEC('   SELECT ROW_NUMBER() OVER (ORDER BY ID DESC ) AS RowNumber, *  from AIElearning_Survey where '+@Condition+'')    "
1001,PageUpperBound,"-- new helper function for paging, replacing inefficient stored procedure  CREATE FUNCTION dbo.[PageUpperBound]  (      @PageIndex Int, -- Page number starting with 0 or Null for all      @PageSize  Int  -- number of items per page or Null for all  )    RETURNS    Int  AS  BEGIN      DECLARE @bound Int = Cast(0x7fffffff AS Int)      IF IsNull(@PageSize, -1) > 0 AND IsNull(@PageIndex, -1) >= 0 AND IsNull(@PageIndex, 0) <= (Cast(0x7fffffff AS Int) / IsNull(@PageSize, 1) -1)          SET @Bound = @PageSize * (@PageIndex + 1)      RETURN @Bound  END"
1002,AIElearning_ClassItem_GetAllChildAndIncludeParentID,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetAllChildAndIncludeParentID]  @ClassId int,  @ParentId int,   @includeParentId BIT,  @parentType int  AS  DECLARE @Level int  DECLARE @Rows int  SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Type int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100),    [Required] BIT,     MinScore float,     WeightScore float,    DataId int,    ClassId int  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Type, Name, SortColumn, PATH,Title, Required, MinScore, WeightScore, DataId, ClassId)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Type,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId,      AIElearning_ClassItem.Required,      AIElearning_ClassItem.MinScore,      AIElearning_ClassItem.WeightScore,      AIElearning_ClassItem.DataId,      AIElearning_ClassItem.ClassId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.Id = @ParentId)      AND AIElearning_ClassItem.ClassId = @ClassId AND AIElearning_ClassItem.ParentType = @parentType   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Type, Name, SortColumn, PATH,Title, Required, MinScore, WeightScore, DataId, ClassId)    SELECT       AIElearning_ClassItem.Id,      AIElearning_ClassItem.LevelNo,      AIElearning_ClassItem.ParentId,      AIElearning_ClassItem.Type,      AIElearning_ClassItem.Name,      STR(AIElearning_ClassItem.OrderNo),      AIElearning_ClassItem.Type,      AIElearning_ClassItem.DataId,      AIElearning_ClassItem.Required,      AIElearning_ClassItem.MinScore,      AIElearning_ClassItem.WeightScore,      AIElearning_ClassItem.DataId,      AIElearning_ClassItem.ClassId    FROM      AIElearning_ClassItem    WHERE  (AIElearning_ClassItem.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL))      AND AIElearning_ClassItem.ClassId = @ClassId  AND AIElearning_ClassItem.ParentType = @parentType   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Type, Name, SortColumn, PATH,Title, Required, MinScore, WeightScore, DataId, ClassId)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Type,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId,     S.Required,     S.MinScore,     S.WeightScore,     S.DataId,     S.ClassId    FROM     #PathConstruction T    JOIN AIElearning_ClassItem  S ON S.ParentId=T.Id AND T.Level=@Level AND S.ClassId = @ClassId AND S.ParentType = @parentType        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     'Id' = Id,    'Name' = Name,    'ParentId'=CTG_IDParent,    'Type'=Type,    'SortColumn' = SortColumn,    'Title' = Title,    'Required' = Required,    'MinScore' = MinScore,    'WeightScore' = WeightScore,    'DataId' = DataId,    'ClassId' = ClassId  FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction      "
1003,AIElearning_TestCampaign_RegistorUser_GetsByStatus,"  create proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByStatus]  @pageIndex int,   @pageSize int,  @TestRegistorId int,  @UserId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsByStatus 1, 111, 10, -1, -1  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    --ma ca thi  if(@TestRegistorId>-1)   set @Condition=@Condition+' AND  ru.TestRegistorId ='+str(@TestRegistorId)  --userid  if(@UserId>-1)   set @Condition=@Condition+' AND ru.UserId='+str(@UserId)  -- Trang thai  if(@status>-1)   set @Condition=@Condition+' AND ISNULL(ut.Status, 3 ) ='+str(@status)    exec('    WITH #AIElearning_TestCampaign_RegistorUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY ru.Id desc) AS RowNumber,     ru.*, r.Name, r.Id as IdCaThi, u.UnitCode, u.UnitChildCode, u.JobTitleCode, r.Code, ISNULL(ut.Status, 3 )  as CompleteStatus     FROM  AIElearning_TestCampaign_Registor AS r INNER JOIN     AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId INNER JOIN     AISystem_UserInfo AS u ON ru.UserId = u.UserId inner join AIElearning_TestCampaign tc on tc.Id = r.TestCampaignId      left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId    WHERE (ut.Id = (select max(rut.Id)    FROM AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null) and '+@Condition+'      )    SELECT  *   FROM #AIElearning_TestCampaign_RegistorUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
1004,AddRoleGroup,"CREATE PROCEDURE dbo.AddRoleGroup    @PortalID         int,   @RoleGroupName    nvarchar(50),   @Description      nvarchar(1000),   @CreatedByUserID  int  AS     INSERT INTO dbo.RoleGroups (     PortalId,     RoleGroupName,     Description,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate   )   VALUES (     @PortalID,     @RoleGroupName,     @Description,     @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate()   )    SELECT SCOPE_IDENTITY()"
1005,AddContentItem,"CREATE PROCEDURE dbo.[AddContentItem]    @Content   nvarchar(max),   @ContentTypeID  int,   @TabID    int,   @ModuleID   int,    @ContentKey   nvarchar(250),   @Indexed   bit,   @CreatedByUserID int,   @StateID   int = NULL  AS   INSERT INTO dbo.[ContentItems] (    Content,    ContentTypeID,    TabID,    ModuleID,    ContentKey,    Indexed,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate,    StateID   )     VALUES (    @Content,    @ContentTypeID,    @TabID,    @ModuleID,    @ContentKey,    @Indexed,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate(),    @StateID   )     SELECT SCOPE_IDENTITY()"
1006,AIElearning_TestCampaign_RegistorUserTestOfline_GetsByUser,"create proc [dbo].[AIElearning_TestCampaign_RegistorUserTestOfline_GetsByUser]  @Userid int,  @RegistorId  int  as  select * from AIElearning_TestCampaign_RegistorUserTestOfline where UserId=@Userid and RegistorId=@RegistorId    SET QUOTED_IDENTIFIER OFF   "
1007,Mobile_GetRedirections,"CREATE PROCEDURE dbo.[Mobile_GetRedirections] @PortalId INT  AS       SELECT  Id ,              PortalId ,              Name ,              [Type] ,              SortOrder ,              SourceTabId ,     IncludeChildTabs ,              TargetType ,              TargetValue ,     Enabled ,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.Mobile_Redirections      WHERE   PortalId = @PortalId   ORDER BY SortOrder ASC"
1008,ActivityPackageItem$DefaultView,"  -- Create function that implements the default view for the ActivityPackageItem item type  CREATE FUNCTION [ActivityPackageItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityIdFromManifest], [OriginalPlacement], [ParentActivityId], [PackageId], [PrimaryObjectiveId], [ResourceId], [PrimaryResourceFromManifest], [DataModelCache], [CompletionThreshold], [Credit], [HideContinue], [HidePrevious], [HideExit], [HideAbandon], [IsVisibleInContents], [LaunchData], [MasteryScore], [MaxAttempts], [MaxTimeAllowed], [ResourceParameters], [ScaledPassingScore], [TimeLimitAction], [Title], [ObjectivesGlobalToSystem]      FROM [ActivityPackageItem]  )  "
1009,AIElearning_TestCampaign_RegistorUserTest_CheckIsTestNow,CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUserTest_CheckIsTestNow]  @Id INT  AS  select IsTestNow from AIElearning_TestCampaign_RegistorUserTest where Id=@Id  
1010,AIElearning_SurveyQuestion_DeleteAndUpdatePosition,CREATE proc [dbo].[AIElearning_SurveyQuestion_DeleteAndUpdatePosition]   @id int  as  begin  DECLARE @SurveyPartId AS int  DECLARE @orderNo AS INT  -- Lay id nhom cau hoi  select @SurveyPartId = SurveyPartId from AIElearning_SurveyQuestion where Id= @id  -- Lay thu tu nhom cau hoi  select @orderNo = OrderNo from AIElearning_SurveyQuestion where Id= @id  -- Xoa no   delete from AIElearning_SurveyQuestion where Id = @id  update AIElearning_SurveyQuestion set OrderNo = (OrderNo-1) where OrderNo > @orderNo and SurveyPartId =@SurveyPartId  --Xóa kết quả làm bài khảo sát  delete from AIElearning_SurveyUserQuestion where SurveyQuestionId = @id  end  
1011,AddTermToContent,"CREATE PROCEDURE dbo.[AddTermToContent]    @TermID   int,   @ContentItemID int  AS   INSERT INTO dbo.ContentItems_Tags (    TermID,    ContentItemID   )     VALUES (    @TermID,    @ContentItemID   )     SELECT SCOPE_IDENTITY()"
1012,CoreMessaging_GetNotifications,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotifications]   @UserID              Int,   @PortalID            Int,   @AfterNotificationID Int,   @NumberOfRecords     Int  AS  BEGIN   --Get the top message for each conversation   SELECT TOP(@NumberOfRecords)     M.[MessageID],     M.[NotificationTypeId],     M.[To],     M.[From],     M.[Subject],     M.[Body],     M.[SenderUserID],     M.[ExpirationDate],              M.[IncludeDismissAction],     M.[CreatedByUserID],     M.[CreatedOnDate],     M.[LastModifiedByUserID],     M.[LastModifiedOnDate],              M.[Context],     ROW_NUMBER() OVER(ORDER BY M.MessageId DESC) AS RowNumber    FROM dbo.[CoreMessaging_Messages]       AS M    JOIN dbo.[CoreMessaging_MessageRecipients] MR       ON (M.[MessageID] = MR.[MessageID])    WHERE ([NotificationTypeId] IS NOT NULL)      AND (MR.[UserID]  = @UserID)      AND (M.[PortalID] = @PortalID)      AND (ISNull(M.[ExpirationDate], GETUTCDATE()) >= GETUTCDATE())      AND (M.[MessageID] > isNull(@AfterNotificationID, -1))    ORDER BY RowNumber ASC  END"
1013,AISystem_Category_Campaign_GetAllChildAndIncludeParentID_WithMaxLevel,"    CREATE PROC [dbo].[AISystem_Category_Campaign_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50)  AS    -- exec AISystem_Category_Campaign_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50),    UnitCode NVARCHAR(50),    ChildId NVARCHAR(max)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT       AISystem_Category_Campaign.Id,      0,      AISystem_Category_Campaign.ParentId,      AISystem_Category_Campaign.Title,      STR(AISystem_Category_Campaign.OrderNo),      AISystem_Category_Campaign.Title,      AISystem_Category_Campaign.Code,      AISystem_Category_Campaign.UnitCode,      AISystem_Category_Campaign.ChildId    FROM      AISystem_Category_Campaign    WHERE      (AISystem_Category_Campaign.Status=@Status OR @Status = -1)       AND (AISystem_Category_Campaign.Id = @ParentId)      AND AISystem_Category_Campaign.LanguageId = @LanguageId      AND AISystem_Category_Campaign.PortalId = @portalId      AND (AISystem_Category_Campaign.UnitCode = @UnitCode  )   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT       AISystem_Category_Campaign.Id,      0,      AISystem_Category_Campaign.ParentId,      AISystem_Category_Campaign.Title,      STR(AISystem_Category_Campaign.OrderNo),      AISystem_Category_Campaign.Title,      AISystem_Category_Campaign.Code,      AISystem_Category_Campaign.UnitCode,      AISystem_Category_Campaign.ChildId          FROM      AISystem_Category_Campaign    WHERE      (AISystem_Category_Campaign.Status=@Status OR @Status = -1)       AND (AISystem_Category_Campaign.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Campaign.ParentId IS NULL or AISystem_Category_Campaign.ParentId <=0))      AND AISystem_Category_Campaign.LanguageId = @LanguageId      AND AISystem_Category_Campaign.PortalId = @portalId      AND (AISystem_Category_Campaign.UnitCode = @unitCode  )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code,     S.UnitCode,     S.ChildId         FROM     #PathConstruction T    JOIN AISystem_Category_Campaign  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitCode >-1)  -- set @Condition=@Condition+' AND UnitCode='+str(@UnitCode)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'UnitCode' = UnitCode,    'ChildId' = ChildId,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction              "
1014,CoreMessaging_CountSentMessages,"CREATE PROCEDURE dbo.[CoreMessaging_CountSentMessages]   @UserID int,   @PortalID int  AS  BEGIN   SELECT COUNT(MessageID) AS TotalRecords   FROM dbo.[CoreMessaging_Messages]   WHERE SenderUserID = @UserID   AND NotificationTypeID IS NULL AND PortalID = @PortalID  END"
1015,SearchDeletedItems_Add,CREATE PROCEDURE dbo.[SearchDeletedItems_Add]   @document nvarchar(max)  AS  BEGIN   INSERT INTO dbo.SearchDeletedItems       (  document )   VALUES ( @document )  END
1016,UpdateUserProfileProperty,"CREATE PROC dbo.[UpdateUserProfileProperty]      @ProfileID    int,   @UserID     int,   @PropertyDefinitionID int,   @PropertyValue   ntext,   @Visibility    int,   @ExtendedVisibility  varchar(400),   @LastUpdatedDate  datetime    AS   IF @ProfileID IS NULL OR @ProfileID = -1    -- Try the UserID/PropertyDefinitionID to see if the Profile property exists    SELECT @ProfileID = ProfileID     FROM   dbo.UserProfile     WHERE  UserID = @UserID AND PropertyDefinitionID = @PropertyDefinitionID       IF @ProfileID IS NOT NULL    -- Update Property    BEGIN     UPDATE dbo.UserProfile      SET PropertyValue = case when (DATALENGTH(@PropertyValue) > 7500) then NULL else @PropertyValue end,       PropertyText = case when (DATALENGTH(@PropertyValue) > 7500) then @PropertyValue else NULL end,       Visibility = @Visibility,       ExtendedVisibility = @ExtendedVisibility,       LastUpdatedDate = @LastUpdatedDate      WHERE  ProfileID = @ProfileID     SELECT @ProfileID    END   ELSE    -- Insert New Property    BEGIN     IF @PropertyValue IS NOT NULL AND DATALENGTH(@PropertyValue) > 0      BEGIN       INSERT INTO dbo.UserProfile (        UserID,        PropertyDefinitionID,        PropertyValue,        PropertyText,        Visibility,        ExtendedVisibility,        LastUpdatedDate         )       VALUES (        @UserID,        @PropertyDefinitionID,        case when (DATALENGTH(@PropertyValue) > 7500) then NULL else @PropertyValue end,        case when (DATALENGTH(@PropertyValue) > 7500) then @PropertyValue else NULL end,        @Visibility,        @ExtendedVisibility,        @LastUpdatedDate         )         SELECT SCOPE_IDENTITY()      END     ELSE      SELECT @ProfileID    END"
1017,AIElearning_Survey_GetsByLecturerID,"CREATE proc [dbo].[AIElearning_Survey_GetsByLecturerID]   @lecturerId int,  @status int  as  -- AIElearning_Survey_GetsByLecturerID 30,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '    if(@lecturerId>-1)   set @Condition=@Condition+' AND LecturersId = '''+CONVERT(varchar(10), @lecturerId) +'''    or LecturersId like ''%,' + CONVERT(varchar(10), @lecturerId) + ',%''    or LecturersId like ''' + CONVERT(varchar(10), @lecturerId) + ',%''    or LecturersId like ''%,' + CONVERT(varchar(10), @lecturerId)+''''  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  exec('   SELECT ROW_NUMBER() OVER (ORDER BY ID DESC ) AS RowNumber, *   from AIElearning_Survey where '+@Condition +' and IsTemplate = 0 ' )    "
1018,AIElearning_ClassItem_GetAllNodesByParentId,"    --AIElearning_ClassItem_GetAllNodesByParentId -1,-1,1    CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetAllNodesByParentId]      @ClassId INT,      @parentId INT,   @ParentType INT  AS  DECLARE @Level INT  DECLARE @Rows INT    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  ( PK INT IDENTITY(1, 1),    Id INT,    level INT,    CTG_IDParent INT,    Name NVARCHAR(400),    SortColumn NVARCHAR(3000),    TabID NVARCHAR(3000) )    INSERT  INTO #PathConstruction ( Id, Level, CTG_IDParent, Name, SortColumn, TabID )  SELECT  AIElearning_ClassItem.Id, 0, AIElearning_ClassItem.ParentId, AIElearning_ClassItem.Name, STR(AIElearning_ClassItem.OrderNo), AIElearning_ClassItem.DataId  FROM    AIElearning_ClassItem  WHERE   ( AIElearning_ClassItem.ParentId = @parentId OR ( @parentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL                                                          )          ) AND AIElearning_ClassItem.ClassId = @ClassId AND ParentType = @ParentType      SELECT  @Rows = @@RowCount  WHILE @Rows > 0      BEGIN          INSERT  INTO #PathConstruction ( Id, Level, CTG_IDParent, Name, SortColumn, TabID )          SELECT  S.Id, @Level + 1, S.ParentId, S.Name, SortColumn + STR(S.OrderNo), S.DataId          FROM    #PathConstruction T          JOIN    AIElearning_ClassItem S ON S.ParentId = T.Id AND T.Level = @Level    WHERE S.ClassId = @ClassId AND S.ParentType = @ParentType          SELECT  @Rows = @@RowCount, @Level = @Level + 1       END    SELECT  *  FROM    #PathConstruction  LEFT JOIN AIElearning_ClassItem ON #PathConstruction.Id = AIElearning_ClassItem.Id  ORDER BY #PathConstruction.SortColumn    DROP TABLE #PathConstruction          "
1019,AIElearning_TestCampaign_RegistorUser_GetsByUserIdCount,"CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByUserIdCount]      @TestRegistorId INT,      @UserId INT,      @Status INT  AS  -- AIElearning_TestCampaign_RegistorUser_GetsByUserIdCount -1,-1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = 'where (1=1)'  IF ( @TestRegistorId > -1 )      SET @Condition = @Condition + ' AND ru.TestRegistorId =' + STR(@TestRegistorId)  IF ( @UserId > -1 )      SET @Condition = @Condition + ' AND ru.UserId=' + STR(@UserId)  IF ( @Status > -1 )      BEGIN          SET @Condition = @Condition + ' AND r.Status=' + STR(@Status)          SET @Condition = @Condition + ' AND tc.Status=' + STR(@Status)      END  EXEC('SELECT  COUNT(ru.Id)    FROM    AIElearning_TestCampaign_Registor AS r    INNER JOIN AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId    INNER JOIN AISystem_UserInfo AS u ON ru.UserId = u.UserId    INNER JOIN dbo.AIElearning_TestCampaign tc ON r.TestCampaignId = tc.Id '+@Condition)  SET QUOTED_IDENTIFIER OFF  "
1020,GetTerm,"CREATE PROCEDURE dbo.[GetTerm]    @TermId   int  AS   SELECT TT.*,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = TT.TermID     ) AS TotalTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = TT.TermID       AND     CI.CreatedOnDate > DATEADD(day, -30, GETDATE())    ) AS MonthTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = TT.TermID       AND     CI.CreatedOnDate > DATEADD(day, -7, GETDATE())    ) AS WeekTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = TT.TermID       AND     CI.CreatedOnDate > DATEADD(day, -1, GETDATE())    ) AS DayTermUsage   FROM dbo.Taxonomy_Terms TT   WHERE TT.TermId = @TermId"
1021,UpdateContentItem,"CREATE PROCEDURE dbo.[UpdateContentItem]    @ContentItemID   int,   @Content    nvarchar(max),   @ContentTypeID   int,   @TabID     int,   @ModuleID    int,    @ContentKey    nvarchar(250),   @Indexed    bit,   @LastModifiedByUserID int,   @StateID    int = NULL  AS   UPDATE dbo.[ContentItems]     SET      Content = @Content,     ContentTypeID = @ContentTypeID,     TabID = @TabID,     ModuleID = @ModuleID,     ContentKey = @ContentKey,     Indexed = @Indexed,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate(),     StateID = @StateID   WHERE ContentItemId = @ContentItemId"
1022,AISystem_UserInfo_CheckUserIsBlock,"CREATE PROC [dbo].[AISystem_UserInfo_CheckUserIsBlock]   @userId int  AS   -- AISystem_UserInfo_CheckUserIsBlock 2156  SELECT  ROW_NUMBER() OVER ( ORDER BY ui.Id DESC ) AS RowNumber, ui.*  FROM    AISystem_UserInfo ui          INNER JOIN aspnet_Users u ON ui.Username = u.UserName          INNER JOIN aspnet_Membership m ON u.UserId = m.UserId  WHERE   ui.UserId = @userId  AND m.IsLockedOut = 1  "
1023,AISystem_Category_TeachingTopic_GetsByArray,"Create proc [dbo].[AISystem_Category_TeachingTopic_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_TeachingTopic  where Id in(select * from Split(@arrId))  "
1024,AIElearning_ClassItem_GetByDataIdAndType,"CREATE PROC [dbo].[AIElearning_ClassItem_GetByDataIdAndType]  @Type INT,  @DataId INT,  @ClassId INT,  @ParentType int  AS  -- AIElearning_ClassItem_GetByDataIdAndType 2,150  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  IF ( @Type > -1 )      SET @Condition = @Condition + ' AND [Type] =' + STR(@Type)  IF ( @DataId > -1 )      SET @Condition = @Condition + ' AND DataId  =' + STR(@DataId)  IF ( @ClassId > -1 )      SET @Condition = @Condition + ' AND ClassId  =' + STR(@ClassId)  IF ( @ParentType > -1 )      SET @Condition = @Condition + ' AND ParentType  =' + STR(@ParentType)  EXEC('  WITH #AIElearning_ClassItem AS(   SELECT * FROM AIElearning_ClassItem WHERE   '+@Condition+')  SELECT *  FROM #AIElearning_ClassItem  ')      "
1025,PackageGlobalObjectiveItem$DefaultView,"  -- Create function that implements the default view for the PackageGlobalObjectiveItem item type  CREATE FUNCTION [PackageGlobalObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [LearnerId], [GlobalObjectiveId], [ScaledScore], [SuccessStatus]      FROM [PackageGlobalObjectiveItem]  )  "
1026,AISystem_UserInfo_UpdateUserId,create proc [dbo].[AISystem_UserInfo_UpdateUserId]  as  update AISystem_UserInfo set UserId=(select top(1) UserId from Users as u where u.Username = AISystem_UserInfo.Username)
1027,AISystem_JobTitle_Title_GetsByCodeCount,CREATE proc [dbo].[AISystem_JobTitle_Title_GetsByCodeCount]   @code nvarchar(50)  as  begin  select count(*)  from AISystem_JobTitle_Title   WHERE Code=@code   end  
1028,AISystem_UserInRole_GetsByUserId,"CREATE proc [dbo].[AISystem_UserInRole_GetsByUserId]   -- AISystem_UserInRole_GetsByUserId 44606  @UserId int  AS  select distinct roles.Id,roles.Name,ur.UserId   from AISystem_UserInRole ur inner join AISystem_Roles roles on roles.id=ur.RoleId      where ur.Userid=@UserId  "
1029,AddEventLog,"CREATE PROCEDURE  dbo.AddEventLog   @LogGUID varchar(36),   @LogTypeKey nvarchar(35),   @LogUserID int,   @LogUserName nvarchar(50),   @LogPortalID int,   @LogPortalName nvarchar(100),   @LogCreateDate datetime,   @LogServerName nvarchar(50),   @LogProperties ntext,   @LogConfigID int,   @ExceptionHash varchar(100) = NULL,   @NotificationActive bit = 0  AS  BEGIN   DECLARE @LogEventID bigint     INSERT INTO  dbo.[EventLog]    (LogGUID,    LogTypeKey,    LogUserID,    LogUserName,    LogPortalID,    LogPortalName,    LogCreateDate,    LogServerName,    LogProperties,    LogConfigID,    ExceptionHash)   VALUES    (@LogGUID,    @LogTypeKey,    @LogUserID,    @LogUserName,    @LogPortalID,    @LogPortalName,    @LogCreateDate,    @LogServerName,    @LogProperties,    @LogConfigID,    @ExceptionHash)     SELECT @LogEventID = SCOPE_IDENTITY()     IF @NotificationActive=1   BEGIN      DECLARE @NotificationThreshold bit    DECLARE @ThresholdQueue int    DECLARE @NotificationThresholdTime int    DECLARE @NotificationThresholdTimeType int    DECLARE @MinDateTime smalldatetime    DECLARE @CurrentDateTime smalldatetime      SET @CurrentDateTime = getDate()      SELECT TOP 1 @NotificationThreshold = NotificationThreshold,     @NotificationThresholdTime = NotificationThresholdTime,     @NotificationThresholdTimeType = NotificationThresholdTimeType,     @MinDateTime =       CASE        --seconds       WHEN NotificationThresholdTimeType=1 THEN DateAdd(second, NotificationThresholdTime * -1, @CurrentDateTime)       --minutes       WHEN NotificationThresholdTimeType=2  THEN DateAdd(minute, NotificationThresholdTime * -1, @CurrentDateTime)       --hours       WHEN NotificationThresholdTimeType=3  THEN DateAdd(Hour, NotificationThresholdTime * -1, @CurrentDateTime)       --days       WHEN NotificationThresholdTimeType=4  THEN DateAdd(Day, NotificationThresholdTime * -1, @CurrentDateTime)      END    FROM  dbo.[EventLogConfig]    WHERE ID = @LogConfigID      SELECT @ThresholdQueue = COUNT(*)    FROM  dbo.[EventLog] el     INNER JOIN  dbo.[EventLogConfig] elc      ON  el.LogConfigID =  elc.ID    WHERE LogCreateDate > @MinDateTime      IF @ThresholdQueue >= @NotificationThreshold    BEGIN     UPDATE  dbo.[EventLog]     SET LogNotificationPending = 1      WHERE LogConfigID = @LogConfigID      AND LogNotificationPending IS NULL        AND LogCreateDate > @MinDateTime    END     END      SELECT @LogEventID  END"
1030,AIElearning_TestForm_Part_DeleteAllChildAndIncludeParentID,"CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_DeleteAllChildAndIncludeParentID]  @TestId int,  @ParentId int,   @includeParentId bit  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(MAX),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.Id = @ParentId)      AND AIElearning_TestForm_Part.TestId = @TestId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_TestForm_Part.ParentId IS NULL))      AND AIElearning_TestForm_Part.TestId = @TestId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_TestForm_Part  S ON S.ParentId=T.Id AND T.Level=@Level AND S.TestId = @TestId        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    DELETE FROM AIElearning_TestForm_Part where ID in(SELECT ID FROM #PathConstruction )    DROP TABLE #PathConstruction    "
1031,SearchDeletedItems_DeleteProcessed,CREATE PROCEDURE dbo.SearchDeletedItems_DeleteProcessed      @CutoffTime DATETIME  AS  BEGIN   DELETE FROM dbo.SearchDeletedItems   WHERE [DateCreated] < @CutoffTime  END
1032,GetTabsByPackageID,"CREATE PROCEDURE dbo.[GetTabsByPackageID]      @PortalId  Int, -- Null for Host menu items      @PackageId Int, -- Not Null!      @ForHost   Bit  -- 0: Get pages for a specific portal (OR host pages only)                      -- 1: Get all host pages and portal pages  AS  BEGIN   -- Create a temp table to store the select results   CREATE TABLE #TabsLatestPublished   (    IndexId int IDENTITY (0, 1) NOT NULL,    TabId int,    ModuleId int   );     WITH Temp AS (           SELECT ROW_NUMBER() OVER (PARTITION BY TabId ORDER BY Version DESC) AS RowNumber, TabVersionId, TabId          FROM dbo.TabVersions    WHERE IsPublished = 1        )   -- Insert into our temp table   INSERT INTO #TabsLatestPublished (TabId, ModuleId)   SELECT TLP.TabId, TVD.ModuleId     FROM Temp TLP   INNER JOIN dbo.TabVersionDetails TVD ON TLP.TabVersionId = TVD.TabVersionId    WHERE RowNumber = 1 AND TVD.Action <> 2         SELECT * FROM dbo.[vw_Tabs]      WHERE (IsNull(PortalId, -1) = IsNull(@PortalId, -1) Or @ForHost = 1)    AND IsDeleted = 0    AND TabId IN (SELECT M.TabId FROM dbo.[vw_Modules] M         LEFT JOIN #TabsLatestPublished TLP ON TLP.TabId = M.TabId AND TLP.ModuleId = M.ModuleID                        WHERE M.PackageID = @PackageId AND (M.IsDeleted = 0 OR (TLP.TabId IS NOT NULL AND TLP.ModuleId IS NOT NULL)))      ORDER BY PortalID, TabName   OPTION (OPTIMIZE FOR (@PortalId UNKNOWN, @PackageId UNKNOWN, @ForHost UNKNOWN));  END"
1033,AIElearning_Survey_GetsBySearch,"  CREATE PROC [dbo].[AIElearning_Survey_GetsBySearch]      @pageIndex INT,      @pageSize INT,      @ClassID INT,      @isTemplate INT,      @status INT,      @parentType INT  AS --AIElearning_Survey_GetsBySearch 1,10,-1,1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex  IF ( @ClassID > -1 )      SET @Condition = @Condition + ' AND ClassId=' + STR(@ClassID)  IF ( @isTemplate > -1 )      SET @Condition = @Condition + ' AND IsTemplate=' + STR(@isTemplate)  IF ( @status > -1 )      SET @Condition = @Condition + ' AND Status=' + STR(@status)  IF ( @parentType > -1 )      SET @Condition = @Condition + ' AND ParentType=' + STR(@parentType)  EXEC('  WITH #AIElearning_Survey AS(   SELECT ROW_NUMBER() OVER (ORDER BY ID DESC ) AS RowNumber, *  from AIElearning_Survey where '+@Condition+')  SELECT *  FROM #AIElearning_Survey  where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1034,CK_UserRoles_RoleId,([RoleId]>=(0))
1035,AIElearning_ClassItem_GetChildrenByParentId,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetChildrenByParentId]  @ClassId int,  @parentId INT,  @ParentType INT  AS  SELECT * FROM AIElearning_ClassItem   WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND ClassId = @ClassId AND ParentType = @ParentType    ORDER BY OrderNo ASC           "
1036,AIElearning_TestCampaign_RegistorUser_GetsByUserId,"  CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsByUserId]  @pageIndex int,   @pageSize int,  @TestRegistorId int,  @UserId int,  @status int  as  -- AIElearning_TestCampaign_RegistorUser_GetsByUserId 1, 111, -1, -1, -1  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    --loai  if(@TestRegistorId>-1)  set @Condition=@Condition+' AND ru.TestRegistorId ='+str(@TestRegistorId)  if(@UserId>-1)  set @Condition=@Condition+' AND ru.UserId='+str(@UserId)  if(@status>-1)  set @Condition=@Condition+' AND r.status='+str(@status)    exec('    WITH #AIElearning_TestCampaign_RegistorUser AS(    SELECT  ROW_NUMBER() OVER ( ORDER BY ru.Id DESC ) AS RowNumber ,          ru.* ,          r.Name ,    r.TestCampaignId,          r.Id AS IdCaThi ,          u.UnitCode ,          u.UnitChildCode ,          u.JobTitleCode,    cu.Title AS Donvi,    cu2.Title AS Donvicon,    jt.Title AS Chucdanh,    u.EmployeeCode,    u.Displayname,    u.Username,    u.Mastercode  FROM    AIElearning_TestCampaign_Registor AS r          INNER JOIN AIElearning_TestCampaign_RegistorUser AS ru ON r.Id = ru.TestRegistorId          INNER JOIN AISystem_UserInfo AS u ON ru.UserId = u.UserId LEFT JOIN dbo.AISystem_Category_Unit cu ON u.UnitCode = cu.Code LEFT JOIN dbo.AISystem_Category_Unit cu2 ON u.UnitChildCode = cu2.Code LEFT JOIN dbo.AISystem_JobTitle_Title jt ON u.JobTitleCode = jt.Code '+@Condition+'      )         SELECT     *   FROM #AIElearning_TestCampaign_RegistorUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1037,GetFolderByFolderID,CREATE PROCEDURE dbo.[GetFolderByFolderID]   @FolderID int  AS  BEGIN   SELECT *   FROM dbo.[Folders]   WHERE FolderID = @FolderID  END
1038,CountLegacyFiles,CREATE PROCEDURE dbo.[CountLegacyFiles]  AS  BEGIN    SELECT COUNT(*) FROM dbo.[Files] WHERE ContentItemID IS NULL  END
1039,AISystem_Category_TrainingField_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_TrainingField_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_TrainingField    SET QUOTED_IDENTIFIER OFF  
1040,AIElearning_ClassItem_GetAllNodesByParentIdNotIncludeType,"CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetAllNodesByParentIdNotIncludeType]      @ClassId INT,      @parentId INT,   @NotIncludeType NVARCHAR(MAX),   @ParentType int  AS  -- AIElearning_ClassItem_GetAllNodesByParentIdNotIncludeType 1081,-1,''  DECLARE @Level INT  DECLARE @Rows INT    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  ( PK INT IDENTITY(1, 1),    Id INT,    level INT,    CTG_IDParent INT,    Name NVARCHAR(400),    SortColumn NVARCHAR(3000),    TabID NVARCHAR(3000) )    INSERT  INTO #PathConstruction ( Id, Level, CTG_IDParent, Name, SortColumn, TabID )  SELECT  AIElearning_ClassItem.Id, 0, AIElearning_ClassItem.ParentId, AIElearning_ClassItem.Name, STR(AIElearning_ClassItem.OrderNo), AIElearning_ClassItem.DataId  FROM    AIElearning_ClassItem  WHERE   ( AIElearning_ClassItem.ParentId = @parentId OR ( @parentId IS NULL AND AIElearning_ClassItem.ParentId IS NULL                                                          )          ) AND AIElearning_ClassItem.ClassId = @ClassId  AND AIElearning_ClassItem.ParentType = @ParentType      SELECT  @Rows = @@RowCount  WHILE @Rows > 0      BEGIN          INSERT  INTO #PathConstruction ( Id, Level, CTG_IDParent, Name, SortColumn, TabID )          SELECT  S.Id, @Level + 1, S.ParentId, S.Name, SortColumn + STR(S.OrderNo), S.DataId          FROM    #PathConstruction T          JOIN    AIElearning_ClassItem S ON S.ParentId = T.Id AND T.Level = @Level    WHERE S.ClassId = @ClassId AND S.ParentType = @ParentType          SELECT  @Rows = @@RowCount, @Level = @Level + 1       END    SELECT  *  FROM    #PathConstruction  LEFT JOIN AIElearning_ClassItem ON #PathConstruction.Id = AIElearning_ClassItem.Id  WHERE Type NOT IN (select * from Split(@NotIncludeType))  ORDER BY #PathConstruction.SortColumn  DROP TABLE #PathConstruction      "
1041,GetPortalsByName,"CREATE PROCEDURE dbo.[GetPortalsByName]        @NameToMatch nvarchar(256),      @PageIndex   int,      @PageSize   int  AS   BEGIN    -- Set the page bounds    DECLARE @PageLowerBound INT    DECLARE @PageUpperBound INT    SET @PageLowerBound = @PageSize * @PageIndex    SET @PageUpperBound = @PageSize - 1 + @PageLowerBound      -- Create a temp table TO store the select results    CREATE TABLE #PageIndexForPortals    (     IndexId int IDENTITY (0, 1) NOT NULL,     PortalId int    )      -- Insert into our temp table    INSERT INTO #PageIndexForPortals (PortalId)     SELECT PortalId FROM dbo.vw_PortalsDefaultLanguage     WHERE  PortalName LIKE @NameToMatch     ORDER BY PortalName      SELECT  *    FROM dbo.vw_PortalsDefaultLanguage p,       #PageIndexForPortals i    WHERE  p.PortalId = i.PortalId      AND i.IndexId >= @PageLowerBound AND i.IndexId <= @PageUpperBound    ORDER BY p.PortalName      SELECT  TotalRecords = COUNT(*)    FROM    #PageIndexForPortals   END"
1042,AttemptItem$DefaultView,"  -- Create function that implements the default view for the AttemptItem item type  CREATE FUNCTION [AttemptItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [LearnerId], [RootActivityId], [CompletionStatus], [CurrentActivityId], [SuspendedActivityId], [PackageId], [AttemptStatus], [FinishedTimestamp], [LogDetailSequencing], [LogFinalSequencing], [LogRollup], [StartedTimestamp], [SuccessStatus], [TotalPoints]      FROM [AttemptItem]  )  "
1043,UpdateTabModule,"CREATE PROCEDURE dbo.[UpdateTabModule]      @TabModuleId            int,      @TabId     int,      @ModuleId    int,   @ModuleTitle   nvarchar(256),   @Header     ntext,   @Footer     ntext,      @ModuleOrder   int,      @PaneName    nvarchar(50),      @CacheTime    int,      @CacheMethod   varchar(50),      @Alignment    nvarchar(10),      @Color     nvarchar(20),      @Border     nvarchar(1),      @IconFile    nvarchar(100),      @Visibility    int,      @ContainerSrc   nvarchar(200),      @DisplayTitle   bit,      @DisplayPrint   bit,      @DisplaySyndicate  bit,      @IsWebSlice    bit,      @WebSliceTitle   nvarchar(256),      @WebSliceExpiryDate  datetime,      @WebSliceTTL   int,      @VersionGuid   uniqueidentifier,      @DefaultLanguageGuid uniqueidentifier,      @LocalizedVersionGuid uniqueidentifier,      @CultureCode   nvarchar(10),      @LastModifiedByUserID int    AS      UPDATE dbo.TabModules          SET                  TabId = @TabId,              ModuleId = @ModuleId,     ModuleTitle = @ModuleTitle,     Header = @Header,     Footer = @Footer,               ModuleOrder = @ModuleOrder,              PaneName = @PaneName,              CacheTime = @CacheTime,              CacheMethod = @CacheMethod,              Alignment = @Alignment,              Color = @Color,              Border = @Border,              IconFile = @IconFile,              Visibility = @Visibility,              ContainerSrc = @ContainerSrc,              DisplayTitle = @DisplayTitle,              DisplayPrint = @DisplayPrint,              DisplaySyndicate = @DisplaySyndicate,              IsWebSlice = @IsWebSlice,              WebSliceTitle = @WebSliceTitle,              WebSliceExpiryDate = @WebSliceExpiryDate,              WebSliceTTL = @WebSliceTTL,              VersionGuid = @VersionGuid,              DefaultLanguageGuid = @DefaultLanguageGuid,              LocalizedVersionGuid = @LocalizedVersionGuid,              CultureCode= @CultureCode,              LastModifiedByUserID = @LastModifiedByUserID,              LastModifiedOnDate = getdate()          WHERE  TabModuleId = @TabModuleId"
1044,AIElearning_ClassGetUserName,CREATE FUNCTION [dbo].[AIElearning_ClassGetUserName]  (   @userid int  )  RETURNS nvarchar(250)    AS    BEGIN         DECLARE @username nvarchar(250)   begin    SELECT @username= Username from AISystem_UserInfo where UserID=@userid    end        RETURN   @username  END
1045,AISystem_JobTitle_Talent_GetsBySearchCount,"  CREATE proc [dbo].[AISystem_JobTitle_Talent_GetsBySearchCount]  @jobTitleId int  as  -- AISystem_JobTitle_Talent_GetsBySearchCount 14  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    Create table #AISystem_JobtitleTalent_Temp (   PK int IDENTITY (1,1),   Id int,      Title nvarchar(250),   Code nvarchar(250),   Description nvarchar(max),   Limit int,   UnitCode nvarchar(50),   CateTalentId int,   LevelId nvarchar(max),   ParentId int  )    -- Thêm năng lực cha  Insert Into #AISystem_JobtitleTalent_Temp  SELECT   jt.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,   substring(          ( Select ','+ CONVERT(varchar(10), tl.LevelCode)  AS [text()]              From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ), 2, 1000) [LevelId], -1  From AISystem_Talent t inner join AISystem_JobTitle_Talent jt   on jt.TalentId = t.Id where jt.IsChild = 0 and JobTitleId =@jobTitleId   -- Thêm năng lực con  Insert Into #AISystem_JobtitleTalent_Temp  select jt.Id, tc.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,  substring(          ( Select ','+ CONVERT(varchar(10), tl.LevelCode)  AS [text()]              From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ), 2, 1000) [LevelId], tc.TalentId   from AISystem_Talent_Child tc inner join AISystem_Talent t    on t.Id = tc.TalentId  inner join AISystem_JobTitle_Talent jt    on jt.TalentId = tc.Id     where jt.IsChild =1 and JobTitleId =@jobTitleId       exec('   SELECT count(*)    from #AISystem_JobtitleTalent_Temp  where '+@Condition )    SET QUOTED_IDENTIFIER OFF     "
1046,AIEventLog_GetActionId,create proc [dbo].[AIEventLog_GetActionId]  @ActionId int   as  Select top(1)* from AIEventLog_ObjType where ActionId=@ActionId  
1047,SplitStrings_CTE,"CREATE FUNCTION dbo.[SplitStrings_CTE]  (     @List       NVARCHAR(MAX),     @Delimiter  NVARCHAR(255)  )  RETURNS @Items TABLE (Item NVARCHAR(4000))  WITH SCHEMABINDING  AS  BEGIN     DECLARE @StringLength INT = LEN(@List) + 1, @DelimiterLength INT = LEN(@Delimiter);        WITH a AS     (         SELECT             [start] = 1,             [end]   = COALESCE(NULLIF(CHARINDEX(@Delimiter,                          @List, 1), 0), @StringLength),             [value] = SUBSTRING(@List, 1,                        COALESCE(NULLIF(CHARINDEX(@Delimiter,                          @List, 1), 0), @StringLength) - 1)         UNION ALL         SELECT             [start] = CONVERT(INT, [end]) + @DelimiterLength,             [end]   = COALESCE(NULLIF(CHARINDEX(@Delimiter,                          @List, [end] + @DelimiterLength), 0), @StringLength),             [value] = SUBSTRING(@List, [end] + @DelimiterLength,                        COALESCE(NULLIF(CHARINDEX(@Delimiter,                          @List, [end] + @DelimiterLength), 0), @StringLength)-[end]-@DelimiterLength)         FROM a         WHERE [end] < @StringLength     )     INSERT @Items SELECT [value]     FROM a     WHERE LEN([value]) > 0     OPTION (MAXRECURSION 0);        RETURN;  END"
1048,AIElearning_TestCampaign_Category_DeleteTestCampaignId,create PROCEDURE [dbo].[AIElearning_TestCampaign_Category_DeleteTestCampaignId]  @TestCampaignId int  as  delete from  AIElearning_TestCampaign_Category where TestCampaignId=@TestCampaignId  
1049,AISystem_Category_Document_GetInfoById,create PROC [dbo].[AISystem_Category_Document_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Document where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1050,GetUsersByProfileProperty,"CREATE PROCEDURE dbo.[GetUsersByProfileProperty]      @PortalID  int,      @PropertyName   nvarchar(256),      @PropertyValue  nvarchar(256),      @PageIndex      int,      @PageSize       INT,      @IncludeDeleted bit,      @SuperUsersOnly bit   AS  BEGIN   -- Set the page bounds   DECLARE @PageLowerBound INT   DECLARE @PageUpperBound INT   SET @PageLowerBound = @PageSize * @PageIndex   SET @PageUpperBound = @PageSize - 1 + @PageLowerBound     -- Create a temp table TO store the select results   CREATE TABLE #PageIndexForUsers   (    IndexId int IDENTITY (0, 1) NOT NULL,    UserId int,    DisplayName varchar(512)   )     -- Insert into our temp table   INSERT INTO #PageIndexForUsers (UserId,DisplayName)    SELECT DISTINCT U.UserId, U.DisplayName     FROM dbo.ProfilePropertyDefinition P     INNER JOIN dbo.UserProfile     UP ON P.PropertyDefinitionID = UP.PropertyDefinitionID      INNER JOIN dbo.Users           U  ON UP.UserID = U.UserID     INNER JOIN dbo.Lists           DT ON DT.EntryID = P.DataType     LEFT  JOIN dbo.Lists           L  ON L.ListName = @PropertyName AND L.Value = UP.PropertyValue AND L.Text LIKE @PropertyValue    WHERE (PropertyName = @PropertyName)      AND (PropertyValue LIKE @PropertyValue OR PropertyText LIKE @PropertyValue OR (DT.Value = 'List' AND L.EntryID IS NOT NULL ))      AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0          OR IsDeleted Is NULL)     AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     AND (P.Portalid = @PortalID OR (@PortalID is null ))    ORDER BY U.DisplayName     SELECT  *   FROM dbo.vw_Users u,      #PageIndexForUsers p   WHERE  u.UserId = p.UserId     AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END        --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0          OR IsDeleted Is NULL)     AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END     AND ( PortalId = @PortalID OR (@PortalID is null ))     AND p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound    ORDER BY U.DisplayName     SELECT  TotalRecords = COUNT(*)   FROM    #PageIndexForUsers  END"
1051,AIEventLog_GetLastLogin,"CREATE PROCEDURE [dbo].[AIEventLog_GetLastLogin]   @Action int,   @UserId int,   @ObjectType int,   @ObjectId int      AS    SELECT top 1 *   FROM AIEventLog  WHERE   ([ActionId] = @Action or @Action =-1)   and   ([UserId] = @UserId or @UserId =-1)   and   ([ObjectType] = @ObjectType or @ObjectType =-1)   and   ([ObjectId] = @ObjectId or @ObjectId =-1)  order by id desc"
1052,AIElearning_Survey_GetsBySearchCount,"  CREATE PROC [dbo].[AIElearning_Survey_GetsBySearchCount]      @ClassID INT,      @isTemplate INT,      @status INT,      @parentType INT  AS -- AIElearning_Survey_GetsBySearchCount 42,-1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  IF ( @ClassID > -1 )      SET @Condition = @Condition + ' AND ClassId=' + STR(@ClassID)  IF ( @isTemplate > -1 )      SET @Condition = @Condition + ' AND IsTemplate=' + STR(@isTemplate)  IF ( @status > -1 )      SET @Condition = @Condition + ' AND Status=' + STR(@status)  IF ( @parentType > -1 )      SET @Condition = @Condition + ' AND ParentType=' + STR(@parentType)  EXEC('  SELECT count(*)  from AIElearning_Survey where '+@Condition+'    ')  "
1053,AIElearning_ClassItem_GetPositionAdd,"    CREATE PROCEDURE [dbo].[AIElearning_ClassItem_GetPositionAdd]   @ClassId int,   @Position int,   @ParentId INT,   @ParentType int  AS  DECLARE @OrderFirst int  SET @OrderFirst=0  IF NOT EXISTS (SELECT * FROM AIElearning_ClassItem WHERE ClassId=@ClassId AND ParentType = @ParentType and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) )  SET @OrderFirst=0  ELSE  BEGIN  ------------------   DECLARE @OrderNo1 int   DECLARE @OrderMax int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AIElearning_ClassItem WHERE ClassId=@ClassId AND ParentType = @ParentType and   (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))   SET @OrderNo1 = (SELECT OrderNo FROM AIElearning_ClassItem WHERE ClassId=@ClassId and ParentType = @ParentType and Id =  @Position  AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AIElearning_ClassItem WHERE ClassId=@ClassId and ParentType = @ParentType and  ((ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo1 = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AIElearning_ClassItem WHERE ClassId=@ClassId and ParentType = @ParentType and (OrderNo > @OrderNo1  AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AIElearning_ClassItem WHERE ClassId=@ClassId and ParentType = @ParentType and  (OrderNo >= @OrderFirst AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AIElearning_ClassItem         Set  OrderNo=@TempOrderNo        Where ClassId=@ClassId  and ParentType = @ParentType and Id=@TempId        FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur  DEALLOCATE TempCur  END  select @OrderFirst        "
1054,AIElearning_TestCampaign_RegistorUserid,"create proc [dbo].[AIElearning_TestCampaign_RegistorUserid]   @Userid int,  @TestCampaignId int  as  -- AIElearning_Class_GetsBySearch 1,22, '', -1, 2, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang    -- Tr?ng thái  if(@Userid>-1)  set @Condition=@Condition+' AND  id in (select TestRegistorId from AIElearning_TestCampaign_Registor_Staff where Userid='''+str(@Userid)+''')'  if(@TestCampaignId>-1)  set @Condition=@Condition+' AND  TestCampaignId='+str(@TestCampaignId)    exec('SELECT * from AIElearning_TestCampaign_Registor '+@Condition+'')    SET QUOTED_IDENTIFIER OFF  "
1055,GetProfile,"create procedure dbo.GetProfile    @UserID    int,   @PortalID  int    as    select *  from   dbo.Profile  where  UserId = @UserID   and    PortalId = @PortalID"
1056,GetSystemMessage,"CREATE PROCEDURE dbo.GetSystemMessage   @PortalID     int,   @MessageName  nvarchar(50)  AS  BEGIN   if @PortalID is null   begin    select MessageValue    from   dbo.SystemMessages    where  PortalID is null and MessageName = @MessageName   end else begin    select MessageValue    from   dbo.SystemMessages    where  PortalID = @PortalID and MessageName = @MessageName   end  END"
1057,AIElearning_Exercise_DeleteGroupExerciseId,create proc [dbo].[AIElearning_Exercise_DeleteGroupExerciseId]  @ExerciseId int  as  delete from AIElearning_Exercise_Group where ExerciseId=@ExerciseId  
1058,AttemptObjectiveItem$DefaultView,"  -- Create function that implements the default view for the AttemptObjectiveItem item type  CREATE FUNCTION [AttemptObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityAttemptId], [ActivityObjectiveId], [CompletionStatus], [Description], [IsPrimaryObjective], [Key], [LessonStatus], [RawScore], [MinScore], [MaxScore], [ProgressMeasure], [ScaledScore], [SuccessStatus]      FROM [AttemptObjectiveItem]  )  "
1059,AIElearning_LearnRule_Level_Table_GetsByTime,"  CREATE proc [dbo].[AIElearning_LearnRule_Level_Table_GetsByTime]  @typetime int,  @TableId int  as  select distinct startyear,endyear,time from AIElearning_LearnRule_Level_Table where TypeTime=@typetime and TableId=@TableId          "
1060,CoreMessaging_DeleteMessage,CREATE PROCEDURE dbo.[CoreMessaging_DeleteMessage]   @MessageID int  AS   DELETE FROM dbo.CoreMessaging_Messages   WHERE  [MessageID] = @MessageID
1061,AIElearning_Certificate_Offline_User_Delete_CertificateId,create proc  [dbo].[AIElearning_Certificate_Offline_User_Delete_CertificateId]  @CertificateId int  as  delete   AIElearning_Certificate_Offline_User where CertificateId = @CertificateId 
1062,AIElearning_TestCampaign_Category_GetbyTestCampaignId,create PROCEDURE [dbo].[AIElearning_TestCampaign_Category_GetbyTestCampaignId]  @TestCampaignId int  as  select * from  AIElearning_TestCampaign_Category where TestCampaignId=@TestCampaignId  
1063,UpdatePackage,"CREATE PROCEDURE dbo.[UpdatePackage]   @PackageID   int,   @PortalID   int,   @FriendlyName     nvarchar(250),   @Description     nvarchar(2000),   @PackageType     nvarchar(50),   @Version      nvarchar(50),   @License      ntext,   @Manifest      ntext,   @Owner    nvarchar(100),   @Organization  nvarchar(100),   @Url    nvarchar(250),   @Email    nvarchar(100),   @ReleaseNotes     ntext,   @IsSystemPackage    bit,   @LastModifiedByUserID int,   @FolderName   nvarchar(128),   @IconFile   nvarchar(100)  AS   UPDATE dbo.Packages    SET      PortalID = @PortalID,     FriendlyName = @FriendlyName,     [Description] = @Description,     PackageType = @PackageType,     Version = @Version,     License = @License,     Manifest = @Manifest,     [Owner] = @Owner,     Organization = @Organization,     Url = @Url,     Email = @Email,     ReleaseNotes = @ReleaseNotes,     IsSystemPackage = @IsSystemPackage,     [LastModifiedByUserID] = @LastModifiedByUserID, [LastModifiedOnDate] = getdate(),     FolderName = @FolderName,     IconFile = @IconFile    WHERE  PackageID = @PackageID"
1064,GetModulePackagesInUse,"CREATE PROCEDURE dbo.[GetModulePackagesInUse]   @PortalID INT,   @ForHost BIT  AS  BEGIN   -- Create a temp table to store the select results   CREATE TABLE #TabsLatestPublished   (    IndexId int IDENTITY (0, 1) NOT NULL,    TabId int,    ModuleId int   );     WITH Temp AS (           SELECT ROW_NUMBER() OVER (PARTITION BY TabId ORDER BY Version DESC) AS RowNumber, TabVersionId, TabId          FROM dbo.TabVersions    WHERE IsPublished = 1        )   -- Insert into our temp table   INSERT INTO #TabsLatestPublished (TabId, ModuleId)   SELECT TLP.TabId, TVD.ModuleId     FROM Temp TLP   INNER JOIN dbo.TabVersionDetails TVD ON TLP.TabVersionId = TVD.TabVersionId    WHERE RowNumber = 1 AND TVD.Action <> 2     IF (@ForHost = 1)    -- Get in use for all host pages and portal pages    SELECT AllPackages.*    FROM dbo.Packages AS AllPackages     INNER JOIN (      SELECT DISTINCT P.PackageID      FROM         dbo.Packages       P        INNER JOIN dbo.vw_Modules     M   ON P.PackageID=M.PackageID        INNER JOIN dbo.tabs           T   ON T.TabID=M.TabID        LEFT  JOIN #TabsLatestPublished                           TLP ON TLP.TabId = M.TabId AND TLP.ModuleId = M.ModuleID      WHERE T.IsDeleted=0 AND (M.IsDeleted=0 OR (TLP.TabId IS NOT NULL AND TLP.ModuleId IS NOT NULL))     ) AS InUsePackages      ON AllPackages.PackageID = InUsePackages.PackageID    ORDER BY AllPackages.FriendlyName   ELSE    -- Get in use for portal or host only    SELECT AllPackages.* FROM dbo.Packages AS AllPackages     INNER JOIN (      SELECT DISTINCT P.PackageID      FROM         dbo.Packages       P        INNER JOIN dbo.vw_Modules     M   ON P.PackageID=M.PackageID        INNER JOIN dbo.tabs           T   ON T.TabID=M.TabID        LEFT  JOIN #TabsLatestPublished                           TLP ON TLP.TabId = M.TabId AND TLP.ModuleId = M.ModuleID      WHERE ((@PortalID IS NULL AND T.PortalID IS NULL) OR T.PortalID = @PortalID)        AND T.IsDeleted=0        AND (M.IsDeleted=0 OR (TLP.TabId IS NOT NULL AND TLP.ModuleId IS NOT NULL))) AS InUsePackages      ON AllPackages.PackageID = InUsePackages.PackageID    ORDER BY AllPackages.FriendlyName  END"
1065,AIElearning_Survey_GetSurveyListByCategoryID,"CREATE PROC [dbo].[AIElearning_Survey_GetSurveyListByCategoryID]      @cateId INT,      @classId INT,      @isTemplate INT,      @unitCode VARCHAR(50),      @parentType INT  AS -- AIElearning_Survey_GetSurveyListByCategoryID 26,211,1,'',1  DECLARE @Condition AS NVARCHAR(MAX)  IF ( @isTemplate = 1 )      BEGIN          SET @Condition =  ' Status > 0 AND IsTemplate = ' + STR(@isTemplate)          IF ( @unitCode <> '' )              SET @Condition = @Condition + ' AND UnitCode=''' + @unitCode + ''''          EXEC('select *  from AIElearning_Survey where ' +@Condition )      END  ELSE      BEGIN          SET @Condition = ' s.ClassId = c.Id and  s.Status > 0 and c.Id <>' + STR(@classId)          IF ( @cateId > -1 )              SET @Condition = @Condition + ' AND c.CateSubjectId=' + STR(@cateId)          IF ( @parentType > -1 )              SET @Condition = @Condition + ' AND s.ParentType=' + STR(@parentType)          EXEC('select s.Id, s.Name + '' ('' + c.Name + '')'' as Name from AIElearning_Survey s inner join AIElearning_Class c on c.Id = s.ClassId where ' +@Condition + ' and IsTemplate = ' +@isTemplate)      END    "
1066,AIElearning_ClassItem_UpdatePosition,"  CREATE PROCEDURE [dbo].[AIElearning_ClassItem_UpdatePosition]   @Id int,    @ClassId int,   @Position int,   @ParentId INT,   @ParentType INT  AS  DECLARE @OrderNo1 int  DECLARE @OrderMax int  DECLARE @OrderFirst int  SET @OrderMax = (SELECT MAX(OrderNo) FROM AIElearning_ClassItem WHERE  ClassId=@ClassId AND ParentType=@ParentType  and  (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))  SET @OrderNo1 = (SELECT OrderNo FROM AIElearning_ClassItem WHERE (ClassId=@ClassId AND ParentType=@ParentType and  Id = @Position  and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  IF (@Position = 0)  BEGIN  SET @OrderFirst = (SELECT MIN(OrderNo) FROM AIElearning_ClassItem WHERE ClassId=@ClassId AND ParentType=@ParentType and ( (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  IF (@OrderFirst IS NULL) SET @OrderFirst = 1  END  ELSE IF (@OrderNo1 = @OrderMax)  SET @OrderFirst = @OrderMax + 1  ELSE  SET @OrderFirst =(SELECT MIN(OrderNo) FROM AIElearning_ClassItem WHERE (ClassId=@ClassId AND ParentType=@ParentType  AND OrderNo > @OrderNo1 and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  DECLARE TempCur CURSOR FOR  SELECT Id, OrderNo FROM AIElearning_ClassItem WHERE (ClassId=@ClassId AND ParentType=@ParentType and OrderNo >= @OrderFirst AND  (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))  OPEN TempCur  DECLARE @TempId int  DECLARE @TempOrderNo int  FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  WHILE (@@FETCH_STATUS = 0)  BEGIN  SET @TempOrderNo = @TempOrderNo + 1  UPDATE AIElearning_ClassItem  SET OrderNo=@TempOrderNo  WHERE ClassId=@ClassId AND ParentType=@ParentType  AND Id=@TempId   FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  END  CLOSE TempCur  UPDATE AIElearning_ClassItem SET   [OrderNo] = @OrderFirst  WHERE  ClassId=@ClassId AND ParentType=@ParentType  AND [Id] = @Id  DEALLOCATE TempCur    "
1067,AIElearning_TestCampaign_Registor_GetStaffCount,"CREATE proc [dbo].[AIElearning_TestCampaign_Registor_GetStaffCount]   @Keyword nvarchar(250),  @listUserid nvarchar(250),  @status int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND  (UserName LIKE N''%'+@Keyword+'%'' or Mastercode LIKE N''%'+@Keyword+'%'') '  if(@listUserid<>'')  set @condition = @condition + ' and UserId not in (select * from [dbo].Split('''+@listUserid+'''))'  if(@status>-1)   set @Condition=@Condition+' AND status='+str(@status)   --  exec('   SELECT count(*) from AISystem_UserInfo  where ' + @condition +'         ')  SET QUOTED_IDENTIFIER OFF   "
1068,AddSystemMessage,"create procedure dbo.AddSystemMessage    @PortalID     int,  @MessageName  nvarchar(50),  @MessageValue ntext    as    insert into dbo.SystemMessages (    PortalID,    MessageName,    MessageValue  )  values (    @PortalID,    @MessageName,    @MessageValue  )"
1069,AISystem_Category_TrainingField_GetsByArray,"Create proc [dbo].[AISystem_Category_TrainingField_GetsByArray]  @arrId nvarchar(250)  as  -- AISystem_Category_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,* from AISystem_Category_TrainingField  where Id in(select * from Split(@arrId))  "
1070,CommentFromLearnerItem$DefaultView,"  -- Create function that implements the default view for the CommentFromLearnerItem item type  CREATE FUNCTION [CommentFromLearnerItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityAttemptId], [Comment], [Location], [Ordinal], [Timestamp]      FROM [CommentFromLearnerItem]  )  "
1071,AIElearning_Class_GetsClassUser,"CREATE proc [dbo].[AIElearning_Class_GetsClassUser]     @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),    @Type int,  @Status int,  @ngaybd datetime,  @ngaykt datetime,  @classid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end  -- Mã chuyên m?c  -- Lo?i  if(@Type<>-1)  begin  set @Condition=@Condition+' AND Type='+str(@Type)  end  -- Tr?ng thái  if(@Status<>-1)  begin  set @Condition=@Condition+' AND Status='+str(@Status)  end    if(@ngaybd='' and @ngaykt='')  exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,dbo.AIElearning_ClassGetUserName(userid) as tentaikhoan,     *     from AIElearning_ClassUser '+@Condition+' and classid='+@classid+'     )          SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    if(@ngaybd<>'' and @ngaykt<>'')  exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,dbo.AIElearning_ClassGetUserName(userid) as tentaikhoan,     *     from AIElearning_ClassUser '+@Condition+' and classid='+@classid+' and createddate >= '''+@ngaybd+''' and createddate <=  '''+@ngaykt+'''    )          SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1072,AISystem_UserPermissionScope_GetAllScope,"  CREATE proc [dbo].[AISystem_UserPermissionScope_GetAllScope]  @UserId int,  @AIRoleId int  as  select * from AISystem_UserPermissionScope where UserId=@UserId and AIRoleId=@AIRoleId  SET QUOTED_IDENTIFIER OFF   "
1073,AISystem_Category_TrainingType_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_TrainingType_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_TrainingType_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_TrainingType  WHERE   ParentId = @parentId  "
1074,GetDefaultLanguageByModule,"CREATE PROCEDURE dbo.[GetDefaultLanguageByModule]  (   @ModuleList NVARCHAR(4000)  )  AS  BEGIN   SET NOCOUNT ON    SELECT DISTINCT m.ModuleID, p.DefaultLanguage  FROM            dbo.[Modules]  m  INNER JOIN      dbo.[Portals] p ON p.PortalID = m.PortalID  Inner Join  dbo.[SplitStrings_CTE](@ModuleList,',') ML ON M.ModuleID = ML.item  ORDER BY        m.ModuleID       END"
1075,AIElearning_TestCampaign_Category_GetsBySearch,"  create proc [dbo].[AIElearning_TestCampaign_Category_GetsBySearch]  @pageIndex int,   @pageSize int    as  -- Phan trang    --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --tu khoa      exec('    WITH #AIElearning_TestCampaign_Category AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_Category      )         SELECT     *   FROM #AIElearning_TestCampaign_Category   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1076,CoreMessaging_DeleteSubscriptionsByObjectKey,"CREATE PROCEDURE dbo.CoreMessaging_DeleteSubscriptionsByObjectKey   @PortalId int,   @ObjectKey NVARCHAR(255)  AS  BEGIN   DELETE   FROM dbo.CoreMessaging_Subscriptions   WHERE PortalId = @PortalId    AND ObjectKey = @ObjectKey  END"
1077,GetSearchModules,CREATE PROCEDURE dbo.GetSearchModules   @PortalID int  AS  BEGIN    DECLARE @currentDate AS [DATETIME] = GETDATE();     SELECT *   FROM dbo.vw_Modules   WHERE IsDeleted = 0       AND IsTabDeleted = 0       AND IsAdmin = 0     AND (SupportedFeatures & 2) = 2     AND (StartDate <= @currentDate OR StartDate IS NULL)      AND (EndDate > @currentDate OR EndDate IS NULL)      AND (TabEndDate > @currentDate OR TabEndDate IS NULL)      AND (TabStartDate <= @currentDate OR TabStartDate IS NULL)      AND (NOT (BusinessControllerClass IS NULL))     AND (PortalID = @PortalID OR (PortalID IS NULL AND @PortalID Is NULL))   ORDER BY ModuleOrder  END
1078,AIElearning_SurveyPart_GetsBySearch,"CREATE proc [dbo].[AIElearning_SurveyPart_GetsBySearch]   @SurveyID int  as  --    AIElearning_SurveyPart_GetsBySearch 4  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyID>-1)   set @Condition=@Condition+' AND SurveyId='+str(@SurveyID)  exec('  WITH #AIElearning_SurveyPart AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo  ) AS RowNumber, *   from AIElearning_SurveyPart where '+@Condition+')   SELECT *   FROM #AIElearning_SurveyPart  ')  "
1079,AIElearning_TestCampaign_Registor_GetStaff,"CREATE proc [dbo].[AIElearning_TestCampaign_Registor_GetStaff]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @listUserid nvarchar(250),  @status int    as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND  (UserName LIKE N''%'+@Keyword+'%'' or Mastercode LIKE N''%'+@Keyword+'%'') '  if(@listUserid<>'')  set @condition = @condition + ' and UserId not in (select * from [dbo].Split('''+@listUserid+'''))'  if(@status>-1)   set @Condition=@Condition+' AND status='+str(@status)  exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from  AISystem_UserInfo  where ' + @condition +'      )         SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1080,GetLanguagesByPortal,"CREATE PROCEDURE dbo.[GetLanguagesByPortal]      @PortalId   int  AS      SELECT           L.*,          PL.PortalId,          PL.IsPublished      FROM   dbo.Languages L          INNER JOIN dbo.PortalLanguages PL On L.LanguageID = PL.LanguageID      WHERE PL.PortalID = @PortalID"
1081,ImportDocumentLibraryCategories,"CREATE PROCEDURE dbo.[ImportDocumentLibraryCategories]   @VocabularyID     int  AS  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.[dlfp_Category]') AND type in (N'U'))   BEGIN    INSERT INTO dbo.Taxonomy_Terms([Name],[VocabularyID])    SELECT DISTINCT CategoryName,VID=@VocabularyID    FROM         dbo.dlfp_Category where CategoryName NOT IN (SELECT [name] from dbo.Taxonomy_Terms)   END"
1082,AISystem_Category_TrainingField_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_TrainingField_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_TrainingField  SET    ChildId = @ChildId  WHERE Id = @Id  "
1083,AIElearning_ClassDocument_GetByMediaIdAndClassId,"CREATE PROC [dbo].[AIElearning_ClassDocument_GetByMediaIdAndClassId]  @ClassId INT,  @MediaId INT,  @IsContent INT,  @ParentType INT  AS  -- AIElearning_ClassDocument_GetByMediaIdAndClassId -1,144,0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  IF ( @ClassId > -1 )      SET @Condition = @Condition + ' AND ClassId  =' + STR(@ClassId)  IF ( @MediaId > -1 )      SET @Condition = @Condition + ' AND MediaId =' + STR(@MediaId)  IF ( @IsContent > -1 )      SET @Condition = @Condition + ' AND IsContent  =' + STR(@IsContent)  IF ( @ParentType > -1 )      SET @Condition = @Condition + ' AND ParentType  =' + STR(@ParentType)  EXEC('  WITH #AIElearning_ClassDocument AS(   SELECT * FROM dbo.AIElearning_ClassDocument WHERE   '+@Condition+')  SELECT *  FROM #AIElearning_ClassDocument  ')        "
1084,CoreMessaging_GetNotificationTypeAction,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationTypeAction]   @NotificationTypeActionID int  AS  BEGIN   SELECT [NotificationTypeActionID], [NotificationTypeID], [NameResourceKey], [DescriptionResourceKey], [ConfirmResourceKey], [Order], [APICall], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeActionID] = @NotificationTypeActionID  END"
1085,GetYear_Log,  CREATE proc [dbo].[GetYear_Log]  as  SELECT TABLE_NAME as[Name] FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME like N'%AIEventLog_2%' order by name asc
1086,CommentFromLmsItem$DefaultView,"  -- Create function that implements the default view for the CommentFromLmsItem item type  CREATE FUNCTION [CommentFromLmsItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityPackageId], [Comment], [Location], [Timestamp]      FROM [CommentFromLmsItem]  )  "
1087,AIElearning_Certificate_Background_BackgroundIdCount,create proc [dbo].[AIElearning_Certificate_Background_BackgroundIdCount]  @backgroundId int  as      select COUNT(*) from AIElearning_Certificate where BackgroundId=@backgroundId  SET QUOTED_IDENTIFIER OFF  
1088,AIElearning_Question_GetsQuestionNotInTest,"CREATE PROC [dbo].[AIElearning_Question_GetsQuestionNotInTest]      @pageIndex INT,      @pageSize INT,      @KeyWord NVARCHAR(250),      @CategoryId INT,      @Level INT,      @Type INT,      @Status INT,      @Mark NVARCHAR(50),      @DataType INT,      @TestId INT  AS -- AIElearning_Question_GetsQuestionNotInTest 1,10000,'',-1,-1,-1,1,-1,3,139  -- Phan trang   DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  -- Chi lay cau hoi cap 1, ch cha  DECLARE @ParentId INT  SET @ParentId = -1  SET @condition = @condition + ' AND  (ParentId= ' + STR(@ParentId) + ' )'  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' AND (Keyword like N''%' + @KeyWord + '%'') '  IF ( @CategoryId > -1 )      SET @condition = @condition + ' AND  (CategoryId= ' + STR(@CategoryId) + ' )'  IF ( @Level > -1 )      SET @condition = @condition + ' AND  (Level= ' + STR(@Level) + ' )'  IF ( @Type > -1 )      SET @condition = @condition + ' AND  (Type= ' + STR(@Type) + '  )'  IF ( @Status > -1 )      SET @condition = @condition + ' AND  (Status= ' + STR(@Status) + ' )'  IF ( @Mark <> '-1' )      SET @condition = @condition + ' AND  (Mark= ' + @Mark + ' )'  -- Khong lay cau hoi het han  SET @condition = @condition + ' AND  (ExpiryDate >= GETDATE() )'  -- Khong lay cau hoi da dc them vao khung de  SET @condition = @condition + ' AND Id NOT IN ( SELECT DataId FROM dbo.AIElearning_TestForm_Part WHERE Type = ' + STR(@DataType) + ' AND TestId = ' + STR(@TestId) + ' )'  EXEC('  WITH #AIElearning_Question AS(   SELECT ROW_NUMBER() OVER (ORDER BY Id DESC) AS RowNumber, *   FROM    dbo.AIElearning_Question  WHERE ' + @condition +')      SELECT *  FROM #AIElearning_Question  WHERE RowNumber BETWEEN '+ @start +'  AND  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
1089,GetFolderMapping,CREATE PROCEDURE dbo.[GetFolderMapping]   @FolderMappingID int  AS  BEGIN   SELECT *   FROM dbo.[FolderMappings]   WHERE FolderMappingID = @FolderMappingID  END
1090,AIElearning_TestCampaign_Category_GetsBySearchCount,create proc [dbo].[AIElearning_TestCampaign_Category_GetsBySearchCount]    as      exec('select COUNT(*) from AIElearning_TestCampaign_Category ')  SET QUOTED_IDENTIFIER OFF        
1091,AISystem_Category_Money_Unit_GetsbyUnitid,CREATE proc [dbo].[AISystem_Category_Money_Unit_GetsbyUnitid]  @UnitCode nvarchar(50)  as  select * from AISystem_Category_Money_Unit where UnitCode=@UnitCode   
1092,GetUserRelationshipPreferenceByID,"CREATE PROCEDURE dbo.[GetUserRelationshipPreferenceByID]    @PreferenceID INT   AS       SELECT  PreferenceID,     UserID,     RelationshipID,                 DefaultResponse,                          CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.UserRelationshipPreferences       WHERE @PreferenceID = @PreferenceID      ORDER BY PreferenceID ASC"
1093,AIElearning_SurveyPart_GetsBySearchCount,create proc [dbo].[AIElearning_SurveyPart_GetsBySearchCount]   @SurveyID int  as  -- AIElearning_SurveyPart_GetsBySearchCount 42  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyID>-1)   set @Condition=@Condition+' AND SurveyId='+str(@SurveyID)  exec('   SELECT count(*)   from AIElearning_SurveyPart where '+@Condition+'    ')  
1094,AIElearning_TestCampaign_Registor_ReportCount,"create proc [dbo].[AIElearning_TestCampaign_Registor_ReportCount]  @Keyword nvarchar(250),  @status int,  @registerType int,  @testCampaignId int,  @registorType int,  @ngaybd datetime,  @ngaykt datetime  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND (Name like N''%'+@Keyword + '%'')'    -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)    --Loai ca thi  if(@registerType>-1)  set @Condition=@Condition+' AND RegisterType='+str(@registerType)    --Dot thi  if(@testCampaignId>-1)  set @Condition=@Condition+' AND TestCampaignId='+str(@testCampaignId)    -- Loai ca thi (online/offline)  if(@registorType>-1)  set @Condition=@Condition+' AND RegistorType='+str(@registorType)  --ngày bắt đầu  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''  --ngày kết thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''  exec('select COUNT(*) from AIElearning_TestCampaign_Registor '+@Condition)  SET QUOTED_IDENTIFIER OFF      "
1095,ImportDocumentLibraryCategoryAssoc,"CREATE PROCEDURE dbo.[ImportDocumentLibraryCategoryAssoc]  AS  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.[dlfp_Category]') AND type in (N'U'))   BEGIN   SELECT     dlc.CategoryName, dbo.Files.FileId   FROM         dbo.dlfp_Category AS dlc INNER JOIN                        dbo.dlfp_DocumentCategoryAssoc AS dlca ON dlc.CategoryID = dlca.CategoryID INNER JOIN                        dbo.dlfp_Document AS dld ON dlca.DocumentID = dld.ID INNER JOIN                        dbo.Files ON dld.ID = dbo.Files.FileId   END"
1096,AIElearning_Exercise_DeleteMentor,create proc [dbo].[AIElearning_Exercise_DeleteMentor]  @ExerciseId int  as  delete from AIElearning_Exercise_Mentor where ExerciseId=@ExerciseId  
1097,AIElearning_ClassDocument_DeleteAndUpdatePosition,"CREATE PROC [dbo].[AIElearning_ClassDocument_DeleteAndUpdatePosition]      @id INT,      @classId INT,      @parentType INT  AS  BEGIN      DECLARE @orderNo AS INT  --Lấy vị trí hiện tại của nó      SELECT  @orderNo = OrderNo      FROM    AIElearning_ClassDocument      WHERE   Id = @id   --Xóa nó đi      DELETE  FROM AIElearning_ClassDocument      WHERE   Id = @id  --Câp nhật vị trí      UPDATE  AIElearning_ClassDocument      SET     OrderNo = ( OrderNo - 1 )      WHERE   OrderNo > @orderNo AND ClassId = @classId AND ParentType = @parentType  END  "
1098,UpdateSimpleTerm,"CREATE PROCEDURE dbo.[UpdateSimpleTerm]    @TermID     int,   @VocabularyID   int,   @Name     nvarchar(250),   @Description   nvarchar(2500),   @Weight     int,   @LastModifiedByUserID int  AS   UPDATE dbo.Taxonomy_Terms    SET      VocabularyID = @VocabularyID,     [Name] = @Name,     Description = @Description,     Weight = @Weight,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()   WHERE TermID = @TermID"
1099,AISystem_DNNRoles_GetAll,"create proc [dbo].[AISystem_DNNRoles_GetAll]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250)      as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end    exec('    WITH #Roles AS(    SELECT ROW_NUMBER() OVER (ORDER BY RoleID desc) AS RowNumber,          *            from Roles '+@Condition+'       )         SELECT     *   FROM #Roles   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1100,CorrectResponseItem$DefaultView,"  -- Create function that implements the default view for the CorrectResponseItem item type  CREATE FUNCTION [CorrectResponseItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [InteractionId], [ResponsePattern]      FROM [CorrectResponseItem]  )  "
1101,AIElearning_Certificate_Offline_User_CheckNumber,"CREATE proc [dbo].[AIElearning_Certificate_Offline_User_CheckNumber]  @Number nvarchar(250),  @Classid int  as  select count(*) from AIElearning_Certificate_Offline_User where Number=@Number and ClassId=@Classid"
1102,BuildTabLevelAndPath,"CREATE PROCEDURE dbo.[BuildTabLevelAndPath](@TabId INT, @IncludeChild BIT = 0)   AS   BEGIN    DECLARE @ParentId INT, @Level INT, @TabPath NVARCHAR(255), @TabName NVARCHAR(200)    SELECT @ParentId = ParentId, @TabName = TabName FROM dbo.[Tabs] WHERE TabID = @TabId    IF @ParentId > 0    BEGIN     SELECT       @Level = [Level] + 1,      @TabPath = TabPath + '//' + dbo.[RemoveStringCharacters](@TabName, '&? ./''#:*')      FROM dbo.[Tabs] WHERE TabID = @ParentId    END    ELSE    BEGIN     SELECT @Level = 0, @TabPath = '//' + dbo.[RemoveStringCharacters](@TabName, '&? ./''#:*')    END        UPDATE dbo.[Tabs] SET [Level] = @Level, TabPath = @TabPath WHERE TabID = @TabId        IF @IncludeChild = 1    BEGIN     DECLARE @ChildTabs TABLE(TabID INT)     DECLARE @ChildID INT     INSERT INTO @ChildTabs SELECT TabID FROM dbo.[Tabs] WHERE ParentId =  @TabId     WHILE EXISTS (SELECT TOP 1 TabID FROM @ChildTabs)      BEGIN       SET @ChildID = (SELECT TOP 1 TabID FROM @ChildTabs)       EXEC dbo.[BuildTabLevelAndPath] @ChildID, @IncludeChild       DELETE FROM @ChildTabs WHERE TabID = @ChildID      END    END   END"
1103,AIElearning_Monney_Other_User_GetsBySearch,CREATE proc [dbo].[AIElearning_Monney_Other_User_GetsBySearch]   @username nvarchar(250)  as   SELECT  * from AIElearning_Monney_Other_User where UserName=@username  
1104,AIElearning_Question_GetsQuestionNotInTestCount,"CREATE PROC [dbo].[AIElearning_Question_GetsQuestionNotInTestCount]      @KeyWord NVARCHAR(250),      @CategoryId INT,      @Level INT,      @Type INT,      @Status INT,      @Mark NVARCHAR(50),      @DataType INT,      @TestId INT  AS -- AIElearning_Question_GetsQuestionNotInTestCount '',-1,-1,-1,1,-1,3,139    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  -- Chi lay cau hoi cap 1, ch cha  DECLARE @ParentId INT  SET @ParentId = -1  SET @condition = @condition + ' AND  (ParentId= ' + STR(@ParentId) + ' )'  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' AND (Keyword like N''%' + @KeyWord + '%'') '  IF ( @CategoryId > -1 )      SET @condition = @condition + ' AND  (CategoryId= ' + STR(@CategoryId) + ' )'  IF ( @Level > -1 )      SET @condition = @condition + ' AND  (Level= ' + STR(@Level) + ' )'  IF ( @Type > -1 )      SET @condition = @condition + ' AND  (Type= ' + STR(@Type) + '  )'  IF ( @Status > -1 )      SET @condition = @condition + ' AND  (Status= ' + STR(@Status) + ' )'  IF ( @Mark <> '-1' )      SET @condition = @condition + ' AND  (Mark= ' + @Mark + ' )'  -- Khong lay cau hoi het han  SET @condition = @condition + ' AND  (ExpiryDate >= GETDATE() )'  -- Khong lay cau hoi da dc them vao khung de  SET @condition = @condition + ' AND Id NOT IN ( SELECT DataId FROM dbo.AIElearning_TestForm_Part WHERE Type = ' + STR(@DataType) + ' AND TestId = ' + STR(@TestId) + ' )'  EXEC('  SELECT COUNT(Id)   FROM    dbo.AIElearning_Question  WHERE ' + @condition )  SET QUOTED_IDENTIFIER OFF      "
1105,CoreMessaging_MarkMessageAsDispatched,"CREATE PROCEDURE dbo.[CoreMessaging_MarkMessageAsDispatched]   @MessageId int,   @RecipientId int  AS  BEGIN   Update dbo.CoreMessaging_MessageRecipients set EmailSent = 1, EmailSentDate =GETDATE()   where MessageID =@MessageId AND RecipientId=@RecipientId  END"
1106,vw_Portals,"CREATE VIEW dbo.[vw_Portals]  AS      SELECT          P.PortalID,          P.PortalGroupID,          PL.PortalName,     Case when PL.LogoFile LIKE 'fileid=%'      then (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(PL.LogoFile, 8, 10) AS Int))      else Coalesce(PL.LogoFile,'')      end as LogoFile,          PL.FooterText,          P.ExpiryDate,          P.UserRegistration,          P.BannerAdvertising,          P.AdministratorId,          P.Currency,          P.HostFee,          P.HostSpace,          P.PageQuota,          P.UserQuota,          P.AdministratorRoleId,          P.RegisteredRoleId,          PL.Description,          PL.KeyWords,           Case when PL.BackgroundFile LIKE 'fileid=%'      then (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(PL.BackgroundFile, 8, 10) AS Int))      else Coalesce(PL.BackgroundFile,'')      end as BackgroundFile    ,          P.GUID,          P.PaymentProcessor,          P.ProcessorUserId,          P.ProcessorPassword,          P.SiteLogHistory,          U.Email,          P.DefaultLanguage,          P.TimezoneOffset,          PL.AdminTabId,          P.HomeDirectory,          PL.SplashTabId,         PL.HomeTabId,          PL.LoginTabId,          PL.RegisterTabId,          PL.UserTabId,          PL.SearchTabId,          PL.Custom404TabId,          PL.Custom500TabId,          dbo.SuperUserTabID() AS SuperTabId,          P.CreatedByUserID,          P.CreatedOnDate,          P.LastModifiedByUserID,          P.LastModifiedOnDate,          PL.CultureCode      FROM       dbo.[Portals]            AS P      INNER JOIN dbo.[PortalLocalization] AS PL ON P.PortalID = PL.PortalID      LEFT  JOIN dbo.[Users]              AS U  ON P.AdministratorId = U.UserID"
1107,AIElearning_TestCampaign_GetsBySearch,"    CREATE proc [dbo].[AIElearning_TestCampaign_GetsBySearch]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(500),  @UnitCode nvarchar(50),  @Category int,  @Participants int,  @Status int  as  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (UnitCode = ''' + @UnitCode + ''') '  IF(@Category>-1)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category_Campaign where id=@Category   set @condition = @condition +  ' and Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in ('+@ChildId+'))'  end  --if(@Category>-1)  --set @Condition=@Condition+' AND (select COUNT(ID) FROM AIElearning_TestCampaign_Category where AIElearning_TestCampaign_Category.CategoryId='+str(@Category)+' and AIElearning_TestCampaign_Category.TestCampaignId=AIElearning_TestCampaign.Id)>0'  if(@Participants>-1)   set @Condition=@Condition+' AND Participants='+str(@Participants)  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  exec('    WITH #AIElearning_TestCampaign AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign '+@Condition+'      )         SELECT     *   FROM #AIElearning_TestCampaign   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1108,AIElearning_TestForm_Part_DeleteAllChildAndIncludeParentID1,"    CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_DeleteAllChildAndIncludeParentID1]  @TestId int,  @ParentId int,   @includeParentId bit  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.Id = @ParentId)      AND AIElearning_TestForm_Part.TestId = @TestId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_TestForm_Part.ParentId IS NULL))      AND AIElearning_TestForm_Part.TestId = @TestId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_TestForm_Part  S ON S.ParentId=T.Id AND T.Level=@Level AND S.TestId = @TestId        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END  SELECT * from #PathConstruction    "
1109,GetPortalByPortalAliasID,CREATE PROCEDURE dbo.[GetPortalByPortalAliasID]     @PortalAliasId  int    AS  SELECT P.*  FROM dbo.vw_Portals P   INNER JOIN dbo.PortalAlias PA ON P.PortalID = PA.PortalID  WHERE PA.PortalAliasId = @PortalAliasId
1110,MoveTabAfter,"CREATE PROCEDURE dbo.[MoveTabAfter]    @TabId     int,   @AfterTabId    int,   @LastModifiedByUserID int  AS   BEGIN    DECLARE @OldParentId int    DECLARE @NewParentId int    DECLARE @PortalId int        SET @OldParentId = (SELECT ParentId FROM dbo.Tabs WHERE TabID = @TabId)    SET @NewParentId = (SELECT ParentId FROM dbo.Tabs WHERE TabID = @AfterTabId)    SET @PortalId = (SELECT PortalId FROM dbo.Tabs WHERE TabID = @TabId)      DECLARE @TabOrder int    SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @TabId)        IF (@OldParentId <> @NewParentId OR NOT (@OldParentId IS NULL AND @NewParentId IS NULL))     -- Parent has changed     BEGIN      -- update TabOrder of Tabs with same original Parent      UPDATE dbo.Tabs       SET TabOrder = TabOrder - 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder > @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Get TabOrder of AfterTab      SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @AfterTabId)              -- update TabOrder of Tabs with same new Parent      UPDATE dbo.Tabs       SET TabOrder = TabOrder + 2       WHERE (ParentId = @NewParentId OR (ParentId IS NULL AND @NewParentId IS NULL))         AND TabOrder > @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Update Tab with new TabOrder      UPDATE dbo.Tabs       SET         ParentId    = @NewParentId,        TabOrder    = @TabOrder + 2,        LastModifiedByUserID = @LastModifiedByUserID,        LastModifiedOnDate  = GETDATE()            WHERE TabID = @TabId      EXEC dbo.BuildTabLevelAndPath @TabId, 1     END    ELSE     -- Parent has not changed     BEGIN      -- Remove Tab from TabOrder      UPDATE dbo.Tabs       SET TabOrder = -1       WHERE TabID = @TabId             -- Reorder      UPDATE dbo.Tabs       SET TabOrder = TabOrder - 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder > @TabOrder        AND TabId <> @TabId        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))              -- Get TabOrder of AfterTab      SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @AfterTabId)                  -- Reorder           UPDATE dbo.Tabs       SET TabOrder = TabOrder + 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder > @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Update Tab with new TabOrder      UPDATE dbo.Tabs       SET         TabOrder    = @TabOrder + 2,        LastModifiedByUserID = @LastModifiedByUserID,        LastModifiedOnDate  = GETDATE()            WHERE TabID = @TabId      EXEC dbo.BuildTabLevelAndPath @TabId     END   END"
1111,AIElearning_SurveyPart_SetOrderNo,"CREATE proc [dbo].[AIElearning_SurveyPart_SetOrderNo]   @id int,  @aboveOrderNo int  as  -- AIElearning_SurveyPart_SetOrderNo 4,-1  begin  DECLARE @aboveID AS int  DECLARE @currentOrderNo AS int  DECLARE @surveyId AS int  select @surveyId = SurveyId from AIElearning_SurveyPart where Id= @id  select @currentOrderNo = OrderNo from AIElearning_SurveyPart where Id= @id  select @aboveID = Id from AIElearning_SurveyPart where OrderNo= @aboveOrderNo and SurveyId = @surveyId    begin   IF(@currentOrderNo <> 0)    begin      if(@currentOrderNo < @aboveOrderNo)       begin       update AIElearning_SurveyPart set OrderNo = (OrderNo - 1) where OrderNo > @currentOrderNo and OrderNo <=  @aboveOrderNo and SurveyId= @surveyId       update AIElearning_SurveyPart set OrderNo=@aboveOrderNo   where Id= @id      end     else      begin      if(@aboveOrderNo = -1)       begin         update AIElearning_SurveyPart set OrderNo = (OrderNo + 1) where OrderNo <= @currentOrderNo and SurveyId= @surveyId        update AIElearning_SurveyPart set OrderNo= 1  where Id= @id       end      else       begin        update AIElearning_SurveyPart set OrderNo = (OrderNo + 1) where OrderNo <= @currentOrderNo and OrderNo > @aboveOrderNo and SurveyId= @surveyId        update AIElearning_SurveyPart set OrderNo= (@aboveOrderNo +1)  where Id= @id       end      end    end   else    begin     if(@aboveOrderNo = -1)      begin       update AIElearning_SurveyPart set OrderNo = (OrderNo +1) where SurveyId= @surveyId      end     else      begin       update AIElearning_SurveyPart set OrderNo = (OrderNo +1) where OrderNo > @aboveOrderNo and SurveyId= @surveyId       update AIElearning_SurveyPart set OrderNo= (@aboveOrderNo +1)  where Id= @id      end    end  end  end  "
1112,AIElearning_TestCampaign_Registor_Report,"create proc [dbo].[AIElearning_TestCampaign_Registor_Report]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @status int,  @registerType int,  @testCampaignId int,  @registorType int,  @ngaybd datetime,  @ngaykt datetime  as  -- AIElearning_TestCampaign_Registor_GetsBySearch 1,10,'cây xanh',-1,-1,-1,-1  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --tu khoa  if(@Keyword<>'')  set @Condition=@Condition+' AND (Name like N''%'+@Keyword + '%'')'  --trang thai  if(@status>-1)  set @Condition=@Condition+' AND Status='+str(@status)  --Loai ca thi  if(@registerType>-1)  set @Condition=@Condition+' AND RegisterType='+str(@registerType)  --Dot thi  if(@testCampaignId>-1)  set @Condition=@Condition+' AND TestCampaignId='+str(@testCampaignId)  -- Loai ca thi (online/offline)  if(@registorType>-1)  set @Condition=@Condition+' AND RegistorType='+str(@registorType)  --ngày bắt đầu  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''  --ngày kết thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''    exec('    WITH #AIElearning_TestCampaign_Registor AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_Registor '+@Condition+'      )         SELECT     *   FROM #AIElearning_TestCampaign_Registor   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1113,AICDC_DataSync_Action_GetsBySearch,"  CREATE proc [dbo].[AICDC_DataSync_Action_GetsBySearch]  @pageIndex int,  @pageSize int,  @PeriodCode nvarchar(50),  @Status int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@PeriodCode <>'')   set @Condition=@Condition+' AND PeriodCode='''+(@PeriodCode)+''''  if(@Status > -1)   set @condition = @condition  + ' and Status =' + str(@Status)  exec('    WITH #AICDC_DataSync_Action AS(    SELECT ROW_NUMBER() OVER (ORDER BY TableId ) AS RowNumber,     *     from AICDC_DataSync_Action  where '+ @condition +'     )         SELECT     *   FROM #AICDC_DataSync_Action   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1114,DeleteTabPermission,CREATE PROCEDURE dbo.DeleteTabPermission   @TabPermissionID int  AS    DELETE FROM dbo.TabPermission  WHERE   [TabPermissionID] = @TabPermissionID
1115,AIElearning_SurveyUserQuestion_GetSelectionByQuestionId,create proc [dbo].[AIElearning_SurveyUserQuestion_GetSelectionByQuestionId]   @surveyQuestionId int  as  -- AIElearning_SurveyUserQuestion_GetSelectionByQuestionId 1200  begin   select COUNT(*) from AIElearning_SurveyUserQuestion where SurveyQuestionId =@surveyQuestionId  end  
1116,AIElearning_CertificateSubject_GetsBySearch,"create proc [dbo].[AIElearning_CertificateSubject_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Type int,  @Classid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@Keyword<>'')  set @Condition=@Condition+' AND  Title LIKE N''%'+@Keyword+'%'''    if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)  exec('    WITH #AIElearning_Certificate AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Certificate '+@Condition+'      )         SELECT     *   FROM #AIElearning_Certificate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1117,Mobile_GetAllRedirections,"CREATE PROCEDURE dbo.[Mobile_GetAllRedirections]  AS       SELECT  Id ,              PortalId ,              Name ,              [Type] ,              SortOrder ,              SourceTabId ,     IncludeChildTabs ,              TargetType ,              TargetValue ,     Enabled ,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.Mobile_Redirections       ORDER BY PortalId ASC, SortOrder ASC"
1118,AISystem_DNNRoles_Count,"create proc [dbo].[AISystem_DNNRoles_Count]  @Keyword nvarchar(250)      as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  end        exec('select COUNT(RoleId) from Roles '+@Condition)      SET QUOTED_IDENTIFIER OFF"
1119,EvaluationCommentItem$DefaultView,"  -- Create function that implements the default view for the EvaluationCommentItem item type  CREATE FUNCTION [EvaluationCommentItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [InteractionId], [Comment], [Location], [Ordinal], [Timestamp]      FROM [EvaluationCommentItem]  )  "
1120,AIElearning_Class_Lecturers_GetsInfoByClassIdAndLecturersId,"  CREATE proc [dbo].[AIElearning_Class_Lecturers_GetsInfoByClassIdAndLecturersId]  @ClassId int,  @LecturersId INT,  @ParentType INT   as  -- AIElearning_Class_Lecturers_GetsInfoByClassIdAndLecturersId 15, 2  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@ClassId > 0)   set @condition = @condition + ' And  (ClassId= '+ STR(@ClassId)+' )'  IF(@LecturersId > 0)   set @condition = @condition + ' And  (LecturersId= '+ STR(@LecturersId)+' )'  IF(@ParentType > 0)   set @condition = @condition + ' And  (ParentType= '+ STR(@ParentType)+' )'  exec('    select Top(1) * from AIElearning_Class_Lecturers where ' + @condition +'      ')    SET QUOTED_IDENTIFIER OFF   "
1121,AIElearning_TestCampaign_Registor_CheckCodeTestCampaign,"create proc [dbo].[AIElearning_TestCampaign_Registor_CheckCodeTestCampaign]   @code nvarchar(250),  @TestCampaignId int,  @RegistorType int  as  select count(*) from AIElearning_TestCampaign_Registor where Code =@code and TestCampaignId=@TestCampaignId and RegistorType=@RegistorType  "
1122,AISystem_UpdateUserRegistration,"CREATE PROC [dbo].[AISystem_UpdateUserRegistration]  @UserRegistration INT,  @userId int  as  UPDATE dbo.Portals SET UserRegistration = @UserRegistration, LastModifiedByUserID = @userId, LastModifiedOnDate = GETDATE()  "
1123,AddListEntry,"CREATE PROCEDURE dbo.[AddListEntry]     @ListName nvarchar(50),    @Value nvarchar(100),    @Text nvarchar(150),   @ParentID int,   @Level int,    @EnableSortOrder bit,   @DefinitionID int,    @Description nvarchar(500),   @PortalID int,   @SystemList bit,   @CreatedByUserID int    AS   DECLARE @SortOrder int     IF @EnableSortOrder = 1    SET @SortOrder = IsNull((SELECT MAX ([SortOrder]) From dbo.[Lists] Where [ListName] = @ListName), 0) + 1   ELSE    SET @SortOrder = 0     -- Check if this entry exists   If EXISTS (SELECT [EntryID] From dbo.[Lists] WHERE [ListName] = @ListName And [Value] = @Value And [Text] = @Text And [ParentID] = @ParentID)   BEGIN    SELECT -1    RETURN    END     INSERT INTO dbo.[Lists]     (      [ListName],    [Value],    [Text],    [Level],    [SortOrder],    [DefinitionID],    [ParentID],    [Description],    [PortalID],    [SystemList],    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]    )   VALUES (    @ListName,    @Value,    @Text,    @Level,    @SortOrder,    @DefinitionID,    @ParentID,    @Description,    @PortalID,    @SystemList,      @CreatedByUserID,      getdate(),      @CreatedByUserID,      getdate()     )     SELECT SCOPE_IDENTITY()"
1124,vw_TabModules,"CREATE VIEW dbo.[vw_TabModules]  AS      SELECT          M.PortalID AS [OwnerPortalID],          T.PortalID,          TM.TabID,          TM.TabModuleID,          M.ModuleID,          M.ModuleDefID,          TM.ModuleOrder,          TM.PaneName,          TM.ModuleTitle,          TM.CacheTime,          TM.CacheMethod,          TM.Alignment,          TM.Color,          TM.Border,           Case when tm.IconFile LIKE 'fileid=%'      then (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(tm.IconFile, 8, 10) AS Int))      else Coalesce(tm.IconFile,'')      end as IconFile    ,M.AllTabs,          TM.Visibility,          TM.IsDeleted,          TM.Header,          TM.Footer,          M.StartDate,          M.EndDate,          TM.ContainerSrc,          TM.DisplayTitle,          TM.DisplayPrint,          TM.DisplaySyndicate,          TM.IsWebSlice,          TM.WebSliceTitle,          TM.WebSliceExpiryDate,          TM.WebSliceTTL,          M.InheritViewPermissions,          M.IsShareable,          M.IsShareableViewOnly,          MD.DesktopModuleID,          MD.DefaultCacheTime,          MC.ModuleControlID,          DM.BusinessControllerClass,          DM.IsAdmin,          DM.SupportedFeatures,          CI.ContentItemID,          CI.Content,          CI.ContentTypeID,          CI.ContentKey,          CI.Indexed,          CI.StateID,          TM.CreatedByUserID,          TM.CreatedOnDate,          TM.LastModifiedByUserID,          TM.LastModifiedOnDate,          M.LastContentModifiedOnDate,          TM.UniqueId,          TM.VersionGuid,          TM.DefaultLanguageGuid,          TM.LocalizedVersionGuid,          TM.CultureCode      FROM dbo.[ModuleDefinitions]     AS MD       INNER JOIN dbo.[Modules]        AS M  ON MD.ModuleDefID = M.ModuleDefID       INNER JOIN dbo.[ModuleControls] AS MC ON MD.ModuleDefID = MC.ModuleDefID       INNER JOIN dbo.[DesktopModules] AS DM ON MD.DesktopModuleID = DM.DesktopModuleID       LEFT  JOIN dbo.[ContentItems]   AS CI ON M.ContentItemID = CI.ContentItemID       LEFT  JOIN dbo.[TabModules]     AS TM ON M.ModuleID = TM.ModuleID       LEFT  JOIN dbo.[Tabs]           AS T  ON TM.TabID = T.TabID      WHERE (MC.ControlKey IS NULL)"
1125,AIElearning_TestCampaign_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_TestCampaign_GetsBySearchCount]  @Keyword nvarchar(500),  @UnitCode nvarchar(50),  @Category int,  @Participants int,  @Status int  as  -- AIElearning_TestCampaign_GetsBySearchCount '', '', 1, 1, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --   IF(@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (UnitCode = ''' + @UnitCode + ''') '  IF(@Category>-1)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category_Campaign where id=@Category   set @condition = @condition +  ' and Id IN (select distinct TestCampaignId from AIElearning_TestCampaign_Category where CategoryId in ('+@ChildId+'))'  end  --if(@Category>-1)  --set @Condition=@Condition+' AND (select COUNT(ID) FROM AIElearning_TestCampaign_Category where AIElearning_TestCampaign_Category.CategoryId='+str(@Category)+' and AIElearning_TestCampaign_Category.TestCampaignId=AIElearning_TestCampaign.Id)>0'  if(@Participants>-1)   set @Condition=@Condition+' AND Participants='+str(@Participants)  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)    exec('select COUNT(*) from AIElearning_TestCampaign '+@Condition)    SET QUOTED_IDENTIFIER OFF        "
1126,AISystem_Category_Campaign_GetInfoByCode,    CREATE PROC [dbo].[AISystem_Category_Campaign_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Campaign_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Campaign where   Code = @Code  SET QUOTED_IDENTIFIER OFF         
1127,UpdateUrlTrackingStats,"create procedure dbo.UpdateUrlTrackingStats    @PortalID     int,  @Url          nvarchar(255),  @ModuleId     int    as    update dbo.UrlTracking  set    Clicks = Clicks + 1,         LastClick = getdate()  where  PortalID = @PortalID  and    Url = @Url  and    ((ModuleId = @ModuleId) or (ModuleId is null and @ModuleId is null))"
1128,MoveTabBefore,"CREATE PROCEDURE dbo.[MoveTabBefore]    @TabId     int,   @BeforeTabId   int,   @LastModifiedByUserID int  AS   BEGIN    DECLARE @OldParentId int    DECLARE @NewParentId int    DECLARE @PortalId int        SET @OldParentId = (SELECT ParentId FROM dbo.Tabs WHERE TabID = @TabId)    SET @NewParentId = (SELECT ParentId FROM dbo.Tabs WHERE TabID = @BeforeTabId)    SET @PortalId = (SELECT PortalId FROM dbo.Tabs WHERE TabID = @TabId)        DECLARE @TabOrder int    SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @TabId)        IF (@OldParentId <> @NewParentId OR NOT (@OldParentId IS NULL AND @NewParentId IS NULL))     -- Parent has changed     BEGIN      -- update TabOrder of Tabs with same original Parent      UPDATE dbo.Tabs       SET TabOrder = TabOrder - 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder > @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Get TabOrder of AfterTab      SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @BeforeTabId)              -- update TabOrder of Tabs with same new Parent      UPDATE dbo.Tabs       SET TabOrder = TabOrder + 2       WHERE (ParentId = @NewParentId OR (ParentId IS NULL AND @NewParentId IS NULL))         AND TabOrder >= @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Update Tab with new TabOrder      UPDATE dbo.Tabs       SET         ParentId    = @NewParentId,        TabOrder    = @TabOrder,        LastModifiedByUserID = @LastModifiedByUserID,        LastModifiedOnDate  = GETDATE()            WHERE TabID = @TabId      EXEC dbo.BuildTabLevelAndPath @TabId, 1     END    ELSE     -- Parent has not changed     BEGIN      -- Remove Tab from TabOrder      UPDATE dbo.Tabs       SET TabOrder = -1       WHERE TabID = @TabId             -- Reorder      UPDATE dbo.Tabs       SET TabOrder = TabOrder - 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder > @TabOrder        AND TabId <> @TabId        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))              -- Get TabOrder of BeforeTab      SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @BeforeTabId)                  -- Reorder           UPDATE dbo.Tabs       SET TabOrder = TabOrder + 2       WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))         AND TabOrder >= @TabOrder        AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))        -- Update Tab with new TabOrder      UPDATE dbo.Tabs       SET         TabOrder    = @TabOrder,        LastModifiedByUserID = @LastModifiedByUserID,        LastModifiedOnDate  = GETDATE()            WHERE TabID = @TabId      EXEC dbo.BuildTabLevelAndPath @TabId     END   END"
1129,Guid_Default,(newid())
1130,AIElearning_SurveyQuestion_ChangePosition,"CREATE proc [dbo].[AIElearning_SurveyQuestion_ChangePosition]   @id int,  @move int  as  -- AIElearning_SurveyQuestion_ChangePosition 1243,1  begin  DECLARE @above AS int  DECLARE @below AS int  DECLARE @orderNo AS int  DECLARE @aboveId AS int  DECLARE @belowId AS int  DECLARE @SurveyPartId as int  select @orderNo = OrderNo from AIElearning_SurveyQuestion where Id= @id   SET @above = (@orderNo - 1)  SET @below = (@orderNo + 1)  select @SurveyPartId = SurveyPartId from AIElearning_SurveyQuestion where Id= @id    select @aboveId = Id from AIElearning_SurveyQuestion where OrderNo= @above  and SurveyPartId = @SurveyPartId  select @belowId = Id from AIElearning_SurveyQuestion where OrderNo= @below and SurveyPartId = @SurveyPartId  --1: Move down  if(@move = 0)  begin  update AIElearning_SurveyQuestion set OrderNo= @below where Id= @id  update AIElearning_SurveyQuestion set OrderNo= @orderNo where Id= @belowId    --0: Move up  end  if(@move = 1)  begin  update AIElearning_SurveyQuestion set OrderNo= @above where Id= @id  update AIElearning_SurveyQuestion set OrderNo= @orderNo where Id= @aboveId  end  end  "
1131,AddLanguage,"CREATE PROCEDURE dbo.[AddLanguage]     @CultureCode      nvarchar(50),   @CultureName            nvarchar(200),   @FallbackCulture        nvarchar(50),   @CreatedByUserID int    AS   INSERT INTO dbo.Languages (    CultureCode,    CultureName,    FallbackCulture,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   )   VALUES (    @CultureCode,    @CultureName,    @FallbackCulture,    @CreatedByUserID,      getdate(),      @CreatedByUserID,      getdate()   )   SELECT SCOPE_IDENTITY()"
1132,AIElearning_TestCampaign_Registor_Staff_GetsBySearch,"  create proc [dbo].[AIElearning_TestCampaign_Registor_Staff_GetsBySearch]   @pageIndex int,  @pageSize int,  @TestCampaignId int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  if(@TestCampaignId>-1)   set @Condition=@Condition+' AND  TestRegistorId='+str(@TestCampaignId)  exec('    WITH #AIElearning_TestCampaign_Registor_Staff AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_Registor_Staff where '+@Condition+'      )         SELECT     *   FROM #AIElearning_TestCampaign_Registor_Staff   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1133,AICDC_DataSync_Action_GetsBySearchCount,"CREATE proc [dbo].[AICDC_DataSync_Action_GetsBySearchCount]  @PeriodCode nvarchar(50),  @Status int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@PeriodCode <>'')   set @Condition=@Condition+' and PeriodCode='''+(@PeriodCode)+''''  if(@Status > -1)   set @condition = @condition  + ' and Status =' + str(@Status)  exec('   select COUNT(*)      from AICDC_DataSync_Action where  '+ @condition +'  ')  SET QUOTED_IDENTIFIER OFF         "
1134,EnsureNeutralLanguage,"CREATE PROCEDURE dbo.[EnsureNeutralLanguage]      @PortalId INT ,      @CultureCode NVARCHAR(10)  AS       BEGIN          SET NOCOUNT ON;            UPDATE  dbo.Tabs          SET     CultureCode = NULL          WHERE   PortalID = @PortalId                  AND CultureCode = @CultureCode      END"
1135,AISystem_Category_TrainingField_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_TrainingField_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TrainingField WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TrainingField WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TrainingField WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TrainingField WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TrainingField WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_TrainingField         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_TrainingField SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur  "
1136,AIElearning_CertificateSubject_GetsBySearchCount,"create proc [dbo].[AIElearning_CertificateSubject_GetsBySearchCount]  @Keyword nvarchar(250),  @Type int,  @ClassId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND  Title LIKE N''%'+@Keyword+'%'''    if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)    exec('select COUNT(*) from AIElearning_Certificate '+@Condition)  SET QUOTED_IDENTIFIER OFF    "
1137,ExtensionDataItem$DefaultView,"  -- Create function that implements the default view for the ExtensionDataItem item type  CREATE FUNCTION [ExtensionDataItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityAttemptId], [InteractionId], [AttemptObjectiveId], [Name], [AttachmentGuid], [AttachmentValue], [BoolValue], [DateTimeValue], [DoubleValue], [IntValue], [StringValue]      FROM [ExtensionDataItem]  )  "
1138,CoreMessaging_SaveMessageRecipient,"CREATE PROCEDURE dbo.[CoreMessaging_SaveMessageRecipient]      @RecipientID int,      @MessageID int,      @UserID int,      @Read bit,   @Archived bit,   @CreateUpdateUserID INT  AS  BEGIN      IF ( @RecipientID = -1 )          BEGIN              INSERT dbo.CoreMessaging_MessageRecipients(       [MessageID],       [UserID],       [Read],       [Archived],                      [CreatedByUserID],                      [CreatedOnDate],                      [LastModifiedByUserID],                      [LastModifiedOnDate]                      )              VALUES  (       @MessageID,       @UserID,       @Read,       @Archived,                      @CreateUpdateUserID , -- CreatedBy - int                      GETDATE(), -- CreatedOn - datetime                      @CreateUpdateUserID , -- LastModifiedBy - int                      GETDATE() -- LastModifiedOn - datetime                      )                SELECT  @RecipientID = SCOPE_IDENTITY()          END      ELSE          BEGIN              UPDATE  dbo.CoreMessaging_MessageRecipients              SET     [MessageID] = @MessageID,       [UserID] = @UserID,       [Read] = @Read,       [Archived] = @Archived,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   RecipientID = @RecipientID          END        SELECT  @RecipientID  END"
1139,vw_Tabs,"CREATE VIEW dbo.[vw_Tabs]  AS      SELECT          T.TabID,          T.TabOrder,          T.PortalID,          T.TabName,          T.ParentId,          T.[Level],          T.TabPath,          T.UniqueId,          T.VersionGuid,          T.DefaultLanguageGuid,          T.LocalizedVersionGuid,          T.IsVisible,    T.HasBeenPublished,     Case when t.IconFile LIKE 'fileid=%'      then (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(t.IconFile, 8, 10) AS Int))      else Coalesce(t.IconFile,'')      end as IconFile    ,           Case when t.IconFileLarge LIKE 'fileid=%'      then (SELECT IsNull(Folder, '') + [FileName] FROM dbo.[vw_Files]      WHERE fileid = CAST(SUBSTRING(t.IconFileLarge, 8, 10) AS Int))      else Coalesce(t.IconFileLarge,'')      end as IconFileLarge    ,T.DisableLink,          T.Title,          T.Description,          T.KeyWords,          T.IsDeleted,          T.SkinSrc,          T.ContainerSrc,          T.StartDate,          T.EndDate,          T.Url,          CASE WHEN dbo.HasChildTab(T.TabID) = 1 THEN 'true' ELSE 'false' END AS HasChildren,          T.RefreshInterval,          T.PageHeadText,          T.IsSecure,          T.PermanentRedirect,          T.SiteMapPriority,          CI.ContentItemID,          CI.[Content],          CI.ContentTypeID,          CI.ModuleID,          CI.ContentKey,          CI.Indexed,          CI.StateID,          T.CultureCode,          T.CreatedByUserID,          T.CreatedOnDate,          T.LastModifiedByUserID,          T.LastModifiedOnDate,    T.IsSystem      FROM       dbo.[Tabs]         AS T      LEFT  JOIN dbo.[ContentItems] AS CI ON T.ContentItemID = CI.ContentItemID"
1140,AIElearning_TestCampaign_GetsCountCode,CREATE proc [dbo].[AIElearning_TestCampaign_GetsCountCode]  @code nvarchar(150)  as      select count(*) from AIElearning_TestCampaign where code =@code  
1141,AIElearning_TestForm_Part_DeleteByTestId,  create PROC [dbo].[AIElearning_TestForm_Part_DeleteByTestId]  @TestId int  AS  DELETE FROM AIElearning_TestForm_Part  WHERE        (TestId = @TestId)  
1142,AddLanguagePack,"CREATE PROCEDURE dbo.[AddLanguagePack]     @PackageID       int,   @LanguageID       int,   @DependentPackageID  int,   @CreatedByUserID int    AS   INSERT INTO dbo.LanguagePacks (    PackageID,    LanguageID,    DependentPackageID,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]     )   VALUES (    @PackageID,    @LanguageID,    @DependentPackageID,    @CreatedByUserID,      getdate(),      @CreatedByUserID,      getdate()   )   SELECT SCOPE_IDENTITY()"
1143,MoveTabToParent,"CREATE PROCEDURE dbo.[MoveTabToParent]    @TabId     int,   @NewParentId   int,   @LastModifiedByUserID int  AS   BEGIN    DECLARE @PortalId int    SET @PortalId = (SELECT PortalId FROM dbo.Tabs WHERE TabID = @TabId)      DECLARE @OldParentId int    SET @OldParentId = (SELECT ParentId FROM dbo.Tabs WHERE TabID = @TabId)        DECLARE @TabOrder int    SET @TabOrder = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @TabId)        -- Get New TabOrder    DECLARE @NewTabOrder int    SET @NewTabOrder = (SELECT MAX(TabOrder) FROM dbo.Tabs          WHERE (PortalId = @PortalID OR (PortalId IS NULL AND @PortalID IS NULL)) AND            (ParentId = @NewParentId OR (ParentId IS NULL AND @NewParentId IS NULL))        )    IF @NewTabOrder IS NULL      SET @NewTabOrder = 1    ELSE     SET @NewTabOrder = @NewTabOrder + 2             BEGIN     -- update TabOrder of Tabs with same original Parent     UPDATE dbo.Tabs      SET TabOrder = TabOrder - 2      WHERE (ParentId = @OldParentId OR (ParentId IS NULL AND @OldParentId IS NULL))        AND TabOrder > @TabOrder       AND (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))       -- Update Tab with new TabOrder     UPDATE dbo.Tabs      SET        ParentId    = @NewParentId,       TabOrder    = @NewTabOrder,       LastModifiedByUserID = @LastModifiedByUserID,       LastModifiedOnDate  = GETDATE()           WHERE TabID = @TabId    END    IF (@OldParentId <> @NewParentId) OR (@OldParentId IS NULL AND @NewParentId IS NOT NULL) OR (@OldParentId IS NOT NULL AND @NewParentId IS NULL)     BEGIN      EXEC dbo.BuildTabLevelAndPath @TabId, 1     END    ELSE     BEGIN      EXEC dbo.BuildTabLevelAndPath @TabId     END   END"
1144,AIElearning_SurveyQuestion_CountAllQuestionBySurveyId,CREATE proc [dbo].[AIElearning_SurveyQuestion_CountAllQuestionBySurveyId]   @surveyId int  as  -- AIElearning_SurveyQuestion_CountAllQuestionBySurveyId 4  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@surveyId>-1)   set @Condition=@Condition+' AND  s.Id='+str(@surveyId)  exec('   SELECT count(*)   from AIElearning_SurveyQuestion sq inner join AIElearning_SurveyPart sp    on sq.SurveyPartId = sp.Id inner join AIElearning_Survey s on s.Id = sp.SurveyId     where '+@Condition+'    ')      
1145,GetUrl,"create procedure dbo.GetUrl    @PortalID     int,  @Url          nvarchar(255)    as    select *  from   dbo.Urls  where  PortalID = @PortalID  and    Url = @Url"
1146,AIElearning_TestCampaign_Unit_GetsBySearchCount,CREATE proc [dbo].[AIElearning_TestCampaign_Unit_GetsBySearchCount]  @TestCampaignId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@TestCampaignId>0)   set @Condition=@Condition+' AND TestCampaignId='+str(@TestCampaignId)    exec('select COUNT(*) from AIElearning_TestCampaign_Unit '+@Condition)  SET QUOTED_IDENTIFIER OFF   
1147,AICDC_DataSync_Action_GetsInfoByTableId,"CREATE proc [dbo].[AICDC_DataSync_Action_GetsInfoByTableId]  @TableId int,  @PeriodCode nvarchar(50),  @Status int  as  -- AICDC_DataSync_Action_GetsInfoByTableId 1, -1  Select top(1) * from AICDC_DataSync_Action  where   TableId = @TableId and PeriodCode = @PeriodCode and (Status = @Status or @Status = -1)  SET QUOTED_IDENTIFIER OFF      "
1148,GetUserByUsername,"CREATE PROCEDURE dbo.[GetUserByUsername]     @PortalID int,   @Username nvarchar(100)    AS   SELECT * FROM dbo.vw_Users   WHERE  Username = @Username    AND  ((@PortalId IS NULL) OR (PortalId = @PortalID) OR IsSuperUser = 1)"
1149,ConvertTabToNeutralLanguage,"Create PROCEDURE dbo.[ConvertTabToNeutralLanguage]      @PortalId INT ,      @TabId INT ,      @CultureCode NVARCHAR(10)  AS       BEGIN          SET NOCOUNT ON;            UPDATE  dbo.Tabs          SET     CultureCode = NULL          WHERE   PortalID = @PortalId                  AND TabID = @TabID                  AND CultureCode = @CultureCode      END"
1150,Search,create procedure [dbo].[Search]  @Email nvarchar(200)  as  begin  select Email  from Users  where Email like N'%' + @Email + '%'  end  
1151,AIElearning_Exercise_DeleteMentorExerciseId,create proc [dbo].[AIElearning_Exercise_DeleteMentorExerciseId]  @ExerciseId int  as  delete from AIElearning_Exercise_Mentor where ExerciseId=@ExerciseId  
1152,AIElearning_Certificate_OfflineSubject_GetsBySearch,"create proc [dbo].[AIElearning_Certificate_OfflineSubject_GetsBySearch]  @Classid int,  @Type int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)    exec('select * from AIElearning_Certificate_Offline '+@Condition)  SET QUOTED_IDENTIFIER OFF      "
1153,GlobalObjectiveItem$DefaultView,"  -- Create function that implements the default view for the GlobalObjectiveItem item type  CREATE FUNCTION [GlobalObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [OrganizationId], [Key], [Description]      FROM [GlobalObjectiveItem]  )  "
1154,AIElearning_ClassUser_GetsBySearchCountReport,"CREATE proc [dbo].[AIElearning_ClassUser_GetsBySearchCountReport]   @Keyword nvarchar(250),  @Unitcode nvarchar(250),  @ClassId int,  @Status int,  @UnitChidcode nvarchar(250)  as  --AIElearning_ClassUser_GetsBySearchCount '',-1,19,-1,'01/01/1900','01/01/2900'  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.Mastercode like N''%' + @Keyword + '%''))'   --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)   --trạng thái  if(@Status > -1)   set @Condition=@Condition+' AND c.Status='+str(@Status)  if(@Unitcode <>'-1')   set @Condition=@Condition+' AND i.UnitCode='''+@Unitcode+''''  if(@UnitChidcode<>'')   set @Condition=@Condition+' AND i.UnitChildCode in (select * from dbo.split('''+@UnitChidcode+'''))'    exec('   select COUNT(*) from AIElearning_ClassUser c inner join  AISystem_UserInfo i on i.UserId = c.UserID LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code LEFT JOIN dbo.AISystem_JobTitle_Title j ON i.JobTitleCode = j.Code where ' + @condition +' and u.Status = 1  ')  SET QUOTED_IDENTIFIER OFF"
1155,AIElearning_SurveyPart_DeleteAndUpdatePosition,CREATE PROC [dbo].[AIElearning_SurveyPart_DeleteAndUpdatePosition]   @id INT  AS  BEGIN      DECLARE @SurveyId AS INT      DECLARE @orderNo AS INT   -- Lay id khao sat      SELECT  @SurveyId = SurveyId      FROM    dbo.AIElearning_SurveyPart      WHERE   Id = @id   -- Lay vi tri khao sat      SELECT  @orderNo = OrderNo      FROM    dbo.AIElearning_SurveyPart      WHERE   Id = @id    -- Xoa no      DELETE  FROM dbo.AIElearning_SurveyPart      WHERE   Id = @id      UPDATE  dbo.AIElearning_SurveyPart      SET     OrderNo = ( OrderNo - 1 )      WHERE   OrderNo > @orderNo AND SurveyId = @SurveyId  END      
1156,GetScheduleHistory,"CREATE PROCEDURE dbo.GetScheduleHistory @ScheduleID INT  AS       SELECT  S.* ,              SH.*      FROM    dbo.Schedule S              INNER JOIN dbo.ScheduleHistory SH ON S.ScheduleID = SH.ScheduleID      WHERE   S.ScheduleID = @ScheduleID              OR @ScheduleID = -1      ORDER BY SH.StartDate DESC"
1157,GetInstalledModules,"CREATE PROCEDURE dbo.[GetInstalledModules]  AS  BEGIN   SELECT      DM.DesktopModuleID,     DM.ModuleName,    DM.FriendlyName,    DM.Version,    --Left Joined nulls will not add to the count    COUNT(MDEF.DesktopModuleID) as Instances   FROM dbo.[DesktopModules] AS DM    --Paren's Will enforce inner join first before left outer joining    LEFT JOIN (dbo.[ModuleDefinitions] MDEF       INNER JOIN dbo.[Modules] MODS ON MDEF.ModuleDefID = MODS.ModuleDefID)   ON dm.DesktopModuleID = MDEF.DesktopModuleID    WHERE (IsAdmin = 0)   GROUP BY DM.DesktopModuleID, DM.ModuleName, DM.FriendlyName, DM.Version   ORDER BY DM.[FriendlyName] ASC  END"
1158,AIElearning_TestCampaign_Registor_CheckCode,create proc [dbo].[AIElearning_TestCampaign_Registor_CheckCode]  @code nvarchar(250)  as  select count(*) from AIElearning_TestCampaign_Registor where Code =@code  
1159,AISystem_Category_Money_Unit_GetInfoById,create PROC [dbo].[AISystem_Category_Money_Unit_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Money_Unit where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1160,CoreMessaging_CountArchivedMessages,"CREATE PROCEDURE dbo.[CoreMessaging_CountArchivedMessages]   @UserID int,   @PortalID int  AS  BEGIN   SELECT COUNT(DISTINCT M.MessageID) AS TotalRecords   FROM dbo.[CoreMessaging_Messages] M   JOIN dbo.[CoreMessaging_MessageRecipients] MR ON M.MessageID = MR.MessageID   WHERE Archived = 1   AND NotificationTypeID IS NULL AND PortalID = @PortalID AND UserID = @UserID  END"
1161,AddRedirectMessage,"CREATE PROCEDURE dbo.[AddRedirectMessage]   @UserId int,   @TabId int,   @Text [nvarchar](max)  AS   INSERT INTO dbo.RedirectMessages    (UserId, TabId, MessageText)   OUTPUT inserted.MessageId   VALUES(@UserId, @TabId, @Text)"
1162,AIElearning_TestCampaign_Unit_GetsBySearch,"  CREATE proc [dbo].[AIElearning_TestCampaign_Unit_GetsBySearch]  @pageIndex int,  @pageSize int,  @TestCampaignId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@TestCampaignId>0)   set @Condition=@Condition+' AND TestCampaignId='+str(@TestCampaignId)    exec('    WITH #AIElearning_TestCampaign_Unit AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_Unit '+@Condition+'     )         SELECT     *   FROM #AIElearning_TestCampaign_Unit   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1163,AICDC_DataSync_Action_GetsLastRecord,create proc [dbo].[AICDC_DataSync_Action_GetsLastRecord]  @TableId int  as  select top(1) * from AICDC_DataSync_Action where (TableId = @TableId or @TableId = -1) ORDER BY Id DESC  SET QUOTED_IDENTIFIER OFF      
1164,RemovePortalLocalization,"CREATE PROCEDURE dbo.[RemovePortalLocalization]      @PortalId INT ,      @CultureCode NVARCHAR(10)  AS       BEGIN          SET NOCOUNT ON;            DELETE  FROM dbo.PortalLocalization          WHERE   PortalID = @PortalId                  AND CultureCode = @CultureCode        END"
1165,AISystem_Category_TeachingTopic_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_TeachingTopic WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_TeachingTopic (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TeachingTopic WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TeachingTopic WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TeachingTopic WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TeachingTopic WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TeachingTopic WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_TeachingTopic         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_TeachingTopic (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()  "
1166,AIElearning_Class_MarkOffLinesubject_Code_GetsBySearchCount,"create proc [dbo].[AIElearning_Class_MarkOffLinesubject_Code_GetsBySearchCount]  @ClassId int,@type int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)    exec('   select COUNT(*) from AIElearning_Class_MarkOffLine_Code where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
1167,AddFolderMappingsSetting,"CREATE PROCEDURE dbo.[AddFolderMappingsSetting]   @FolderMappingID int,   @SettingName nvarchar(50),   @SettingValue nvarchar(2000),   @CreatedByUserID int  AS  BEGIN   INSERT INTO dbo.[FolderMappingsSettings] (    FolderMappingID,    SettingName,    SettingValue,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )   VALUES (    @FolderMappingID,    @SettingName,    @SettingValue,    @CreatedByUserID,    GETDATE(),    @CreatedByUserID,    GETDATE()   )  END"
1168,AIESystem_Roles_GetRoles,"CREATE proc AIESystem_Roles_GetRoles  @roleid int  as  select ROW_NUMBER() OVER (ORDER BY AIESystem_Roles_DNNRoles.ID desc) AS RowNumber ,AIESystem_Roles_DNNRoles.ID,AISystem_Roles.Name,Roles.RoleName,Roles.Description from AIESystem_Roles_DNNRoles,AISystem_Roles,Roles where AIESystem_Roles_DNNRoles.RolesID=AISystem_Roles.id and AIESystem_Roles_DNNRoles.DNNRoleID=roles.roleid and AISystem_Roles.id=@roleid  "
1169,InteractionItem$DefaultView,"  -- Create function that implements the default view for the InteractionItem item type  CREATE FUNCTION [InteractionItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityAttemptId], [InteractionIdFromCmi], [InteractionType], [Timestamp], [Weighting], [ResultState], [ResultNumeric], [Latency], [Description], [LearnerResponseBool], [LearnerResponseString], [LearnerResponseNumeric], [ScaledScore], [RawScore], [MinScore], [MaxScore], [EvaluationPoints]      FROM [InteractionItem]  )  "
1170,GetDatabaseInstallVersion,"CREATE procedure dbo.[GetDatabaseInstallVersion]  AS  SELECT  TOP 1 Major ,          Minor ,          Build  FROM    dbo.Version V  WHERE   VersionId IN ( SELECT   MAX(VersionId) AS VersionID                         FROM     dbo.[Version]                         GROUP BY CONVERT(NVARCHAR(8), CreatedDate, 112) )"
1171,AISystem_Level_DeleteAndUpdateOrderNo,CREATE proc [dbo].[AISystem_Level_DeleteAndUpdateOrderNo]   @id int  as  begin  DECLARE @orderNo AS int  select @orderNo = OrderNo from AISystem_Level where Id= @id   delete from AISystem_Level where Id = @id  update AISystem_Level set OrderNo = (OrderNo-1) where OrderNo > @orderNo  end    
1172,AISystem_UserInfo_GetsAllUserSystemNotInRegistorUser1,"CREATE proc [dbo].[AISystem_UserInfo_GetsAllUserSystemNotInRegistorUser1]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @registorId int,  @Limit int,  @Type int,  @Unitcode NVARCHAR(150),   @UnitChildcode NVARCHAR(150),   @JobTitlecode NVARCHAR(150),  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- AISystem_UserInfo_GetsAllUserSystemNotInClassUser1 1, 999, N'TP-CSKHVINID', 10, -1, -1, '', '', '' ,1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')   set @condition = @condition + ' and (Username like N''%' + @Keyword + '%'' OR Mastercode like N''%' + @Keyword + '%'') '  IF(@Limit > 0)   set @condition = @condition +    ' And  (Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  (Type= '+ STR(@Type)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  (Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   --set @condition = @condition +    ' And  (UnitChildcode= '''+ @UnitChildcode+''' )'   set @condition = @condition +    ' And  ( UnitChildcode in  (select * from split('''+ @UnitChildcode+''')) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  (JobTitlecode= '''+ @JobTitlecode+''' )'  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  IF(@registorId > 0)   set @condition = @condition +  ' And  UserId not in (select userid from AIElearning_TestCampaign_RegistorUser where TestRegistorId='+str(@registorId)+') '     exec('    WITH #users AS(    SELECT ROW_NUMBER() OVER (ORDER BY userid desc) AS RowNumber,       *     from AISystem_UserInfo where  ' +@Condition+ '      )       SELECT     *   FROM #users   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1173,GetSystemMessages,create procedure dbo.GetSystemMessages    as    select MessageName  from   dbo.SystemMessages  where  PortalID is null
1174,AIElearning_TestCampaign_Registor_GetsBySearch,"CREATE proc [dbo].[AIElearning_TestCampaign_Registor_GetsBySearch]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @status int,  @registerType int,  @testCampaignId int,  @registorType int  as  -- AIElearning_TestCampaign_Registor_GetsBySearch 1,10,'cây xanh',-1,-1,-1,-1  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --tu khoa  if(@Keyword<>'')  set @Condition=@Condition+' AND (Name like N''%'+@Keyword + '%'' or Code like N''%'+@Keyword + '%'' )'  --trang thai  if(@status>-1)  set @Condition=@Condition+' AND Status='+str(@status)  --Loai ca thi  if(@registerType>-1)  set @Condition=@Condition+' AND RegisterType='+str(@registerType)  --Dot thi  if(@testCampaignId>-1)  set @Condition=@Condition+' AND TestCampaignId='+str(@testCampaignId)  -- Loai ca thi (online/offline)  if(@registorType>-1)  set @Condition=@Condition+' AND RegistorType='+str(@registorType)    exec('    WITH #AIElearning_TestCampaign_Registor AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestCampaign_Registor '+@Condition+'      )         SELECT     *   FROM #AIElearning_TestCampaign_Registor   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
1175,SaveCoreAuditTypes,"CREATE PROCEDURE dbo.SaveCoreAuditTypes   @LogTypeKey nvarchar(35),     @LogTypeFriendlyName nvarchar(50),     @LogTypeOwner nvarchar(100),     @LogTypeCSSClass nvarchar(40) ,   @LoggingIsActive bit,     @KeepMostRecent int,     @EmailNotificationIsActive bit      AS     IF NOT EXISTS (SELECT * FROM dbo.EventLogTypes WHERE LogTypeKey = @LogTypeKey)     BEGIN      -- Add new Event Type      EXEC dbo.AddEventLogType @LogTypeKey, @LogTypeFriendlyName, N'', @LogTypeOwner, @LogTypeCSSClass        -- Add new Event Type Config      EXEC dbo.AddEventLogConfig @LogTypeKey, NULL, @LoggingIsActive, @KeepMostRecent, @EmailNotificationIsActive, 1, 1, 1, N'', N''            -- exit      Return   END    ELSE      UPDATE dbo.EventLogTypes SET LogTypeFriendlyName = @LogTypeFriendlyName WHERE LogTypeKey = @LogTypeKey        UPDATE dbo.EventLogConfig    SET LoggingIsActive=@LoggingIsActive,    KeepMostRecent=@KeepMostRecent,    EmailNotificationIsActive=@EmailNotificationIsActive    WHERE LogTypeKey = @LogTypeKey"
1176,GetRedirectMessage,CREATE PROCEDURE dbo.[GetRedirectMessage]   @guid [UniqueIdentifier]  AS   SELECT MessageText   FROM dbo.RedirectMessages   WHERE MessageId = @guid
1177,AIElearning_SurveyQuestion_GetMaxOrderNo,"Create proc [dbo].[AIElearning_SurveyQuestion_GetMaxOrderNo]   @surveyPartId int  as  begin  select ISNULL(max(OrderNo),'0') from AIElearning_SurveyQuestion WHERE SurveyPartId=@surveyPartId   end  "
1178,vw_DesktopModulePermissions,"-- use new FK  CREATE VIEW dbo.[vw_DesktopModulePermissions]  AS  SELECT  PP.DesktopModulePermissionID,          PP.PortalDesktopModuleID,          P.PermissionID,          PP.RoleID,          R.RoleName,          PP.AllowAccess,          PP.UserID,          U.Username,          U.DisplayName,          P.PermissionCode,          P.ModuleDefID,          P.PermissionKey,          P.PermissionName,          PP.CreatedByUserID,          PP.CreatedOnDate,          PP.LastModifiedByUserID,          PP.LastModifiedOnDate  FROM        dbo.[DesktopModulePermission] AS PP   INNER JOIN dbo.[Permission]              AS P  ON PP.PermissionID = P.PermissionID   LEFT  JOIN dbo.[Roles]                   AS R  ON PP.RoleID = R.RoleID   LEFT  JOIN dbo.[Users]                   AS U  ON PP.UserID = U.UserID"
1179,AIEventLog_GetsByParamCount,"  CREATE PROC [dbo].[AIEventLog_GetsByParamCount]      @keyword NVARCHAR(50) ,      @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT ,      @ObjectType INT ,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME  AS   -- AIEventLog_GetsByParamCount '','',0,0,0,'01/01/1900','01/01/1900'         DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.ObjectName like N''%' + @ObjectName + '%'') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectType= ' + STR(@ObjectType) + ' )'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF ( @keyword <> '' )          SET @condition = @condition + ' AND (tbLog.Username like ''%' + @keyword + '%'' or tbUser.Mastercode like ''%' +     @keyword + '%'' )'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''      EXEC('      SELECT  Count(*)      FROM    dbo.AIEventLog tbLog      LEFT JOIN dbo.AISystem_UserInfo tbUser ON tbLog.Username = tbUser.Username where '+@condition+'   ')      SET QUOTED_IDENTIFIER OFF           "
1180,AICDC_DataSync_Period_GetsbyPeriodCode,create proc [dbo].[AICDC_DataSync_Period_GetsbyPeriodCode]  @PeriodCode nvarchar(250)  as  select top(1) * from AICDC_DataSync_Period where PeriodCode=@PeriodCode  SET QUOTED_IDENTIFIER OFF      
1181,DeleteEventLog,CREATE PROCEDURE dbo.DeleteEventLog       @LogGUID varchar(36)  AS  BEGIN      IF @LogGUID is null      BEGIN          DELETE FROM dbo.EventLog      END ELSE BEGIN          DELETE FROM dbo.EventLog WHERE LogGUID = @LogGUID      END  END
1182,GetUsersByRolename,"CREATE PROCEDURE dbo.[GetUsersByRolename]   @PortalID INT,   @Rolename NVARCHAR(50)  AS   DECLARE @UserPortalId INT   DECLARE @PortalGroupId INT   SELECT @PortalGroupId = PortalGroupId FROM dbo.[Portals] WHERE PortalID = @PortalID   IF EXISTS(SELECT PortalGroupID FROM dbo.[PortalGroups] WHERE PortalGroupID = @PortalGroupId)   BEGIN    SELECT @UserPortalId = MasterPortalID FROM dbo.[PortalGroups] WHERE PortalGroupID = @PortalGroupId   END   ELSE   BEGIN    SELECT @UserPortalId = @PortalID   END   SELECT         U.*,     UP.PortalId,     UP.Authorised,     UP.IsDeleted,    UP.RefreshRoles,    UP.VanityUrl   FROM dbo.UserPortals AS UP      RIGHT OUTER JOIN dbo.UserRoles  UR      INNER JOIN dbo.Roles R ON UR.RoleID = R.RoleID      RIGHT OUTER JOIN dbo.Users AS U ON UR.UserID = U.UserID     ON UP.UserId = U.UserID    WHERE ( UP.PortalId = @UserPortalId OR @UserPortalId IS Null )    AND (UP.IsDeleted = 0 OR UP.IsDeleted Is NULL)    AND (R.RoleName = @Rolename)    AND (R.PortalId = @PortalID OR @PortalID IS Null )   ORDER BY U.FirstName + ' ' + U.LastName"
1183,AIElearning_LearingAndLecture_GetInfoByParam,"create proc [dbo].[AIElearning_LearingAndLecture_GetInfoByParam]  @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50)  as  Select top(1) * from AIElearning_LearingAndLecture  where   UserName = @UserName and ReportYear = @ReportYear and UnitCode = @UnitCode  SET QUOTED_IDENTIFIER OFF  "
1184,AIElearning_Class_MarkOffLineSubject_Code_GetsBySearch,"  create proc [dbo].[AIElearning_Class_MarkOffLineSubject_Code_GetsBySearch]  @pageIndex int,  @pageSize int,  @ClassId int,  @type int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)     exec('    WITH #AIElearning_Class_MarkOffLine_Code AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_MarkOffLine_Code  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Class_MarkOffLine_Code   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
1185,GetTab,CREATE PROCEDURE dbo.[GetTab]    @TabId    int    AS  SELECT *  FROM   dbo.vw_Tabs  WHERE  TabId = @TabId
1186,InteractionObjectiveItem$DefaultView,"  -- Create function that implements the default view for the InteractionObjectiveItem item type  CREATE FUNCTION [InteractionObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [InteractionId], [AttemptObjectiveId]      FROM [InteractionObjectiveItem]  )  "
1187,AISystem_Level_GetMaxOrderNo,"CREATE proc [dbo].[AISystem_Level_GetMaxOrderNo]   as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_Level   end  "
1188,AISystem_CheckUserRegistration,CREATE PROC [dbo].[AISystem_CheckUserRegistration]  @UserRegistration int  as  SELECT COUNT(*) FROM Portals WHERE UserRegistration =  @UserRegistration  
1189,AIElearning_TestCampaign_Registor_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_TestCampaign_Registor_GetsBySearchCount]  @Keyword nvarchar(250),  @status int,  @registerType int,  @testCampaignId int,  @registorType int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND (Name like N''%'+@Keyword + '%'' or Code like N''%'+@Keyword + '%'')'    -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)    --Loai ca thi  if(@registerType>-1)  set @Condition=@Condition+' AND RegisterType='+str(@registerType)    --Dot thi  if(@testCampaignId>-1)  set @Condition=@Condition+' AND TestCampaignId='+str(@testCampaignId)    -- Loai ca thi (online/offline)  if(@registorType>-1)  set @Condition=@Condition+' AND RegistorType='+str(@registorType)  exec('select COUNT(*) from AIElearning_TestCampaign_Registor '+@Condition)  SET QUOTED_IDENTIFIER OFF"
1190,GetUserRelationshipPreference,"CREATE PROCEDURE dbo.[GetUserRelationshipPreference]    @UserID INT,   @RelationshipID INT  AS       SELECT  PreferenceID,     UserID,     RelationshipID,                 DefaultResponse,                          CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.UserRelationshipPreferences       WHERE UserID = @UserID     AND RelationshipID = @RelationshipID   ORDER BY UserID ASC, RelationshipID ASC"
1191,GetServices,"CREATE PROCEDURE dbo.[GetServices]      @PortalId  Int, -- pass Null for roles of all sites      @UserId    Int  -- not null!  AS  BEGIN      SELECT          R.*,          UR.IsOwner,          UR.UserRoleID,          UR.UserID,          UR.ExpiryDate,          UR.IsTrialUsed,          UR.EffectiveDate,          U.DisplayName,          U.Email      FROM         dbo.[Users]      U       INNER JOIN  dbo.[UserRoles] UR ON UR.UserID = U.UserID       RIGHT JOIN  dbo.[Roles]      R ON UR.RoleID = R.RoleID  AND UR.UserID = @UserId      WHERE (R.PortalId = @PortalId OR IsNull(@PortalId, -1) = -1)        AND  R.IsPublic = 1        AND  R.RoleId  >= 0     AND U.UserID = @UserId      ORDER BY R.RoleName   OPTION (OPTIMIZE FOR (@PortalId UNKNOWN))  END"
1192,DeleteOldRedirectMessage,CREATE PROCEDURE dbo.[DeleteOldRedirectMessage]   @CutoffDate [DateTime]  AS   DELETE FROM dbo.RedirectMessages   WHERE CreatedOnDate <= @CutoffDate
1193,AIElearning_SurveyQuestion_GetsAllBySurveyId,"CREATE proc [dbo].[AIElearning_SurveyQuestion_GetsAllBySurveyId]   @SurveyID int,  @Required int  as  --    [AIElearning_SurveyQuestion_GetsAllBySurveyId] 1044,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyID>-1)   set @Condition=@Condition+' AND SurveyId='+str(@SurveyID)  if(@Required>-1)   set @Condition=@Condition+' AND Required='+str(@Required)  exec('select q.*   from AIElearning_SurveyQuestion q   inner join AIElearning_SurveyPart p on q.SurveyPartId = p.Id    where '+@Condition+'    order by p.OrderNo desc, q.OrderNo desc')      "
1194,AddEventLogConfig,"CREATE procedure dbo.[AddEventLogConfig]   @LogTypeKey nvarchar(35),   @LogTypePortalID int,   @LoggingIsActive bit,   @KeepMostRecent int,   @EmailNotificationIsActive bit,   @NotificationThreshold int,   @NotificationThresholdTime int,   @NotificationThresholdTimeType int,   @MailFromAddress nvarchar(50),   @MailToAddress nvarchar(50)  AS    DECLARE @ID int  SET @ID = (SELECT EC.ID FROM dbo.EventLogConfig EC       WHERE (EC.LogTypeKey = @LogTypeKey OR (EC.LogTypeKey IS NULL AND @LogTypeKey IS NULL))         AND (EC.LogTypePortalID = @LogTypePortalID  OR (EC.LogTypePortalID IS NULL AND @LogTypePortalID IS NULL))     )    IF @ID IS NULL   BEGIN    INSERT INTO dbo.EventLogConfig     (LogTypeKey,     LogTypePortalID,     LoggingIsActive,     KeepMostRecent,     EmailNotificationIsActive,     NotificationThreshold,     NotificationThresholdTime,     NotificationThresholdTimeType,     MailFromAddress,     MailToAddress)    VALUES     (@LogTypeKey,     @LogTypePortalID,     @LoggingIsActive,     @KeepMostRecent,     @EmailNotificationIsActive,     @NotificationThreshold,     @NotificationThresholdTime,     @NotificationThresholdTimeType,     @MailFromAddress,     @MailToAddress)   END  ELSE   BEGIN    UPDATE dbo.EventLogConfig    SET  LogTypeKey = @LogTypeKey,     LogTypePortalID = @LogTypePortalID,     LoggingIsActive = @LoggingIsActive,     KeepMostRecent = @KeepMostRecent,     EmailNotificationIsActive = @EmailNotificationIsActive,     NotificationThreshold = @NotificationThreshold,     NotificationThresholdTime = @NotificationThresholdTime,     NotificationThresholdTimeType = @NotificationThresholdTimeType,     MailFromAddress = @MailFromAddress,     MailToAddress = @MailToAddress    WHERE ID = @ID   END"
1195,vw_FolderPermissions,"-- use new FK  CREATE VIEW dbo.[vw_FolderPermissions]  AS  SELECT  FP.FolderPermissionID,          F.FolderID,          F.FolderPath,          F.PortalID,          P.PermissionID,          FP.RoleID,          R.RoleName,          FP.AllowAccess,          FP.UserID,          U.Username,          U.DisplayName,          P.PermissionCode,          P.ModuleDefID,          P.PermissionKey,          P.PermissionName,          FP.CreatedByUserID,          FP.CreatedOnDate,          FP.LastModifiedByUserID,          FP.LastModifiedOnDate  FROM         dbo.[FolderPermission] AS FP   INNER JOIN  dbo.[Folders]          AS F ON FP.FolderID     = F.FolderID   INNER JOIN  dbo.[Permission]       AS P ON FP.PermissionID = P.PermissionID   LEFT  JOIN  dbo.[Roles]            AS R ON FP.RoleID       = R.RoleID   LEFT  JOIN  dbo.[Users]            AS U ON FP.UserID       = U.UserID"
1196,AIEventLog_GetsByParam,"  CREATE PROC [dbo].[AIEventLog_GetsByParam]      @pageIndex INT ,      @pageSize INT ,      @keyword NVARCHAR(50) ,      @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT ,      @ObjectType INT ,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME  AS   -- AIEventLog_GetsByParam 1,1000,'host','',0,0,0,'01/01/1900','01/01/1900'  -- Phan trang      DECLARE @start AS INT      DECLARE @end AS INT      SET @start = @pageSize * ( @pageIndex - 1 ) + 1      SET @end = @pageSize * @pageIndex         DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.ObjectName like N''%' + @ObjectName + '%'') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectType= ' + STR(@ObjectType) + ' )'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF ( @keyword <> '' )          SET @condition = @condition + ' AND (tbLog.Username like ''%' + @keyword + '%'' or tbUser.Mastercode like ''%' +     @keyword + '%'' )'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''      EXEC('      WITH #AIEventLog AS(       SELECT    ROW_NUMBER() OVER ( ORDER BY tbLog.Id DESC ) AS RowNumber, tbLog.*      FROM      dbo.AIEventLog tbLog      LEFT JOIN dbo.AISystem_UserInfo tbUser ON tbLog.Username = tbUser.Username where '+@condition+'      )      SELECT  *      FROM #AIEventLog      where RowNumber between '+ @start +'  and  '+ @end +'       ')      SET QUOTED_IDENTIFIER OFF          "
1197,AICDC_DataSync_Period_GetsBySearch,"  create proc [dbo].[AICDC_DataSync_Period_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AICDC_DataSync_Period AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AICDC_DataSync_Period       )         SELECT     *   FROM #AICDC_DataSync_Period   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1198,AIElearning_Exercise_DeleteUserExerciseId,create proc [dbo].[AIElearning_Exercise_DeleteUserExerciseId]  @ExerciseId int  as  delete from AIElearning_Exercise_User where ExerciseId=@ExerciseId  
1199,AIElearning_Monney_ClassSubject_GetsbyClassid,create proc [dbo].[AIElearning_Monney_ClassSubject_GetsbyClassid]  @Subjectid int  as  select * from AIElearning_Monney_Class where SubjectId=@Subjectid  
1200,LearnerGlobalObjectiveItem$DefaultView,"  -- Create function that implements the default view for the LearnerGlobalObjectiveItem item type  CREATE FUNCTION [LearnerGlobalObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [LearnerId], [GlobalObjectiveId], [ScaledScore], [SuccessStatus]      FROM [LearnerGlobalObjectiveItem]  )  "
1201,AISystem_Category_TrainingType_GetByTitle,"  CREATE PROC [dbo].[AISystem_Category_TrainingType_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_TrainingType_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --N?u là g?i  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_TrainingType AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')  "
1202,DeleteUserPortal,"CREATE PROCEDURE dbo.[DeleteUserPortal]   @UserID  int,   @PortalID   int  AS   IF @PortalID IS NULL    BEGIN     UPDATE dbo.Users      SET       IsDeleted = 1      WHERE  UserId = @UserID    END   ELSE    BEGIN     UPDATE dbo.UserPortals      SET       IsDeleted = 1      WHERE  UserId = @UserID       AND PortalId = @PortalID    END"
1203,AIElearning_TestCampaign_Registor_GetsMark,create proc [dbo].[AIElearning_TestCampaign_Registor_GetsMark]    @RegistorUserId int  as  -- Phan trang     SELECT Mark from AIElearning_TestCampaign_RegistorUserTest where  RegistorUserId=@RegistorUserId  
1204,AISystem_Category_Question_AddWithPosition,"  CREATE PROC [dbo].[AISystem_Category_Question_AddWithPosition]   @unitCode nvarchar(50),   @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),    @ObjectUse int,   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Question WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Question (   [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @unitCode,   @ParentId,   @Title,   @Code,   @ObjectUse,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Question WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Question WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Question WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Question WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Question WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Question         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Question (     [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (     @unitCode ,   @ParentId,   @Title,   @Code,   @ObjectUse ,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()          "
1205,GetAvailableUsersForIndex,"CREATE PROCEDURE dbo.[GetAvailableUsersForIndex]      @PortalId INT ,      @StartDate DATETIME ,      @startUserId INT = 0,      @numberOfUsers INT = 500  AS  BEGIN   DECLARE @PivotSql NVARCHAR(MAX)     SELECT @PivotSql = COALESCE(@PivotSql + ',','') + '[' + PropertyName + ']'    FROM dbo.[ProfilePropertyDefinition] pd    INNER JOIN dbo.[Lists] l ON ListName = 'DataType' AND SystemList = 1 AND Value IN ( 'Text', 'RichText' ) AND l.EntryID = pd.DataType    WHERE ISNULL(pd.PortalID, -1) = ISNULL(@PortalId, -1)    AND Deleted = 0   ORDER BY ViewOrder     DECLARE @Sql NVARCHAR(MAX)     SELECT @Sql = '      WITH    ValidDataType                  AS ( SELECT   EntryID                      FROM     dbo.[Lists]                      WHERE    ListName = ''DataType''                              AND SystemList = 1                              AND Value IN ( ''Text'', ''RichText'' )                      ),                  ValidUsers AS                  (                                      SELECT UserId FROM ( SELECT   UserId, ROW_NUMBER() OVER(ORDER BY UserId ASC) AS rownumber                          FROM ( SELECT DISTINCT                                          ( u.UserID )                                  FROM      dbo.[Users] u                                          INNER JOIN dbo.[UserPortals] up ON up.UserId = u.UserID                                          INNER JOIN dbo.[vw_Profile] p ON p.UserID = u.UserID                                          INNER JOIN dbo.[ProfilePropertyDefinition] pd ON pd.PropertyDefinitionID = p.PropertyDefinitionID AND pd.Visible = 1 AND pd.PortalID = @PortalId                                          INNER JOIN ValidDataType dt ON dt.EntryID = pd.DataType                                  WHERE     (up.PortalId = @PortalId OR up.PortalId IS NULL)                                          AND (u.LastModifiedOnDate > @StartDate OR (p.LastUpdatedDate IS NOT NULL AND (p.LastUpdatedDate > @StartDate OR pd.LastModifiedOnDate > @StartDate)))                                          AND ((p.PropertyValue IS NOT NULL AND p.PropertyValue <> '''') OR u.LastModifiedOnDate > @StartDate OR p.LastUpdatedDate IS NULL OR p.LastUpdatedDate > @StartDate)                              ) AS T WHERE UserID > @startUserId) AS T                              WHERE rownumber <= @numberOfUsers                  )     SELECT *   FROM (    SELECT  u.UserID ,      u.DisplayName,      u.LastModifiedOnDate,      u.Username,      u.IsSuperUser,      u.Email,      u.CreatedOnDate,      p.PropertyName,      REPLACE(p.PropertyValue, ''$'', ''[$]'') + ''$$$'' +        CAST(CASE WHEN (p.Visibility IS NULL) THEN 0 ELSE p.Visibility END AS VARCHAR(10)) + ''$$$'' + p.ExtendedVisibility + ''$$$'' +        CONVERT(VARCHAR(20), CASE WHEN u.LastModifiedOnDate > p.LastUpdatedDate OR p.LastUpdatedDate IS NULL THEN u.LastModifiedOnDate ELSE p.LastUpdatedDate END, 20)       AS [PropertyValue]    FROM     dbo.[Users] u     INNER JOIN ValidUsers vu on vu.UserId = u.UserID     INNER JOIN dbo.[vw_Profile] p ON p.UserID = u.UserID     INNER JOIN dbo.[ProfilePropertyDefinition] pd ON pd.PropertyDefinitionID = p.PropertyDefinitionID AND pd.Visible = 1 AND pd.PortalID = @PortalID     INNER JOIN ValidDataType dt ON dt.EntryID = pd.DataType    ) AS T   PIVOT (MAX(PropertyValue) for PropertyName in (' + @PivotSql + ')) AS T   ORDER BY UserId   '   EXECUTE sp_executesql @Sql,                               N'@PortalId INT, @StartDate DATETIME, @startUserId INT, @numberOfUsers INT',                              @PortalId, @StartDate, @startUserId, @numberOfUsers  END"
1206,AIElearning_SurveyQuestion_GetsBySearch,"CREATE proc [dbo].[AIElearning_SurveyQuestion_GetsBySearch]   @SurveyPartID int  as  --    AIElearning_SurveyQuestion_GetsBySearch 4  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyPartID>-1)   set @Condition=@Condition+' AND SurveyPartId='+str(@SurveyPartID)  exec('  WITH #AIElearning_SurveyQuestion AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo ) AS RowNumber, *   from AIElearning_SurveyQuestion where '+@Condition+')   SELECT *   FROM #AIElearning_SurveyQuestion  ')  "
1207,GetFolderByUniqueID,CREATE PROCEDURE dbo.[GetFolderByUniqueID]      @UniqueID   uniqueidentifier  AS   SELECT *    FROM dbo.Folders   WHERE UniqueID = @UniqueID
1208,vw_ModulePermissions,"-- use new FK  CREATE VIEW dbo.[vw_ModulePermissions]  AS  SELECT  MP.ModulePermissionID,          MP.ModuleID,          MP.PortalID,          P.PermissionID,          MP.RoleID,          R.RoleName,          MP.AllowAccess,          MP.UserID,          U.Username,          U.DisplayName,          P.PermissionCode,          P.ModuleDefID,          P.PermissionKey,          P.PermissionName,          MP.CreatedByUserID,          MP.CreatedOnDate,          MP.LastModifiedByUserID,          MP.LastModifiedOnDate  FROM        dbo.[ModulePermission] AS MP   INNER JOIN dbo.[Permission]       AS P  ON MP.PermissionID = P.PermissionID   LEFT  JOIN dbo.[Roles]            AS R  ON MP.RoleID       = R.RoleID   LEFT  JOIN dbo.[Users]            AS U  ON MP.UserID       = U.UserID"
1209,AISystem_UserPermissionScope_GetsBySearchCount,"CREATE proc [dbo].[AISystem_UserPermissionScope_GetsBySearchCount]  @RoleId int,  @ScopeCode nvarchar(500),  @Key nvarchar(500)  as    exec('select COUNT(*) from AISystem_UserPermissionScope  inner join AISystem_UserInfo on AISystem_UserPermissionScope.UserId=AISystem_UserInfo.UserId where AISystem_UserInfo.Username like ''%'+@Key+'%'' and AISystem_UserPermissionScope.AIRoleId='+@RoleId +' and    (AISystem_UserPermissionScope.ScopeCode='''+@ScopeCode+''' or ''0''='''+@ScopeCode+''')')  SET QUOTED_IDENTIFIER OFF   "
1210,AISystem_Category_Campaign_GetByTitle,"    CREATE PROC [dbo].[AISystem_Category_Campaign_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_Campaign_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Campaign AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')          "
1211,AICDC_DataSync_Period_GetsBySearchCount,create proc [dbo].[AICDC_DataSync_Period_GetsBySearchCount]  as  select COUNT(*) from AICDC_DataSync_Period    SET QUOTED_IDENTIFIER OFF         
1212,DeletePortalDesktopModules,"CREATE PROCEDURE dbo.DeletePortalDesktopModules      @PortalID        int,      @DesktopModuleId int  AS  BEGIN      IF @PortalID is not null AND @DesktopModuleId is not null          DELETE FROM dbo.PortalDesktopModules WHERE PortalId = @PortalID AND DesktopModuleId = @DesktopModuleId      ELSE           BEGIN              IF @PortalID is not null                  DELETE FROM dbo.PortalDesktopModules WHERE PortalId = @PortalID              ELSE                  BEGIN                       IF @DesktopModuleId is not null                          DELETE FROM dbo.PortalDesktopModules WHERE DesktopModuleId = @DesktopModuleId                  END          END  END"
1213,AISystem_Category_TeachingTopic_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_TeachingTopic    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo  "
1214,AIElearning_Monney_ClassLesson_GetsbyClassid,create proc [dbo].[AIElearning_Monney_ClassLesson_GetsbyClassid]  @Lessonid int  as  select * from AIElearning_Monney_Class where LessonId=@Lessonid      
1215,UpdateTabOrder,"CREATE PROCEDURE dbo.[UpdateTabOrder]    @TabId     int,   @TabOrder    int,   @ParentId    int,   @LastModifiedByUserID int  AS   DECLARE @OldParentId INT   SELECT @OldParentId = ParentId FROM dbo.Tabs WHERE TabID = @TabId   UPDATE Tabs    SET     TabOrder    = @TabOrder,     ParentId    = @ParentId,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate  = GETDATE()   WHERE  TabId = @TabId   IF @OldParentId <> @ParentId    BEGIN     EXEC dbo.BuildTabLevelAndPath @TabId, 1    END   ELSE    BEGIN     EXEC dbo.BuildTabLevelAndPath @TabId    END"
1216,AIEventLog_GetbyID,"  create proc [dbo].[AIEventLog_GetbyID]  @Id int,  @tablename nvarchar(250)  as  exec('select top(1)* from '+@tablename+' where id='+@Id+'')"
1217,MapActivityObjectiveToGlobalObjectiveItem$DefaultView,"  -- Create function that implements the default view for the MapActivityObjectiveToGlobalObjectiveItem item type  CREATE FUNCTION [MapActivityObjectiveToGlobalObjectiveItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [ActivityObjectiveId], [GlobalObjectiveId], [ReadSatisfiedStatus], [ReadNormalizedMeasure], [WriteSatisfiedStatus], [WriteNormalizedMeasure]      FROM [MapActivityObjectiveToGlobalObjectiveItem]  )  "
1218,AISystem_Category_TrainingType_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_TrainingType_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_TrainingType_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_TrainingType where   Code = @Code  SET QUOTED_IDENTIFIER OFF  
1219,GetSkinControl,CREATE PROCEDURE dbo.[GetSkinControl]   @SkinControlID int  AS      SELECT *      FROM   dbo.SkinControls   WHERE SkinControlID = @SkinControlID
1220,AIElearning_ClassItem_Users_DeleteByParam,"CREATE proc [dbo].[AIElearning_ClassItem_Users_DeleteByParam]   @UserName  nvarchar(150),  @ClassId int,  @ClassItemId int  as  begin  delete from AIElearning_ClassItem_Users where (UserName = @UserName or @UserName ='') and (ClassId = @ClassId  or @ClassId =-1) and (ClassItemId = @ClassItemId or @ClassItemId =-1)  end"
1221,OutputCacheGetItem,CREATE PROCEDURE dbo.OutputCacheGetItem   @CacheKey VarChar (36)  AS  BEGIN      SELECT *       FROM  dbo.OutputCache       WHERE CacheKey = @CacheKey  END
1222,AIElearning_TestCampaign_RegistorUser_CheckTestRegistorId,"create proc [dbo].[AIElearning_TestCampaign_RegistorUser_CheckTestRegistorId]  @TestRegistorId int,  @Userid int  as    select COUNT(Id) from AIElearning_TestCampaign_RegistorUser where TestRegistorId=@TestRegistorId and UserId=@Userid  "
1223,AIElearning_TestForm_Part_GetAllChildAndIncludeParentID,"--AIElearning_TestForm_Part_GetAllChildAndIncludeParentID 13,1,'vi-VN',0,true    CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_GetAllChildAndIncludeParentID]  @TestId int,  @ParentId int,   @includeParentId bit  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(MAX),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.Id = @ParentId)      AND AIElearning_TestForm_Part.TestId = @TestId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AIElearning_TestForm_Part.Id,      AIElearning_TestForm_Part.LevelNo,      AIElearning_TestForm_Part.ParentId,      AIElearning_TestForm_Part.Name,      STR(AIElearning_TestForm_Part.OrderNo),      AIElearning_TestForm_Part.Type,      AIElearning_TestForm_Part.DataId    FROM      AIElearning_TestForm_Part    WHERE  (AIElearning_TestForm_Part.ParentId = @ParentId or (@ParentId IS NULL AND AIElearning_TestForm_Part.ParentId IS NULL))      AND AIElearning_TestForm_Part.TestId = @TestId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     @Pattern + S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.DataId    FROM     #PathConstruction T    JOIN AIElearning_TestForm_Part  S ON S.ParentId=T.Id AND T.Level=@Level AND S.TestId = @TestId        SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     'Id' = Id,    'Name' = Name,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'Title' = Title  FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction      "
1224,GetTabPermission,CREATE PROCEDURE dbo.[GetTabPermission]     @TabPermissionID int    AS  SELECT *  FROM dbo.vw_TabPermissions  WHERE TabPermissionID = @TabPermissionID
1225,PurgeScheduleHistory,CREATE PROCEDURE dbo.[PurgeScheduleHistory]  AS  BEGIN   DELETE FROM dbo.ScheduleHistory   WHERE ScheduleHistoryID IN (    SELECT TOP 5000 ScheduleHistoryID FROM dbo.ScheduleHistory sh     INNER JOIN dbo.Schedule s ON s.ScheduleID = sh.ScheduleID    WHERE (       SELECT COUNT(*)       FROM dbo.ScheduleHistory sh2       WHERE sh2.ScheduleID = sh.ScheduleID       AND sh2.StartDate >= sh.StartDate       ) > s.RetainHistoryNum      AND s.Enabled = 1      AND s.RetainHistoryNum <> -1    ORDER BY ScheduleHistoryID   )  END
1226,AIElearning_SurveyQuestion_GetsBySearchCount,create proc [dbo].[AIElearning_SurveyQuestion_GetsBySearchCount]   @SurveyPartId int  as  -- AIElearning_SurveyQuestion_GetsBySearchCount 42  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyPartId>-1)   set @Condition=@Condition+' AND SurveyPartId='+str(@SurveyPartId)  exec('   SELECT count(*)   from AIElearning_SurveyQuestion where '+@Condition+'    ')  
1227,vw_TabPermissions,"-- use new FK  CREATE VIEW dbo.[vw_TabPermissions]  AS  SELECT  TP.TabPermissionID,          T.TabID,          T.PortalId,          P.PermissionID,          TP.RoleID,          R.RoleName,          TP.AllowAccess,          TP.UserID,          U.Username,          U.DisplayName,          P.PermissionCode,          P.ModuleDefID,          P.PermissionKey,          P.PermissionName,          TP.CreatedByUserID,          TP.CreatedOnDate,          TP.LastModifiedByUserID,          TP.LastModifiedOnDate  FROM        dbo.[TabPermission]    AS TP   INNER JOIN dbo.[Tabs]             AS T  ON TP.TabId        = T.TabId   INNER JOIN dbo.[Permission]       AS P  ON TP.PermissionID = P.PermissionID   LEFT  JOIN dbo.[Roles]            AS R  ON TP.RoleID       = R.RoleID   LEFT  JOIN dbo.[Users]            AS U  ON TP.UserID       = U.UserID"
1228,AISystem_UserPermissionScope_GetsBySearch,"CREATE proc [dbo].[AISystem_UserPermissionScope_GetsBySearch]  @RoleId int,  @ScopeCode nvarchar(500),  @Key nvarchar(500),  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_UserPermissionScope AS(    SELECT ROW_NUMBER() OVER (ORDER BY AISystem_UserPermissionScope.Id desc) AS RowNumber,     AISystem_UserPermissionScope.*,     AISystem_UserInfo.Username as [Username],     AISystem_UserInfo.DisplayName     from AISystem_UserPermissionScope  inner join AISystem_UserInfo on AISystem_UserPermissionScope.UserId=AISystem_UserInfo.UserId Where AISystem_UserInfo.Username like ''%'+@Key+'%'' and AISystem_UserPermissionScope.AIRoleId='+@RoleId+' and   (AISystem_UserPermissionScope.ScopeCode='''+@ScopeCode+''' or ''0''='''+@ScopeCode+''')      )         SELECT     *   FROM #AISystem_UserPermissionScope   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1229,AISystem_Category_Campaign_GetsBySearch,"    CREATE PROC [dbo].[AISystem_Category_Campaign_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Campaign AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Campaign       )         SELECT     *   FROM #AISystem_Category_Campaign   where RowNumber between '+ @start +'  and  '+ @end +'   ')          "
1230,AICDC_DataSync_Period_GetsLastRecord,CREATE proc [dbo].[AICDC_DataSync_Period_GetsLastRecord]  @Status int  as  select top(1) * from AICDC_DataSync_Period where (Status = @Status or @Status = -1) ORDER BY Id DESC  SET QUOTED_IDENTIFIER OFF      
1231,UpdatePortalLanguage,"CREATE PROCEDURE dbo.[UpdatePortalLanguage]      @PortalId    int,      @LanguageId    int,      @IsPublished   bit,      @LastModifiedByUserID   int    AS      UPDATE dbo.PortalLanguages           SET                IsPublished    = @IsPublished,              LastModifiedByUserID = @LastModifiedByUserID,              LastModifiedOnDate  = getdate()      WHERE PortalId = @PortalId          AND LanguageId = @LanguageId"
1232,AIElearning_Exercise_GetbyTheme,create proc [dbo].[AIElearning_Exercise_GetbyTheme]  @ExerciseId int  as  Select * from AIElearning_Exercise_Theme where ExerciseId=@ExerciseId  
1233,AIElearning_Monney_ClassSubject_Delete,create proc [dbo].[AIElearning_Monney_ClassSubject_Delete]  @Subjectid int  as  delete  from AIElearning_Monney_Class where SubjectId=@Subjectid  
1234,CanDeleteSkin,"CREATE PROCEDURE dbo.[CanDeleteSkin]   @SkinType char(1),   @SkinFolderName nvarchar(200)   AS   BEGIN    IF exists(SELECT * FROM dbo.Tabs WHERE (SkinSrc like '%![' + @SkinType + '!]' + @SkinFolderName + '%' ESCAPE '!')        OR (ContainerSrc like '%![' + @SkinType + '!]' + @SkinFolderName + '%' ESCAPE '!'))     SELECT 0    ELSE     BEGIN      IF exists(SELECT * FROM dbo.TabModules WHERE ContainerSrc like '%![' + @SkinType + '!]' + @SkinFolderName + '%' ESCAPE '!')       SELECT 0      ELSE       SELECT 1     END   END"
1235,PackageItem$DefaultView,"  -- Create function that implements the default view for the PackageItem item type  CREATE FUNCTION [PackageItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [PackageFormat], [Location], [Manifest], [Owner], [FileName], [UploadDateTime]      FROM [PackageItem]  )  "
1236,AIElearning_Monney_User_GetsBySearchCount,create proc [dbo].[AIElearning_Monney_User_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Monney_User    SET QUOTED_IDENTIFIER OFF     
1237,AISystem_Category_TrainingType_GetInfoById,CREATE PROC [dbo].[AISystem_Category_TrainingType_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_TrainingType where Id=@Id  SET QUOTED_IDENTIFIER OFF  
1238,ConvertListToTable,"CREATE FUNCTION dbo.[ConvertListToTable]  (     @Delimiter nvarchar(5),       @List  nvarchar(max)  )   RETURNS @TableOfValues TABLE   (     RowNumber smallint IDENTITY(1,1),       RowValue nvarchar(50)   )   AS      BEGIN        DECLARE @LenString int            WHILE len( @List ) > 0            BEGIN                          SELECT @LenString =                  (CASE charindex( @Delimiter, @List )                      WHEN 0 THEN len( @List )                      ELSE ( charindex( @Delimiter, @List ) -1 )                  END                 )                                                 INSERT INTO @TableOfValues                  SELECT substring( @List, 1, @LenString )                                SELECT @List =                  (CASE ( len( @List ) - @LenString )                      WHEN 0 THEN ''                      ELSE right( @List, len( @List ) - @LenString - 1 )                   END                 )            END        RETURN      END"
1239,AIElearning_ClassItem_Users_GetInfoByParam,"create proc [dbo].[AIElearning_ClassItem_Users_GetInfoByParam]  @UserName  nvarchar(150),  @ClassId int,  @ClassItemId int  as  Select top(1) * from AIElearning_ClassItem_Users  where   UserName = @UserName and ClassId = @ClassId and ClassItemId = @ClassItemId  SET QUOTED_IDENTIFIER OFF"
1240,OutputCacheAddItem,"CREATE PROCEDURE dbo.OutputCacheAddItem   @ItemId     Int,   @CacheKey   VarChar ( 36),   @Data     nVarChar(Max),   @Expiration DateTime  AS  BEGIN      INSERT INTO dbo.OutputCache      ( ItemId,    CacheKey,    Data,    Expiration      ) VALUES       (   @ItemId,    @CacheKey,    @Data,    @Expiration      )  END"
1241,AIElearning_TestCampaign_RegistorUser_GetsBySearch,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsBySearch]  @pageIndex int,   @pageSize int,  @TestRegistorId int,  @UserId int,  @status int,  @keyword nvarchar(250)  as  -- [AIElearning_TestCampaign_RegistorUser_GetsBySearch] 1,20,2,-1,-1,''  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      if(@TestRegistorId>-1)  set @Condition=@Condition+' AND ru.TestRegistorId ='+str(@TestRegistorId)    if(@UserId>-1)  set @Condition=@Condition+' AND ru.UserId='+str(@UserId)    if(@status>-1)  set @Condition=@Condition+' AND ISNULL(ut.Status,3) ='+str(@status)    if(@keyword <> '' )  set @Condition=@Condition+' AND (u.Username like ''%' + @keyword +'%'' or u.EmployeeCode like ''%' + @keyword +'%'' )'    exec('WITH #AIElearning_TestCampaign_RegistorUser AS(   SELECT ROW_NUMBER() OVER (ORDER BY ru.CreatedDate desc) AS RowNumber, ru.*, ISNULL(ut.Status, 3 )  as CompleteStatus     from AIElearning_TestCampaign_RegistorUser  ru inner join AISystem_UserInfo u on ru.UserId = u.UserId     left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId   where (ut.Id = (select max(rut.Id)   from AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null)        and '+@Condition+' )   SELECT  *   FROM #AIElearning_TestCampaign_RegistorUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')  SET QUOTED_IDENTIFIER OFF  "
1242,AISystem_Category_Question_GetInfoById,create PROC [dbo].[AISystem_Category_Question_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Question where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1243,CoreMessaging_UpdateMessageReadStatus,"CREATE PROCEDURE dbo.[CoreMessaging_UpdateMessageReadStatus]   @ConversationID int,   @UserID          int,   @Read    bit  AS  BEGIN  UPDATE dbo.[CoreMessaging_MessageRecipients] SET [Read]=@Read   WHERE UserID = @UserID  AND MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID=@ConversationID)  END"
1244,AIElearning_SurveyQuestion_GetsByType,"CREATE proc [dbo].[AIElearning_SurveyQuestion_GetsByType]   @SurveyPartID int,  @Type int  as  --    AIElearning_SurveyQuestion_GetsByType 3,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SurveyPartID>-1)   set @Condition=@Condition+' AND SurveyPartId='+str(@SurveyPartID)  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  exec('  WITH #AIElearning_SurveyQuestion AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo Desc) AS RowNumber, *   from AIElearning_SurveyQuestion where '+@Condition+')   SELECT *   FROM #AIElearning_SurveyQuestion  ')  "
1245,AISystem_Category_Document_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_Document_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_Document_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Document AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')      "
1246,AICDC_DataSync_Period_GetsLastRecordNotSussec,CREATE proc [dbo].[AICDC_DataSync_Period_GetsLastRecordNotSussec]  as  select top(1) * from AICDC_DataSync_Period where (Status <> 3) ORDER BY Id DESC  SET QUOTED_IDENTIFIER OFF      
1247,UpdateAnonymousUser,"CREATE PROCEDURE dbo.UpdateAnonymousUser      @UserID  char(36),      @PortalID  int,      @TabID   int,      @LastActiveDate datetime   as  begin   update dbo.AnonymousUsers set     TabID = @TabID,    LastActiveDate = @LastActiveDate   where    UserID = @UserID    and PortalID = @PortalID     if @@ROWCOUNT = 0   begin    insert into dbo.AnonymousUsers     (UserID, PortalID, TabID, CreationDate, LastActiveDate)     VALUES     (@UserID, @PortalID, @TabID, GetDate(), @LastActiveDate)   end  end"
1248,GetAllSynonymsGroups,"CREATE PROCEDURE dbo.[GetAllSynonymsGroups]   @PortalID int,   @CultureCode nvarchar(50)  AS  BEGIN   SELECT        [SynonymsGroupID],       [SynonymsTags],       [PortalID],     [CreatedByUserID],       [CreatedOnDate],       [LastModifiedByUserID],       [LastModifiedOnDate]   FROM dbo.SynonymsGroups    WHERE [PortalID] = @PortalID   AND [CultureCode] = @CultureCode   ORDER BY LastModifiedOnDate DESC  END"
1249,AIElearning_ClassItem_Checkings_GetsBySearchCount,create proc [dbo].[AIElearning_ClassItem_Checkings_GetsBySearchCount]  as  select COUNT(*) from AIElearning_ClassItem_Checkings    SET QUOTED_IDENTIFIER OFF   
1250,AIElearning_Monney_ClassLesson_Delete,create proc [dbo].[AIElearning_Monney_ClassLesson_Delete]  @Lessonid int  as  delete  from AIElearning_Monney_Class where LessonId=@Lessonid    
1251,CoreMessaging_GetNotificationTypeActionByName,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationTypeActionByName]   @NotificationTypeID int,   @NameResourceKey nvarchar(100)  AS  BEGIN   SELECT [NotificationTypeActionID], [NotificationTypeID], [NameResourceKey], [DescriptionResourceKey], [ConfirmResourceKey], [Order], [APICall], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeID] = @NotificationTypeID AND [NameResourceKey] LIKE @NameResourceKey  END"
1252,RubricItem$DefaultView,"  -- Create function that implements the default view for the RubricItem item type  CREATE FUNCTION [RubricItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [InteractionId], [Ordinal], [IsSatisfied], [Points]      FROM [RubricItem]  )  "
1253,GetSearchResultModules,"CREATE procedure dbo.GetSearchResultModules    @PortalID int    AS    SELECT         TM.TabID,     T.TabName  AS SearchTabName  FROM dbo.Modules M  INNER JOIN dbo.ModuleDefinitions MD ON MD.ModuleDefID = M.ModuleDefID   INNER JOIN dbo.TabModules TM ON TM.ModuleID = M.ModuleID   INNER JOIN dbo.Tabs T ON T.TabID = TM.TabID  WHERE MD.FriendlyName = N'Search Results'   AND T.PortalID = @PortalID   AND T.IsDeleted = 0"
1254,vw_ExtensionUrlProviders,"CREATE VIEW dbo.[vw_ExtensionUrlProviders]  AS   SELECT         P.ExtensionUrlProviderID,     PC.PortalID,     P.ProviderName,     P.IsActive,     P.RewriteAllUrls,     P.RedirectAllUrls,     P.ReplaceAllUrls,     P.DesktopModuleId   FROM    dbo.ExtensionUrlProviderConfiguration PC    RIGHT OUTER JOIN dbo.ExtensionUrlProviders P ON PC.ExtensionUrlProviderID = P.ExtensionUrlProviderID"
1255,AISystem_UserInfo_Update,"Create proc [dbo].[AISystem_UserInfo_Update]  @username nvarchar(250),  @OutDate datetime  as  update AISystem_UserInfo  set OutDate=@OutDate  where username=@username  "
1256,AISystem_Subject_GetsByJobTitle,"CREATE PROC [dbo].[AISystem_Subject_GetsByJobTitle]      @pageIndex INT ,      @pageSize INT ,      @jobTitleId INT  AS -- AISystem_Subject_GetsByJobTitle 1,10,14  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    IF ( @jobTitleId > -1 )      SET @Condition = @Condition + ' AND jt.JobTitleId=' + STR(@jobTitleId)  EXEC('  WITH #AISystem_Subject AS(   SELECT    DISTINCT ( s.Id ), DENSE_RANK() OVER (ORDER BY  s.Id ) AS RowNumber , s.Code, s.Name, s.Description, cs.Title AS CateSubjectName, s.Time, s.UnitCode, s.Limit      FROM          dbo.AISystem_JobTitle_Talent jt          INNER JOIN dbo.AISystem_Talent_Subject ts              ON ( ts.TalentId = jt.TalentId AND jt.IsChild = 0 ) OR ( ts.TalentChildId = jt.TalentId AND jt.IsChild = 1 )          INNER JOIN dbo.AISystem_Subject s              ON ts.SubjectId = s.Id          INNER JOIN dbo.AISystem_Category_Subject cs              ON s.CateSubjectId = cs.Id     WHERE '+@Condition+')   SELECT   *  FROM #AISystem_Subject  where RowNumber  between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
1257,AISystem_Category_TrainingType_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_TrainingType_AddWithPosition]     @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- N?u là b?n ghi đ?u tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_TrainingType WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_TrainingType (     [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TrainingType WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TrainingType WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TrainingType WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TrainingType WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TrainingType WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_TrainingType         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_TrainingType (     [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()  "
1258,AIElearning_ClassItem_Users_GetsBySearch,"CREATE proc [dbo].[AIElearning_ClassItem_Users_GetsBySearch]  @pageIndex int,  @pageSize int,  @UserName  nvarchar(150),  @ClassId int,  @ClassItemId int,  @ItemStatus int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  IF(@UserName IS NOT NULL AND @UserName<>'')    set @condition = @condition + ' and UserName =''' + @UserName + ''''  if(@ClassId >-1)   set @Condition = @Condition+' AND ClassId='+str(@ClassId)  if(@ClassItemId >-1)   set @Condition = @Condition+' AND ClassItemId='+str(@ClassItemId)  if(@ItemStatus >-1)   set @Condition = @Condition+' AND ItemStatus='+str(@ItemStatus)  exec('    WITH #AIElearning_ClassItem_Users AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_ClassItem_Users where '+@Condition+'        )         SELECT     *   FROM #AIElearning_ClassItem_Users   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1259,OutputCacheGetItemCount,CREATE PROCEDURE dbo.OutputCacheGetItemCount   @ItemId int  AS  BEGIN      SELECT COUNT(*) N       FROM  dbo.OutputCache       WHERE ItemId = @ItemId  END
1260,AIElearning_TestCampaign_RegistorUser_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetsBySearchCount]  @TestRegistorId int,  @UserId int,  @Status int,  @keyword nvarchar(250)  as  -- [AIElearning_TestCampaign_RegistorUser_GetsBySearchCount] 2,-1,2,''  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'      if(@TestRegistorId>-1)  set @Condition=@Condition+' AND ru.TestRegistorId ='+str(@TestRegistorId)    if(@UserId>-1)  set @Condition=@Condition+' AND ru.UserId='+str(@UserId)    if(@status>-1)  set @Condition=@Condition+' AND ISNULL(ut.Status,3) ='+str(@status)    if(@keyword <> '' )  set @Condition=@Condition+' AND (u.Username like ''%' + @keyword +'%'' or u.EmployeeCode like ''%' + @keyword +'%'' )'    exec('WITH #AIElearning_TestCampaign_RegistorUser AS(   SELECT ROW_NUMBER() OVER (ORDER BY ru.CreatedDate desc) AS RowNumber, ru.*, ISNULL(ut.Status, 3 )  as CompleteStatus     from AIElearning_TestCampaign_RegistorUser  ru inner join AISystem_UserInfo u on ru.UserId = u.UserId     left join AIElearning_TestCampaign_RegistorUserTest ut on ru.Id = ut.RegistorUserId   where (ut.Id = (select max(rut.Id)   from AIElearning_TestCampaign_RegistorUserTest rut where rut.RegistorUserId =ru.Id) or ut.Status is null)        and '+@Condition+' )   SELECT  count(*)   FROM #AIElearning_TestCampaign_RegistorUser  ')  SET QUOTED_IDENTIFIER OFF  "
1261,AISystem_Partner_CheckTaxCode,CREATE proc [dbo].[AISystem_Partner_CheckTaxCode]  @taxCode nvarchar(250)  as  -- AISystem_Partner_CheckTaxCode 'H6IUS9'    select count(*) from AISystem_Partner where TaxCode = @taxCode  
1262,GetModulePermission,CREATE PROCEDURE dbo.[GetModulePermission]      @ModulePermissionID int    AS  SELECT *  FROM dbo.vw_ModulePermissions  WHERE ModulePermissionID = @ModulePermissionID
1263,PersonaBar_UpdateMenuController,"CREATE PROCEDURE dbo.[PersonaBar_UpdateMenuController]     @Identifier                 NVARCHAR(50),     @Controller                 NVARCHAR(260),     @CurrentUserId              INT AS BEGIN     UPDATE dbo.[PersonaBarMenu]         SET              Controller = @Controller,             LastModifiedByUserId = CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,             LastModifiedOnDate = GETDATE()         WHERE Identifier = @Identifier END"
1264,AIElearning_SurveyQuestion_UpdatePosition,"CREATE proc [dbo].[AIElearning_SurveyQuestion_UpdatePosition]   @id int,  @newSurveyPartId int,  @oldSurveyPartId int,  @oldOrderNo int  as    -- AIElearning_SurveyQuestion_UpdatePosition 14,8  begin  DEclare @newOrderNo as int  update AIElearning_SurveyQuestion set OrderNo = 0 where Id= @id  select @newOrderNo = ISNULL(max(OrderNo),'0') from AIElearning_SurveyQuestion WHERE SurveyPartId=@newSurveyPartId   update AIElearning_SurveyQuestion set OrderNo = (@newOrderNo + 1) where Id= @id  update AIElearning_SurveyQuestion set OrderNo = (OrderNo-1) where OrderNo > @oldOrderNo and SurveyPartId =@oldSurveyPartId  end  "
1265,AISystem_UserInfo_GetsByEmployeeCode,  create proc [dbo].[AISystem_UserInfo_GetsByEmployeeCode]  @EmployeeCode nvarchar(50)  as  -- AISystem_UserInfo_GetsByEmployeeCode 'hainv'  Select top(1) * from AISystem_UserInfo where   EmployeeCode = @EmployeeCode  SET QUOTED_IDENTIFIER OFF     
1266,AISystem_Category_Document_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_Document_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Document AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Document       )         SELECT     *   FROM #AISystem_Category_Document   where RowNumber between '+ @start +'  and  '+ @end +'   ')      "
1267,AICDC_Log_GetByObjectAndType,"create PROC [dbo].[AICDC_Log_GetByObjectAndType]  @ObjectType INT ,  @ObjectId INT  AS  SELECT ROW_NUMBER() OVER (ORDER BY Id desc  ) AS RowNumber,*  FROM AICDC_Log  WHERE ObjectId=@ObjectId AND (ObjectType=@ObjectType)              "
1268,GetMetaData,"CREATE PROCEDURE dbo.[GetMetaData]    @ContentItemId   int  AS   SELECT md.MetaDataName, cmd.MetaDataValue   FROM dbo.[ContentItems_MetaData] cmd   JOIN dbo.[MetaData] md on (cmd.MetaDataID = md.MetaDataID)   WHERE ContentItemId = @ContentItemId"
1269,UpdateSearchCommonWord,"CREATE PROCEDURE dbo.UpdateSearchCommonWord   @CommonWordID int,    @CommonWord nvarchar(255),    @Locale nvarchar(10)   AS    UPDATE dbo.SearchCommonWords SET   [CommonWord] = @CommonWord,   [Locale] = @Locale  WHERE   [CommonWordID] = @CommonWordID"
1270,AddSynonymsGroup,"CREATE PROCEDURE dbo.[AddSynonymsGroup]   @SynonymsTags    nvarchar(MAX),   @CreatedByUserID   int,   @PortalID    int,   @CultureCode            nvarchar(50)  AS  BEGIN    INSERT INTO dbo.[SynonymsGroups](    [SynonymsTags],      [CreatedByUserID],      [CreatedOnDate],      [LastModifiedByUserID],      [LastModifiedOnDate],    [PortalID],    [CultureCode]   ) VALUES (    @SynonymsTags,    @CreatedByUserID,       GETUTCDATE(),    @CreatedByUserID,    GETUTCDATE(),    @PortalID,    @CultureCode   )      SELECT SCOPE_IDENTITY()  END"
1271,AIElearning_Question_GetContent,CREATE PROC [dbo].[AIElearning_Question_GetContent]  @Id INT  AS  SELECT Content FROM AIElearning_Question WHERE Id=@Id    
1272,AIElearning_ExerciseSubject_GetsBySearch,"create proc [dbo].[AIElearning_ExerciseSubject_GetsBySearch]  @pageIndex int,  @pageSize int,  @classid int,  @type int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '   --mã khóa học  if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)  exec('    WITH #AIElearning_Exercise AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Exercise  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Exercise   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1273,Mobile_SavePreviewProfile,"CREATE PROCEDURE dbo.[Mobile_SavePreviewProfile]      @Id INT ,      @PortalId INT ,      @Name NVARCHAR(50) ,      @Width INT ,      @Height INT ,   @UserAgent NVARCHAR(260) ,   @SortOrder INT ,      @UserId INT  AS       IF ( @Id = -1 )           BEGIN              INSERT  dbo.Mobile_PreviewProfiles                      ( PortalId ,                        Name ,                        Width ,                        Height ,         UserAgent ,         SortOrder ,                        CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @PortalId , -- PortalId - int                        @Name , -- Name - nvarchar(50)                        @Width , -- Width - int                        @Height , -- Height - int         @UserAgent ,         @SortOrder ,                        @UserId , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @UserId , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )                                    SELECT  @Id = SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.Mobile_PreviewProfiles              SET     Name = @Name ,                      Width = @Width ,                      Height = @Height ,       UserAgent = @UserAgent ,       SortOrder = @SortOrder ,                      LastModifiedByUserID = @UserId ,                      LastModifiedOnDate = GETDATE()              WHERE   Id = @Id          END                SELECT  @Id"
1274,AIElearning_Class_GetsBySearchNotInCateHot,"CREATE proc [dbo].[AIElearning_Class_GetsBySearchNotInCateHot]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Status int,  @UnitCode nvarchar(50),  @IsHot int    -- AIElearning_Class_GetsBySearchNotInCateHot 1, 999, '', 16, -1, -1, -1    as  DECLARE @Condition AS NVARCHAR(MAX)  set @condition = ' (1=1) '   SET @Condition=@Condition+'and Id not in (select ClassId from AIElearning_Class_Hot where IsHot='+str(@IsHot)+' and UnitCode='''+@UnitCode+''')'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- Từ khóa  IF(@Keyword IS NOT NULL AND @Keyword<>'')    --set @Condition = @Condition+' AND FREETEXT(*,'''+@Keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  -- Mã chuyên mục  if(@CategoryId<>-1)   --set @condition = @condition +  ' and PrimaryCategoryId in ('+(select ChildId from AISystem_Category where id=  @CategoryId)+')'   --set @condition = @condition +  ' and Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in (select ChildId from AISystem_Category where Id =  ' +str(@CategoryId) + '))'   set @Condition=@Condition+' AND CateSubjectId='+str(@CategoryId)  -- Loại  if(@Type<>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  -- Trạng thái  if(@Status<>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@UnitCode<>'')   set @Condition=@Condition+ ' AND Unitcode=''' + @UnitCode + ''''  exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class where '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1275,AISystem_Category_AddByPosition,"    CREATE PROCEDURE [dbo].[AISystem_Category_AddByPosition]   @Position int,   @ParentId int,/*nullable*/   @Name nvarchar(250),   @IsUsed int,   @IconUrl nvarchar(250),   @Title nvarchar(250),   @Contents ntext,   @Contents2 ntext,   @TabId int,   @Url nvarchar(255),   @LevelNo int,   @PortalId int,   @LanguageId nvarchar(50),   @Params nvarchar(250),   @Code nvarchar(50),   @ChildId nvarchar(max)  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category (   [ParentId],   [Name],   [IsUsed],   [IconUrl],   [Title],   [Contents],   [Contents2],   [TabId],   [Url],   [LevelNo],   [OrderNo],   [PortalId],   [LanguageId],   [Params],   Code,   ChildId  ) VALUES (   @ParentId,   @Name,   @IsUsed,   @IconUrl,   @Title,   @Contents,   @Contents2,   @TabId,   @Url,   @LevelNo,   1,   @PortalId,   @LanguageId,   @Params,   @Code,   @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category WHERE (IsUsed = @IsUsed AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category WHERE (OrderNo > @OrderNo AND IsUsed = @IsUsed AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category (   [ParentId],   [Name],   [IsUsed],   [IconUrl],   [Title],   [Contents],   [Contents2],   [TabId],   [Url],   [LevelNo],   [OrderNo],   [PortalId],   [LanguageId],   [Params],   Code,   ChildId  ) VALUES (   @ParentId,   @Name,   @IsUsed,   @IconUrl,   @Title,   @Contents,   @Contents2,   @TabId,   @Url,   @LevelNo,   @OrderFirst,   @PortalId,   @LanguageId,   @Params,   @Code,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()      "
1276,ResourceItem$DefaultView,"  -- Create function that implements the default view for the ResourceItem item type  CREATE FUNCTION [ResourceItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [PackageId], [ResourceXml]      FROM [ResourceItem]  )  "
1277,AISystem_Category_TeachingTopic_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_TeachingTopic_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_TeachingTopic  WHERE   ParentId = @parentId      "
1278,AISystem_Category_TrainingType_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_TrainingType_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)  AS  SELECT * FROM AISystem_Category_TrainingType    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo  "
1279,GetAllProfiles,create procedure dbo.GetAllProfiles  AS  SELECT * FROM dbo.Profile
1280,AIElearning_ClassItem_Users_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_ClassItem_Users_GetsBySearchCount]  @UserName  nvarchar(150),  @ClassId int,  @ClassItemId int,  @ItemStatus int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  IF(@UserName IS NOT NULL AND @UserName<>'')    set @condition = @condition + ' and UserName =''' + @UserName + ''''  if(@ClassId >-1)   set @Condition = @Condition+' AND ClassId='+str(@ClassId)  if(@ClassItemId >-1)   set @Condition = @Condition+' AND ClassItemId='+str(@ClassItemId)  if(@ItemStatus >-1)   set @Condition = @Condition+' AND ItemStatus='+str(@ItemStatus)  exec('   SELECT count(*)   from AIElearning_ClassItem_Users where '+@Condition+'    ')  SET QUOTED_IDENTIFIER OFF"
1281,OutputCachePurgeCache,CREATE PROCEDURE dbo.OutputCachePurgeCache  AS  BEGIN      DELETE       FROM  dbo.OutputCache  END
1282,AISystem_Category_Question_ChildrenByParentId,"  CREATE PROC [dbo].[AISystem_Category_Question_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50)  AS  SELECT * FROM AISystem_Category_Question    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )   ORDER BY OrderNo      "
1283,DeleteUserRelationshipPreference,CREATE PROCEDURE dbo.[DeleteUserRelationshipPreference]   @PreferenceID INT   AS    BEGIN    DELETE FROM dbo.UserRelationshipPreferences      WHERE PreferenceID = @PreferenceID     END
1284,AIElearning_SurveyUser_CheckExists,"create proc [dbo].[AIElearning_SurveyUser_CheckExists]   @surveyId int,  @userId int    as  begin  select count(*) from AIElearning_SurveyUser WHERE SurveyId=@surveyId and UserId = @userId  end  "
1285,AISystem_UserInfo_GetsUserNotInRoles,"    create proc [dbo].[AISystem_UserInfo_GetsUserNotInRoles]  @pageIndex int,  @pageSize int,  @username nvarchar(150),  @Unit int,  @strRoleId nvarchar(150)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (Username like N''%' + @username + '%'') '  IF(@Unit > 0)   set @condition = @condition +    ' And  (Unit= '+ STR(@Unit)+' )'  IF(@strRoleId IS NOT NULL AND @strRoleId<>'')    set @condition = @condition + ' and UserId not in (select UserID from UserRoles where RoleID in ('+ @strRoleId +'))'  exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_UserInfo     where ' + @condition +'     )   SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1286,AISystem_Category_Media_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_Media_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_Media_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Media AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')          "
1287,AICDC_Log_GetLastLogin,"create PROCEDURE [dbo].[AICDC_Log_GetLastLogin]   @Action int,   @UserId int,   @ObjectType int,   @ObjectId int      AS    SELECT top 1 *   FROM AICDC_Log  WHERE   ([ActionId] = @Action or @Action =-1)   and   ([UserId] = @UserId or @UserId =-1)   and   ([ObjectType] = @ObjectType or @ObjectType =-1)   and   ([ObjectId] = @ObjectId or @ObjectId =-1)  order by id desc      "
1288,FindDatabaseVersion,"create procedure dbo.FindDatabaseVersion    @Major  int,  @Minor  int,  @Build  int    as    select 1  from   dbo.Version  where  Major = @Major  and    Minor = @Minor  and    Build = @Build"
1289,UpdateSynonymsGroup,"CREATE PROCEDURE dbo.[UpdateSynonymsGroup]   @SynonymsGroupID  int,   @SynonymsTags    nvarchar(MAX),   @LastModifiedByUserID  int  AS  BEGIN    UPDATE dbo.SynonymsGroups     SET          SynonymsTags = @SynonymsTags,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate = GETUTCDATE()     WHERE SynonymsGroupID = @SynonymsGroupID  END"
1290,AIElearning_Class_GetsBySearchForLecturers,"CREATE proc [dbo].[AIElearning_Class_GetsBySearchForLecturers]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Type int,  @CategoryId int,  @UserId int,  @Status int  as  -- AIElearning_Class_GetsBySearchForLecturers 1,22, '', -1, 16, 5, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  IF(@Keyword IS NOT NULL AND @Keyword<>'')    --set @Condition = @Condition+' AND FREETEXT(*,'''+@Keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  IF(@CategoryId>-1)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category where id=@CategoryId   set @condition = @condition +  ' and Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in ('+@ChildId+'))'  end  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)     set @Condition=@Condition+' AND Id in (SELECT cl.ClassId FROM  AIElearning_Lecturers AS l INNER JOIN AIElearning_Class_Lecturers AS cl ON l.Id = cl.LecturersId INNER JOIN AISystem_UserInfo AS u ON l.UserInfoId = u.Id WHERE (u.UserId = '+str(@UserId)+'))'    exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1291,AIElearning_DocumentGroup_GetByPrimaryCategoryId,"CREATE PROC [dbo].[AIElearning_DocumentGroup_GetByPrimaryCategoryId]  @CategoryId int,  @KeyWord nvarchar(250),  @IsSearch int,  @strUnitCode nvarchar(max)  AS   --   DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')    set @condition = @condition + ' and (d.UnitCode =''' + @strUnitCode + ''')'  IF(@CategoryId>0)   Begin    DECLARE @ChildId AS NVARCHAR(MAX)    select @ChildId= ChildId from AISystem_Category_Document where Id=@CategoryId    IF (@ChildId IS NOT NULL AND @ChildId<>'')     set @condition = @condition  + ' and (d.CategotyDocumentId in ('+@ChildId+'))'   end    IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        SELECT count(d.Id)         from  AIElearning_DocumentGroup AS d          INNER JOIN          CONTAINSTABLE(AIElearning_DocumentGroup,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=d.Id            where ' + @Condition + ' and d.Status = 1      ')     end    ELSE     Begin      exec('        SELECT count(d.Id)         from  AIElearning_DocumentGroup AS d          INNER JOIN          FREETEXTTABLE(AIElearning_DocumentGroup,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=d.Id            where ' + @Condition + ' and d.Status = 1      ')     end   end  ELSE   BEGIN    exec('     SELECT COUNT(d.Id)     from  AIElearning_DocumentGroup AS d       where ' + @Condition + ' and d.Status = 1     ')   end    SET QUOTED_IDENTIFIER OFF  "
1292,AIElearning_Exercise_GetsByCountSubject,"  create proc [dbo].[AIElearning_Exercise_GetsByCountSubject]  @ClassId int,@type int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Type=3)  set @Condition=@Condition+' AND SubjectId='+str(@ClassId)  if(@Type=2)  set @Condition=@Condition+' AND LessonId='+str(@ClassId)  exec('   select COUNT(*) from AIElearning_Exercise where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
1293,AIElearning_Class_GetsBySearchNotInCateHotCount,"CREATE proc [dbo].[AIElearning_Class_GetsBySearchNotInCateHotCount]  @Keyword nvarchar(250),  @CategoryId int,  @Type int,  @Status int,  @UnitCode nvarchar(50),  @IsHot int  as  -- AIElearning_Class_GetsBySearchNotInCateHotCount '', 16, -1, -1, -1  DECLARE @Condition AS NVARCHAR(MAX)  set @Condition = ' (1=1) '   SET @Condition= @Condition + ' and Id not in (select ClassId from AIElearning_Class_Hot where IsHot='+str(@IsHot)+' and UnitCode='''+@UnitCode+''')'  -- Từ khóa  IF(@Keyword IS NOT NULL AND @Keyword<>'')    --set @Condition = @Condition+' AND FREETEXT(*,'''+@Keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  -- Mã chuyên mục  if(@CategoryId<>-1)   --set @condition = @condition +  ' and PrimaryCategoryId in ('+(select ChildId from AISystem_Category where id=  @CategoryId)+')'   --set @condition = @condition +  ' and Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in (select ChildId from AISystem_Category where Id =  ' +str(@CategoryId) + '))'   set @Condition=@Condition+' AND CateSubjectId='+str(@CategoryId)  -- Loại  if(@Type<>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  -- Trạng thái  if(@Status<>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@UnitCode<>'')   set @Condition=@Condition+ ' AND Unitcode=''' + @UnitCode + ''''    exec('select COUNT(Id) from AIElearning_Class where '+@Condition)      SET QUOTED_IDENTIFIER OFF     "
1294,AISystem_Category_GetAllChildAndIncludeParentID,"    --AISystem_Category_GetAllChildAndIncludeParentID 13,1,'vi-VN',0,true    CREATE PROCEDURE [dbo].[AISystem_Category_GetAllChildAndIncludeParentID]  @ParentId int, /*Nullable*/  @IsUsed int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId bit  AS    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(100)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if @ParentId is null   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AISystem_Category.Id,      0,      AISystem_Category.ParentId,      AISystem_Category.Name,      STR(AISystem_Category.OrderNo),      AISystem_Category.Name,      AISystem_Category.Title    FROM      AISystem_Category    WHERE      (AISystem_Category.IsUsed=@IsUsed OR @IsUsed = -1)       AND (AISystem_Category.Id = @ParentId)      AND AISystem_Category.LanguageId = @LanguageId      AND AISystem_Category.PortalId = @portalId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT       AISystem_Category.Id,      0,      AISystem_Category.ParentId,      AISystem_Category.Name,      STR(AISystem_Category.OrderNo),      AISystem_Category.Name,      AISystem_Category.Title    FROM      AISystem_Category    WHERE      (AISystem_Category.IsUsed=@IsUsed OR @IsUsed = -1)       AND (AISystem_Category.ParentId = @ParentId or (@ParentId IS NULL AND AISystem_Category.ParentId IS NULL))      AND AISystem_Category.LanguageId = @LanguageId      AND AISystem_Category.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, PATH,Title)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.Title    FROM     #PathConstruction T    JOIN AISystem_Category  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.IsUsed=@IsUsed OR @IsUsed = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     'Id' = Id,    'Name' = Path,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'Title' = Title  FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction              "
1295,SequencingLogEntryItem$DefaultView,"  -- Create function that implements the default view for the SequencingLogEntryItem item type  CREATE FUNCTION [SequencingLogEntryItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [AttemptId], [ActivityAttemptId], [EventType], [Message], [NavigationCommand], [Timestamp]      FROM [SequencingLogEntryItem]  )  "
1296,AISystem_Category_TrainingField_GetMaxOrderNoByParentId,"CREATE PROC [dbo].[AISystem_Category_TrainingField_GetMaxOrderNoByParentId] @parentId INT  AS   -- AISystem_Category_TrainingField_GetMaxOrderNoByParentId -1  SELECT  ISNULL(MAX(OrderNo), 0)  FROM    dbo.AISystem_Category_TrainingField  WHERE   ParentId = @parentId"
1297,AISystem_Category_TrainingType_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_TrainingType_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_TrainingType_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --N?u cha truy?n vào là null th? không th? bao g?p cha trong lúc l?y k?t qu? ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TrainingType.Id,      0,      AISystem_Category_TrainingType.ParentId,      AISystem_Category_TrainingType.Title,      STR(AISystem_Category_TrainingType.OrderNo),      AISystem_Category_TrainingType.Title,      AISystem_Category_TrainingType.Code          FROM      AISystem_Category_TrainingType    WHERE      (AISystem_Category_TrainingType.Status=@Status OR @Status = -1)       AND (AISystem_Category_TrainingType.Id = @ParentId)      AND AISystem_Category_TrainingType.LanguageId = @LanguageId      AND AISystem_Category_TrainingType.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TrainingType.Id,      0,      AISystem_Category_TrainingType.ParentId,      AISystem_Category_TrainingType.Title,      STR(AISystem_Category_TrainingType.OrderNo),      AISystem_Category_TrainingType.Title,      AISystem_Category_TrainingType.Code          FROM      AISystem_Category_TrainingType    WHERE      (AISystem_Category_TrainingType.Status=@Status OR @Status = -1)       AND (AISystem_Category_TrainingType.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_TrainingType.ParentId IS NULL or AISystem_Category_TrainingType.ParentId <=0))      AND AISystem_Category_TrainingType.LanguageId = @LanguageId      AND AISystem_Category_TrainingType.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_TrainingType  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction  "
1298,OutputCachePurgeExpiredItems,CREATE PROCEDURE dbo.OutputCachePurgeExpiredItems   @CurrentUtcDateTime DateTime  AS  BEGIN      DELETE       FROM  dbo.OutputCache       WHERE Expiration <= @CurrentUtcDateTime  END
1299,AIElearning_TestForm_Part_GetAllNodesByParentId,"  --AIElearning_TestForm_Part_GetAllNodesByParentId 0, null, 1, 'vi-VN'    CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_GetAllNodesByParentId]  @TestId int,  @parentId int  AS  DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(MAX),    SortColumn nvarchar(3000),    TabID nvarchar(3000)  )    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, TabID)  SELECT     AIElearning_TestForm_Part.Id,    0,    AIElearning_TestForm_Part.ParentId,    AIElearning_TestForm_Part.Name,    STR(AIElearning_TestForm_Part.OrderNo),    AIElearning_TestForm_Part.DataId  FROM    AIElearning_TestForm_Part  WHERE  (AIElearning_TestForm_Part.ParentId=@parentId OR(@parentId IS NULL AND AIElearning_TestForm_Part.ParentId IS NULL)) and AIElearning_TestForm_Part.TestId=@TestId      SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    INSERT INTO      #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, TabID)    SELECT      S.Id,      @Level + 1,      S.ParentId,      S.Name,      SortColumn + STR(S.OrderNo),     S.DataId    FROM      #PathConstruction T    JOIN AIElearning_TestForm_Part  S ON S.ParentId=T.Id AND T.Level=@Level     SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     *  FROM     #PathConstruction left join AIElearning_TestForm_Part  ON #PathConstruction.Id=AIElearning_TestForm_Part.Id  ORDER BY     #PathConstruction.SortColumn    DROP TABLE #PathConstruction    "
1300,Personabar_GetUsers,"CREATE PROCEDURE dbo.Personabar_GetUsers (  @PortalId INT,  @SortColumn NVARCHAR(32),  @SortAscending BIT,     @PageIndex int = 0,     @PageSize int = 10 ) AS BEGIN  SELECT COUNT(*) AS TotalRecords  FROM dbo.UserPortals UP WITH (NOLOCK)  INNER JOIN dbo.vw_Users U WITH (NOLOCK) ON UP.UserId = U.UserID AND U.PortalId = @PortalId  WHERE UP.PortalId = @PortalId  AND IsSuperUser = 0 AND U.Authorised=1 AND U.IsDeleted=0     ;WITH UsersCTE  AS  (    SELECT U.UserID, U.Username, U.DisplayName, U.Email, U.CreatedOnDate, U.IsDeleted, U.Authorised,   ROW_NUMBER() OVER ( ORDER BY CASE WHEN @SortColumn = 'Joined' AND @SortAscending = 1 THEN U.UserID END ASC,            CASE WHEN @SortColumn = 'Joined' AND @SortAscending = 0 THEN U.UserID END DESC,           CASE WHEN @SortColumn = 'Email' AND @SortAscending = 1 THEN U.Email END ASC,            CASE WHEN @SortColumn = 'Email' AND @SortAscending = 0 THEN U.Email END DESC,           CASE WHEN @SortColumn = 'DisplayName' AND @SortAscending = 1 THEN U.DisplayName END ASC,            CASE WHEN @SortColumn = 'DisplayName' AND @SortAscending = 0 THEN U.DisplayName END DESC) AS RowNumber    FROM dbo.vw_Users U WITH (NOLOCK)   INNER JOIN dbo.UserPortals UP WITH (NOLOCK)    ON U.UserID = UP.UserId    AND U.PortalId = @PortalId   WHERE UP.PortalId = @PortalId   AND IsSuperUser = 0 AND U.Authorised=1 AND U.IsDeleted=0  )  SELECT * FROM UsersCTE  WHERE RowNumber BETWEEN (@PageIndex * @PageSize + 1) AND ((@PageIndex + 1) * @PageSize); END"
1301,AIElearning_SurveyUser_DeleteIncludeResult,CREATE proc [dbo].[AIElearning_SurveyUser_DeleteIncludeResult]   @idSurveyUser int  as  begin  delete from AIElearning_SurveyUser where Id = @idSurveyUser  delete from AIElearning_SurveyUserQuestion where SurveyUserId = @idSurveyUser  end  
1302,AISystem_Category_Media_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_Media_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Media AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Media       )         SELECT     *   FROM #AISystem_Category_Media   where RowNumber between '+ @start +'  and  '+ @end +'   ')          "
1303,AICDC_Log_GetsByParam,"  CREATE PROC [dbo].[AICDC_Log_GetsByParam]      @pageIndex INT ,      @pageSize INT ,      @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT,      @ObjectType Int,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME,   @NotType INT  AS   -- AICDC_Log_GetsByParam 1,1000,'host','','1,2',0,0,'01/01/1900','01/01/1900',4  -- Phan trang      DECLARE @start AS INT      DECLARE @end AS INT      SET @start = @pageSize * ( @pageIndex - 1 ) + 1      SET @end = @pageSize * @pageIndex         DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.PeriodCode =''' + @ObjectName + ''') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType >0 )          SET @condition = @condition + ' And  (tbLog.ObjectType =' + STR(@ObjectType) + ')'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''   IF ( @NotType >0 )          SET @condition = @condition + ' And  (tbLog.ObjectType <>' + STR(@NotType) + ')'      EXEC('      WITH #AICDC_Log AS(       SELECT    ROW_NUMBER() OVER ( ORDER BY tbLog.Id DESC ) AS RowNumber, tbLog.*      FROM      dbo.AICDC_Log tbLog      LEFT JOIN dbo.AISystem_UserInfo tbUser ON tbLog.Username = tbUser.Username where '+@condition+'      )      SELECT  *      FROM #AICDC_Log      where RowNumber between '+ @start +'  and  '+ @end +'       ')      SET QUOTED_IDENTIFIER OFF            "
1304,Messaging_GetInboxCount,"CREATE PROCEDURE dbo.[Messaging_GetInboxCount]    @PortalID int,   @UserID int  AS     SELECT COUNT (*)[Body]   FROM dbo.Messaging_Messages   WHERE (ToUserID= @UserID AND Status in (1,2) AND SkipPortal = '0')     OR (FromUserID = @UserID AND Status = 0)"
1305,DeleteSynonymsGroup,CREATE PROCEDURE dbo.[DeleteSynonymsGroup]   @SynonymsGroupID int  AS  BEGIN    DELETE FROM dbo.SynonymsGroups WHERE SynonymsGroupID = @SynonymsGroupID  END
1306,AIElearning_Class_GetsBySearchForLecturersCount,"CREATE proc [dbo].[AIElearning_Class_GetsBySearchForLecturersCount]  @Keyword nvarchar(250),  @Type int,  @CategoryId int,  @UserId int,  @Status int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  IF(@Keyword IS NOT NULL AND @Keyword<>'')    --set @Condition = @Condition+' AND FREETEXT(*,'''+@Keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)  IF(@CategoryId>-1)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category where id=@CategoryId   --set @condition = @condition +' and ( select count(Id) from AISystem_Category where ID in('+@ChildId+' ) and ('',''+l.SecondCategoryId+'','') like (''%,''+cast(AISystem_Category.Id as nvarchar(50))+'',%''))>0'   set @condition = @condition +  ' and Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in ('+@ChildId+'))'  end  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)   set @Condition=@Condition+' AND Id in (SELECT cl.ClassId FROM  AIElearning_Lecturers AS l INNER JOIN AIElearning_Class_Lecturers AS cl ON l.Id = cl.LecturersId INNER JOIN AISystem_UserInfo AS u ON l.UserInfoId = u.Id WHERE (u.UserId = '+str(@UserId)+'))'    exec('select COUNT(Id) from AIElearning_Class '+@Condition)  SET QUOTED_IDENTIFIER OFF"
1307,AISystem_Category_TeachingTopic_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_TeachingTopic_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TeachingTopic.Id,      0,      AISystem_Category_TeachingTopic.ParentId,      AISystem_Category_TeachingTopic.Title,      STR(AISystem_Category_TeachingTopic.OrderNo),      AISystem_Category_TeachingTopic.Title,      AISystem_Category_TeachingTopic.Code          FROM      AISystem_Category_TeachingTopic    WHERE      (AISystem_Category_TeachingTopic.Status=@Status OR @Status = -1)       AND (AISystem_Category_TeachingTopic.Id = @ParentId)      AND AISystem_Category_TeachingTopic.LanguageId = @LanguageId      AND AISystem_Category_TeachingTopic.PortalId = @portalId   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TeachingTopic.Id,      0,      AISystem_Category_TeachingTopic.ParentId,      AISystem_Category_TeachingTopic.Title,      STR(AISystem_Category_TeachingTopic.OrderNo),      AISystem_Category_TeachingTopic.Title,      AISystem_Category_TeachingTopic.Code          FROM      AISystem_Category_TeachingTopic    WHERE      (AISystem_Category_TeachingTopic.Status=@Status OR @Status = -1)       AND (AISystem_Category_TeachingTopic.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_TeachingTopic.ParentId IS NULL or AISystem_Category_TeachingTopic.ParentId <=0))      AND AISystem_Category_TeachingTopic.LanguageId = @LanguageId      AND AISystem_Category_TeachingTopic.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_TeachingTopic  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitId >-1)  -- set @Condition=@Condition+' AND UnitId='+str(@UnitId)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction  "
1308,AISystem_Subject_GetsByTalentNotIncludeCate,"CREATE proc [dbo].[AISystem_Subject_GetsByTalentNotIncludeCate]  @pageIndex int,  @pageSize int,  @talentId int,  @talentChildId int,  @talentLevelId int,  @talentChildLevelId int  AS     -- AISystem_Subject_GetsByTalentNotIncludeCate 1,999,2,0,3,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      --Bảng tạm luu khoa hoc  Create table #AISystem_Subject_Temp (   Id int,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),  )    --Bảng tạm luu danh muc khoa hoc va khoa hoc  Create table #AISystem_Category_Subject_Temp (   PK int IDENTITY (1,1),   ItemId INT,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),   [Path] NVARCHAR(250),   IsCategory BIT,   SortColumn nvarchar(max)  )    if(@talentId <> 0)   set @Condition=@Condition+' AND ts.TalentId='+str(@talentId)  if(@talentChildId <> 0 )   set @Condition=@Condition+' AND ts.TalentChildId='+str(@talentChildId)  if(@talentLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentLevelId='+str(@talentLevelId)  if(@talentChildLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentChildLevelId='+ STR(@talentChildLevelId)  exec('  WITH #AISystem_Talent_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY ts.Id desc) AS RowNumber, ts.*, s.Name, s.Code, s.Time, s.CateSubjectId, cs.Title AS CateSubjectName     from AISystem_Talent_Subject ts inner join AISystem_Subject s     on ts.SubjectId = s.Id INNER JOIN dbo.AISystem_Category_Subject cs ON cs.Id = s.CateSubjectId      where '+@Condition+' )      SELECT *   FROM #AISystem_Talent_Subject ts   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
1309,AISystem_Category_GetAllChildAndIncludeParentID_WithMaxLevel,"  CREATE PROCEDURE [dbo].[AISystem_Category_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS    -- exec AISystem_Category_GetAllChildAndIncludeParentID_WithMaxLevel 4,1,'vi-VN',0,0,1    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Name nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, Name, Code)    SELECT       AISystem_Category.Id,      0,      AISystem_Category.ParentId,      AISystem_Category.Name,      STR(AISystem_Category.OrderNo),      AISystem_Category.Name,      AISystem_Category.Code          FROM      AISystem_Category    WHERE      (AISystem_Category.IsUsed=@Status OR @Status = -1)       AND (AISystem_Category.Id = @ParentId)      AND AISystem_Category.LanguageId = @LanguageId      AND AISystem_Category.PortalId = @portalId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, Name, Code)    SELECT       AISystem_Category.Id,      0,      AISystem_Category.ParentId,      AISystem_Category.Name,      STR(AISystem_Category.OrderNo),      AISystem_Category.Name,      AISystem_Category.Code          FROM      AISystem_Category    WHERE      (AISystem_Category.IsUsed=@Status OR @Status = -1)       AND (AISystem_Category.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category.ParentId IS NULL or AISystem_Category.ParentId <=0))      AND AISystem_Category.LanguageId = @LanguageId      AND AISystem_Category.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, Name, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Name,     SortColumn + STR(S.OrderNo),     @Pattern + S.Name,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.IsUsed=@Status OR @Status = -1)        AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Name]      FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction  "
1310,UserItem$DefaultView,"  -- Create function that implements the default view for the UserItem item type  CREATE FUNCTION [UserItem$DefaultView](@UserKey nvarchar(250))  RETURNS TABLE  AS  RETURN (      SELECT Id, [Key], [Name], [AudioCaptioning], [AudioLevel], [DeliverySpeed], [Language]      FROM [UserItem]  )  "
1311,AISystem_Talent_GetsTalentNotInJobtitleByArrUnit,"  CREATE PROC [dbo].[AISystem_Talent_GetsTalentNotInJobtitleByArrUnit]      @pageIndex INT ,      @pageSize INT ,      @limit INT ,      @arrUnitCode NVARCHAR(MAX) ,      @cateTalentId INT ,      @code NVARCHAR(250) ,      @type INT,   @jobtitleId INT  AS   -- AISystem_Talent_GetsTalentNotInJobtitleByArrUnit 1,100,0,'28',0,'',2,0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  -- Phan trang  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    IF ( @limit <> 0 )      SET @Condition = @Condition + ' AND Limit=' + STR(@limit)  IF ( @arrUnitCode <> '' )      SET @Condition = @Condition + ' AND (UnitCode in (select * from Split('''+@arrUnitCode+''')) or UnitCode = ''-1''  )'  IF ( @cateTalentId <> 0 )      SET @Condition = @Condition + ' AND CateTalentId=' + STR(@cateTalentId)  IF ( @code <> '' )      SET @Condition = @Condition + ' AND Code=''' + @code + ''''    CREATE TABLE #AISystem_Talent_Temp      ( PK INT IDENTITY(1, 1) ,        Id INT ,        Title NVARCHAR(250) ,        Code NVARCHAR(250) ,        Description NVARCHAR(MAX) ,        Limit INT ,        UnitCode NVARCHAR(50) ,        UnitName NVARCHAR(250) ,        CateTalentId INT ,        LevelCode NVARCHAR(MAX) ,        LevelName NVARCHAR(250) ,        TalentLevelId INT ,        ChildTalentId INT ,        ChildTitle NVARCHAR(250) ,        ChildCode NVARCHAR(50) ,        IsChild INT ,        SortColumn NVARCHAR(MAX) )  --Tao bang chua nang luc da duoc gan cho chuc danh  CREATE TABLE #AISystem_Jobtitle_Talent      ( PK INT ,        Id INT ,        Limit INT ,        TalentLevelId INT ,        ChildTalentId INT ,        IsChild INT )  -- Thêm năng lực cha  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code, ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+ tl.Description,''), t.Limit, t.UnitCode, (SELECT Title FROM dbo.AISystem_Category_Unit WHERE Code = t.UnitCode) , t.CateTalentId, tl.LevelCode, r.Title,tl.Id, 0,'','', 0, STR(t.Id)          FROM    AISystem_Talent t                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = t.Id AND tl.IsLevelChild = 0 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode           WHERE   t.Type = @type AND t.Id NOT IN (SELECT TalentId FROM dbo.AISystem_Talent_Child)    -- Them nang luc con  INSERT  INTO #AISystem_Talent_Temp          SELECT  t.Id, t.Title, t.Code,ISNULL('- ' +t.Description,'')  + ISNULL('<br/>- '+tc.Description,'')  + ISNULL('<br/>- '+tl.Description,''), t.Limit, t.UnitCode, (SELECT Title FROM dbo.AISystem_Category_Unit WHERE Code = t.UnitCode), t.CateTalentId, tl.LevelCode, r.Title,tl.Id, tc.Id,tc.Title,tc.Code, 1,STR(tc.TalentId) + STR(tc.Id)          FROM    AISystem_Talent_Child tc                  INNER JOIN AISystem_Talent t ON t.Id = tc.TalentId                  LEFT JOIN AISystem_Talent_Level tl ON ( tl.TalentId = tc.Id AND tl.IsLevelChild = 1 )                  LEFT JOIN dbo.AISystem_Rank r ON r.Code = tl.LevelCode          WHERE   t.Type = @type       -- Them nang luc được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON ( tt.id = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild)     WHERE jt.JobTitleId = @jobtitleId     PRINT('Added parent'+CAST(@@ROWCOUNT AS NVARCHAR(50)))   -- Them nang luc con  được gan cho chuc danh  INSERT  INTO #AISystem_Jobtitle_Talent          SELECT tt.PK, tt.Id, tt.Limit, tt.TalentLevelId,tt.ChildTalentId,tt.IsChild FROM #AISystem_Talent_Temp tt INNER JOIN  AISystem_Jobtitle_Talent jt ON (tt.ChildTalentId = jt.TalentId AND ISNULL(tt.TalentLevelId,0) = jt.TalentLevelId AND jt.IsChild = tt.IsChild) WHERE jt.JobTitleId = @jobtitleId      PRINT('Added child'+CAST(@@ROWCOUNT AS NVARCHAR(50)))   -- AISystem_Talent_GetsTalentNotInJobtitle"
1312,AISystem_Talent_GetsTalentNotInJobtitleByArrUnit," 1,100,1,'',0,'',2,4    EXEC('   WITH #AISystem_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY SortColumn desc, IsChild, PK desc ) AS RowNumber,  * from #AISystem_Talent_Temp  where   '+@Condition+' and  PK NOT IN  (SELECT PK FROM #AISystem_Jobtitle_Talent)  )       SELECT  *   FROM #AISystem_Talent   where RowNumber between '+ @start +'  and  '+ @end +'    order by SortColumn desc  ')          "
1313,AIElearning_ClassGetExerciseCount,create proc [dbo].[AIElearning_ClassGetExerciseCount]  @Userid int  as  select count(*) from AIElearning_Class where id in(select distinct classid from AIElearning_Exercise where id in (select ExerciseId from AIElearning_Exercise_Mentor where Userid=@Userid))  
1314,GetUserRole,"CREATE PROCEDURE dbo.[GetUserRole]     @PortalID int,    @UserID int,    @RoleId int    AS   SELECT *       FROM dbo.vw_UserRoles       WHERE   UserId = @UserID        AND  PortalId = @PortalID        AND  RoleId = @RoleId"
1315,OutputCacheRemoveItem,CREATE PROCEDURE dbo.OutputCacheRemoveItem   @ItemId Int  AS  BEGIN      DELETE      FROM  dbo.OutputCache      WHERE ItemId = @ItemId  END
1316,AISystem_Category_Subject_GetInfoById,create PROC [dbo].[AISystem_Category_Subject_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Subject where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1317,CoreMessaging_UpdateMessageArchivedStatus,"CREATE PROCEDURE dbo.[CoreMessaging_UpdateMessageArchivedStatus]   @ConversationID int,   @UserID int,   @Archived bit  AS  BEGIN   UPDATE dbo.[CoreMessaging_MessageRecipients]   SET [Archived] = @Archived   WHERE UserID = @UserID   AND MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = @ConversationID)     IF @Archived = 1 BEGIN    -- If archiving, set also as read    UPDATE dbo.[CoreMessaging_MessageRecipients]    SET [Read] = 1    WHERE [UserID] = @UserID    AND MessageID IN (SELECT MessageID FROM dbo.[CoreMessaging_Messages] WHERE ConversationID = @ConversationID)   END  END"
1318,GetTabVersions,"CREATE PROCEDURE dbo.[GetTabVersions]   @TabId INT  AS  BEGIN   SELECT       [TabVersionId],    [TabId],    [Version],    [TimeStamp],    [IsPublished],       [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   FROM dbo.[TabVersions]   WHERE [TabId] = @TabId  END"
1319,UpdateTabModuleVersion,"CREATE PROCEDURE dbo.[UpdateTabModuleVersion]      @TabModuleID int,      @VersionGuid uniqueidentifier  AS      UPDATE dbo.TabModules    SET VersionGuid = @VersionGuid,     LastModifiedOnDate = GETDATE()      WHERE  TabModuleID = @TabModuleID"
1320,AIElearning_SurveyUser_DeleteIncludeResultByUserId,create proc [dbo].[AIElearning_SurveyUser_DeleteIncludeResultByUserId]   @userId int  as  begin  delete from AIElearning_SurveyUserQuestion where SurveyUserId  in (select Id from AIElearning_SurveyUser where UserId = @userId)  delete from AIElearning_SurveyUser where  UserId = @userId  end  
1321,AISystem_Category_Question_GetByTitle,"  CREATE PROC [dbo].[AISystem_Category_Question_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_Question_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Question AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')        "
1322,AICDC_Log_GetsByParamCount,"  CREATE PROC [dbo].[AICDC_Log_GetsByParamCount]        @ObjectName NVARCHAR(500) ,      @ObjectId BIGINT,      @ObjectType Int,      @ActionId INT ,      @DateBegin DATETIME ,      @DateEnd DATETIME,    @NotType INT  AS   -- AICDC_Log_GetsByParamCount  '','',17,4,'01/01/1900','01/01/1900'       DECLARE @condition NVARCHAR(MAX)      SET @condition = ' (1=1) '      IF ( @ObjectName IS NOT NULL AND @ObjectName <> ''  )          SET @condition = @condition + ' and (tbLog.PeriodCode =''' + @ObjectName + ''') '      IF ( @ObjectId > 0 )          SET @condition = @condition + ' And  (tbLog.ObjectId= ' + STR(@ObjectId) + ' )'      IF ( @ObjectType >0 )          SET @condition = @condition + ' And  (tbLog.ObjectType =' + STR(@ObjectType) + ')'      IF ( @ActionId > 0 )          SET @condition = @condition + ' And  (tbLog.ActionId= ' + STR(@ActionId) + ' )'      IF CONVERT(DATETIME, @DateBegin, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @DateBegin, 121) + ''''      IF CONVERT(DATETIME, @DateEnd, 121) > '01/01/1900'          SET @condition = @condition + ' and tbLog.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @DateEnd, 121) + ''''   IF ( @NotType >0 )          SET @condition = @condition + ' And  (tbLog.ObjectType <>' + STR(@NotType) + ')'        EXEC('      SELECT  Count(*)      FROM    dbo.AICDC_Log tbLog      LEFT JOIN dbo.AISystem_UserInfo tbUser ON tbLog.Username = tbUser.Username where '+@condition+'   ')      SET QUOTED_IDENTIFIER OFF             "
1323,GetUserRoles,"CREATE PROCEDURE dbo.[GetUserRoles]   @PortalId  int,   @UserId    int  AS   SELECT *    FROM dbo.vw_UserRoles    WHERE UserID = @UserId AND PortalID = @PortalId"
1324,GetModuleControls,"CREATE PROCEDURE dbo.[GetModuleControls]  AS      SELECT *      FROM   dbo.ModuleControls   ORDER BY  ControlKey, ViewOrder"
1325,AIElearning_Exercise_GetMentor,create proc [dbo].[AIElearning_Exercise_GetMentor]  @Username nvarchar(250)  as  select * from AIElearning_Exercise_Mentor where Username=@Username   
1326,CoreMessaging_GetNotificationTypeActions,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationTypeActions]   @NotificationTypeID int  AS  BEGIN   SELECT [NotificationTypeActionID], [NotificationTypeID], [NameResourceKey], [DescriptionResourceKey], [ConfirmResourceKey], [Order], [APICall], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM dbo.[CoreMessaging_NotificationTypeActions]   WHERE [NotificationTypeID] = @NotificationTypeID   ORDER BY [Order]  END"
1327,AISystem_Category_GetAllMenuNodesByParentId,"        --AISystem_Category_GetAllMenuNodesByParentId 0, null, 1, 'vi-VN'    CREATE PROCEDURE [dbo].[AISystem_Category_GetAllMenuNodesByParentId]  @portalId int,  @parentId int,  @IsUsed int,  @LanguageId nvarchar(50)    AS  DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,    Name nvarchar(400),    SortColumn nvarchar(3000),    TabID nvarchar(3000)  )    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, TabID)  SELECT     AISystem_Category.Id,    0,    AISystem_Category.ParentId,    AISystem_Category.Name,    STR(AISystem_Category.OrderNo),    AISystem_Category.TabId  FROM    AISystem_Category  WHERE    (AISystem_Category.IsUsed=@IsUsed OR @IsUsed = -1)     AND (AISystem_Category.ParentId=@parentId OR(@parentId IS NULL AND AISystem_Category.ParentId IS NULL))    AND AISystem_Category.LanguageId=@LanguageId    AND AISystem_Category.PortalId = @portalId    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN    INSERT INTO      #PathConstruction (Id, Level, CTG_IDParent, Name, SortColumn, TabID)    SELECT      S.Id,      @Level + 1,      S.ParentId,      S.Name,      SortColumn + STR(S.OrderNo),     S.TabId    FROM      #PathConstruction T    JOIN AISystem_Category  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.IsUsed=@IsUsed OR @IsUsed = -1)  AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId    SELECT      @Rows = @@RowCount,      @Level = @Level + 1   END    SELECT     *  FROM     #PathConstruction left join AISystem_Category  ON #PathConstruction.Id=AISystem_Category.Id  ORDER BY     #PathConstruction.SortColumn    DROP TABLE #PathConstruction      "
1328,AIElearning_Monney_User_GetSumMoney,"CREATE proc [dbo].[AIElearning_Monney_User_GetSumMoney]   @classid int,  @username nvarchar(250)  as  begin  if EXISTS(select * from AIElearning_Monney_User where Classid=@classid and UserName=@username)  select Sum(Money) from AIElearning_Monney_User where Classid=@classid and UserName=@username  else   select 0  end    "
1329,GetExpiredPortals,CREATE PROCEDURE dbo.[GetExpiredPortals]    AS  SELECT * FROM dbo.vw_Portals  WHERE ExpiryDate < getDate()
1330,SaveTabVersion,"CREATE PROCEDURE dbo.[SaveTabVersion]      @Id INT,      @TabId INT,      @TimeStamp DATETIME,      @Version INT,   @IsPublished BIT,      @CreatedByUserID [INT] = -1,   @LastModifiedByUserID [INT] = -1  AS  BEGIN      IF ISNULL(@Id, 0) = 0      BEGIN          INSERT INTO dbo.[TabVersions](                          [TabId],              [TimeStamp],              [Version],     [IsPublished],              [CreatedByUserID],              [CreatedOnDate],              [LastModifiedByUserID],              [LastModifiedOnDate]          ) VALUES (              @TabId,              @TimeStamp,              @Version,           @IsPublished,                    @CreatedByUserID,              GETDATE(),              @LastModifiedByUserID,              GETDATE()          )            SELECT @Id = SCOPE_IDENTITY()      END      ELSE      BEGIN          UPDATE dbo.[TabVersions] SET                          [TabId] = @TabId,              [Version] = @Version,              [TimeStamp] = @TimeStamp,     [IsPublished] = @IsPublished,              [LastModifiedByUserID] = @LastModifiedByUserID,              [LastModifiedOnDate] = GETDATE()          WHERE TabVersionId = @Id      END   SELECT @Id  END"
1331,RestoreTabModule,"CREATE PROCEDURE dbo.[RestoreTabModule]   @TabId      int,   @ModuleId   int  AS   UPDATE dbo.TabModules    SET IsDeleted = 0,     VersionGuid = newId(),     LastModifiedOnDate = GETDATE()   WHERE  TabId = @TabId    AND    ModuleId = @ModuleId"
1332,AIElearning_SurveyUser_DeleteUserResult,"CREATE proc [dbo].[AIElearning_SurveyUser_DeleteUserResult]   @userId int,  @surveyId int  as  begin  DECLARE @surveyUserId AS int  SELECT @surveyUserId = Id FROM AIElearning_SurveyUser WHERE SurveyId = @surveyId and UserId = @userId  delete from AIElearning_SurveyUserQuestion where SurveyUserId = @surveyUserId  end  "
1333,DeleteRole,CREATE PROCEDURE dbo.[DeleteRole]      @RoleId Int -- ID of role to delete. System Roles ignored (deletion of system roles not supported)  AS  BEGIN      IF @RoleId >= 0 BEGIN          DELETE FROM dbo.[DesktopModulePermission] WHERE RoleID = @RoleId          DELETE FROM dbo.[FolderPermission]        WHERE RoleID = @RoleId          DELETE FROM dbo.[ModulePermission]        WHERE RoleID = @RoleId          DELETE FROM dbo.[TabPermission]           WHERE RoleID = @RoleId          DELETE FROM dbo.[Roles]                   WHERE RoleID = @RoleId      END  END
1334,AISystem_Category_Question_GetsBySearch,"  CREATE PROC [dbo].[AISystem_Category_Question_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Question AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Question       )         SELECT     *   FROM #AISystem_Category_Question   where RowNumber between '+ @start +'  and  '+ @end +'   ')        "
1335,AICDC_Log_GetsBySearch,"  create proc [dbo].[AICDC_Log_GetsBySearch]  @pageIndex int,  @pageSize int,  @ObjectName nvarchar(500),  @ObjectId bigint,  @ObjectType int,  @ActionId int,  @UserId int,  @DateBegin datetime,  @DateEnd datetime,  @PortalId int,  @LanguageId nvarchar(50)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@ObjectName IS NOT NULL AND @ObjectName<>'')    set @condition = @condition + ' and (ObjectName like N''%' + @ObjectName + '%'') '  IF(@ObjectId > 0)   set @condition = @condition +    ' And  (ObjectId= '+ STR(@ObjectId)+' )'  IF(@ObjectType > 0)   set @condition = @condition +    ' And  (ObjectType= '+ STR(@ObjectType)+' )'  IF(@ActionId > 0)   set @condition = @condition +    ' And  (ActionId= '+ STR(@ActionId)+' )'  IF(@UserId > 0)   set @condition = @condition +    ' And  (UserId= '+ STR(@UserId)+' )'   set @condition = @condition +    ' And  (PortalId= '+ STR(@PortalId)+' )'  IF (@LanguageId IS NOT NULL AND @LanguageId<>'')   set @condition = @condition +    ' And  (LanguageId= '+ @LanguageId+' )'  IF CONVERT(datetime,@DateBegin ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate >= ''' + convert(nvarchar(23),@DateBegin,121) + ''''  IF CONVERT(datetime,@DateEnd ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate <= ''' + convert(nvarchar(23),@DateEnd,121) + ''''    exec('    WITH #AICDC_Log AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AICDC_Log where ' + @condition +'     )         SELECT     *   FROM #AICDC_Log   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF           "
1336,DeleteEventLogConfig,CREATE PROCEDURE dbo.DeleteEventLogConfig   @ID int  AS  DELETE FROM dbo.EventLogConfig  WHERE ID = @ID
1337,UpdateRoleGroup,"CREATE PROCEDURE dbo.UpdateRoleGroup    @RoleGroupId  int,   @RoleGroupName  nvarchar(50),   @Description  nvarchar(1000),   @LastModifiedUserID int  AS     UPDATE dbo.RoleGroups   SET    RoleGroupName  = @RoleGroupName,       Description   = @Description,       LastModifiedByUserID = @LastModifiedUserID,       LastModifiedOnDate  = getdate()   WHERE  RoleGroupId = @RoleGroupId"
1338,AISystem_EmailTemplate_GetsBySearch,"CREATE proc [dbo].[AISystem_EmailTemplate_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @type int,  @Status int  as  -- AISystem_EmailTemplate_GetsBySearch 1, 111, N'', 1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @KeyWord + '%'') '  if(@type<>-1)   set @Condition=@Condition+' AND type='+str(@type)  if(@Status>0)   set @Condition=@Condition+' AND Status='+str(@Status)  exec('    WITH #AISystem_EmailTemplate AS(    SELECT ROW_NUMBER() OVER (ORDER BY id) AS RowNumber,           *     from AISystem_EmailTemplate '+@Condition+'    )      SELECT     *   FROM #AISystem_EmailTemplate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1339,AIElearning_Answer_GetContent,  CREATE PROC [dbo].[AIElearning_Answer_GetContent]  @Id INT  AS  SELECT Content FROM AIElearning_Answer WHERE Id=@Id  
1340,Mobile_SaveRedirection,"CREATE PROCEDURE dbo.[Mobile_SaveRedirection]      @Id INT ,      @PortalId INT ,      @Name NVARCHAR(50) ,      @Type INT ,      @SortOrder INT ,      @SourceTabId INT ,   @IncludeChildTabs BIT ,      @TargetType INT ,      @TargetValue NVARCHAR(260) ,   @Enabled BIT,      @UserId INT  AS       IF ( @Id = -1 )           BEGIN              INSERT  dbo.Mobile_Redirections                      ( PortalId ,                        Name ,                        Type ,                        SortOrder ,                        SourceTabId ,         IncludeChildTabs ,                        TargetType ,                        TargetValue ,         Enabled ,                        CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @PortalId , -- PortalId - int                        @Name , -- Name - nvarchar(50)                        @Type , -- Type - int                        @SortOrder , -- SortOrder - int                        @SourceTabId , -- SourceTabId - int         @IncludeChildTabs ,                        @TargetType ,                        @TargetValue ,         @Enabled ,                        @UserId , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @UserId , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )    SELECT  SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.Mobile_Redirections              SET     Name = @Name ,                      [Type] = @Type ,                      SortOrder = @SortOrder ,                      SourceTabId = @SourceTabId ,       IncludeChildTabs = @IncludeChildTabs ,                      TargetType = @TargetType ,                      TargetValue = @TargetValue ,       Enabled = @Enabled ,                      LastModifiedByUserID = @UserId ,                      LastModifiedOnDate = GETDATE()              WHERE   Id = @Id     SELECT @Id          END"
1341,AISystem_Category_GetChildrenByParentId,"    CREATE PROCEDURE [dbo].[AISystem_Category_GetChildrenByParentId]  @portalId int,  @parentId int,  @IsUsed int,  @LanguageId nvarchar(50)    AS  SELECT * FROM AISystem_Category   WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND IsUsed = @IsUsed    AND LanguageId = @LanguageId   ORDER BY OrderNo asc    "
1342,AIElearning_Lecturers_GetByUserInfoId,"CREATE PROC [dbo].[AIElearning_Lecturers_GetByUserInfoId] @UserInfoId INT  AS -- AIElearning_Lecturers_GetByUserInfoId 123    SELECT TOP 1          l.*, i.UnitCode, i.Username, i.LecturersCode, i.JobTitleStr, i.Email, i.Phone, i.Avatar, i.Displayname, i.Sex, i.BirthDate, i.Address  FROM    AIElearning_Lecturers l          INNER JOIN AISystem_UserInfo i ON l.UserInfoId = i.Id  WHERE   l.UserInfoId = @UserInfoId    "
1343,CoreMessaging_GetMessageRecipient,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageRecipient]      @RecipientID INT  AS   SELECT [RecipientID], [MessageID], [UserID], [Read], [Archived], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageRecipients   WHERE  [RecipientID] = @RecipientID"
1344,AddTab,"CREATE PROCEDURE dbo.[AddTab]      @ContentItemID          Int,      @PortalID               Int,      @TabOrder               Int,      @UniqueId               UniqueIdentifier,      @VersionGuid            UniqueIdentifier,      @DefaultLanguageGuid    UniqueIdentifier,      @LocalizedVersionGuid   UniqueIdentifier,      @TabName                nVarChar(200),      @IsVisible              Bit,      @DisableLink            Bit,      @ParentId               Int,      @IconFile               nVarChar(255),      @IconFileLarge          nVarChar(255),      @Title                  nVarChar(200),      @Description            nVarChar(500),      @KeyWords               nVarChar(500),      @Url                    nVarChar(255),      @SkinSrc                nVarChar(200),      @ContainerSrc           nVarChar(200),      @StartDate              DateTime,      @EndDate                DateTime,      @RefreshInterval        Int,      @PageHeadText           nVarChar(Max),      @IsSecure               Bit,      @PermanentRedirect      Bit,      @SiteMapPriority        Float,      @CreatedByUserID        Int,      @CultureCode            nVarChar( 10),      @IsSystem               bit  AS  BEGIN      INSERT INTO dbo.Tabs (          ContentItemID,          PortalID,          TabOrder,          UniqueId,          VersionGuid,          DefaultLanguageGuid,          LocalizedVersionGuid,          TabName,          IsVisible,          DisableLink,          ParentId,          IconFile,          IconFileLarge,          Title,          Description,          KeyWords,          IsDeleted,          Url,          SkinSrc,          ContainerSrc,          StartDate,          EndDate,          RefreshInterval,          PageHeadText,          IsSecure,          PermanentRedirect,          SiteMapPriority,          CreatedByUserID,          CreatedOnDate,          LastModifiedByUserID,          LastModifiedOnDate,          CultureCode,          IsSystem      )      VALUES (          @ContentItemID,          @PortalID,          @TabOrder,          @UniqueId,          @VersionGuid,          @DefaultLanguageGuid,          @LocalizedVersionGuid,          @TabName,          @IsVisible,          @DisableLink,          @ParentId,          @IconFile,          @IconFileLarge,          @Title,          @Description,          @KeyWords,          0,          @Url,          @SkinSrc,          @ContainerSrc,          @StartDate,          @EndDate,          @RefreshInterval,          @PageHeadText,          @IsSecure,          @PermanentRedirect,          @SiteMapPriority,          @CreatedByUserID,          getdate(),          @CreatedByUserID,          getdate(),          @CultureCode,          @IsSystem      )      DECLARE @TabId Int = SCOPE_IDENTITY();      EXEC dbo.BuildTabLevelAndPath @TabId;      SELECT @TabId;      RETURN @TabId;  END /* Procedure */"
1345,SaveUserRelationshipPreference,"CREATE PROCEDURE dbo.[SaveUserRelationshipPreference]      @PreferenceID INT,   @UserID INT,    @RelationshipID INT,   @DefaultResponse INT,   @CreateUpdateUserID INT        AS       IF ( @PreferenceID = -1 )           BEGIN              INSERT  dbo.UserRelationshipPreferences                      ( UserID,                RelationshipID,         DefaultResponse,                        CreatedByUserID ,                        CreatedOnDate ,                        LastModifiedByUserID ,                        LastModifiedOnDate                                   )              VALUES  ( @UserID , -- @UserID int                @RelationshipID, -- @RelationshipID int         @DefaultResponse , -- @DefaultResponse int                        @CreateUpdateUserID , -- CreatedBy - int                        GETDATE() , -- CreatedOn - datetime                        @CreateUpdateUserID , -- LastModifiedBy - int                        GETDATE() -- LastModifiedOn - datetime                                   )                                    SELECT  @PreferenceID = SCOPE_IDENTITY()          END      ELSE           BEGIN              UPDATE  dbo.UserRelationshipPreferences              SET     UserID = @UserID,            RelationshipID = @RelationshipID,       DefaultResponse = @DefaultResponse,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   PreferenceID = @PreferenceID          END                SELECT  @PreferenceID"
1346,DeleteTabVersion,CREATE PROCEDURE dbo.[DeleteTabVersion]      @Id INT  AS  BEGIN      DELETE FROM dbo.[TabVersions] WHERE TabVersionId = @Id  END
1347,UpdateModuleOrder,"CREATE PROCEDURE dbo.[UpdateModuleOrder]   @TabId              int,   @ModuleId           int,   @ModuleOrder        int,   @PaneName           nvarchar(50)  AS   UPDATE dbo.TabModules    SET ModuleOrder = @ModuleOrder,     PaneName = @PaneName,     VersionGuid = newId(),     LastModifiedOnDate = GETDATE()   WHERE TabId = @TabId     AND ModuleId = @ModuleId"
1348,AIElearning_SurveyUser_GetsBySearch,"CREATE proc [dbo].[AIElearning_SurveyUser_GetsBySearch]  @pageIndex int,   @pageSize int,  @surveyId int,  @Keyword nvarchar(250),  @status int,  @userId int  as  -- AIElearning_SurveyUser_GetsBySearch 1,10,1035,'',0,0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @classId AS int  SELECT @classId = ClassId FROM AIElearning_Survey WHERE Id = @surveyId    CREATE TABLE #AIElearning_SurveyUser(UserId int,CompleteStatus int)  INSERT INTO #AIElearning_SurveyUser  SELECT u.UserID,1  from AIElearning_ClassUser c inner join Users u   on u.UserID = c.UserId inner join AISystem_UserInfo i on i.UserId = u.UserID  where c.classid = @classId and c.Status = 1 and  c.UserId not in (SELECT UserID from AIElearning_SurveyUser where SurveyId = @surveyId)  INSERT INTO #AIElearning_SurveyUser select UserId,CompleteStatus from AIElearning_SurveyUser  where SurveyId = @surveyId    if(@Keyword<>'')   set @Condition=@Condition+' AND FREETEXT(u.*,'''+@Keyword+''')'  if(@status > 0)   set @Condition=@Condition+' AND CompleteStatus = '+ str(@status)  if(@userId > 0)   set @Condition=@Condition+' AND su.UserId = '+ str(@userId)    exec('WITH #AIElearning_SurveyUserAll AS ( SELECT ROW_NUMBER() OVER (ORDER BY u.UserId desc) AS RowNumber, u.*, su.CompleteStatus from AISystem_UserInfo u inner join #AIElearning_SurveyUser su   on u.UserId = su.UserId where '+@Condition+' )      SELECT * FROM #AIElearning_SurveyUserAll      WHERE RowNumber between '+ @start +'  and  '+ @end +'')  "
1349,CalculatePagingInformation,"CREATE PROCEDURE dbo.[CalculatePagingInformation]  -- this procedure is deprecated, please use more efficient functions pageLowerBound AND pageUpperBound instead!  -- 2147483647 = Cast(0x7fffffff AS Int)   @pageIndex   Int,      -- negative to return all rows!   @pageSize   Int,   -- negative OR 0 returns all rows   @rowsToReturn   Int output, -- row number of record AFTER last row (0 based)    @pageLowerBound Int output, -- row number of first record (0 based)   @pageUpperBound Int output  -- row number of record AFTER last row (1 based)  AS  BEGIN    IF IsNull(@pageSize, 2147483647) < 2147483647 AND IsNull(@PageIndex, -1) >= 0 BEGIN    SET @pageLowerBound = dbo.pageLowerBound(@pageIndex, @pageSize) - 1    SET @rowsToReturn   = dbo.pageUpperBound(@pageIndex, @pageSize)     SET @pageUpperBound = @rowsToReturn + 1    END ELSE BEGIN    SET @pageLowerBound = 0    SET @rowsToReturn   = 2147483647     SET @pageUpperBound = 2147483647    END  END"
1350,AISystem_Category_Subject_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_Subject_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Subject AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   AND a.ParentId > 0 and status =1   ')    "
1351,AICDC_Log_GetsBySearchCount,"  create proc [dbo].[AICDC_Log_GetsBySearchCount]  @ObjectName nvarchar(500),  @ObjectId bigint,  @ObjectType int,  @ActionId int,  @UserId int,  @DateBegin datetime,  @DateEnd datetime,  @PortalId int,  @LanguageId nvarchar(50)  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@ObjectName IS NOT NULL AND @ObjectName<>'')    set @condition = @condition + ' and (ObjectName like N''%' + @ObjectName + '%'') '  IF(@ObjectId > 0)   set @condition = @condition +    ' And  (ObjectId= '+ STR(@ObjectId)+' )'  IF(@ObjectType > 0)   set @condition = @condition +    ' And  (ObjectType= '+ STR(@ObjectType)+' )'  IF(@ActionId > 0)   set @condition = @condition +    ' And  (ActionId= '+ STR(@ActionId)+' )'  IF(@UserId > 0)   set @condition = @condition +    ' And  (UserId= '+ STR(@UserId)+' )'   set @condition = @condition +    ' And  (PortalId= '+ STR(@PortalId)+' )'  IF (@LanguageId IS NOT NULL AND @LanguageId<>'')   set @condition = @condition +    ' And  (LanguageId= '+ @LanguageId+' )'  IF CONVERT(datetime,@DateBegin ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate >= ''' + convert(nvarchar(23),@DateBegin,121) + ''''  IF CONVERT(datetime,@DateEnd ,121) > '01/01/1900'    set @condition = @condition + ' and CreatedDate <= ''' + convert(nvarchar(23),@DateEnd,121) + ''''    exec('   select COUNT(*) from AICDC_Log where ' + @condition +'  ')    SET QUOTED_IDENTIFIER OFF           "
1352,DeleteModule,create procedure dbo.DeleteModule    @ModuleId   int    as    delete  from   dbo.Modules   where  ModuleId = @ModuleId
1353,GetSearchStopWords,"CREATE PROCEDURE dbo.[GetSearchStopWords]   @PortalID int,   @CultureCode nvarchar(50)  AS  BEGIN   SELECT        [StopWordsID],       [StopWords],       [CreatedByUserID],       [CreatedOnDate],       [LastModifiedByUserID],       [LastModifiedOnDate],     [PortalID],     [CultureCode]   FROM dbo.SearchStopWords    WHERE [PortalID] = @PortalID AND [CultureCode] = @CultureCode  END"
1354,AISystem_EmailTemplate_GetsBySearchCount,"CREATE proc [dbo].[AISystem_EmailTemplate_GetsBySearchCount]  @Keyword nvarchar(250),  @type int,  @Status int    as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')    --set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'    set @condition = @condition + ' and (Name like N''%' + @KeyWord + '%'') '  if(@type<>-1)   set @Condition=@Condition+' AND type='+str(@type)  if(@Status>0)   set @Condition=@Condition+' AND Status='+str(@Status)    exec('select COUNT(Id) from AISystem_EmailTemplate '+@Condition+' ')      SET QUOTED_IDENTIFIER OFF"
1355,AIElearning_Exercise_GetMentorGroup,CREATE proc [dbo].[AIElearning_Exercise_GetMentorGroup]  @Mentorid int  as  select top(1)* from AIElearning_Exercise_Group where MentorId=@Mentorid    
1356,AISystem_Category_UpdateByPosition,"    CREATE PROCEDURE [dbo].[AISystem_Category_UpdateByPosition]  @Position int,  @Id int,  @ParentId int,  @Name nvarchar(250),  @IsUsed int,  @IconUrl nvarchar(250),  @Title nvarchar(250),  @Contents ntext,  @TabId int,  @Url nvarchar(255),  @LevelNo int,  @PortalId int,  @LanguageId nvarchar(50),  @Params nvarchar(250),  @Code nvarchar(50),  @ChildId nvarchar(max)  AS  DECLARE @OrderNo int  DECLARE @OrderMax int  DECLARE @OrderFirst int  SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))  SET @OrderNo = (SELECT OrderNo FROM AISystem_Category WHERE (Id = @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))  IF (@Position = 0)  BEGIN  SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category WHERE (IsUsed = @IsUsed AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))  IF (@OrderFirst IS NULL) SET @OrderFirst = 1  END  ELSE IF (@OrderNo = @OrderMax)  SET @OrderFirst = @OrderMax + 1  ELSE  SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category WHERE (OrderNo > @OrderNo AND IsUsed = @IsUsed AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))  DECLARE TempCur CURSOR FOR  SELECT Id, OrderNo FROM AISystem_Category WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)  OPEN TempCur  DECLARE @TempId int  DECLARE @TempOrderNo int  FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  WHILE (@@FETCH_STATUS = 0)  BEGIN  SET @TempOrderNo = @TempOrderNo + 1  UPDATE AISystem_Category  SET OrderNo=@TempOrderNo  WHERE Id=@TempId and PortalId = @portalId  FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  END  CLOSE TempCur  UPDATE AISystem_Category SET  [ParentId] = @ParentId,  [Name] = @Name,  [IsUsed] = @IsUsed,  [IconUrl] = @IconUrl,  [Title] = @Title,  [Contents] = @Contents,  [TabId] = @TabId,  [Url] = @Url,  [LevelNo] = @LevelNo,  [OrderNo] = @OrderFirst,  [PortalId] = @PortalId,  [LanguageId] = @LanguageId,  [Params] = @Params,  Code=@Code,  ChildId=@ChildId  WHERE  [Id] = @Id  DEALLOCATE TempCur   "
1357,AISystem_Category_Unit_GetInfoByCode,  create proc [dbo].[AISystem_Category_Unit_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Unit_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Unit where   Code = @Code  SET QUOTED_IDENTIFIER OFF     
1358,GetFolderMappingByMappingName,"CREATE PROCEDURE dbo.[GetFolderMappingByMappingName]   @PortalID int,   @MappingName nvarchar(50)  AS  BEGIN   SELECT *   FROM dbo.[FolderMappings]   WHERE ISNULL(PortalID, -1) = ISNULL(@PortalID, -1) AND MappingName = @MappingName  END"
1359,AIElearning_Class_Hot_GetPositionOrderNo,"CREATE proc [dbo].[AIElearning_Class_Hot_GetPositionOrderNo]  @Id int,  @UnitCode nvarchar(50),  @IsHot int,  @Position int  as  Begin   WITH #AIElearning_BangTam AS (   SELECT ROW_NUMBER() OVER (ORDER BY OrderNo) AS RowNumber, Id FROM AIElearning_Class_Hot as A   WHERE A.UnitCode = @UnitCode and A.IsHot = @IsHot   )   SELECT Id FROM   #AIElearning_BangTam B   WHERE B.RowNumber = (   SELECT RowNumber - @Position FROM   #AIElearning_BangTam B   WHERE B.Id = @Id   )  End    SET QUOTED_IDENTIFIER OFF  "
1360,AISystem_Subject_GetsBySearchReport,"    CREATE proc [dbo].[AISystem_Subject_GetsBySearchReport]   @ngaybd datetime,  @ngaykt datetime,  @unitCode nvarchar(250)  as  -- AISystem_Subject_GetsBySearchReport '01/01/2017','01/11/2018','aivietnam'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang   --gày b?t đ?u  IF CONVERT(datetime,@ngaybd ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime >= ''' + convert(nvarchar(23),@ngaybd,121) + ''''   --ngày k?t thúc  IF CONVERT(datetime,@ngaykt ,121) > '01/01/1900'    set @condition = @condition + ' and StartTime <= ''' + convert(nvarchar(23),@ngaykt,121) + ''''  if(@unitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@unitCode+''''  exec('   SELECT Name,(select Count(id) from AIElearning_Class where  SubjectId=sub.id) as [Solophhoc],   (Select Title from AISystem_JobTitle_Title where code=UserObject) as [DoiTuong],[dbo].[GetPartnerSubject](TypePartner,PartnerId) as [ThucHien],   [dbo].[GetTypeName] (TrainingType) as [Hinhthuc],(N''Bắt đầu: '' + Convert(nvarchar(250),StartTime,103) + '' '' + Convert(nvarchar(250),StartTime,8) +N'' - Kết thúc ''+ Convert(nvarchar(250),Endtime,103)+'' ''+ Convert(nvarchar(250),Endtime,8)) as [ThoiGian]    ,[dbo].[GetCountUsersubject] (sub.id) as [TongHV],Time,Address,id,UserCount,ClassCount,IsDivide    from AISystem_Subject as sub where '+@Condition+'       ')    SET QUOTED_IDENTIFIER OFF   "
1361,UpdateTab,"CREATE PROCEDURE dbo.[UpdateTab]      @TabId                  Int,      @ContentItemID          Int,      @PortalId               Int,      @VersionGuid            UniqueIdentifier,      @DefaultLanguageGuid    UniqueIdentifier,      @LocalizedVersionGuid   UniqueIdentifier,      @TabName                nVarChar(200),      @IsVisible              Bit,      @DisableLink            Bit,      @ParentId               Int,      @IconFile               nVarChar(255),      @IconFileLarge          nVarChar(255),      @Title                  nVarChar(200),      @Description            nVarChar(500),      @KeyWords               nVarChar(500),      @IsDeleted              Bit,      @Url                    nVarChar(255),      @SkinSrc                nVarChar(200),      @ContainerSrc           nVarChar(200),      @StartDate              DateTime,      @EndDate                DateTime,      @RefreshInterval        Int,      @PageHeadText           nVarChar(max),      @IsSecure               Bit,      @PermanentRedirect      Bit,      @SiteMapPriority        Float,      @LastModifiedByUserID   Int,      @CultureCode            nVarChar( 10),      @IsSystem               Bit  AS  BEGIN      DECLARE @OldParentId Int      SET @OldParentId = (SELECT ParentId FROM dbo.[Tabs] WHERE TabID = @TabId)        DECLARE @TabOrder Int      SET @TabOrder = (SELECT TabOrder FROM dbo.[Tabs] WHERE TabID = @TabId)        -- Get New TabOrder      DECLARE @NewTabOrder Int      SET @NewTabOrder = (SELECT MAX(TabOrder) FROM dbo.[Tabs] WHERE (ParentId = @ParentId OR (ParentId IS NULL AND @ParentId IS NULL)))      IF @NewTabOrder IS NULL          SET @NewTabOrder = 1      ELSE          SET @NewTabOrder = @NewTabOrder + 2        UPDATE dbo.[Tabs]          SET              ContentItemID           = @ContentItemID,              PortalId                = @PortalId,              VersionGuid             = @VersionGuid,              DefaultLanguageGuid     = @DefaultLanguageGuid,              LocalizedVersionGuid    = @LocalizedVersionGuid,              TabName                 = @TabName,              IsVisible               = @IsVisible,              DisableLink             = @DisableLink,              ParentId                = @ParentId,              IconFile                = @IconFile,              IconFileLarge           = @IconFileLarge,              Title                   = @Title,              Description             = @Description,              KeyWords                = @KeyWords,              IsDeleted               = @IsDeleted,              Url                     = @Url,              SkinSrc                 = @SkinSrc,              ContainerSrc            = @ContainerSrc,              StartDate               = @StartDate,              EndDate                 = @EndDate,              RefreshInterval         = @RefreshInterval,              PageHeadText            = @PageHeadText,              IsSecure                = @IsSecure,              PermanentRedirect       = @PermanentRedirect,              SiteMapPriority         = @SiteMapPriority,              LastModifiedByUserID    = @LastModifiedByUserID,              LastModifiedOnDate      = getdate(),              CultureCode             = @CultureCode,              IsSystem                = @IsSystem      WHERE  TabId = @TabId;        IF (@OldParentId <> @ParentId) BEGIN          -- update TabOrder of Tabs with same original Parent          UPDATE dbo.[Tabs]             SET TabOrder = TabOrder - 2           WHERE (ParentId = @OldParentId)             AND TabOrder > @TabOrder            -- Update Tab with new TabOrder          UPDATE dbo.[Tabs]             SET TabOrder = @NewTabOrder           WHERE TabID = @TabId      END /* IF */        EXEC dbo.BuildTabLevelAndPath @TabId, 1  END /* Procedure */"
1362,fn_GetTestStatusInSubjects,"CREATE Function [dbo].[fn_GetTestStatusInSubjects]   (  @unitCode VARCHAR(50),  @unitCodeChild VARCHAR(50)   )  returns VARCHAR(50)  as  BEGIN  Declare @testStatus VARCHAR(50)    Declare @tempTable Table (testStatus VARCHAR(50))    IF(@unitCodeChild IS NULL OR @unitCodeChild = '')  BEGIN   Insert into @tempTable   SELECT CASE WHEN  dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) = '' THEN 0 else        (CASE  WHEN  CAST((CASE WHEN dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) <> '' THEN  SUBSTRING(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2),1, LEN(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2)) -1) ELSE '0' END) AS FLOAT) > (ISNULL((SELECT TOP 1 WeightScore FROM dbo.AIElearning_ClassItem WHERE Type = 3 AND ClassId =c.ClassId ORDER BY id DESC),0))  THEN 2 ELSE 1 END) END AS [KetQuaDat]      from AIElearning_ClassUser c  join  AISystem_UserInfo i on i.UserId = c.UserID       JOIN dbo.AIElearning_Class cls ON c.ClassId = cls.Id   JOIN dbo.AISystem_Subject s ON cls.SubjectId = s.Id    WHERE s.UnitCode = @unitCode   END  ELSE  BEGIN   Insert into @tempTable   SELECT CASE WHEN  dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) = '' THEN 0 else        (CASE  WHEN  CAST((CASE WHEN dbo.GetMarkResurl(c.ClassId,c.UserId,3,2) <> '' THEN  SUBSTRING(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2),1, LEN(dbo.GetMarkResurl(c.ClassId,c.UserId,3,2)) -1) ELSE '0' END) AS FLOAT) > (ISNULL((SELECT TOP 1 WeightScore FROM dbo.AIElearning_ClassItem WHERE Type = 3 AND ClassId =c.ClassId ORDER BY id DESC),0))  THEN 2 ELSE 1 END) END AS [KetQuaDat]      from AIElearning_ClassUser c  join  AISystem_UserInfo i on i.UserId = c.UserID       JOIN dbo.AIElearning_Class cls ON c.ClassId = cls.Id   JOIN dbo.AISystem_Subject s ON cls.SubjectId = s.Id    WHERE s.UnitCode = @unitCode AND s.UnitCodeChild = @unitCodeChild  END         Select  @testStatus = CONCAT(COUNT(CASE WHEN testStatus = 0 THEN 1 ELSE NULL END),'/',COUNT(CASE WHEN testStatus = 1 THEN 1 ELSE NULL END),'/',COUNT(CASE WHEN testStatus = 2 THEN 1 ELSE NULL END)) from @tempTable     RETURN @testStatus  END  "
1363,AIElearning_ClassUser_TotalTime_GetUnit,"CREATE proc [dbo].[AIElearning_ClassUser_TotalTime_GetUnit]  @UnitCode nvarchar(50),  @Year int  as  select * from AIElearning_ClassUser_TotalTime where UnitCode=@UnitCode and ReportYear=@Year    "
1364,UpdateTabModuleVersionByModule,"CREATE PROCEDURE dbo.[UpdateTabModuleVersionByModule]      @ModuleID int  AS      UPDATE dbo.TabModules          SET VersionGuid = NEWID(),     LastModifiedOnDate = GETDATE()      WHERE  ModuleID = @ModuleID"
1365,AIElearning_Lecturers_DeleteIncludeInClass,CREATE PROC [dbo].[AIElearning_Lecturers_DeleteIncludeInClass]   @UserId INT  AS -- Xoa giang vien trong lop hoc      DELETE  dbo.AIElearning_Class_Lecturers      WHERE   Id IN ( SELECT  cl.Id                      FROM    dbo.AIElearning_Class_Lecturers cl                              INNER JOIN dbo.AIElearning_Lecturers l ON l.Id = cl.LecturersId                              INNER JOIN dbo.AISystem_UserInfo u ON l.UserInfoId = u.Id                      WHERE   u.UserId = @UserId )  -- Xoa giang vien theo userid      DELETE  AIElearning_Lecturers      WHERE   Id IN ( SELECT  l.Id                      FROM    dbo.AIElearning_Lecturers l                              INNER JOIN dbo.AISystem_UserInfo u ON l.UserInfoId = u.Id                      WHERE   u.UserId = @UserId )
1366,AIElearning_SurveyUser_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_SurveyUser_GetsBySearchCount]  @surveyId int,  @Keyword nvarchar(250),  @status int,  @userId int  as  -- [AIElearning_SurveyUser_GetsBySearchCount] 1035,'',0,0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  DECLARE @classId AS int  select @classId = ClassId from AIElearning_Survey where Id = @surveyId    CREATE TABLE #AIElearning_SurveyUser(UserId int,CompleteStatus int)  INSERT INTO #AIElearning_SurveyUser  SELECT u.UserID,1  from AIElearning_ClassUser c inner join Users u   on u.UserID = c.UserId inner join AISystem_UserInfo i on i.UserId = u.UserID  where c.classid = @classId and c.Status = 1 and c.UserId not in (SELECT UserID from AIElearning_SurveyUser where SurveyId = @surveyId)  INSERT INTO #AIElearning_SurveyUser select UserId,CompleteStatus from AIElearning_SurveyUser  where SurveyId = @surveyId    if(@Keyword<>'')   set @Condition=@Condition+' AND FREETEXT(u.*,'''+@Keyword+''')'  if(@status > 0)   set @Condition=@Condition+' AND CompleteStatus = '+ str(@status)  if(@userId > 0)   set @Condition=@Condition+' AND su.UserId = '+ str(@userId)  exec('  WITH #AIElearning_SurveyUserAll AS (SELECT ROW_NUMBER() OVER (ORDER BY u.UserId desc) AS RowNumber, u.*, su.CompleteStatus from AISystem_UserInfo u inner join #AIElearning_SurveyUser su   on u.UserId = su.UserId where '+@Condition+'  )     SELECT count(*) FROM #AIElearning_SurveyUserAll ' )    "
1367,DeleteUsersOnline,"CREATE PROCEDURE dbo.DeleteUsersOnline   @TimeWindow int   AS  BEGIN      DECLARE @dt datetime   SET @dt = DATEADD(MINUTE, -@TimeWindow, GETDATE())     DELETE FROM dbo.AnonymousUsers WHERE LastActiveDate < @dt     DELETE FROM dbo.UsersOnline WHERE LastActiveDate < @dt  END"
1368,CoreMessaging_GetSubscriptionsByUser,"CREATE PROCEDURE dbo.[CoreMessaging_GetSubscriptionsByUser]   @PortalId int,   @UserId int,   @SubscriptionTypeID int  AS  BEGIN   SELECT *   FROM dbo.[CoreMessaging_Subscriptions]   WHERE      (( @PortalId is null and PortalId is null) or (PortalId = @PortalId))     AND UserId = @UserId     AND (@SubscriptionTypeID IS NULL OR SubscriptionTypeID = @SubscriptionTypeID)  END"
1369,AIElearning_class_GetCode,CREATE proc [dbo].[AIElearning_class_GetCode]  @code nvarchar(50)  as   SELECT top(1)*   from AIElearning_class where Code=@code
1370,AISystem_Category_Subject_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_Subject_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Subject       )         SELECT     *   FROM #AISystem_Category_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
1371,InsertSearchStopWords,"CREATE PROCEDURE dbo.[InsertSearchStopWords]   @StopWords    nvarchar(MAX),   @CreatedByUserID   int,   @PortalID    int,   @CultureCode  nvarchar(50)  AS  BEGIN    INSERT INTO dbo.[SearchStopWords](    [StopWords],      [CreatedByUserID],      [CreatedOnDate],      [LastModifiedByUserID],      [LastModifiedOnDate],    [PortalID],    [CultureCode]   ) VALUES (    @StopWords,    @CreatedByUserID,       GETUTCDATE(),    @CreatedByUserID,    GETUTCDATE(),    @PortalID,    @CultureCode   )      SELECT SCOPE_IDENTITY()  END"
1372,AIElearning_TestCampaign_RegistorUserTest_UpdateIsTestNow,"CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUserTest_UpdateIsTestNow]  @Id INT,  @IsTestNow BIT,  @ConnId nvarchar(150),  @lastIP nvarchar(150)  AS  UPDATE  AIElearning_TestCampaign_RegistorUserTest SET IsTestNow=@IsTestNow,LastIP=@lastIP,LastConnectionId=@ConnId WHERE Id=@Id  "
1373,AISystem_Category_UpdateChildId,"    CREATE PROCEDURE [dbo].[AISystem_Category_UpdateChildId]  @Id int,  @ChildId nvarchar(max)  AS  UPDATE AISystem_Category SET  ChildId=@ChildId WHERE Id=@Id    "
1374,AIElearning_Class_Hot_GetsByCategoryId,"CREATE proc [dbo].[AIElearning_Class_Hot_GetsByCategoryId]  @CategoryId int  as  -- AIElearning_Class_Hot_GetsByCategoryId 14  SELECT        h.*, c.Type, c.Name, c.Code, c.Avatar, c.Price  FROM            AIElearning_Class_Hot AS h INNER JOIN                           AIElearning_Class AS c ON h.ClassId = c.Id          where h.CategoryId = @CategoryId          Order by h.OrderNo    SET QUOTED_IDENTIFIER OFF     "
1375,AddTabAfter,"CREATE PROCEDURE dbo.[AddTabAfter]      @AfterTabID             Int,      @ContentItemID          Int,      @PortalID               Int,      @UniqueID               UniqueIdentifier,      @VersionGuid            UniqueIdentifier,      @DefaultLanguageGuid    UniqueIdentifier,      @LocalizedVersionGuid   UniqueIdentifier,      @TabName                nVarChar(200),      @IsVisible              Bit,      @DisableLink            Bit,      @ParentID               Int,      @IconFile               nVarChar(255),      @IconFileLarge          nVarChar(255),      @Title                  nVarChar(200),      @Description            nVarChar(500),      @KeyWords               nVarChar(500),      @Url                    nVarChar(255),      @SkinSrc                nVarChar(200),      @ContainerSrc           nVarChar(200),      @StartDate              DateTime,      @EndDate                DateTime,      @RefreshInterval        Int,      @PageHeadText           nVarChar(max),      @IsSecure               Bit,      @PermanentRedirect      Bit,      @SiteMapPriority        Float,      @CreatedByUserID        Int,      @CultureCode            nVarChar( 10),      @IsSystem               Bit  AS  BEGIN      DECLARE @TabId    Int      DECLARE @TabOrder Int = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @AfterTabID)        -- Update TabOrders for all Tabs higher than @TabOrder      UPDATE dbo.Tabs         SET TabOrder = TabOrder + 2       WHERE (ParentId = @ParentID OR (ParentId IS NULL AND @ParentID IS NULL))         AND TabOrder > @TabOrder         AND (PortalId = @PortalID OR (PortalId IS NULL AND @PortalID IS NULL))        -- Create Tab      SET @TabOrder = @TabOrder + 2      EXECUTE @TabId = dbo.AddTab                          @ContentItemID,                          @PortalID,                          @TabOrder,                          @UniqueId,                          @VersionGuid,                          @DefaultLanguageGuid,                          @LocalizedVersionGuid,                          @TabName,                          @IsVisible,                          @DisableLink,                          @ParentID,                          @IconFile,                          @IconFileLarge,                          @Title,                          @Description,                          @KeyWords,                          @Url,                          @SkinSrc,                          @ContainerSrc,                          @StartDate,                          @EndDate,                          @RefreshInterval,                          @PageHeadText,                          @IsSecure,                          @PermanentRedirect,                          @SiteMapPriority,                          @CreatedByUserID,                          @CultureCode,                          @IsSystem;        -- Update Content Item      UPDATE dbo.ContentItems         SET TabID = @TabId       WHERE ContentItemID = @ContentItemID;        SELECT @TabId;  END /* Procedure */"
1376,AISystem_Category_Campaign_GetsBySearchCount,    CREATE PROC [dbo].[AISystem_Category_Campaign_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Campaign    SET QUOTED_IDENTIFIER OFF             
1377,GetUsersAdvancedSearch,"CREATE PROCEDURE dbo.[GetUsersAdvancedSearch]   (      @PortalID int,                          -- portal                      @UserId int,                            -- for determining correct visibility permissions      @FilterUserId int,                      -- for filtering relationships on          @FilterRoleId int,                      -- for filtering by roles      @RelationshipTypeId int,                -- for filtering by relationships      @IsAdmin bit,                           -- determines visibility      @PageSize int,                          -- page size      @PageIndex int,                         -- 0 based page index      @SortBy nvarchar(100),                  -- sort field      @SortAscending bit,                     -- sort flag indicating whether sort is asc or desc      @PropertyNames nvarchar(max),           -- list of property names to filter      @PropertyValues nvarchar(max)           -- list of property values to filter  )  AS  BEGIN      -- Setup Top XX      DECLARE @topSql nvarchar(20) SET @topSql = ''      IF @PageSize > -1 BEGIN SET @topSql = ' TOP ' + CONVERT(nvarchar(20), @PageSize) END                        -- Setup Specific Page      DECLARE @minRowNumberSql nvarchar(20) SET @minRowNumberSql =  CONVERT(nvarchar(20), ((@PageIndex * @PageSize) + 1))      -- Setup Pivot Field List      DECLARE @pivotSql nvarchar(max) SELECT @pivotSql = dbo.GetProfileFieldSql(@PortalID, '')        -- Get User specific columns      DECLARE @UserColumns TABLE(ColumnName NVARCHAR(100))      INSERT INTO @UserColumns SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'vw_Users' AND TABLE_SCHEMA = REPLACE('dbo.', '.', '')        -- Lists Filters names and values into tables      DECLARE @PropertyNamesTable TABLE (RowNumber INT, RowValue nvarchar(MAX))      DECLARE @PropertyValuesTable TABLE (RowNumber INT, RowValue nvarchar(MAX))      INSERT INTO @PropertyNamesTable SELECT * FROM dbo.ConvertListToTable(',', @PropertyNames)                            INSERT INTO @PropertyValuesTable SELECT * FROM dbo.ConvertListToTable(',', @PropertyValues)                        -- Gets filters that are on the User rather than Profile Properties      DECLARE @UserFiltersTable TABLE (RowNumber Int, RowValue NVARCHAR(MAX))      INSERT INTO @UserFiltersTable SELECT * FROM dbo.ConvertListToTable(',',@PropertyNames) WHERE RowValue IN (SELECT * FROM @UserColumns)          DECLARE @sql nvarchar(max) SET @sql = ''      DECLARE @filterSql nvarchar(max)SET @filterSql = ''        -- ///////////////////////////////////////////////////      -- FILTERING by PROFILE PROPERTY or USER PROPERTY      -- ///////////////////////////////////////////////////      --IF @PropertyNames IS NOT NULL AND @PropertyNames <> ''      IF ((SELECT COUNT(*) FROM @PropertyNamesTable) > 0) AND ((SELECT COUNT(*) FROM @PropertyValuesTable)> 0)        BEGIN              DECLARE @propertyFilter nvarchar(max)              DECLARE @userFilter nvarchar(max)              DECLARE @userFilterJoin nvarchar(max) SET @userFilterJoin = ''              DECLARE @profilePropertyCount INT              DECLARE @userFilterCount INT              DECLARE @propertyAndUserFilter nvarchar(10) SET @propertyAndUserFilter = ''              DECLARE @groupBy NVARCHAR(300)                -- Filters on Profile Properties                  ;WITH CTE_PropertyNames(RowNumber, RowValue) AS              (              SELECT * FROM @PropertyNamesTable                              WHERE RowValue NOT IN (SELECT ColumnName FROM @UserColumns)),              CTE_PropertyValues(RowNumber, RowValue) AS              (              SELECT * FROM @PropertyValuesTable                              WHERE RowValue NOT IN (SELECT ColumnName FROM @UserColumns))                SELECT @propertyFilter = COALESCE(@propertyFilter + ' OR ' , ' ')                                           + ' (PropertyName=''' + N.RowValue                                           + ''' AND ((PropertyValue LIKE ''' + V.RowValue"
1378,GetUsersAdvancedSearch," +'%'') OR (PropertyValue LIKE ''% ' + V.RowValue +'%'')))'              FROM CTE_PropertyNames AS N INNER JOIN CTE_PropertyValues AS V ON N.RowNumber = V.RowNumber                                                -- Filters on User Property                                         SELECT @userFilter = COALESCE(@userFilter + ' AND ', ' ')              + ' ((u.' + N.RowValue + ' LIKE ''' + V.RowValue +'%'') OR (u.' + N.RowValue + ' LIKE ''% ' + V.RowValue +'%'')) '              FROM @UserFiltersTable AS N  INNER JOIN @PropertyValuesTable AS V ON N.RowNumber = V.RowNumber                                                SELECT @userFilterCount = COUNT(*) FROM @UserFiltersTable              IF @userFilterCount > 0 BEGIN SET @userFilterJoin = ' INNER JOIN vw_Users u ON u.UserId = p.UserId ' END                -- Determining the Group By Clause -- dependant on types of filters used              SELECT @profilePropertyCount = COUNT(*) FROM dbo.ConvertListToTable(',', @PropertyNames)              WHERE RowValue IN (SELECT PropertyName FROM dbo.ProfilePropertyDefinition WHERE PortalID = @PortalId)              AND RowValue NOT IN (SELECT ColumnName FROM @UserColumns)                IF @profilePropertyCount > 0                  BEGIN SET @groupBy = ' GROUP BY p.UserId HAVING COUNT(*) = ' + CONVERT(nvarchar(20),@profilePropertyCount ) END              ELSE                  BEGIN SET @groupBy = ' GROUP BY p.UserId HAVING COUNT(*) > 0 '     END                IF ( @profilePropertyCount > 0 AND @userFilterCount > 0)              BEGIN SET @propertyAndUserFilter = ' AND ' END                -- CREATE FINAL FILTER              SET @filterSql = ' CREATE TABLE #MatchingUsers (UserId int, occurances int) INSERT INTO #MatchingUsers SELECT p.UserID, COUNT(*) AS occurances'                                           + ' FROM dbo.vw_profile p ' + @userFilterJoin                                          + ' WHERE ' + COALESCE(' ( ' + @propertyFilter + ') ', ' ') + @propertyAndUserFilter + COALESCE(@userFilter, ' ')             + ' AND ((Visibility = 0) OR (Visibility = 1 AND ' + CONVERT(nvarchar(20), @UserId) + ' > 0) OR (Visibility = 2 AND ' + CONVERT(nvarchar(20), @IsAdmin) + ' = 1))'                                           + @groupBy    END            -- ///////////////////////////////////////////////////                -- SETUP ROLE AND RELATIONSHIP FILTERS          -- ///////////////////////////////////////////////////          DECLARE @roleAndRelationshipFilter nvarchar(1000)          DECLARE @roleFilter nvarchar(500) SET @roleFilter = ''          DECLARE @relationshipFilter nvarchar(1000) SET @relationshipFilter = ''          DECLARE @roleAndRelationshipFlag bit SET @roleAndRelationshipFlag  = 0          DECLARE @RoleAndRelationshipSelect nvarchar(100) SET @RoleAndRelationshipSelect = ''                                            -- Filter by Role          IF @FilterRoleId <> -1               BEGIN                  SET @roleAndRelationshipFlag = 1                  SET @roleFilter = ' JOIN dbo.UserRoles UR ON U.UserID = UR.UserID AND UR.Status = 1 '       + ' AND (UR.EffectiveDate < GETDATE() OR UR.EffectiveDate IS NULL) '                      + ' AND (UR.ExpiryDate > GETDATE() OR UR.ExpiryDate IS NULL) AND UR.RoleID = ' + CONVERT(nvarchar(20), @FilterRoleId)              END            -- Filter by Relationship          IF @RelationshipTypeId <> -1                BEGIN                  SET @roleAndRelationshipFlag = 1                  SET @relationshipFilter = ' JOIN dbo.Relationships REL ON REL.PortalID = ' + CONVERT(nvarchar(20), @PortalID)                                              + ' AND RelationshipTypeID = ' + CONVERT(nvarchar(20), @RelationshipTypeId)                                               + ' JOIN dbo.UserRelationships UREL ON REL.RelationshipID = UREL.RelationshipID AND                                              ((UREL.UserID = ' + CONVERT(nvarchar(20), @FilterUserId) + ' AND UREL.RelatedUserID = U.UserID) OR                 "
1379,GetUsersAdvancedSearch,"                             (UREL.UserID = U.UserID AND UREL.RelatedUserID = ' + CONVERT(nvarchar(20), @FilterUserId) + '))'                                              + ' WHERE UREL.Status = 2'              END             IF @roleAndRelationshipFlag = 1 BEGIN SET @RoleAndRelationshipSelect = ' AND s.UserId IN (SELECT userID FROM  RoleAndRelationUsers) ' END            SET @roleAndRelationshipFilter =  ', RoleAndRelationUsers AS ( SELECT U.userId FROM dbo.vw_Users U ' + @roleFilter + @relationshipFilter + ' )'             -- ///////////////////////////////////////////////////            -- SET UP SORT          -- ///////////////////////////////////////////////////          DECLARE @sortSql nvarchar(1000) SET @sortSql = ''          DECLARE @propertySort nvarchar(1000) SET @propertySort = ''          DECLARE @filterJoin nvarchar(100) SET @filterJoin = ''          DECLARE @filterSortSql nvarchar(1000) SET @filterSortSql = ''          DECLARE @sortByUserProperty BIT                   SELECT @sortByUserProperty = COUNT(*) FROM @UserColumns WHERE ColumnName = @SortBy            IF ( @profilePropertyCount > 0 OR @userFilterCount > 0)           BEGIN SET @filterJoin = ' INNER JOIN #MatchingUsers m ON m.UserID = s.UserID ' END            -- Determine the Type of Sort          IF (@SortBy IS NOT NULL AND @SortBy <> '') AND @sortByUserProperty <> 1           BEGIN -- Sort By Profile Property                  SET @sortSql = dbo.GetSortSql(@SortBy,@SortAscending,'UserID')                  SET @propertySort = dbo.GetSortSql('PropertyValue',@SortAscending,'UserID')                  SET @filterSortSql = ' ;WITH SortedUsers AS ( SELECT ROW_NUMBER() OVER( ' + @propertySort + ' ) AS RowNumber, *  '                                                   + ' FROM dbo.vw_Profile WHERE PortalId = ' + CONVERT(nvarchar(20), @PortalID) + ' AND PropertyName = ''' + @SortBy + ''' )'                                                  + ' , MatchingSorted AS ( SELECT ROW_NUMBER() OVER(ORDER BY [RowNumber]) AS RowNumber, s.UserId FROM SortedUsers s '                                                  + @filterJoin + ' ) '           END          ELSE        BEGIN                     -- Sort By User Property                  IF @sortByUserProperty = 1 BEGIN SET @sortSql = dbo.GetSortSql(@SortBy,@SortAscending,'UserID')END                                                    -- Default: Sort By UserID                  ELSE BEGIN SET @sortSql = dbo.GetSortSql('UserID',@SortAscending,'UserID') END                                          SET @filterSortSql = ' ;WITH SortedUsers AS ( SELECT ROW_NUMBER() OVER( ' + @sortSql + ' ) AS RowNumber, * '                                                  + ' FROM dbo.vw_Users WHERE (PortalID = ' + CONVERT(nvarchar(20), @PortalID) + ' OR PortalID Is NULL) AND IsDeleted = 0)'                                                  + ' , MatchingSorted AS ( SELECT ROW_NUMBER() OVER(ORDER BY [RowNumber]) AS RowNumber, s.UserId FROM SortedUsers s '                                                  + @filterJoin + ' ) '           END      -- Check if any Profile Property Definitions exist for this portal    IF @pivotSql is not null     BEGIN      -- SELECT with PIVOT      SET @pivotSql = 'SELECT * FROM (SELECT * FROM PivotedUsers PIVOT (MAX(PropertyValue) for PropertyName in (' + @pivotSql + ') ) as pivotTable) T '     END    ELSE     BEGIN      -- SELECT with DISTINCT      SET @pivotSql = 'SELECT distinct UserID, PortalID, Username, Email, DisplayName, IsSuperUser, IsDeleted, AffiliateID, UpdatePassword, Authorised FROM PivotedUsers '     END            -- ///////////////////////////////////////////////////          -- CREATE FINAL QUERY          -- ///////////////////////////////////////////////////          SET @sql = @filterSql                  + ' DECLARE @TempUsers TABLE (SortOrder INT, UserID INT) '                  + @filterSortSql                  + @roleAndRelationshipFilter                  + ' INSERT INTO @TempUsers SELECT ' + @topS"
1380,GetUsersAdvancedSearch,"ql + ' * FROM (SELECT '                  + ' ROW_NUMBER() OVER ( ORDER BY [RowNumber] ) AS RowNumber, s.UserId FROM MatchingSorted s '                   + ' WHERE 1=1 ' + @roleAndRelationshipSelect      + ') t WHERE RowNumber >= '+ @minRowNumberSql                  + ' ;WITH PivotedUsers AS ( SELECT U.UserID, U.PortalID, U.Username, U.Email, U.DisplayName, U.IsSuperUser, U.IsDeleted, U.CreatedOnDate,                                                          U.AffiliateID, U.UpdatePassword, U.Authorised, Prop.PropertyName,                                                  CASE                                                      WHEN (P.Visibility = 0) THEN P.PropertyValue                                                      WHEN (P.Visibility = 1 AND ' + CONVERT(nvarchar(20), @IsAdmin) + ' = 1) THEN P.PropertyValue                                                      WHEN (P.Visibility = 1 AND ' + CONVERT(nvarchar(20), @IsAdmin) + ' = 0 AND ' + CONVERT(nvarchar(20), @UserId) + ' > 0) THEN P.PropertyValue                                                      WHEN U.UserID = ' + CONVERT(nvarchar(20), @UserId) + ' OR (P.Visibility = 2 AND ' + CONVERT(nvarchar(20), @IsAdmin) + ' = 1) THEN P.PropertyValue                                                      ELSE NULL                                                  END AS PropertyValue                                              FROM   dbo.vw_Users AS U                                                  INNER JOIN dbo.UserProfile AS P ON U.UserID = P.UserID                                                  LEFT OUTER JOIN dbo.ProfilePropertyDefinition AS Prop ON                                                   (Prop.PropertyDefinitionID = P.PropertyDefinitionID and Prop.Deleted = 0 and Prop.PortalID = ' + CONVERT(nvarchar(20), @PortalID) + ')                                              WHERE U.UserId IN (SELECT UserId FROM @TempUsers) AND (U.PortalId = ' + CONVERT(nvarchar(20), @PortalID) + ' OR U.PortalId IS NULL)                                              )' +                  @pivotSql + @sortSql + ' DROP TABLE #MatchingUsers'                       EXEC(@sql)  END"
1381,AIElearning_SurveyUser_GetsBySurveyId,create proc [dbo].[AIElearning_SurveyUser_GetsBySurveyId]   @surveyId int  as  begin  select * from AIElearning_SurveyUser where SurveyId= @surveyId  end  
1382,AddScheduleHistory,"CREATE PROCEDURE dbo.AddScheduleHistory  @ScheduleID int,  @StartDate datetime,  @Server varchar(150)  AS  INSERT INTO dbo.ScheduleHistory  (ScheduleID,  StartDate,  Server)  VALUES  (@ScheduleID,  @StartDate,  @Server)    select SCOPE_IDENTITY()"
1383,CoreMessaging_GetSubscriptionsByContent,"CREATE PROCEDURE dbo.[CoreMessaging_GetSubscriptionsByContent]   @PortalId int,   @SubscriptionTypeID int,   @ObjectKey NVARCHAR(255)  AS  BEGIN   SELECT *   FROM dbo.[CoreMessaging_Subscriptions]   WHERE     (( @PortalId is null and PortalId is null) or (PortalId = @PortalId))    AND SubscriptionTypeID = @SubscriptionTypeID    AND ObjectKey = @ObjectKey  END"
1384,AISystem_Category_Talent_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_Talent_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  -- [AISystem_Category_Talent_GetByTitle] 'Nang luc 1',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_Talent AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')    "
1385,GetStatus,create FUNCTION [dbo].[GetStatus]  (  @type int  )  RETURNS  nvarchar(Max)  AS  BEGIN  DECLARE  @Ketqua nvarchar(Max);    if(@type='1')  SET @Ketqua=N'Hoàn thành'  if(@type='2')  SET @Ketqua=N'Phát sinh thêm'  if(@type='3')  SET @Ketqua=N'Hoãn lại'  if(@type='4')  SET @Ketqua=N'Hủy bỏ'   RETURN @Ketqua  END
1386,UpdateSearchStopWords,"CREATE PROCEDURE dbo.[UpdateSearchStopWords]   @StopWordsID  int,   @StopWords    nvarchar(MAX),   @LastModifiedByUserID  int  AS  BEGIN    UPDATE dbo.SearchStopWords     SET          StopWords = @StopWords,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate = GETUTCDATE()     WHERE StopWordsID = @StopWordsID  END"
1387,AISystem_Category_TeachingTopic_GetInfoByCode,CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_TeachingTopic_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_TeachingTopic where   Code = @Code  SET QUOTED_IDENTIFIER OFF  
1388,AISystem_UserInfo_CheckPhone,"        CREATE PROC [dbo].[AISystem_UserInfo_CheckPhone]  @Phone nvarchar(150),  @Username nvarchar(150)  AS  SELECT COUNT(ID) FROM AISystem_UserInfo where Phone=@Phone and (Username<>@Username or @Username='')    "
1389,AISystem_Rank_GetsBySearchCount,create proc [dbo].[AISystem_Rank_GetsBySearchCount]  as  select COUNT(*) from AISystem_Rank    SET QUOTED_IDENTIFIER OFF  
1390,UpdateEventLogConfig,"CREATE PROCEDURE dbo.UpdateEventLogConfig   @ID int,   @LogTypeKey nvarchar(35),   @LogTypePortalID int,   @LoggingIsActive bit,   @KeepMostRecent int,   @EmailNotificationIsActive bit,   @NotificationThreshold int,   @NotificationThresholdTime int,   @NotificationThresholdTimeType int,   @MailFromAddress nvarchar(50),   @MailToAddress nvarchar(50)  AS  UPDATE dbo.EventLogConfig  SET  LogTypeKey = @LogTypeKey,   LogTypePortalID = @LogTypePortalID,   LoggingIsActive = @LoggingIsActive,   KeepMostRecent = @KeepMostRecent,   EmailNotificationIsActive = @EmailNotificationIsActive,   NotificationThreshold = @NotificationThreshold,   NotificationThresholdTime = @NotificationThresholdTime,   NotificationThresholdTimeType = @NotificationThresholdTimeType,   MailFromAddress = @MailFromAddress,   MailToAddress = @MailToAddress  WHERE ID = @ID"
1391,AIElearning_Class_Hot_GetsBySearch,"  create proc [dbo].[AIElearning_Class_Hot_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Class_Hot AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_Hot       )         SELECT     *   FROM #AIElearning_Class_Hot   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1392,GetPartner,"create FUNCTION [dbo].[GetPartner]   (  @type int,  @id int  )  RETURNS  nvarchar(Max)  AS  BEGIN  DECLARE  @Ketqua nvarchar(Max);  SET @Ketqua=''  if(@type='1')  SET @Ketqua=CONCAT(@Ketqua, N'Nội bộ')  else  SET @Ketqua=CONCAT(@Ketqua, (select name from AISystem_Partner where id=@id))   RETURN @Ketqua  END"
1393,AddTabBefore,"CREATE PROCEDURE dbo.[AddTabBefore]      @BeforeTabID            Int,      @ContentItemID          Int,      @PortalID               Int,      @UniqueID               UniqueIdentifier,      @VersionGuid            UniqueIdentifier,      @DefaultLanguageGuid    UniqueIdentifier,      @LocalizedVersionGuid   UniqueIdentifier,      @TabName                nVarChar(200),      @IsVisible              Bit,      @DisableLink            Bit,      @ParentID               Int,      @IconFile               nVarChar(255),      @IconFileLarge          nVarChar(255),      @Title                  nVarChar(200),      @Description            nVarChar(500),      @KeyWords               nVarChar(500),      @Url                    nVarChar(255),      @SkinSrc                nVarChar(200),      @ContainerSrc           nVarChar(200),      @StartDate              DateTime,      @EndDate                DateTime,      @RefreshInterval        Int,      @PageHeadText           nVarChar(max),      @IsSecure               Bit,      @PermanentRedirect      Bit,      @SiteMapPriority        Float,      @CreatedByUserID        Int,      @CultureCode            nVarChar( 10),      @IsSystem               Bit  AS  BEGIN      DECLARE @TabID    Int      DECLARE @TabOrder Int = (SELECT TabOrder FROM dbo.Tabs WHERE TabID = @BeforeTabID);        -- Update TabOrders for all Tabs higher than @TabOrder      UPDATE dbo.Tabs         SET TabOrder = TabOrder + 2       WHERE (ParentId = @ParentId OR (ParentID IS NULL AND @ParentID IS NULL))         AND TabOrder >= @TabOrder         AND (PortalId = @PortalId OR (PortalID IS NULL AND @PortalID IS NULL))        -- Create Tab      EXECUTE @TabId = dbo.AddTab                          @ContentItemID,                          @PortalID,                          @TabOrder,                          @UniqueID,                          @VersionGuid,                          @DefaultLanguageGuid,                          @LocalizedVersionGuid,                          @TabName,                          @IsVisible,                          @DisableLink,                          @ParentID,                          @IconFile,                          @IconFileLarge,                          @Title,                          @Description,                          @KeyWords,                          @Url,                          @SkinSrc,                          @ContainerSrc,                          @StartDate,                          @EndDate,                          @RefreshInterval,                          @PageHeadText,                          @IsSecure,                          @PermanentRedirect,                          @SiteMapPriority,                          @CreatedByUserID,                          @CultureCode,                          @IsSystem;        -- Update Content Item      UPDATE dbo.ContentItems         SET TabID = @TabId       WHERE ContentItemID = @ContentItemID;        SELECT @TabId;  END /* Procedure */"
1394,AISystem_Category_Question_GetAllChildAndIncludeParentID_WithMaxLevel,"  CREATE PROC [dbo].[AISystem_Category_Question_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50)  AS    -- exec AISystem_Category_Question_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Question.Id,      0,      AISystem_Category_Question.ParentId,      AISystem_Category_Question.Title,      STR(AISystem_Category_Question.OrderNo),      AISystem_Category_Question.Title,      AISystem_Category_Question.Code          FROM      AISystem_Category_Question    WHERE      (AISystem_Category_Question.Status=@Status OR @Status = -1)       AND (AISystem_Category_Question.Id = @ParentId)      AND AISystem_Category_Question.LanguageId = @LanguageId      AND AISystem_Category_Question.PortalId = @portalId      AND (AISystem_Category_Question.UnitCode = @UnitCode  )   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Question.Id,      0,      AISystem_Category_Question.ParentId,      AISystem_Category_Question.Title,      STR(AISystem_Category_Question.OrderNo),      AISystem_Category_Question.Title,      AISystem_Category_Question.Code          FROM      AISystem_Category_Question    WHERE      (AISystem_Category_Question.Status=@Status OR @Status = -1)       AND (AISystem_Category_Question.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Question.ParentId IS NULL or AISystem_Category_Question.ParentId <=0))      AND AISystem_Category_Question.LanguageId = @LanguageId      AND AISystem_Category_Question.PortalId = @portalId      AND (AISystem_Category_Question.UnitCode = @unitCode  )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_Question  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitCode >-1)  -- set @Condition=@Condition+' AND UnitCode='+str(@UnitCode)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction            "
1395,PersonaBar_SavePersonaBarMenu,"CREATE PROCEDURE dbo.[PersonaBar_SavePersonaBarMenu]      @Identifier                 NVARCHAR(50),      @ModuleName                 NVARCHAR(50),      @FolderName               NVARCHAR(50),      @Controller                 NVARCHAR(260),      @ResourceKey                NVARCHAR(50),      @Path                       NVARCHAR(260),      @Link                       NVARCHAR(260),      @CssClass                   NVARCHAR(50),      @ParentId                   INT,      @Order                      INT,      @AllowHost                  BIT,      @Enabled                    BIT,      @CurrentUserId              INT,      @IconFile                   NVARCHAR(260) = ''  AS  BEGIN      IF EXISTS(SELECT Identifier FROM dbo.[PersonaBarMenu] WHERE Identifier = @Identifier)      BEGIN          UPDATE dbo.[PersonaBarMenu]              SET                   ModuleName = @ModuleName,                  FolderName = @FolderName,                  ResourceKey = @ResourceKey,                  Path = @Path,                  Link = @Link,                  CssClass = @CssClass,                  IconFile = @IconFile,                  ParentId = @ParentId,                  [Order] = @Order,                  AllowHost = @AllowHost,                  Enabled = @Enabled,                  LastModifiedByUserId = CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,                  LastModifiedOnDate = GETDATE()              WHERE Identifier = @Identifier                SELECT MenuId FROM dbo.[PersonaBarMenu] WHERE Identifier = @Identifier      END      ELSE      BEGIN          INSERT INTO dbo.[PersonaBarMenu] (              [Identifier],              [ModuleName],              [FolderName],              [Controller],              [ResourceKey],              [Path],              [Link],              [CssClass],              [IconFile],              [ParentId],              [Order],              [AllowHost],              [Enabled],              [CreatedByUserId],              [CreatedOnDate],              [LastModifiedByUserId],              [LastModifiedOnDate]          ) VALUES (              @Identifier,              @ModuleName,              @FolderName,              @Controller,              @ResourceKey,              @Path,              @Link,              @CssClass,              @IconFile,              @ParentId,              @Order,              @AllowHost,              @Enabled,              CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,              GETDATE(),              CASE WHEN @CurrentUserId = -1 THEN NULL ELSE @CurrentUserId END,              GETDATE()          )            SELECT SCOPE_IDENTITY()      END  END"
1396,AISystem_Category_Unit_GetsBySearchCount,create proc AISystem_Category_Unit_GetsBySearchCount  as  select COUNT(*) from AISystem_Category_Unit    SET QUOTED_IDENTIFIER OFF   
1397,AIElearning_Lecturers_GetsBySearchNotInClass,"CREATE proc [dbo].[AIElearning_Lecturers_GetsBySearchNotInClass]  @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @Status int,  @unitCode nvarchar(50),  @Type int,  @ClassId INT,  @ParentType INT  as  --   AIElearning_Lecturers_GetsBySearchNotInClass 1,10,'s',-1,'',-1, 9  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(i.*,'''+@Keyword+''')'   set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode = '''+@Keyword+''') '  if(@Status>-1)   set @Condition=@Condition+' AND l.Status='+str(@Status)  if(@unitCode <> '-1' and @unitCode <> '')   set @Condition=@Condition+' AND i.UnitCode ='''+(@unitCode)+''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)   if(@ClassId>-1)   set @Condition=@Condition+ ' AND l.Id not in (select LecturersId from AIElearning_Class_Lecturers where ClassId =' + str(@ClassId) +' AND ParentType =' + str(@ParentType) +')'  exec('  WITH #AIElearning_Lecturers AS(     SELECT ROW_NUMBER() OVER (ORDER BY l.Id DESC) AS RowNumber, l.Id, i.Avatar, i.Username, i.Displayname, i.Sex, i.BirthDate, i.Address, l.Literacy, l.Type, l.Note, l.Status, i.UnitCode, i.MasterCode    from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+')   SELECT *   FROM #AIElearning_Lecturers   where RowNumber between '+ @start +'  and  '+ @end +'   ')    "
1398,AIElearning_SurveyUser_GetsBySurveyIdAndUserId,"CREATE proc [dbo].[AIElearning_SurveyUser_GetsBySurveyIdAndUserId]  @surveyId int,  @userId int  as  -- AIElearning_SurveyUser_GetsBySurveyIdAndUserId 24,1043  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@surveyId>0)   set @Condition=@Condition+' AND SurveyId='+str(@surveyId)  if(@userId>0)   set @Condition=@Condition+' AND UserId='+str(@userId)    exec('select  * from AIElearning_SurveyUser where ' + @Condition)    "
1399,UpdatePortalAliasOnInstall,"CREATE PROCEDURE dbo.UpdatePortalAliasOnInstall   @PortalAlias   nvarchar(200),   @LastModifiedByUserID int  AS   UPDATE dbo.PortalAlias     SET HTTPAlias = @PortalAlias,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()   WHERE  HTTPAlias = '_default'"
1400,CoreMessaging_AddSubscription,"CREATE PROCEDURE dbo.[CoreMessaging_AddSubscription]   @UserId INT ,   @PortalId INT ,   @SubscriptionTypeId INT ,   @ObjectKey NVARCHAR(255) ,   @Description NVARCHAR(255),   @ModuleId INT ,   @TabId INT,   @ObjectData NVARCHAR(MAX)  AS    BEGIN          DECLARE @SubscriptionId INT = NULL                       SELECT  TOP 1 @SubscriptionId = SubscriptionId    FROM    dbo.CoreMessaging_Subscriptions    WHERE   UserId = @UserId      AND (( @PortalId is null and PortalId is null) or (PortalId = @PortalId))      AND SubscriptionTypeId = @SubscriptionTypeID      AND ObjectKey = @ObjectKey      AND ((@ModuleId is null and ModuleId is null ) or (ModuleId = @ModuleId))       AND ((@TabId is null and TabId is null ) or (TabId = @TabId))                    IF (@SubscriptionId IS NULL)      BEGIN      INSERT  INTO dbo.CoreMessaging_Subscriptions        ( UserId ,         PortalId ,         SubscriptionTypeId ,         ObjectKey ,         Description,         CreatedOnDate ,         ModuleId ,         TabId,         ObjectData        )      VALUES  ( @UserId ,         @PortalId ,         @SubscriptionTypeId ,         @ObjectKey ,         @Description,         GETUTCDATE() ,         @ModuleId ,         @TabId,         @ObjectData        )        SELECT  SCOPE_IDENTITY() AS [SubscriptionId]     END    ELSE      BEGIN      UPDATE  dbo.CoreMessaging_Subscriptions      SET     UserId = @UserId ,        PortalId = @PortalId ,        SubscriptionTypeId = @SubscriptionTypeId ,        ObjectKey = @ObjectKey ,        Description = @Description ,        ModuleId = @ModuleId ,        TabId = @TabId,        ObjectData = @ObjectData      WHERE   SubscriptionId = @SubscriptionId        SELECT  @SubscriptionId AS [SubscriptionId]     END   END"
1401,AISystem_Category_Talent_GetsBySearch,"CREATE proc [dbo].[AISystem_Category_Talent_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Talent       )         SELECT     *   FROM #AISystem_Category_Talent   where RowNumber between '+ @start +'  and  '+ @end +'   ')    "
1402,GetListEntries,"CREATE PROCEDURE dbo.GetListEntries   @ListName nvarchar(50),   @ParentKey nvarchar(150),   @PortalID int  AS  SELECT *   FROM dbo.vw_Lists   WHERE (ListName = @ListName OR @ListName='')    AND (ParentKey = @ParentKey OR @ParentKey = '')    AND (PortalID = @PortalID OR PortalID = -1 OR @PortalID IS NULL or SystemList=1)   ORDER BY [Level], ListName, SortOrder, Text"
1403,UpdateFileContent,"CREATE procedure dbo.UpdateFileContent    @FileId      int,  @Content     image    as    update dbo.Files  set    Content = @Content  where  FileId = @FileId"
1404,DeleteSearchStopWords,CREATE PROCEDURE dbo.[DeleteSearchStopWords]   @StopWordsID int  AS  BEGIN    DELETE FROM dbo.SearchStopWords WHERE StopWordsID = @StopWordsID  END
1405,AIElearning_Exercise_GetMentorUser,CREATE proc [dbo].[AIElearning_Exercise_GetMentorUser]  @Mentorid int  as  select top(1)* from AIElearning_Exercise_User where MentorId=@Mentorid  
1406,AIElearning_Class_Session_GetsBySearch,"create proc [dbo].[AIElearning_Class_Session_GetsBySearch]  @pageIndex int,  @pageSize int,  @Classid nvarchar(250)    as  -- AIElearning_Class_GetsBySearch 1,22,'',-1,-1,-1,-1,'-1',-1,'namnamnam'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa    if(@Classid>-1)   set @Condition=@Condition+' AND Classid='+str(@Classid)    exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_Session '+@Condition+'       )      SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF        "
1407,AISystem_UserInfo_CheckUsername,      CREATE PROC [dbo].[AISystem_UserInfo_CheckUsername]  @Username nvarchar(150)  AS  SELECT COUNT(ID) FROM AISystem_UserInfo where Username=@Username  
1408,AIElearning_Class_Hot_GetsBySearchCount,create proc [dbo].[AIElearning_Class_Hot_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Class_Hot    SET QUOTED_IDENTIFIER OFF     
1409,AddTabToEnd,"CREATE PROCEDURE dbo.AddTabToEnd      @ContentItemID          Int,      @PortalID               Int,      @UniqueID               UniqueIdentifier,      @VersionGuid            UniqueIdentifier,      @DefaultLanguageGuid    UniqueIdentifier,      @LocalizedVersionGuid   UniqueIdentifier,      @TabName                nVarChar(200),      @IsVisible              Bit,      @DisableLink            Bit,      @ParentID               Int,      @IconFile               nVarChar(255),      @IconFileLarge          nVarChar(255),      @Title                  nVarChar(200),      @Description            nVarChar(500),      @KeyWords               nVarChar(500),      @Url                    nVarChar(255),      @SkinSrc                nVarChar(200),      @ContainerSrc           nVarChar(200),      @StartDate              DateTime,      @EndDate                DateTime,      @RefreshInterval        Int,      @PageHeadText           nVarChar(max),      @IsSecure               Bit,      @PermanentRedirect      Bit,      @SiteMapPriority        Float,      @CreatedByUserID        Int,      @CultureCode            nVarChar( 10),      @IsSystem               Bit  AS  BEGIN      DECLARE @TabId Int      DECLARE @TabOrder Int      SET @TabOrder = (SELECT MAX(TabOrder) FROM dbo.Tabs                       WHERE (PortalId = @PortalID OR (PortalID IS NULL AND @PortalID IS NULL))                         AND (ParentId = @ParentID OR (ParentID IS NULL AND @ParentID IS NULL))                      )      IF @TabOrder IS NULL          SET @TabOrder = 1      ELSE          SET @TabOrder = @TabOrder + 2        -- Create Tab      EXECUTE @TabId = dbo.AddTab                          @ContentItemID,                          @PortalID,                          @TabOrder,                          @UniqueId,                          @VersionGuid,                          @DefaultLanguageGuid,                          @LocalizedVersionGuid,                          @TabName,                          @IsVisible,                          @DisableLink,                          @ParentId,                          @IconFile,                          @IconFileLarge,                          @Title,                          @Description,                          @KeyWords,                          @Url,                          @SkinSrc,                          @ContainerSrc,                          @StartDate,                          @EndDate,                          @RefreshInterval,                          @PageHeadText,                          @IsSecure,                          @PermanentRedirect,                          @SiteMapPriority,                          @CreatedByUserID,                          @CultureCode,                          @IsSystem;        -- Update Content Item      UPDATE dbo.ContentItems         SET TabID = @TabId       WHERE ContentItemID = @ContentItemID;        SELECT @TabId;  END /* Procedure */"
1410,AISystem_Subject_GetUserReportByUnit,"CREATE PROCEDURE [dbo].[AISystem_Subject_GetUserReportByUnit]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS      --  AISystem_Subject_GetUserReportByUnit -1,1,'vi-VN',0,0,-1    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50),    RootCode NVARCHAR(50)  )  --N?u cha truy?n vào là null th? không th? bao g?p cha trong lúc l?y k?t qu? ra  if (@ParentId < 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code,RootCode)    SELECT       AISystem_Category_Unit.Id,      0,      AISystem_Category_Unit.ParentId,      AISystem_Category_Unit.Title,      STR(AISystem_Category_Unit.OrderNo),      AISystem_Category_Unit.Title,      AISystem_Category_Unit.Code,      AISystem_Category_Unit.Code    FROM      AISystem_Category_Unit    WHERE      (AISystem_Category_Unit.Status=@Status OR @Status = -1)       AND (AISystem_Category_Unit.Id = @ParentId)      AND AISystem_Category_Unit.LanguageId = @LanguageId      AND AISystem_Category_Unit.PortalId = @portalId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code,RootCode)    SELECT       AISystem_Category_Unit.Id,      0,      AISystem_Category_Unit.ParentId,      AISystem_Category_Unit.Title,      STR(AISystem_Category_Unit.OrderNo),      AISystem_Category_Unit.Title,      AISystem_Category_Unit.Code,      AISystem_Category_Unit.Code          FROM      AISystem_Category_Unit    WHERE      (AISystem_Category_Unit.Status=@Status OR @Status = -1)       AND (AISystem_Category_Unit.ParentId = @ParentId or (@ParentId IS NULL or @ParentId < 0) AND (AISystem_Category_Unit.ParentId IS NULL or AISystem_Category_Unit.ParentId < 0))      AND AISystem_Category_Unit.LanguageId = @LanguageId      AND AISystem_Category_Unit.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, RootCode)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code,     T.Code    FROM     #PathConstruction T    JOIN AISystem_Category_Unit  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END    SELECT     'Id' = Id,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'UnitName' = [Path],     'TestStatus' = [dbo].[fn_GetTestStatusInSubjects]([RootCode],CASE WHEN CTG_IDParent = -1 THEN '' ELSE Code END)  FROM     #PathConstruction  ORDER BY     SortColumn    DROP TABLE #PathConstruction  "
1411,AIElearning_TestForm_Part_GetChildrenByParentId,"      CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_GetChildrenByParentId]  @TestId int,  @parentId int  AS  SELECT * FROM AIElearning_TestForm_Part   WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND TestId = @TestId     ORDER BY OrderNo asc          "
1412,PersonaBar_GetPersonaBarMenu,"CREATE PROCEDURE dbo.[PersonaBar_GetPersonaBarMenu]  AS   SELECT           MenuId,           Identifier,           ModuleName,           FolderName,          Controller,           ResourceKey,           Path,           Link,           CssClass,           IconFile,          ParentId,           [Order],           AllowHost,           Enabled,           CreatedByUserId,           CreatedOnDate,           LastModifiedByUserId,           LastModifiedOnDate                 FROM dbo.[PersonaBarMenu]"
1413,AISystem_Category_Unit_GetsBySearch,"  create proc AISystem_Category_Unit_GetsBySearch  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_Unit AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_Unit       )         SELECT     *   FROM #AISystem_Category_Unit   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1414,AIElearning_Lecturers_GetsBySearchNotInClassCount,"  CREATE proc [dbo].[AIElearning_Lecturers_GetsBySearchNotInClassCount]  @Keyword nvarchar(250),  @Status int,  @unitCode nvarchar(50),  @Type int,  @ClassId INT,  @ParentType INT  as  --   AIElearning_Lecturers_GetsBySearchNotInClassCount 's',-1,'',-1, 9  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@Keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(i.*,'''+@Keyword+''')'   set @condition = @condition + ' and (i.Username like N''%' + @Keyword + '%'' or i.Mastercode = '''+@Keyword+''') '  if(@Status>-1)   set @Condition=@Condition+' AND l.Status='+str(@Status)  if(@unitCode <> '-1' and @unitCode <> '')   set @Condition=@Condition+' AND i.UnitCode ='''+(@unitCode)+''''  if(@Type>-1)   set @Condition=@Condition+' AND l.Type='+str(@Type)   if(@ClassId>-1)   set @Condition=@Condition+ ' AND l.Id not in (select LecturersId from AIElearning_Class_Lecturers where ClassId =' + str(@ClassId) +' AND ParentType =' + str(@ParentType) +')'  exec('   SELECT count(*)   from AIElearning_Lecturers l inner join AISystem_UserInfo i on l.UserInfoId = i.Id where '+@Condition+'      ')  "
1415,AIElearning_SurveyUserQuestion_DeleteIncludeResult,create proc [dbo].[AIElearning_SurveyUserQuestion_DeleteIncludeResult]   @questionId int  as  begin  delete from AIElearning_SurveyUserQuestion where SurveyQuestionId = @questionId  end  
1416,AddModuleDefinition,"CREATE PROCEDURE dbo.AddModuleDefinition     @DesktopModuleId int,       @FriendlyName    nvarchar(128),   @DefinitionName nvarchar(128),   @DefaultCacheTime int,   @CreatedByUserID  int    as    insert into dbo.ModuleDefinitions (   DesktopModuleId,   FriendlyName,   DefinitionName,   DefaultCacheTime,   CreatedByUserID,   CreatedOnDate,   LastModifiedByUserID,   LastModifiedOnDate  )  values (   @DesktopModuleId,   @FriendlyName,   @DefinitionName,   @DefaultCacheTime,   @CreatedByUserID,   getdate(),   @CreatedByUserID,   getdate()  )    select SCOPE_IDENTITY()"
1417,CoreMessaging_IsSubscribed,"CREATE PROCEDURE dbo.[CoreMessaging_IsSubscribed]   @PortalId INT ,   @UserId INT ,   @SubscriptionTypeId INT ,   @ObjectKey NVARCHAR(255) ,   @ModuleId INT ,   @TabId INT  AS    BEGIN    SELECT  TOP 1 *    FROM    dbo.CoreMessaging_Subscriptions    WHERE   UserId = @UserId      AND (( @PortalId is null and PortalId is null) or (PortalId = @PortalId))      AND SubscriptionTypeId = @SubscriptionTypeID      AND ObjectKey = @ObjectKey      AND ((@ModuleId is null and ModuleId is null ) or (ModuleId = @ModuleId))       AND ((@TabId is null and TabId is null ) or (TabId = @TabId))   END"
1418,AISystem_Category_TeachingTopic_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_TeachingTopic_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_TeachingTopic AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')  "
1419,Messaging_GetMessage,CREATE PROCEDURE dbo.[Messaging_GetMessage]    @MessageID bigint  AS   SELECT * FROM Messaging_Messages WHERE MessageID = @MessageID
1420,AIElearning_class_Temporary,create FUNCTION [dbo].AIElearning_class_Temporary  (      -- Add the parameters for the function here      @chuoi varchar(250)       )  RETURNS  TABLE   AS  RETURN   (  select * from AIElearning_Class where Id in (select * from [dbo].Split(@chuoi))  )
1421,AIElearning_TestCampaign_RegistorUserTest_GetLastConnection,"  CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetLastConnection]  @Id int  AS  select LastConnectionId,LastIP,Username from AIElearning_TestCampaign_RegistorUserTest WHERE Id=@Id  "
1422,AIElearning_Class_Session_Attendance_GetsBySearch,"CREATE proc [dbo].[AIElearning_Class_Session_Attendance_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @SessionId int,  @AttendanceId int    as  --AIElearning_ClassUser_GetsBySearch 1,10,'',-1,26,-1,'01/01/1900','01/01/1900'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@SessionId >-1)   set @Condition=@Condition+' AND c.SessionId='+str(@SessionId)    if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.Mastercode like N''%' + @Keyword + '%''))'  if(@AttendanceId > -1)   set @Condition=@Condition+' AND c.AttendanceCheck='+str(@AttendanceId)  exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*, i.Displayname, i.Phone, i.Email, i.Sex, i.Address,i.UnitChildPath, u.Title AS UnitCode, j.Title AS JobTitleName,i.Mastercode,i.EmployeeCode,i.Username     from AIElearning_Class_Session_Attendance c inner join  AISystem_UserInfo i on i.UserId = c.UserID  LEFT JOIN dbo.AISystem_Category_Unit u ON i.UnitCode = u.Code LEFT JOIN dbo.AISystem_JobTitle_Title j ON i.JobTitleCode = j.Code where ' + @condition +' and u.Status = 1    )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1423,AISystem_UserInfo_GetsByLisEmail,"  create proc [dbo].[AISystem_UserInfo_GetsByLisEmail]  -- AIUsers_GetsByListUserName '''K50CNTTCA123457'',''K50ĐTVTCA123458'','     --  @listUsername nvarchar(MAX)  as  exec(  '  select * from AISystem_UserInfo  where  Email in (' + @listUsername + '''0'')  ')    SET QUOTED_IDENTIFIER OFF     "
1424,AddExtensionUrlProvider,"CREATE PROCEDURE dbo.[AddExtensionUrlProvider]    @ExtensionUrlProviderID int,       @DesktopModuleId  int,       @ProviderName   nvarchar(150),       @ProviderType   nvarchar(1000),       @SettingsControlSrc  nvarchar(1000),       @IsActive    bit,       @RewriteAllUrls   bit,       @RedirectAllUrls  bit,       @ReplaceAllUrls   bit  AS    IF EXISTS (SELECT * FROM dbo.ExtensionUrlProviders WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID)   BEGIN    UPDATE dbo.ExtensionUrlProviders     SET      DesktopModuleId = @DesktopModuleId,      ProviderName = @ProviderName,      ProviderType = @ProviderType,      SettingsControlSrc = @SettingsControlSrc,      IsActive = @IsActive,      RewriteAllUrls = @RewriteAllUrls,      RedirectAllUrls = @RedirectAllUrls,      ReplaceAllUrls = @ReplaceAllUrls     WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID   END  ELSE   BEGIN    INSERT INTO dbo.ExtensionUrlProviders (      DesktopModuleId,      ProviderName,      ProviderType,      SettingsControlSrc,      IsActive,      RewriteAllUrls,      RedirectAllUrls,      ReplaceAllUrls    )    VALUES (      @DesktopModuleId,      @ProviderName,      @ProviderType,      @SettingsControlSrc,      @IsActive,      @RewriteAllUrls,      @RedirectAllUrls,      @ReplaceAllUrls    )        SET @ExtensionUrlProviderID = @@IDENTITY       END     SELECT @ExtensionUrlProviderID"
1425,CoreMessaging_GetMessageRecipientsByUser,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageRecipientsByUser]      @UserID INT  AS   SELECT [RecipientID], [MessageID], [UserID], [Read], [Archived], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageRecipients   WHERE  [UserID] = @UserID"
1426,AIElearning_Class_Hot_GetsTop_ClassHot,"CREATE proc [dbo].[AIElearning_Class_Hot_GetsTop_ClassHot]    as  -- AIElearning_Class_Hot_GetsTop_ClassHot  SELECT    top(4)   h.*, c.Type, c.Name, c.Code, c.Avatar, c.Price  FROM            AIElearning_Class_Hot AS h INNER JOIN                           AIElearning_Class AS c ON h.ClassId = c.Id          Order by ViewCount desc    SET QUOTED_IDENTIFIER OFF     "
1427,vw_Users,"CREATE VIEW dbo.[vw_Users]  AS   SELECT  U.UserId,          UP.PortalId,          U.Username,          U.FirstName,          U.LastName,          U.DisplayName,          U.IsSuperUser,          U.Email,          UP.VanityUrl,          U.AffiliateId,          IsNull(UP.IsDeleted, U.IsDeleted) AS IsDeleted,          UP.RefreshRoles,          U.LastIPAddress,          U.UpdatePassword,          U.PasswordResetToken,          U.PasswordResetExpiration,          UP.Authorised,          U.CreatedByUserId,          U.CreatedOnDate,          U.LastModifiedByUserId,          U.LastModifiedOnDate   FROM       dbo.[Users]       AS U    LEFT JOIN dbo.[UserPortals] AS UP      ON CASE WHEN U.IsSuperuser = 1 THEN 0 ELSE U.UserId END = UP.UserId"
1428,AddScopeType,CREATE PROCEDURE dbo.[AddScopeType]    @ScopeType   nvarchar(250)  AS   INSERT INTO dbo.Taxonomy_ScopeTypes (    ScopeType   )     VALUES (    @ScopeType   )     SELECT SCOPE_IDENTITY()
1429,GetTabVersionDetails,"CREATE PROCEDURE dbo.[GetTabVersionDetails]   @TabVersionId INT  AS  BEGIN   SELECT       [TabVersionDetailId] ,          [TabVersionId] ,    [ModuleId] ,    [ModuleVersion] ,    [PaneName] ,    [ModuleOrder] ,    [Action],       [CreatedByUserID] ,    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   FROM dbo.[TabVersionDetails]   WHERE [TabVersionId] = @TabVersionId  END"
1430,AIElearning_SurveyUserQuestion_GetAnswerByQuestionId,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetAnswerByQuestionId]   @questionId int  as  -- AIElearning_SurveyUserQuestion_GetAnswerByQuestionId 1076  begin  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@questionId>-1)   set @Condition=@Condition+' AND q.SurveyQuestionId='+str(@questionId)  exec('select ROW_NUMBER() OVER (ORDER BY q.CreatedDate desc) AS RowNumber,q.*, q.CreatedDate   from AIElearning_SurveyUserQuestion q   inner join AIElearning_SurveyUser u on q.SurveyUserId = u.Id  where  '+@Condition+'')  end    "
1431,AISystem_Category_TeachingTopic_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_TeachingTopic AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_TeachingTopic       )         SELECT     *   FROM #AISystem_Category_TeachingTopic   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1432,AddTabModule,"CREATE PROCEDURE dbo.[AddTabModule]      @TabId                  int,      @ModuleId               int,   @ModuleTitle   nvarchar(256),   @Header     ntext,   @Footer     ntext,      @ModuleOrder            int,      @PaneName               nvarchar(50),      @CacheTime              int,      @CacheMethod   varchar(50),      @Alignment              nvarchar(10),      @Color                  nvarchar(20),      @Border                 nvarchar(1),      @IconFile               nvarchar(100),      @Visibility             int,      @ContainerSrc           nvarchar(200),      @DisplayTitle           bit,      @DisplayPrint           bit,      @DisplaySyndicate       bit,      @IsWebSlice    bit,      @WebSliceTitle   nvarchar(256),      @WebSliceExpiryDate     datetime,      @WebSliceTTL   int,      @UniqueId    uniqueidentifier,      @VersionGuid   uniqueidentifier,      @DefaultLanguageGuid uniqueidentifier,      @LocalizedVersionGuid uniqueidentifier,      @CultureCode   nvarchar(10),      @CreatedByUserID    int    AS      INSERT INTO dbo.TabModules (           TabId,          ModuleId,          ModuleTitle,          Header,          Footer,    ModuleOrder,          PaneName,          CacheTime,          CacheMethod,          Alignment,          Color,          Border,          IconFile,          Visibility,          ContainerSrc,          DisplayTitle,          DisplayPrint,          DisplaySyndicate,          IsWebSlice,          WebSliceTitle,          WebSliceExpiryDate,          WebSliceTTL,          UniqueId,          VersionGuid,          DefaultLanguageGuid,          LocalizedVersionGuid,          CultureCode,          CreatedByUserID,          CreatedOnDate,          LastModifiedByUserID,          LastModifiedOnDate      )      VALUES (          @TabId,          @ModuleId,          @ModuleTitle,          @Header,          @Footer,          @ModuleOrder,          @PaneName,          @CacheTime,          @CacheMethod,          @Alignment,          @Color,          @Border,          @IconFile,          @Visibility,          @ContainerSrc,          @DisplayTitle,          @DisplayPrint,          @DisplaySyndicate,          @IsWebSlice,          @WebSliceTitle,          @WebSliceExpiryDate,          @WebSliceTTL,          @UniqueId,          @VersionGuid,          @DefaultLanguageGuid,          @LocalizedVersionGuid,          @CultureCode,          @CreatedByUserID,          getdate(),          @CreatedByUserID,          getdate()      )"
1433,AIElearning_Exercise_ThemeGetId,"  create proc [dbo].[AIElearning_Exercise_ThemeGetId]   @id int,  @ExerciseId int  as  select * from AIElearning_Exercise_Theme where id =@id and ExerciseId=@ExerciseId  "
1434,AIElearning_Class_Session_GetsBySearchCount,"create proc [dbo].[AIElearning_Class_Session_GetsBySearchCount]   @Classid nvarchar(250)  as  --[dbo].[AIElearning_Class_GetsBySearchCount] '',-1,-1,-1,-1,'-1',-1,'namnamnam'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@Classid>-1)   set @Condition=@Condition+' AND Classid='+str(@Classid)    exec('select COUNT(Id) from AIElearning_Class_Session '+@Condition)        "
1435,AISystem_UserInfo_GetsByListUserName,"  create proc [dbo].[AISystem_UserInfo_GetsByListUserName]  -- AIUsers_GetsByListUserName '''K50CNTTCA123457'',''K50ĐTVTCA123458'','     --  @listUsername nvarchar(MAX)  as  exec(  '  select * from AISystem_UserInfo  where  Username in (' + @listUsername + '''0'')  ')    SET QUOTED_IDENTIFIER OFF     "
1436,DeleteExtensionUrlProvider,CREATE PROCEDURE dbo.[DeleteExtensionUrlProvider]    @ExtensionUrlProviderID int  AS    DELETE FROM dbo.ExtensionUrlProviders   WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID
1437,AIElearning_Certificate_ClassDone_GetsBySearchCount,create proc [dbo].[AIElearning_Certificate_ClassDone_GetsBySearchCount]  as  select COUNT(*) from AIElearning_Certificate_ClassDone    SET QUOTED_IDENTIFIER OFF     
1438,DeleteLanguagePack,CREATE PROCEDURE dbo.[DeleteLanguagePack]     @LanguagePackID  int    AS      DELETE       FROM dbo.LanguagePacks       WHERE   LanguagePackID = @LanguagePackID
1439,GetPartnerSubject,"create FUNCTION [dbo].[GetPartnerSubject]   (  @type int,  @id int  )  RETURNS  nvarchar(Max)  AS  BEGIN  DECLARE  @Ketqua nvarchar(Max);  SET @Ketqua=''  if(@type='1')  SET @Ketqua=CONCAT(@Ketqua, N'Nội bộ')  else  SET @Ketqua=CONCAT(@Ketqua, (select name from AISystem_Partner where id=@id))   RETURN @Ketqua  END"
1440,UpdateUser,"CREATE PROCEDURE dbo.[UpdateUser]   @UserID         int,   @PortalID  int,   @FirstName  nvarchar(50),   @LastName  nvarchar(50),   @IsSuperUser    bit,   @Email          nvarchar(256),   @DisplayName    nvarchar(100),   @VanityUrl  nvarchar(100),   @UpdatePassword bit,   @Authorised  bit,   @RefreshRoles bit,   @LastIPAddress nvarchar(50),   @passwordResetToken uniqueidentifier,   @passwordResetExpiration datetime,   @IsDeleted  bit,   @LastModifiedByUserID int  AS   UPDATE dbo.Users    SET     FirstName = @FirstName,     LastName = @LastName,     IsSuperUser = @IsSuperUser,     Email = @Email,     DisplayName = @DisplayName,     UpdatePassword = @UpdatePassword,     PasswordResetToken=@passwordResetToken,     PasswordResetExpiration=@passwordResetExpiration,     LastIPAddress = @LastIPAddress,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()    WHERE  UserId = @UserID      IF @PortalID IS NULL    BEGIN     UPDATE dbo.Users      SET       IsDeleted = @IsDeleted      WHERE  UserId = @UserID    END   ELSE    BEGIN     UPDATE dbo.UserPortals      SET       Authorised = @Authorised,       RefreshRoles = @RefreshRoles,       VanityUrl = @VanityUrl,       IsDeleted = @IsDeleted      WHERE  UserId = @UserID       AND PortalId = @PortalID    END"
1441,GetUserRelationships,"CREATE PROCEDURE dbo.[GetUserRelationships]   @UserID INT  AS    SELECT  UserRelationshipID,     UserID,     RelatedUserID,     RelationshipID,                 Status,                 CreatedByUserID ,     CreatedOnDate ,     LastModifiedByUserID ,     LastModifiedOnDate   FROM    dbo.UserRelationships         WHERE UserID = @UserID OR RelatedUserID = @UserID"
1442,SaveTabVersionDetail,"CREATE PROCEDURE dbo.[SaveTabVersionDetail]      @Id INT,      @TabVersionId INT,      @ModuleId INT,      @ModuleVersion INT,   @PaneName NVARCHAR(50),   @ModuleOrder INT,   @Action INT,      @CreatedByUserID [INT] = -1,   @LastModifiedByUserID [INT] = -1  AS  BEGIN      IF ISNULL(@Id, 0) = 0      BEGIN          INSERT INTO dbo.[TabVersionDetails](              [TabVersionId],              [ModuleId],              [ModuleVersion],     [PaneName],              [ModuleOrder],     [Action],              [CreatedByUserID],              [CreatedOnDate],              [LastModifiedByUserID],              [LastModifiedOnDate]          ) VALUES (              @TabVersionId,     @ModuleId,                          @ModuleVersion,                 @PaneName,     @ModuleOrder,     @Action,              @CreatedByUserID,              GETDATE(),              @LastModifiedByUserID,              GETDATE()          )            SELECT @Id = SCOPE_IDENTITY()      END      ELSE      BEGIN          UPDATE dbo.[TabVersionDetails] SET                          [TabVersionId] = @TabVersionId,     [ModuleId] = @ModuleId,              [ModuleVersion] = @ModuleVersion,                          [PaneName] = @PaneName,     [ModuleOrder] = @ModuleOrder,     [Action] = @Action,              [LastModifiedByUserID] = @LastModifiedByUserID,              [LastModifiedOnDate] = GETDATE()          WHERE TabVersionDetailId = @Id      END   SELECT @Id  END"
1443,simpleSelect,Create procedure dbo.simpleSelect  AS  Select Top 3 * from Users
1444,AISystem_Subject_User_GetNeedsByUserId,"CREATE PROC [dbo].[AISystem_Subject_User_GetNeedsByUserId] @UserId INT  AS -- AISystem_Subject_User_GetNeedsByUserId 1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' SubjectId <= 0 '  IF ( @UserId > 0 )      SET @Condition = @Condition + ' AND UserId =' + STR(@UserId)  EXEC('  WITH #AISystem_Subject AS(   SELECT ROW_NUMBER() OVER (ORDER BY Id DESC) AS RowNumber, *  FROM dbo.AISystem_Subject_User WHERE  '+@Condition+' )    SELECT  *   FROM #AISystem_Subject')  SET QUOTED_IDENTIFIER OFF   "
1445,AIElearning_SurveyUserQuestion_GetOtherAnswerByQuestionId,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetOtherAnswerByQuestionId]   @id int  as  -- AIElearning_SurveyUserQuestion_GetOtherAnswerByQuestionId 1046  begin  CREATE TABLE #OtherAnswer(   OtherAnswer nvarchar(max),   CreatedDate DateTime)    INSERT INTO #OtherAnswer (OtherAnswer,CreatedDate) select       CASE WHEN CHARINDEX('-',Answer)>0            THEN SUBSTRING(Answer,CHARINDEX('-',Answer)+1,len(q.Answer))             END as Answer, q.CreatedDate  from AIElearning_SurveyUserQuestion q inner join AIElearning_SurveyUser u on q.SurveyUserId = u.Id    where q.SurveyQuestionId=@id     select  ROW_NUMBER() OVER (ORDER BY CreatedDate desc ) as RowNumber, OtherAnswer, CreatedDate  from #OtherAnswer  where OtherAnswer is not null  end      "
1446,Messaging_Save_Message,"CREATE PROCEDURE dbo.[Messaging_Save_Message]      @PortalID int,     @FromUserID int,     @ToUserID int,     @ToRoleID int,     @Status int,     @Subject nvarchar(max),     @Body nvarchar(max),     @Date datetime,     @Conversation uniqueidentifier,     @ReplyTo bigint,     @AllowReply bit,     @SkipPortal bit    AS   BEGIN    INSERT INTO dbo.Messaging_Messages         ([PortalID]         ,[FromUserID]      ,[FromUserName]         ,[ToUserID]         ,[ToRoleID]      ,[ToUserName]         ,[Status]         ,[Subject]         ,[Body]         ,[Date]         ,[Conversation]         ,[ReplyTo]         ,[AllowReply]         ,[SkipPortal]    ,[EmailSent])   SELECT         @PortalID,         @FromUserID,      (SELECT UserName FROM Users WHERE UserID = @FromUserID) as FromUserName,         @ToUserID,         @ToRoleID,      (SELECT UserName FROM Users WHERE UserID = @ToUserID) as ToUserName,          @Status,         @Subject,          @Body,         @Date,          @Conversation,         @ReplyTo,         @AllowReply,          @SkipPortal,      '0'         SELECT SCOPE_IDENTITY()         END"
1447,AISystem_Category_TestForm_GetByTitle,"    CREATE PROC [dbo].[AISystem_Category_TestForm_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_TestForm_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_TestForm AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')          "
1448,AISystem_Category_TeachingTopic_GetInfoById,CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_TeachingTopic where Id=@Id  SET QUOTED_IDENTIFIER OFF  
1449,AIElearning_ClassUserSession_Attendance_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_ClassUserSession_Attendance_GetsBySearchCount]   @Keyword nvarchar(250),  @SessionId int,  @AttendanceId int    as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --t? khóa  if(@Keyword<>'')   set @condition = @condition + '  and ((i.Username like N''%' +@Keyword + '%'') or (i.Displayname like N''%' + @Keyword + '%'') or (i.Mastercode like N''%' + @Keyword + '%''))'   --m? khóa h?c  if(@SessionId > -1)   set @Condition=@Condition+' AND c.SessionId='+str(@SessionId)  if(@AttendanceId > -1)   set @Condition=@Condition+' AND c.AttendanceCheck='+str(@AttendanceId)      exec('   select COUNT(*) from AIElearning_Class_Session_Attendance c inner join  AISystem_UserInfo i on i.UserId = c.UserID where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF    "
1450,CoreMessaging_SendNotification,"CREATE PROCEDURE dbo.[CoreMessaging_SendNotification]   @NotificationTypeID int,   @PortalID INT,   @To nvarchar(2000),   @From nvarchar(200),      @Subject nvarchar(400),      @Body nvarchar(max),      @SenderUserID int,   @CreateUpdateUserID int,   @ExpirationDate datetime,      @IncludeDismissAction bit,      @Context nvarchar(200)  AS  BEGIN   INSERT dbo.[CoreMessaging_Messages] (    [NotificationTypeID],    [PortalID],    [To],    [From],    [Subject],    [Body],    [SenderUserID],    [ExpirationDate],          [IncludeDismissAction],          [Context],    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   ) VALUES (    @NotificationTypeID,    @PortalID,    @To,    @From,    @Subject,    @Body,    @SenderUserID,    @ExpirationDate,          @IncludeDismissAction,          @Context,    @CreateUpdateUserID, -- CreatedBy    GETUTCDATE(), -- CreatedOn    @CreateUpdateUserID, -- LastModifiedBy    GETDATE() -- LastModifiedOn   )     SELECT  SCOPE_IDENTITY()  END"
1451,AISystem_UserInfo_GetsByListUserNameInClassUser,"  CREATE proc [dbo].[AISystem_UserInfo_GetsByListUserNameInClassUser]  -- AISystem_UserInfo_GetsByListUserNameInClassUser 17, '''vannt'',''K50ĐTVTCA123458'','     --  @ClassId int,  @listUsername nvarchar(MAX)  as  exec(  '  select * from AIElearning_ClassUser  where  Username in (' + @listUsername + '''0'') and ClassId = '+@ClassId +'  ')    SET QUOTED_IDENTIFIER OFF     "
1452,GetExtensionUrlProviders,"CREATE PROCEDURE dbo.[GetExtensionUrlProviders]    @PortalID int   AS   SELECT     p.*,     pc.PortalID   FROM  dbo.ExtensionUrlProviderConfiguration pc     RIGHT OUTER JOIN dbo.ExtensionUrlProviders p      ON pc.ExtensionUrlProviderID = p.ExtensionUrlProviderID   WHERE pc.PortalID = @PortalID OR pc.PortalID IS Null     SELECT ExtensionUrlProviderID,      PortalID,      SettingName,      SettingValue   FROM dbo.ExtensionUrlProviderSetting   WHERE PortalID = PortalID     SELECT DISTINCT      P.ExtensionUrlProviderID,     TM.TabID    FROM dbo.DesktopModules DM     INNER JOIN dbo.ModuleDefinitions MD ON DM.DesktopModuleID = MD.DesktopModuleID      INNER JOIN dbo.Modules M ON MD.ModuleDefID = M.ModuleDefID      INNER JOIN dbo.TabModules TM ON M.ModuleID = TM.ModuleID      INNER JOIN dbo.vw_ExtensionUrlProviders P ON DM.DesktopModuleID = P.DesktopModuleId    WHERE     (P.PortalID = @PortalID) OR (P.PortalID IS NULL)          UNION     SELECT        P.ExtensionUrlProviderID,      PT.TabId     FROM    dbo.ExtensionUrlProviderTab PT      INNER JOIN dbo.ExtensionUrlProviders P ON P.ExtensionUrlProviderID = PT.ExtensionUrlProviderID     WHERE   (PT.IsActive = 1)"
1453,AISystem_Level_GetsBySearchCount,CREATE proc [dbo].[AISystem_Level_GetsBySearchCount]  as  select COUNT(*) from AISystem_Level    SET QUOTED_IDENTIFIER OFF     
1454,GetModule,"CREATE PROCEDURE dbo.[GetModule]     @ModuleId int,   @TabId    int     AS  SELECT *   FROM dbo.vw_Modules  WHERE   ModuleId = @ModuleId  AND     (TabId = @TabId or @TabId is null)"
1455,GetTypeName,"create FUNCTION [dbo].[GetTypeName]   (  @type int  )  RETURNS  nvarchar(Max)  AS  BEGIN  DECLARE  @Ketqua nvarchar(Max);  SET @Ketqua=''  if(@type='1')  SET @Ketqua=CONCAT(@Ketqua, N'Online')  if(@type='2')  SET @Ketqua=CONCAT(@Ketqua, N'Offline')  if(@type='3')  SET @Ketqua=CONCAT(@Ketqua, N'OJT')  if(@type='4')  SET @Ketqua=CONCAT(@Ketqua, N'Online kết hợp offline')   RETURN @Ketqua  END"
1456,AISystem_Category_Talent_GetInfoById,create PROC [dbo].[AISystem_Category_Talent_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_Talent where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1457,AddMetaData,"CREATE PROCEDURE dbo.[AddMetaData]    @ContentItemID  int,   @Name    nvarchar(100),   @Value    nvarchar(MAX)  AS   DECLARE @MetaDataID int   SET @MetaDataID = (SELECT MetaDataID FROM MetaData WHERE MetaDataName = @Name)      IF @MetaDataID IS NULL    BEGIN     --Insert new item into MetaData table     INSERT INTO dbo.MetaData ( MetaDataName ) VALUES ( @Name )       SET @MetaDataID = (SELECT SCOPE_IDENTITY() )    END       INSERT INTO dbo.ContentItems_MetaData (    ContentItemID,    MetaDataID,    MetaDataValue   )   VALUES (    @ContentItemID,    @MetaDataID,    @Value   )"
1458,DeleteTabVersionDetail,CREATE PROCEDURE dbo.[DeleteTabVersionDetail]      @Id INT  AS  BEGIN      DELETE FROM dbo.[TabVersionDetails] WHERE TabVersionDetailId = @Id  END
1459,simpleString,"Create   procedure dbo.simpleString @name varchar(10) , @lastname varchar(10)  AS      SELECT @name + @lastname"
1460,AIElearning_SurveyUserQuestion_GetResultByQuestionId,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetResultByQuestionId]   @surveyQuestionId int  as  -- AIElearning_SurveyUserQuestion_GetResultByQuestionId 1077  begin  CREATE TABLE #SurveyUserQuestion(   Answer nvarchar(max))   begin    INSERT INTO #SurveyUserQuestion (Answer) select      case when CHARINDEX('-',Answer)>0      then SUBSTRING(Answer,1,CHARINDEX('-',Answer)-1)      else Answer end Answer     from AIElearning_SurveyUserQuestion where SurveyQuestionId=@surveyQuestionId   end  CREATE TABLE #SurveyUserQuestionFull (Answer nvarchar(max), AnswerCount int, SurveyQuestionId int)      begin    INSERT INTO #SurveyUserQuestionFull      select Answer, count(Answer) as AnswerCount, @surveyQuestionId as SurveyQuestionId from #SurveyUserQuestion     group by Answer        end  DECLARE @totalSelect AS int  select @totalSelect = sum(AnswerCount) from #SurveyUserQuestionFull     select *, ROUND(((CAST(AnswerCount AS float) / CAST(@totalSelect AS float)) *100),1) as [Percent]   from #SurveyUserQuestionFull  order by case Answer when 0 then 2 else 1 end, Answer  end    "
1461,AISystem_Category_TestForm_GetsBySearch,"    CREATE PROC [dbo].[AISystem_Category_TestForm_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_TestForm AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_TestForm       )         SELECT     *   FROM #AISystem_Category_TestForm   where RowNumber between '+ @start +'  and  '+ @end +'   ')          "
1462,Messaging_GetNewMessageCount,"CREATE PROCEDURE dbo.[Messaging_GetNewMessageCount]    @PortalID int,   @UserID int  AS   SELECT count(*) FROM Messaging_Messages WHERE ToUserID = @UserID AND Status = 1"
1463,AIElearning_Exercise_GetsByCount,  create proc [dbo].[AIElearning_Exercise_GetsByCount]  @classid int  as  select count(*) from AIElearning_Exercise where ClassId=@classid  
1464,AIElearning_Class_Session_Lecturers_getbyClassId,"create proc [dbo].[AIElearning_Class_Session_Lecturers_getbyClassId]  @classid int,  @userid int    as  select top(1)*  from AIElearning_Class_Session_Lecturers where  Userid=@userid and ClassId=@classid  SET QUOTED_IDENTIFIER OFF         "
1465,Mobile_SaveRedirectionRule,"CREATE PROC dbo.[Mobile_SaveRedirectionRule]      @Id INT ,      @RedirectionId INT ,      @Capbility NVARCHAR(50) ,      @Expression NVARCHAR(50)  AS       IF @Id = -1           BEGIN              INSERT  INTO dbo.Mobile_RedirectionRules                      ( RedirectionId ,                        Capability ,                        Expression            )              VALUES  ( @RedirectionId , -- RedirectionId - int                        @Capbility , -- Capability - nvarchar(50)                        @Expression  -- Expression - nvarchar(50)            )          END      ELSE           BEGIN              UPDATE  dbo.Mobile_RedirectionRules              SET     Capability = @Capbility ,                      Expression = @Expression              WHERE   Id = @Id          END"
1466,AISystem_UserInfo_GetsByResetKey,      CREATE proc [dbo].[AISystem_UserInfo_GetsByResetKey]  @ResetKey nvarchar(250)  as  Select * from AISystem_UserInfo where   ResetKey = @ResetKey  SET QUOTED_IDENTIFIER OFF     
1467,UpdateExtensionUrlProvider,"CREATE PROCEDURE dbo.[UpdateExtensionUrlProvider]    @ExtensionUrlProviderID  int,   @IsActive     bit  AS   UPDATE dbo.ExtensionUrlProviders    SET IsActive = @IsActive    WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID"
1468,DeleteModulePermission,CREATE PROCEDURE dbo.DeleteModulePermission   @ModulePermissionID int  AS    DELETE FROM dbo.ModulePermission  WHERE   [ModulePermissionID] = @ModulePermissionID
1469,GetCountUsersubject,create FUNCTION [dbo].[GetCountUsersubject]   (   @SubjectId int)  RETURNS  Int  AS  BEGIN   -- Declare the return variable here   DECLARE  @Ketqua Int;   DECLARE @Count Int;   DECLARE @ClassID Int;   DECLARE @I Int;   SET @I=0;   SET @Ketqua=0;   set @Count=(Select count(id) from AIElearning_Class where SubjectId=@SubjectId)    if(@I< @Count)  BEGIN  WHILE (@I <= @Count)     BEGIN          SET @ClassID=(SELECT TOP 1 ID from  (SELECT TOP(@I) ID  from AIElearning_Class where SubjectId=@SubjectId  order by id asc ) A order by id desc)      SET @Ketqua+=(SELECT COUNT(id) from AIElearning_ClassUser where ClassId=@ClassID)       SET @I = @I+1    END  END  else    SET @Ketqua=0;       -- Return the result of the function   RETURN @Ketqua    END
1470,GetTabModuleIdsBySettingNameAndValue,"CREATE PROCEDURE dbo.GetTabModuleIdsBySettingNameAndValue   @PortalId INT,   @SettingName NVARCHAR(50),   @SettingValue NVARCHAR(max)  AS  BEGIN   SELECT DISTINCT tms.TabModuleID   FROM dbo.[TabModuleSettings] tms     INNER JOIN dbo.[TabModules] tm ON tms.TabModuleID = tm.TabModuleID     INNER JOIN dbo.[Tabs] t ON tm.TabID = t.TabID AND (t.PortalID = @PortalID OR t.PortalID IS NULL)   WHERE tms.SettingName = @SettingName     AND tms.SettingValue = @SettingValue  END"
1471,AISystem_Category_Campaign_UpdateChildId,"    CREATE PROC [dbo].[AISystem_Category_Campaign_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Campaign  SET    ChildId = @ChildId  WHERE Id = @Id          "
1472,GetPackages,"CREATE PROCEDURE dbo.[GetPackages]   @PortalID int  AS   SELECT *    FROM   dbo.Packages    WHERE (PortalID = @PortalID OR @PortalID IS NULL OR PortalID IS NULL)    ORDER BY PackageType ASC, [FriendlyName] ASC"
1473,GetTabVersionDetailsHistory,"CREATE PROCEDURE dbo.[GetTabVersionDetailsHistory]   @TabID iNT,      @Version INT  AS  BEGIN       SELECT tvd.[TabVersionDetailId]      ,tvd.[TabVersionId]      ,tvd.[ModuleId]      ,tvd.[ModuleVersion]      ,tvd.[PaneName]      ,tvd.[ModuleOrder]      ,tvd.[Action]      ,tvd.[CreatedByUserID]      ,tvd.[CreatedOnDate]      ,tvd.[LastModifiedByUserID]      ,tvd.[LastModifiedOnDate]   FROM dbo.[TabVersionDetails] tvd   INNER JOIN dbo.[TabVersions] tv ON tvd.TabVersionId = tv.TabVersionId   WHERE tv.Version <= @Version    AND tv.TabId = @TabID   ORDER BY tvd.CreatedOnDate   END"
1474,AIElearning_SurveyUserQuestion_GetResultBySubQuestionId,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetResultBySubQuestionId]   @surveyQuestionId int,  @subQuestionId int  as  -- AIElearning_SurveyUserQuestion_GetResultBySubQuestionId 1080,1  begin    CREATE TABLE #SurveyUserQuestion(   Answer nvarchar(max))   begin    INSERT INTO #SurveyUserQuestion (Answer) select  Answer     from AIElearning_SurveyUserQuestion where SurveyQuestionId=@surveyQuestionId     and (SUBSTRING(Answer,1,CHARINDEX('-',Answer)-1) = @subQuestionId)   end  CREATE TABLE #SurveyUserQuestionFull( Answer nvarchar(max),AnswerCount int )   begin    INSERT INTO #SurveyUserQuestionFull      select case when CHARINDEX('-',Answer)>0      then SUBSTRING(Answer,CHARINDEX('-',Answer)+1,LEN(Answer)-CHARINDEX('-',Answer)+1)      else Answer end Answer, count(Answer) as AnswerCount      from #SurveyUserQuestion     group by Answer order by Answer desc   end  DECLARE @totalSelect AS int  select @totalSelect = sum(AnswerCount) from #SurveyUserQuestionFull     select *, ROUND(((CAST(AnswerCount AS float) / CAST(@totalSelect AS float)) *100),1) as [Percent]   from #SurveyUserQuestionFull  end    "
1475,UpdateModuleDefinition,"CREATE PROCEDURE dbo.UpdateModuleDefinition     @ModuleDefId   int,       @FriendlyName   nvarchar(128),   @DefinitionName   nvarchar(128),   @DefaultCacheTime  int,   @LastModifiedByUserID int    as    update dbo.ModuleDefinitions    SET FriendlyName = @FriendlyName,    DefinitionName = @DefinitionName,    DefaultCacheTime = @DefaultCacheTime,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate = getdate()   WHERE ModuleDefId = @ModuleDefId"
1476,UpdateFileLastModificationTime,"CREATE PROCEDURE dbo.[UpdateFileLastModificationTime]   @FileId      Int,   -- Not Null   @LastModificationTime DateTime  -- Null: Now  AS  BEGIN      UPDATE dbo.[Files]      SET    LastModificationTime = IsNull(@LastModificationTime, GetDate())      WHERE  FileId = @FileId  END"
1477,AISystem_Category_TrainingField_GetByTitle,"CREATE PROC [dbo].[AISystem_Category_TrainingField_GetByTitle]  @Title NVARCHAR(200),  @ParentId int  AS  --  AISystem_Category_TrainingField_GetByTitle 'Danh',-1  DECLARE @Condition NVARCHAR(max)  set @condition = '1=1'  --Nếu là gửi  IF(@ParentId >0)   SET @Condition +='  and  a.ParentId=' + str(@ParentId)     exec('   SELECT * FROM AISystem_Category_TrainingField AS a   WHERE LOWER(a.Title) LIKE LOWER(N''%' + @Title + '%'') and '+ @condition + '   and status =1   ')  "
1478,GetLegacyFolderCount,CREATE PROCEDURE dbo.[GetLegacyFolderCount]  AS   SELECT COUNT(*)   FROM dbo.Folders    WHERE ParentID IS NULL AND FolderPath <> ''
1479,AISystem_UserInfo_GetsByUsernameOrMastercode,create proc [dbo].[AISystem_UserInfo_GetsByUsernameOrMastercode]  @keyword  nvarchar(50)  as  -- AISystem_UserInfo_GetsByUsernameOrMastercode 'hainv'  Select top(1) * from AISystem_UserInfo  where   Mastercode = @keyword  or Username = @keyword  SET QUOTED_IDENTIFIER OFF  
1480,AIElearning_Class_Session_Lecturers_DeletessionId,create proc [dbo].[AIElearning_Class_Session_Lecturers_DeletessionId]  @SessionId int  as  delete  from AIElearning_Class_Session_Lecturers where  SessionId=@SessionId  SET QUOTED_IDENTIFIER OFF         
1481,UpdateFolderMappingsSetting,"CREATE PROCEDURE dbo.[UpdateFolderMappingsSetting]   @FolderMappingID int,   @SettingName nvarchar(50),   @SettingValue nvarchar(2000),   @LastModifiedByUserID int  AS  BEGIN   UPDATE dbo.[FolderMappingsSettings]   SET    SettingValue = @SettingValue,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate = GETDATE()   WHERE FolderMappingID = @FolderMappingID AND SettingName = @SettingName  END"
1482,AISystem_UserInfo_GetsBySearch,"CREATE proc [dbo].[AISystem_UserInfo_GetsBySearch]  @pageIndex int,  @pageSize int,  @username nvarchar(250),  @Limit int,  @Type int,  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),   @JobTitlecode nvarchar(250),  @Status int,  @tungay datetime,  @denngay datetime,  @TypeLogin int  as  --[dbo].[AISystem_UserInfo_GetsBySearch]1,10,'',1,-1,'','','',-1,'01/01/1900','01/01/2900',-1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF (@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (tblUser.Username like N''%' + @username + '%'' or  tblUser.EmployeeCode like N''%' + @username + '%'') '  IF(@Limit > 0)   set @condition = @condition +    ' And  ( tblUser.Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  ( tblUser.Type= '+ STR(@Type)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  ( tblUser.Unitcode= '''+ @Unitcode+''' )'  IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   --set @condition = @condition +    ' And  ( tblUser.UnitChildcode= '''+ @UnitChildcode+''' )'   set @condition = @condition +    ' And  ( tblUser.UnitChildcode in  (select code from AISystem_Category_Unit where id in ( select * from split('''+ @UnitChildcode+'''))) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  ( tblUser.JobTitlecode= '''+ @JobTitlecode+''' )'  IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'  IF(@TypeLogin > 0)   set @condition = @condition +    ' And  ( tblUser.TypeLogin= '+ STR(@TypeLogin)+' )'  IF CONVERT(datetime,@tungay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate >= ''' + convert(nvarchar(23),@tungay,121) + ''''  IF CONVERT(datetime,@denngay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate <= ''' + convert(nvarchar(23),@denngay,121) + ''''    exec('    WITH #AISystem_UserInfo AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_UserInfo as tblUser     where ' + @condition +'     )         SELECT     *   FROM #AISystem_UserInfo   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1483,SaveExtensionUrlProviderSetting,"CREATE PROCEDURE dbo.[SaveExtensionUrlProviderSetting]    @ExtensionUrlProviderID  int,   @PortalId     int,   @SettingName    nvarchar(100),   @SettingValue    nvarchar(2000)  AS     IF (SELECT COUNT(*)      FROM dbo.ExtensionUrlProviderSetting      WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID      AND PortalID = @PortalId      AND SettingName = @SettingName) = 0    BEGIN     --ADD     INSERT INTO dbo.ExtensionUrlProviderSetting             ( ExtensionUrlProviderID ,               PortalID ,               SettingName ,               SettingValue             )     VALUES  ( @ExtensionUrlProviderID , -- ExtensionUrlProviderID - int               @PortalId , -- PortalID - int               @SettingName , -- SettingName - nvarchar(100)               @SettingValue  -- SettingValue - nvarchar(2000)             )    END   ELSE    BEGIN     UPDATE dbo.ExtensionUrlProviderSetting       SET        SettingValue = @SettingValue      WHERE ExtensionUrlProviderID = @ExtensionUrlProviderID       AND PortalID = @PortalId       AND SettingName = @SettingName    END"
1484,DeleteTranslatedTabs,"CREATE PROCEDURE dbo.[DeleteTranslatedTabs]      @PortalID INT ,      @CultureCode NVARCHAR(10)  AS       BEGIN            SET NOCOUNT ON;              BEGIN TRY                BEGIN TRANSACTION DeleteTranslatedTabs         -- first store ContentItem records to be deleted              DECLARE @TempDeleteCI TABLE ( ContentItemId INT )                        INSERT  INTO @TempDeleteCI                      SELECT  ContentItemId                      FROM    dbo.Tabs                      WHERE   ( PortalID = @PortalID )                              AND ( CultureCode = @CultureCode )      -- delete all tabs in the portal that have been localized to the requested cultureCode    -- This will also delete related tabmodule records              DELETE  FROM dbo.Tabs              WHERE   ( PortalID = @PortalID )                      AND ( CultureCode = @CultureCode )          -- append ContentItems to be deleted from stale modules              INSERT  INTO @TempDeleteCI                      SELECT  ContentItemID                      FROM    dbo.ContentItems CI                      WHERE   EXISTS ( SELECT *                                       FROM   dbo.Modules M                                       WHERE  ( CI.ModuleID = M.ModuleID )                                              AND NOT EXISTS ( SELECT                                                                *                                                               FROM                                                                dbo.TabModules TM                                                               WHERE                                                                M.ModuleID = TM.ModuleID ) )      -- delete stale modules (these are modules that do not have a corresponding TabModules record,    -- in other words: modules that are not placed on any page anymore)              DELETE  FROM dbo.Modules              WHERE   NOT EXISTS ( SELECT *                                   FROM   dbo.TabModules                                   WHERE  dbo.Modules.ModuleID = dbo.TabModules.ModuleID )      -- finally delete all corresponding content items              DELETE  FROM dbo.ContentItems              WHERE   ContentItemID IN ( SELECT   ContentItemID                                         FROM     @TempDeleteCI )     AND ContentItemID NOT IN (SELECT ContentItemID FROM dbo.Modules)                COMMIT TRANSACTION DeleteTranslatedTabs            END TRY              BEGIN CATCH              IF @@TRANCOUNT > 0                   ROLLBACK TRANSACTION DeleteTranslatedTabs                  DECLARE @ErrorMessage NVARCHAR(4000);              DECLARE @ErrorSeverity INT;                SELECT  @ErrorMessage = ERROR_MESSAGE() ,                      @ErrorSeverity = ERROR_SEVERITY();                RAISERROR (@ErrorMessage, @ErrorSeverity, 1 );                  END CATCH               END"
1485,AIElearning_TestForm_Part_GetPositionAdd,"      CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_GetPositionAdd]   @TestId int,   @Position int,   @ParentId int  AS  DECLARE @OrderFirst int  SET @OrderFirst=0  IF NOT EXISTS (SELECT * FROM AIElearning_TestForm_Part WHERE TestId=@TestId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) )  SET @OrderFirst=0  ELSE  BEGIN  ------------------   DECLARE @OrderNo1 int   DECLARE @OrderMax int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AIElearning_TestForm_Part WHERE TestId=@TestId and  (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))   SET @OrderNo1 = (SELECT OrderNo FROM AIElearning_TestForm_Part WHERE TestId=@TestId and Id =  @Position  AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AIElearning_TestForm_Part WHERE TestId=@TestId and  ((ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo1 = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AIElearning_TestForm_Part WHERE TestId=@TestId and (OrderNo > @OrderNo1  AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AIElearning_TestForm_Part WHERE TestId=@TestId and  (OrderNo >= @OrderFirst AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AIElearning_TestForm_Part         Set  OrderNo=@TempOrderNo        Where TestId=@TestId and Id=@TempId        FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur  DEALLOCATE TempCur  END  select @OrderFirst            "
1486,GetRoleGroupByName,"CREATE PROCEDURE dbo.GetRoleGroupByName   @PortalID  int,   @RoleGroupName nvarchar(50)  AS   SELECT *    FROM dbo.RoleGroups    WHERE  PortalId = @PortalID      AND RoleGroupName = @RoleGroupName"
1487,AIElearning_SurveyUserQuestion_GetsResultByUserIdAndSurveyId,"CREATE PROC [dbo].[AIElearning_SurveyUserQuestion_GetsResultByUserIdAndSurveyId]      @userId INT,      @surveyId INT,      @surveyQuestionId INT  AS -- AIElearning_SurveyUserQuestion_GetsResultByUserIdAndSurveyId 2156,1105,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = ' (1=1)'  IF ( @userId > -1 )      SET @Condition = @Condition + ' AND su.UserId =' + STR(@userId)  IF ( @surveyId > -1 )      SET @Condition = @Condition + ' AND su.SurveyId  =' + STR(@surveyId)  IF ( @surveyQuestionId > -1 )      SET @Condition = @Condition + ' AND suq.SurveyQuestionId  =' + STR(@surveyQuestionId)  EXEC('  WITH #AIElearning_SurveyUserQuestion AS(   SELECT  suq.*, su.SurveyId, su.UserId, su.Mark, su.TotalMark, su.CompleteStatus  FROM    AIElearning_SurveyUserQuestion suq  INNER JOIN AIElearning_SurveyUser su ON suq.SurveyUserId = su.Id   WHERE   '+@Condition+')  SELECT *  FROM #AIElearning_SurveyUserQuestion  ')  "
1488,UpdateTabTranslationStatus,"CREATE PROCEDURE dbo.[UpdateTabTranslationStatus]   @TabId     int,      @LocalizedVersionGuid uniqueidentifier,   @LastModifiedByUserID int  AS   UPDATE dbo.Tabs    SET    LocalizedVersionGuid = @LocalizedVersionGuid,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate  = getdate()   WHERE  TabId = @TabId"
1489,GetPortalSpaceUsed,"CREATE PROCEDURE dbo.[GetPortalSpaceUsed]   @PortalId INT     -- Null|-1: Host files  AS   BEGIN    SELECT SUM(CAST(Size as bigint)) AS SpaceUsed    FROM dbo.Files    WHERE (IsNull(PortalID, -1) = IsNull(@PortalId, -1))   END"
1490,AISystem_Category_TrainingField_GetsBySearch,"CREATE PROC [dbo].[AISystem_Category_TrainingField_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Category_TrainingField AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Category_TrainingField       )         SELECT     *   FROM #AISystem_Category_TrainingField   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1491,DeleteDesktopModulePermission,CREATE PROCEDURE dbo.[DeleteDesktopModulePermission]   @DesktopModulePermissionID int  AS      DELETE FROM dbo.DesktopModulePermission      WHERE DesktopModulePermissionID = @DesktopModulePermissionID
1492,UpdateLegacyFolders,"CREATE PROCEDURE dbo.[UpdateLegacyFolders]  AS   UPDATE TOP (500) dbo.Folders    SET ParentID = (COALESCE(       (SELECT TOP 1       F2.FolderID        FROM dbo.Folders AS F2       WHERE SUBSTRING (F1.FolderPath, 1, LEN(F1.FolderPath) -         (CASE          WHEN CHARINDEX ('/', REVERSE(SUBSTRING(F1.FolderPath, 0, LEN(F1.FolderPath)))) != 0          THEN CHARINDEX ('/', REVERSE(SUBSTRING(F1.FolderPath, 0, LEN(F1.FolderPath))))          ELSE LEN(F1.FolderPath) END         )) = F2.FolderPath        AND (F2.PortalID = F1.PortalID OR (F1.PortalID IS NULL AND F2.PortalID IS NULL))        AND LEN(F1.FolderPath) > LEN(F2.FolderPath)       ORDER BY LEN(F2.FolderPath) DESC       ), -1))   FROM dbo.Folders AS F1   WHERE F1.ParentID IS NULL AND FolderPath <> ''"
1493,AISystem_UserInfo_GetsBySearchCount,"CREATE proc [dbo].[AISystem_UserInfo_GetsBySearchCount]   @username nvarchar(250),  @Limit int,  @Type int,  @Unitcode nvarchar(50),   @UnitChildcode nvarchar(max),   @JobTitlecode nvarchar(250),  @Status int,  @tungay datetime,  @denngay datetime,  @TypeLogin int  as  --[dbo].[AISystem_UserInfo_GetsBySearchCount] '',1,-1,'','','',-1,'01/01/1900','01/01/2900',-1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF (@username IS NOT NULL AND @username<>'')    set @condition = @condition + ' and (tblUser.Username like N''%' + @username + '%'' or  tblUser.EmployeeCode like N''%' + @username + '%'') '  IF(@Limit > 0)   set @condition = @condition +    ' And  ( tblUser.Limit= '+ STR(@Limit)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  ( tblUser.Type= '+ STR(@Type)+' )'  IF(@Unitcode IS NOT NULL AND @Unitcode<>'')   set @condition = @condition +    ' And  ( tblUser.Unitcode= '''+ @Unitcode+''' )'   IF(@UnitChildcode IS NOT NULL AND @UnitChildcode<>'')   --set @condition = @condition +    ' And  ( tblUser.UnitChildcode= '''+ @UnitChildcode+''' )'   set @condition = @condition +    ' And  ( tblUser.UnitChildcode in  (select code from AISystem_Category_Unit where id in ( select * from split('''+ @UnitChildcode+'''))) )'  IF(@JobTitlecode IS NOT NULL AND @JobTitlecode<>'')   set @condition = @condition +    ' And  ( tblUser.JobTitlecode= '''+ @JobTitlecode+''' )'  IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'  IF(@TypeLogin > 0)   set @condition = @condition +    ' And  ( tblUser.TypeLogin= '+ STR(@TypeLogin)+' )'  IF CONVERT(datetime,@tungay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate >= ''' + convert(nvarchar(23),@tungay,121) + ''''  IF CONVERT(datetime,@denngay ,121) > '01/01/1900'    set @condition = @condition + ' and tblUser.CreatedDate <= ''' + convert(nvarchar(23),@denngay,121) + ''''    exec('   select COUNT(*) from AISystem_UserInfo as tblUser where ' + @condition +'  ')  "
1494,GetTabAliasSkins,"CREATE PROCEDURE dbo.[GetTabAliasSkins]   (    @PortalID  int   )  AS   SELECT     t.TabId,     pa.PortalAliasId,     pa.HttpAlias,     t.SkinSrc,     t.CreatedByUserId,     t.CreatedOnDate,     t.LastModifiedByUserId,     t.LastModifiedOnDate   FROM dbo.TabAliasSkins t    INNER JOIN dbo.PortalAlias pa ON t.PortalAliasId = pa.PortalAliasId   WHERE pa.PortalID = @PortalID OR @PortalID = -1"
1495,AIElearning_Reimburse_GetMoney,"  CREATE proc [dbo].[AIElearning_Reimburse_GetMoney]    --[dbo].[AIElearning_Reimburse_GetMoney] 10000,aivietnam,'CDDN01'  @money float,  @UnitCode nvarchar(50),  @Jobtitle nvarchar(250)  as  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  if(@UnitCode <>'')   set @Condition=@Condition+' AND UnitCode='''+(@UnitCode)+''''  if(@money >-1)   set @Condition=@Condition+' AND StartMoney<='+str(@money)  if(@money >-1)   set @Condition=@Condition+' AND EndMoney >'+str(@money)  if(@Jobtitle <>'')   set @Condition=@Condition+' AND ('''+@Jobtitle+''' in (select * from dbo.split(listjobcode)))'    exec('select * from AIElearning_Reimburse where ' + @condition +'')   "
1496,CoreMessaging_GetMessageRecipientsByMessage,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageRecipientsByMessage]      @MessageID INT  AS   SELECT [RecipientID], [MessageID], [UserID], [Read], [Archived], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageRecipients   WHERE  [MessageID] = @MessageID"
1497,CoreMessaging_CreateMessageRecipientsForRole,"CREATE PROCEDURE dbo.[CoreMessaging_CreateMessageRecipientsForRole]      @MessageID int,         -- message id      @RoleIDs nvarchar(max), -- comma separated list of RoleIds   @CreateUpdateUserID INT -- create / update user id  AS  BEGIN            INSERT dbo.[CoreMessaging_MessageRecipients](     [MessageID],     [UserID],     [Read],     [Archived],              [CreatedByUserID],              [CreatedOnDate],              [LastModifiedByUserID],              [LastModifiedOnDate]              )     SELECT distinct        @MessageID,       UserID,       0,       0,                @CreateUpdateUserID , -- CreatedBy - int                GETDATE(), -- CreatedOn - datetime                @CreateUpdateUserID , -- LastModifiedBy - int                GETDATE() -- LastModifiedOn - datetime             FROM dbo.[vw_UserRoles] ur     INNER JOIN dbo.[SplitStrings_CTE](@RoleIDs,',') m on ur.RoleID = m.Item     WHERE ur.ExpiryDate >= getdate() OR ur.ExpiryDate IS NULL  END"
1498,GetModuleDefinitions,CREATE PROCEDURE dbo.[GetModuleDefinitions]  AS      SELECT *      FROM   dbo.ModuleDefinitions
1499,usp_6_5_1,"CREATE PROCEDURE usp_6_5_1  @vchAuthorLName        VARCHAR(40) = 'Bennet'  AS  SELECT au_lname + ', '+ au_fname, phone  FROM authors  WHERE au_lname = @vchAuthorLName"
1500,AISystem_IPCheck_CheckIPIsExists,CREATE proc [dbo].[AISystem_IPCheck_CheckIPIsExists]   @ip nvarchar(50)  as  -- AISystem_IPCheck_CheckIPIsExists '127.0.0.1'  select count(*) from AISystem_IPCheck where strIP  like '%' + @ip + '%'   
1501,AIElearning_SurveyUserQuestion_GetTotalUserBySubQuestionId,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetTotalUserBySubQuestionId]   @questionId int,  @subQuestionId int  as  -- AIElearning_SurveyUserQuestion_GetTotalUserBySubQuestionId 1080,3  select count(Distinct SurveyUserId) as TotalUser  from AIElearning_SurveyUserQuestion   where SurveyQuestionId = @questionId and (SUBSTRING(Answer,1,CHARINDEX('-',Answer)-1) = @subQuestionId)    "
1502,AdministratorRoleId,"-- new function to return RoleID for Administrators of the Portal passed in as parameter  CREATE FUNCTION dbo.[AdministratorRoleId](      @PortalId     Int -- Needs to be >= 0, otherwise false is returned  )    RETURNS     int  AS   BEGIN    DECLARE @adminRoleId int = 0    SELECT  @adminRoleId = AdministratorRoleId FROM dbo.[Portals] WHERE PortalID = @PortalId    RETURN  @adminRoleId   END"
1503,AISystem_Category_Unit_GetsByIndependent,"CREATE proc [dbo].[AISystem_Category_Unit_GetsByIndependent]   @ParentId int,  @Independent int  as  -- AISystem_Category_Unit_GetsByIndependent -1,1  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  if(@Independent > -1)   set @condition = @condition + ' and Independent =' +str(@Independent)  if(@ParentId > -1)   set @condition = @condition + ' and ParentId =' +str(@ParentId)   --  set @condition = @condition + ' and Status =1'    exec('SELECT * from AISystem_Category_Unit where ' + @condition)"
1504,GetElement,"CREATE FUNCTION dbo.[GetElement]  (   @ord AS INT,   @str AS VARCHAR(8000),   @delim AS VARCHAR(1)   )  RETURNS INT    AS    BEGIN   -- If input is invalid, return null.   IF  @str IS NULL    OR LEN(@str) = 0    OR @ord IS NULL    OR @ord < 1    -- @ord > [is the] expression that calculates the number of elements.    OR @ord > LEN(@str) - LEN(REPLACE(@str, @delim, '')) + 1    RETURN NULL      DECLARE @pos AS INT, @curord AS INT   SELECT @pos = 1, @curord = 1   -- Find next element's start position and increment index.   WHILE @curord < @ord    SELECT     @pos = CHARINDEX(@delim, @str, @pos) + 1,     @curord = @curord + 1   RETURN    CAST(SUBSTRING(@str, @pos, CHARINDEX(@delim, @str + @delim, @pos) - @pos) AS INT)  END"
1505,AIElearning_Class_Session_Lecturers_GetsbyUserid,"create proc [dbo].[AIElearning_Class_Session_Lecturers_GetsbyUserid]  @Userid int,  @SessionId int  as  select top(1)* from AIElearning_Class_Session_Lecturers where userid=@Userid and SessionId=@SessionId  SET QUOTED_IDENTIFIER OFF       "
1506,AISystem_UserInfo_GetsByUserId,"  CREATE proc [dbo].[AISystem_UserInfo_GetsByUserId]  @UserID int  as  --Select top(1) * from AISystem_UserInfo where   --UserID = @UserID  -- Minhhv sua  Select [Id]        ,[Limit]        ,[Type]        ,[TypeLogin]        ,[UnitCode]        ,[UnitChildCode]        ,[UnitChildPath]        ,[LevelCode]        ,[GroupJobTileCode]        ,[JobTitleCode]        ,[UserId]        ,[Username]        ,[Mastercode]        ,[EmployeeCode]        ,[Displayname]        ,[Email]        ,[Phone]        ,[Address]        ,[ProvincesId]        ,[DistrictId]        ,[Sex]        ,[BirthDate]        ,[Avatar]        ,[Money]        ,[BonusMoney]        ,[ResetKey]        ,[JobApp]        ,[JobAddress]        ,[JobLeve]        ,[CMND]        ,[CMND_Date]        ,[CMND_Issued]        ,[JobTitleStr]        ,[IntrolView]        ,[Note]        ,[LecturersCode]        ,[CreatedDate]        ,[UpdatedDate]        ,[Status]        ,[Keyword]        ,[InDate]        ,[OutDate]        ,[AppointDate]        ,[InDateCompany] from AISystem_UserInfo where   UserID = @UserID  SET QUOTED_IDENTIFIER OFF     "
1507,GetTabCustomAliases,"CREATE PROCEDURE dbo.[GetTabCustomAliases]   (    @PortalID  int   )  AS   SELECT     t.TabId,     Coalesce(trp.CultureCode, '') as CultureCode,     pa.HttpAlias   FROM dbo.Tabs t    INNER JOIN dbo.TabUrls trp ON trp.TabId = t.ParentId     INNER JOIN dbo.PortalAlias pa ON trp.PortalAliasId = pa.PortalAliasId    WHERE trp.PortalAliasUsage = 1 /* child tabs inherit */      AND (@portalId = t.PortalId OR @portalId = -1)      AND NOT EXISTS (SELECT tr2.TabId          FROM dbo.TabUrls tr2          WHERE tr2.TabId = t.TabId           AND tr2.CultureCode = trp.CultureCode         )"
1508,AIElearning_TestCampaign_RegistorUserTest_ReportCampaignId,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_ReportCampaignId]   @CampaignId int  as  --[dbo].[AIElearning_TestCampaign_RegistorUserTest_ReportCampaignId] 35  select  ru.RegistorId,ru.Id, r.Code [Macathi],r.Name [Tencathi],tf.Name [Khungdethi],  u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi],  jo.Title [Tenchucdanh],ru.Region [Vung],ru.Major [NghiepVu],  (select TOP(1)EndTime from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=ru.Id and Status=2 and RegistorId=r.Id  order by EndTime desc) [TgThi],   dbo.GetMarkTestCampaignResurl(ru.Id,r.Id) [DiemThi]     from AIElearning_TestCampaign_RegistorUser  ru  left join AIElearning_TestCampaign_Registor r  on ru.RegistorId=r.id   left join AIElearning_TestForm tf on r.TestFormId=tf.Id     left join AISystem_UserInfo u on u.UserId=ru.UserId    left join AISystem_Category_Unit su on su.Code=u.UnitCode  left join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where ru.CampaignId=@CampaignId order by  ru.RegistorId desc      SET ANSI_NULLS ON        "
1509,PublishTab,CREATE PROCEDURE dbo.[PublishTab]   @TabID INT  AS  BEGIN           UPDATE dbo.[Tabs] SET                          [HasBeenPublished] = 1          WHERE TabID = @TabID  END
1510,AISystem_IPCheck_GetsBySearch,"  create proc [dbo].[AISystem_IPCheck_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_IPCheck AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_IPCheck       )         SELECT     *   FROM #AISystem_IPCheck   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1511,AIElearning_SurveyUserQuestion_GetTotalUserBySurveyQuestionId,CREATE proc [dbo].[AIElearning_SurveyUserQuestion_GetTotalUserBySurveyQuestionId]   @surveyQuestionId int  as  -- AIElearning_SurveyUserQuestion_GetTotalUserBySurveyQuestionId 1050  select count(Distinct SurveyUserId) as TotalUser  from AIElearning_SurveyUserQuestion   where SurveyQuestionId = @surveyQuestionId  
1512,FitsExtendedPropertyPermission,"-- new function to determine, whether a user may view content of another users property,  -- if extended permissions (per social group or relationship) are specified  CREATE FUNCTION dbo.[FitsExtendedPropertyPermission](      @viewingUserId    Int,      @viewedUserID    Int,      @extendedPermissions nVarChar(2000)  )    RETURNS     Bit  AS   BEGIN    DECLARE @rolesStr    nVarChar(2000) = ''    DECLARE @reltnStr    nVarChar(2000) = ''    DECLARE @gStartPos   Int    DECLARE @rStartPos   Int    DECLARE @recCount    Int = 0    DECLARE @SQL         Int    If (@viewedUserID > 0 and Len(IsNull(@extendedPermissions,'')) > 2) BEGIN     SET @gStartPos = CHARINDEX('G:',@extendedPermissions) + 2     SET @rStartPos = CHARINDEX('R:',@extendedPermissions) + 2     if @gStartPos > @rStartPos BEGIN      SET @rolesStr = SUBSTRING(@extendedPermissions, @gStartPos, Len(@extendedPermissions) - @gStartPos)      if @rStartPos > 0 SET @reltnStr = SUBSTRING(@extendedPermissions, @rStartPos, @gStartPos - @rStartPos - 1)     END     If @gStartPos < @rStartPos BEGIN      SET @reltnStr = SUBSTRING(@extendedPermissions, @rStartPos, Len(@extendedPermissions) - @rStartPos)      if @gStartPos > 0 SET @rolesStr = SUBSTRING(@extendedPermissions, @gStartPos, @rStartPos - @gStartPos - 1)     END     If @rolesStr <> '' BEGIN      SET @rolesStr = ',' + SUBSTRING(@rolesStr,1, Len(@rolesStr) - CASE WHEN RIGHT(@RolesStr,1) = ';' THEN 1 ELSE 0 END)      SELECT @recCount = COUNT(1) FROM dbo.[UserRoles] WHERE UserID = @viewingUserId AND @rolesStr LIKE '%,' + Convert(nVarChar(10),RoleId) + ',%'     END     If @recCount = 0 AND @reltnStr <> '' BEGIN      SET @reltnStr = ',' + SUBSTRING(@reltnStr,1, Len(@reltnStr) - CASE WHEN RIGHT(@reltnStr,1) = ';' THEN 1 ELSE 0 END)      SELECT @recCount = COUNT(1) FROM dbo.[vw_RelatedUsers] WHERE UserID = @viewingUserId AND relatedUserID = @viewedUserId AND @reltnStr LIKE '%,' + Convert(nVarChar(10),RelationShipID) + ',%' AND Status = 2     END    END    RETURN CASE WHEN IsNull(@RecCount, 0) > 0 THEN 1 ELSE 0 END   END"
1513,AISystem_EmailTeamplate_GetsByCount,"CREATE proc [dbo].[AISystem_EmailTeamplate_GetsByCount]  @Keyword nvarchar(250),  @type int,  @unitcode nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  begin  set @Condition=@Condition+' AND  (Name LIKE N''%'+@Keyword+'%'' or Subject LIKE N''%'+@Keyword+'%'')'  end  if(@unitcode<>'')  set @Condition=@Condition+' AND UnitCode='''+@unitcode+''''  -- Mã chuyên m?c  if(@type<>-1)  begin  set @Condition=@Condition+' AND type='+str(@type)  end  exec('select COUNT(Id) from AISystem_EmailTemplate '+@Condition+' ')  SET QUOTED_IDENTIFIER OFF"
1514,GetProfileElement,"CREATE FUNCTION dbo.[GetProfileElement]  (   @fieldName AS NVARCHAR(100),   @fields AS NVARCHAR(4000),   @values AS NVARCHAR(4000)  )    RETURNS NVARCHAR(4000)    AS    BEGIN     -- If input is invalid, return null.   IF  @fieldName IS NULL    OR LEN(@fieldName) = 0    OR @fields IS NULL    OR LEN(@fields) = 0    OR @values IS NULL    OR LEN(@values) = 0    RETURN NULL     -- locate FieldName in Fields   DECLARE @fieldNameToken AS NVARCHAR(20)   DECLARE @fieldNameStart AS INTEGER, @valueStart AS INTEGER, @valueLength AS INTEGER     -- Only handle string type fields (:S:)   SET @fieldNameStart = CHARINDEX(@fieldName + ':S',@Fields,0)     -- If field is not found, return null   IF @fieldNameStart = 0 RETURN NULL   SET @fieldNameStart = @fieldNameStart + LEN(@fieldName) + 3     -- Get the field token which I've defined as the start of the field offset to the end of the length   SET @fieldNameToken =   SUBSTRING(@Fields,@fieldNameStart,LEN(@Fields)-@fieldNameStart)     -- Get the values for the offset and length   SET @valueStart = dbo.getelement(1,@fieldNameToken,':')   SET @valueLength = dbo.getelement(2,@fieldNameToken,':')     -- Check for sane values, 0 length means the profile item was stored, just no data   IF @valueLength = 0 RETURN ''     -- Return the string   RETURN SUBSTRING(@values, @valueStart+1, @valueLength)  END"
1515,AISystem_Subject_Lesson_GetsBySearchCount,"create PROC [dbo].[AISystem_Subject_Lesson_GetsBySearchCount]   @docGroupId int,  @status int  as  -- AISystem_Subject_Lesson_GetsBySearchCount 1,1    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@docGroupId > -1)   set @Condition = @Condition + 'and SubjectId = ' +str(@docGroupId)   if(@status > -1)   set @Condition = @Condition + ' and Status = ' +str(@status)    exec('   Select Count(Id)    from AISystem_Subject_Lesson   where ' + @Condition+'    ')    "
1516,AISystem_UserInfo_GetsByUsername,"CREATE proc [dbo].[AISystem_UserInfo_GetsByUsername]  @Username nvarchar(250)  as  -- AISystem_UserInfo_GetsByUsername 'nam19'  -- Hainv cập nhật ngày 22/01/2018 thêm cái UserID > 0  SELECT  ui.*, cu.Title AS DonVi, lv.Title AS Capbac  FROM    AISystem_UserInfo ui  LEFT JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code  LEFT JOIN dbo.AISystem_Level lv ON ui.LevelCode = lv.Code   WHERE ui.Username = @Username and UserID > 0    SET QUOTED_IDENTIFIER OFF       "
1517,DeleteTabUrl,"CREATE PROCEDURE dbo.[DeleteTabUrl]    @TabID    int,   @SeqNum    int  AS   DELETE FROM dbo.TabUrls   WHERE TabId = @TabID AND SeqNum = @SeqNum"
1518,AISystem_Category_TestForm_GetInfoById,create PROC [dbo].[AISystem_Category_TestForm_GetInfoById]  @Id int  as  select Top(1) * from AISystem_Category_TestForm where Id=@Id  SET QUOTED_IDENTIFIER OFF         
1519,AddPropertyDefinition,"CREATE PROCEDURE dbo.[AddPropertyDefinition]   @PortalId int,   @ModuleDefId int,   @DataType int,   @DefaultValue nvarchar(max),   @PropertyCategory nvarchar(50),   @PropertyName nvarchar(50),   @ReadOnly bit,   @Required bit,   @ValidationExpression nvarchar(2000),   @ViewOrder int,   @Visible bit,      @Length int,      @DefaultVisibility int,   @CreatedByUserID int    AS   DECLARE @PropertyDefinitionId int     SELECT @PropertyDefinitionId = PropertyDefinitionId    FROM   dbo.ProfilePropertyDefinition    WHERE  (PortalId = @PortalId OR (PortalId IS NULL AND @PortalId IS NULL))     AND PropertyName = @PropertyName        IF @vieworder=-1    BEGIN     SELECT @vieworder = MAX(ViewOrder) + 1      FROM dbo.ProfilePropertyDefinition    END     IF @PropertyDefinitionId IS NULL    BEGIN     INSERT dbo.ProfilePropertyDefinition (       PortalId,       ModuleDefId,       Deleted,       DataType,       DefaultValue,       PropertyCategory,       PropertyName,       ReadOnly,       Required,       ValidationExpression,       ViewOrder,       Visible,       Length,                      DefaultVisibility,       [CreatedByUserID],       [CreatedOnDate],       [LastModifiedByUserID],       [LastModifiedOnDate]        )      VALUES (       @PortalId,       @ModuleDefId,       0,       @DataType,       @DefaultValue,       @PropertyCategory,       @PropertyName,       @ReadOnly,       @Required,       @ValidationExpression,       @ViewOrder,       @Visible,       @Length,                      @DefaultVisibility,       @CreatedByUserID,         getdate(),         @CreatedByUserID,         getdate()      )       SELECT @PropertyDefinitionId = SCOPE_IDENTITY()    END   ELSE    BEGIN     UPDATE dbo.ProfilePropertyDefinition       SET DataType = @DataType,       ModuleDefId = @ModuleDefId,       DefaultValue = @DefaultValue,       PropertyCategory = @PropertyCategory,       ReadOnly = @ReadOnly,       Required = @Required,       ValidationExpression = @ValidationExpression,       ViewOrder = @ViewOrder,       Deleted = 0,       Visible = @Visible,       Length = @Length,                      DefaultVisibility = @DefaultVisibility,       [LastModifiedByUserID] = @CreatedByUserID,        [LastModifiedOnDate] = getdate()      WHERE PropertyDefinitionId = @PropertyDefinitionId    END       SELECT @PropertyDefinitionId"
1520,usp_6_11,"CREATE PROCEDURE usp_6_11      @vchTitle    varchar(80),      @intYTDSales    int OUTPUT      AS      SELECT     @intYTDSales = ytd_sales      FROM     titles      WHERE     title = @vchTitle        RETURN 0"
1521,AISystem_IPCheck_GetsBySearchCount,create proc [dbo].[AISystem_IPCheck_GetsBySearchCount]  as  select COUNT(*) from AISystem_IPCheck    SET QUOTED_IDENTIFIER OFF     
1522,AIElearning_SurveyUserQuestion_UpdateAnswers,"CREATE proc [dbo].[AIElearning_SurveyUserQuestion_UpdateAnswers]  @questionId int,  @surveyUserId int,  @answer nvarchar(max)  AS    DECLARE @type AS int  select @type = Type from AIElearning_SurveyQuestion where Id= @questionId   -- AIElearning_SurveyUserQuestion_UpdateAnswers 1080,23,'2-2',1    --Cập nhật theo loại: 1(chọn 1), 2(chọn nhiều), 3(kết hợp chọn một), 4(kết hợp chọn nhiều), 5(ma trận chọn 1), 6(ma trận chọn nhiều), 7(Tự luận)    IF(@type = 1 or @type=7 or @type = 3)   --kiểm tra câu hỏi đã được trả lời chưa   IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId)>0)    IF((@answer is null or @answer='') and @type = 7 )     DELETE FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId    ELSE     UPDATE AIElearning_SurveyUserQuestion SET Answer = @answer, CreatedDate = getdate() WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId   ELSE    INSERT INTO AIElearning_SurveyUserQuestion VALUES(@questionId,@surveyUserId,@answer, getdate())    ELSE IF(@type = 4 or @type = 2)   IF(CHARINDEX('-', @answer)>0)   --nếu là câu hỏi khác    --kiểm tra câu hỏi đã được trả lời chưa    IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer) >0)     DELETE FROM AIElearning_SurveyUserQuestion WHERE  SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer      ELSE IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and SUBSTRING(Answer,1,1)='0')>0)     UPDATE AIElearning_SurveyUserQuestion SET Answer = @answer, CreatedDate = getdate()  WHERE  SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and SUBSTRING(Answer,1,1)='0'    ELSE     INSERT INTO AIElearning_SurveyUserQuestion VALUES(@questionId,@surveyUserId,@answer, getdate())   ELSE    --kiểm tra câu hỏi đã được trả lời chưa    IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer) >0)     DELETE FROM AIElearning_SurveyUserQuestion WHERE  SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer    ELSE     INSERT INTO AIElearning_SurveyUserQuestion VALUES(@questionId,@surveyUserId,@answer, getdate())       ELSE IF(@type = 5)    --kiểm tra câu hỏi đã được trả lời chưa    IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and (SUBSTRING( Answer,1,(CHARINDEX('-', Answer)-1))=SUBSTRING( @answer,1,(CHARINDEX('-', @answer)-1))))>0)     UPDATE AIElearning_SurveyUserQuestion SET Answer = @answer, CreatedDate = getdate()  WHERE  SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and SUBSTRING( Answer,1,(CHARINDEX('-', Answer)-1)) = SUBSTRING( @answer,1,(CHARINDEX('-', @answer)-1))    ELSE     INSERT INTO AIElearning_SurveyUserQuestion VALUES(@questionId,@surveyUserId,@answer, getdate())    ELSE IF(@type = 6)  --kiểm tra câu hỏi đã được trả lời chưa    IF((SELECT COUNT(*)  FROM AIElearning_SurveyUserQuestion WHERE SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer) >0)     DELETE FROM AIElearning_SurveyUserQuestion WHERE  SurveyUserId = @surveyUserId and SurveyQuestionId = @questionId and Answer=@answer    ELSE     INSERT INTO AIElearning_SurveyUserQuestion VALUES(@questionId,@surveyUserId,@answer, getdate())         "
1523,GetProfileFieldSQL,"-- results order added  CREATE FUNCTION dbo.[GetProfileFieldSQL]  (      @PortalID   Int,      @TemplateSql nVarChar(max)  )   RETURNS   nVarChar(max)  AS   BEGIN    DECLARE @sql nVarChar(max);      SELECT @sql = COALESCE(@sql + ',','') + '[' + PropertyName + ']' + @TemplateSql     FROM dbo.[ProfilePropertyDefinition]     WHERE IsNull(PortalID, -1) = IsNull(@PortalID, -1)       AND Deleted = 0    ORDER BY ViewOrder    RETURN (@sql)   END"
1524,AISystem_EmailTeamplate_GetsBySearch,"CREATE proc [dbo].[AISystem_EmailTeamplate_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @type int,  @unitcode nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND  (Name LIKE N''%'+@Keyword+'%'' or Subject LIKE N''%'+@Keyword+'%'')'  -- Mã chuyên m?c  if(@type<>-1)  set @Condition=@Condition+' AND type='+str(@type)  --  if(@unitcode<>'')  set @Condition=@Condition+' AND UnitCode='''+@unitcode+''''    exec('    WITH #AISystem_EmailTemplate AS(    SELECT ROW_NUMBER() OVER (ORDER BY id desc) AS RowNumber,             *     from AISystem_EmailTemplate '+@Condition+'    )         SELECT     *   FROM #AISystem_EmailTemplate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1525,DeleteModulePermissionsByUserID,"CREATE procedure dbo.[DeleteModulePermissionsByUserID]   @PortalID int,   @UserID int  AS   DELETE FROM dbo.ModulePermission    FROM dbo.ModulePermission MP     INNER JOIN dbo.Modules AS M ON MP.ModuleID = M.ModuleID    WHERE M.PortalID = @PortalID    AND MP.UserID = @UserID"
1526,CoreMessaging_CreateMessageReply,"CREATE PROCEDURE dbo.[CoreMessaging_CreateMessageReply]      @ConversationID    INT,           -- parent message id   @PortalID   INT,   --portalID of message      @Body               nvarchar(max), -- message body      @SenderUserID       INT,           -- create / update user id      @From               nvarchar(200), -- message from   @CreateUpdateUserID INT            -- create / update user id  AS      DECLARE @ReplyAllAllowed BIT      DECLARE @NewMessageID INT      DECLARE @OriginalSenderUserID INT      DECLARE @OriginalTo nvarchar(2000)      DECLARE @OriginalSubject nvarchar(400)     --Was Sender a Recipient in the Original Message.   SELECT @ReplyAllAllowed = [ReplyAllAllowed],          @OriginalSenderUserID = [SenderUserID],       @OriginalTo = REPLACE(REPLACE([TO] + ',' + [FROM], ',' + @From, ''), @From + ',', ''),       @OriginalSubject = [Subject]   FROM dbo.CoreMessaging_Messages m   INNER JOIN dbo.CoreMessaging_MessageRecipients mr ON m.MessageID = mr.MessageID   AND m.MessageID = @ConversationID   AND mr.UserID = @SenderUserID     --Reply can only be create if Sender was Recipient of Orginial message   IF @ReplyAllAllowed IS NULL   BEGIN    SELECT -1    RETURN   END     --Create new message   INSERT dbo.CoreMessaging_Messages(       [PortalID],         [To],       [From],       [Subject],       [Body],       [ConversationID],       [ReplyAllAllowed],       [SenderUserID],                      [CreatedByUserID],                      [CreatedOnDate],                      [LastModifiedByUserID],                      [LastModifiedOnDate]                      )              VALUES  (       @PortalID,              @OriginalTo,       @From,          @OriginalSubject,       @Body,       @ConversationID,       @ReplyAllAllowed,       @SenderUserID,                      @CreateUpdateUserID , -- CreatedBy - int                      GETUTCDATE() , -- CreatedOn - datetime                      @CreateUpdateUserID , -- LastModifiedBy - int                      GETDATE() -- LastModifiedOn - datetime                      )     SELECT @NewMessageID = SCOPE_IDENTITY()     IF (@ReplyAllAllowed = 0) --original message was sent to a Role, reply will be sent to the original sender only   BEGIN    INSERT INTO dbo.CoreMessaging_MessageRecipients            ( [MessageID],              [UserID],              [Read],              [Archived],              CreatedByUserID,              CreatedOnDate,              LastModifiedByUserID,              LastModifiedOnDate            )    VALUES  ( @NewMessageID, -- MessageID - int              @OriginalSenderUserID, -- UserID - int              0, -- Read - bit              0, -- Archived - bit              @CreateUpdateUserID , -- CreatedByUserID - int              GETDATE() , -- CreatedOnDate - datetime              @CreateUpdateUserID , -- LastModifiedByUserID - int              GETDATE()  -- LastModifiedOnDate - datetime            )                    IF @OriginalSenderUserID <> @SenderUserID          BEGIN              INSERT INTO dbo.CoreMessaging_MessageRecipients                ( [MessageID],                  [UserID],                  [Read],                  [Archived],                  CreatedByUserID,                  CreatedOnDate,                  LastModifiedByUserID,                  LastModifiedOnDate                )        VALUES  ( @NewMessageID, -- MessageID - int                  @SenderUserID, -- UserID - int                  1, -- Read - bit                  0, -- Archived - bit                  @CreateUpdateUserID , -- CreatedByUserID - int                  GETDATE() , -- CreatedOnDate - datetime                  @CreateUpdateUserID , -- LastModifiedByUserID - int                  GETDATE()  -- LastModifiedOnDate - datetime                )          END   END   ELSE --Reply should be sent to all the original Recipients   BEGIN    INSERT dbo.CoreMessaging_MessageRecipients(     [MessageID],     [UserID],     [Read],     [Archived],              [CreatedByUserID],          "
1527,CoreMessaging_CreateMessageReply,"    [CreatedOnDate],              [LastModifiedByUserID],              [LastModifiedOnDate]              )     SELECT       @NewMessageID,       UserID,       0,       0,                @CreateUpdateUserID , -- CreatedBy - int                GETDATE() , -- CreatedOn - datetime                @CreateUpdateUserID , -- LastModifiedBy - int                GETDATE() -- LastModifiedOn - datetime             FROM dbo.CoreMessaging_MessageRecipients             WHERE MessageID = @ConversationID   END     SELECT  @NewMessageID"
1528,AddUserRole,"CREATE PROCEDURE dbo.[AddUserRole]   @PortalID  int,   @UserID   int,   @RoleId   int,   @Status   int,   @IsOwner  bit,   @EffectiveDate datetime = null,   @ExpiryDate  datetime = null,   @CreatedByUserID  int  AS    DECLARE @UserRoleId int    SELECT @UserRoleId = null    SELECT @UserRoleId = UserRoleId   FROM dbo.UserRoles   WHERE  UserId = @UserID AND RoleId = @RoleId     IF @UserRoleId IS NOT NULL   BEGIN    UPDATE dbo.UserRoles     SET       Status = @Status,      IsOwner = @IsOwner,      ExpiryDate = @ExpiryDate,      EffectiveDate = @EffectiveDate,      IsTrialUsed = 1,      LastModifiedByUserID = @CreatedByUserID,      LastModifiedOnDate = getdate()     WHERE  UserRoleId = @UserRoleId    SELECT @UserRoleId   END  ELSE   BEGIN    INSERT INTO dbo.UserRoles (     UserId,     RoleId,     Status,     IsOwner,     EffectiveDate,     ExpiryDate,     IsTrialUsed,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate      )    VALUES (     @UserID,     @RoleId,     @Status,     @IsOwner,     @EffectiveDate,     @ExpiryDate,     1,     @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate()      )     SELECT SCOPE_IDENTITY()      END"
1529,GetRoles,"CREATE PROCEDURE dbo.[GetRoles]  AS  BEGIN       SELECT R.*,            (SELECT COUNT(*) FROM dbo.[UserRoles] U       WHERE U.RoleID = R.RoleID        AND U.Status = 1        AND (U.EffectiveDate < GETDATE() OR U.EffectiveDate IS NULL)                      AND (U.ExpiryDate > GETDATE() OR U.ExpiryDate IS NULL)) AS UserCount       FROM dbo.[Roles] AS R       WHERE RoleID >= 0 -- ignore virtual roles. Note: might be removed, after controller has been adjusted  END"
1530,usp_6_12,CREATE PROCEDURE usp_6_12  @intValue INT OUTPUT  AS  SELECT @intValue = @intValue * @intValue  RETURN 0
1531,FormattedString,"-- added for easier string handling  CREATE FUNCTION dbo.[FormattedString]  (      @InputStr nVarChar(2000), -- might be null or empty, in this case an empty string is returned (format ignored)!      @Format   nVarChar(2000)  -- not null or empty, contains token @@@  )   RETURNS   nVarChar(4000)  -- replaced string, e.g. FormattedString('World', 'Hello @0!') returns 'Hello World!'   AS  BEGIN   DECLARE @RetVal AS nVarChar(4000) = ''   IF NOT IsNull(@InputStr,'') = ''    SET @retVal = REPLACE(@Format, N'@0', @InputStr)   RETURN @RetVal  END"
1532,AISystem_IPTestCampaign_GetsBySearchCount,CREATE proc [dbo].[AISystem_IPTestCampaign_GetsBySearchCount]  @UnitCode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@UnitCode<>'')  set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''    exec('select COUNT(Id) from AISystem_IPTestCampaign '+@Condition)  SET QUOTED_IDENTIFIER OFF   
1533,UpdateSkin,"CREATE PROCEDURE dbo.[UpdateSkin]     @SkinID   int,   @SkinSrc  nvarchar(200)    AS   UPDATE dbo.Skins    SET     SkinSrc = @SkinSrc   WHERE SkinID = @SkinID"
1534,AIElearning_LearingAndLecture_DeleteByParam,"create proc [dbo].[AIElearning_LearingAndLecture_DeleteByParam]   @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50)  as  begin  delete from AIElearning_LearingAndLecture where (UserName = @UserName or @UserName ='') and (ReportYear = @ReportYear  or @ReportYear =-1) and (UnitCode = @UnitCode or @UnitCode = '')  end"
1535,AISystem_Subject_Lesson_ChangePosition,"CREATE PROC [dbo].[AISystem_Subject_Lesson_ChangePosition]   @id int,  @move int  as  begin  DECLARE @above AS int  DECLARE @below AS int  DECLARE @orderNo AS int  DECLARE @aboveId AS int  DECLARE @belowId AS int  DECLARE @subjectId as int    select @orderNo = OrderNo from AISystem_Subject_Lesson where Id= @id   SET @above = (@orderNo -1)  SET @below = (@orderNo + 1)  select @subjectId = SubjectId from AISystem_Subject_Lesson where Id= @id    select @aboveId = Id from AISystem_Subject_Lesson where OrderNo= @above  and SubjectId = @subjectId  select @belowId = Id from AISystem_Subject_Lesson where OrderNo= @below and SubjectId = @subjectId  --1: Move up  if(@move = 1)  begin  update AISystem_Subject_Lesson set OrderNo= @below where Id= @id  update AISystem_Subject_Lesson set OrderNo= @orderNo where Id= @belowId    --0: Move down  end  if(@move = 0)  begin  update AISystem_Subject_Lesson set OrderNo= @above where Id= @id  update AISystem_Subject_Lesson set OrderNo= @orderNo where Id= @aboveId  end  end      "
1536,AIElearning_Class_GetByPrimaryCategoryId,"CREATE PROC [dbo].[AIElearning_Class_GetByPrimaryCategoryId]  @CategoryId int,  @KeyWord nvarchar(250),  @IsSearch int,  @strUnitCode nvarchar(max),  @JobTitleCode nvarchar(50)  AS   -- AIElearning_Class_GetByPrimaryCategoryId 28 , '', 0, '(''-1'')', 0  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')    set @condition = @condition + ' and (l.Unitcode in ' + @strUnitCode + ' )'  if(@JobTitleCode <>'')   set @condition = @condition  + ' and l.ObjectType =''' + @JobTitleCode + ''''  IF(@CategoryId>0)  Begin   DECLARE @ChildId AS NVARCHAR(MAX)   select @ChildId=ChildId from AISystem_Category_Subject where id=@CategoryId   --set @condition = @condition +' and ( select count(Id) from AISystem_Category where ID in('+@ChildId+' ) and ('',''+l.SecondCategoryId+'','') like (''%,''+cast(AISystem_Category.Id as nvarchar(50))+'',%''))>0'   --set @condition = @condition  + ' and l.Id IN (select distinct ClassId from AIElearning_ClassCategory where CategoryId in ('+@ChildId+'))'   set @condition = @condition  + ' and l.CateSubjectId in ('+@ChildId+')'     end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        SELECT count(l.Id)         from  AIElearning_Class AS l          INNER JOIN          CONTAINSTABLE(AIElearning_Class,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=l.Id            where ' + @Condition + ' and l.Status = 1 and l.Type in (1,2,4) and IsPublic = 1      ')     end    ELSE     Begin      exec('        SELECT count(l.Id)         from  AIElearning_Class AS l          INNER JOIN          FREETEXTTABLE(AIElearning_Class,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=l.Id            where ' + @Condition + ' and l.Status = 1 and l.Type in (1,2,4) and IsPublic = 1      ')     end   end  ELSE   BEGIN    exec('     SELECT COUNT(l.Id)     from  AIElearning_Class AS l       where ' + @Condition + ' and l.Status = 1 and l.Type in (1,2,4) and IsPublic = 1     ')   end    SET QUOTED_IDENTIFIER OFF  "
1537,AIElearning_TestCampaign_RegistorUserTest_GetNotStaff,"CREATE proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetNotStaff]   @TestRegistorId int,  @status int  as  select * from AIElearning_TestCampaign_RegistorUserTest where Status=@status and RegistorId=@TestRegistorId and id not in (select RegistorUserTestId from AIElearning_TestCampaign_RegistorStaffTest where TestRegistorId=@TestRegistorId)  "
1538,GetDesktopModulePermissions,CREATE PROCEDURE dbo.[GetDesktopModulePermissions]  AS      SELECT *      FROM dbo.vw_DesktopModulePermissions
1539,GetPortalRoles,"CREATE PROCEDURE dbo.[GetPortalRoles]      @PortalId     Int -- Null: Host Roles  AS  BEGIN      SELECT R.*,            (SELECT COUNT(*) FROM dbo.[UserRoles] U       WHERE U.RoleID = R.RoleID        AND U.Status = 1        AND (U.EffectiveDate < GETDATE() OR U.EffectiveDate IS NULL)                      AND (U.ExpiryDate > GETDATE() OR U.ExpiryDate IS NULL)) AS UserCount       FROM dbo.[Roles] R      WHERE (R.PortalId = @PortalId OR R.PortalId is null)        AND (R.RoleId >= 0) -- DNN-4288: hide system role atm to prevent duplicates. Might be removed, after API has been adopt      ORDER BY R.RoleName   OPTION (OPTIMIZE FOR (@PortalId UNKNOWN))  END"
1540,sp_update_statistics,"CREATE PROCEDURE sp_update_statistics  AS  SET NOCOUNT ON  /* Turns of row count returns */  /* Declare the variables */  DECLARE @dtmTimeStart        DATETIME  DECLARE @dtmTimeEnd        DATETIME  DECLARE @intHours        INT  DECLARE @intMinutes        INT  DECLARE @intSeconds        INT  DECLARE @chrHours        CHAR(2)  DECLARE @chrMinutes        CHAR(2)  DECLARE @chrSeconds        CHAR(2)  DECLARE @chrFinalTime        CHAR(8)  DECLARE @vchRetMessage        VARCHAR(64)  DECLARE @intCurrentUpdateID    INT  DECLARE @intMaxUpdateID    INT  DECLARE @vchTableName        VARCHAR(32)  DECLARE @vchSQLStatement    VARCHAR(255)    /* Get the current time.  This will be used to determine how long the */  /* process runs.  */    SELECT     @dtmTimeStart = GETDATE()    /* Drop the temp table if it exists */    IF EXISTS (SELECT name FROM sysobjects WHERE name = 'IndexUpdate')  BEGIN      DROP TABLE IndexUpdate  END  /*  Create the temp table */    CREATE TABLE IndexUpdate  (      UpdateID    INT IDENTITY(1, 1),      TableName    VARCHAR(32),      Done        BIT,      CompletedOn    DATETIME NULL  )    /* Get all the user table names */    INSERT INTO IndexUpdate(TableName, Done)      SELECT     CONVERT(VARCHAR(32), OBJECT_NAME(id)), 0      FROM     sysindexes      WHERE     (indid = 0 OR indid = 1) AND          id > 1000      ORDER     BY rows    /* Get the id of the last table to be updated */    SELECT    @intMaxUpdateID = MAX(UpdateID)  FROM     IndexUpdate    SELECT    @intCurrentUpdateID = 0    /* Loop through the table and update the statistics */    WHILE     (@intCurrentUpdateID <= @intMaxUpdateID)  BEGIN      SELECT     @intCurrentUpdateID = MIN(UpdateID)      FROM     IndexUpdate      WHERE     Done = 0        SELECT    @vchTableName = TableName      FROM    IndexUpdate      WHERE    UpdateID = @intCurrentUpdateID        SELECT     @vchSQLStatement = 'UPDATE STATISTICS '+ @vchTableName      EXEC     ( @vchSQLStatement )        UPDATE    IndexUpdate      SET    Done = 1,          CompletedOn = GETDATE()      WHERE    UpdateID = @intCurrentUpdateID  END  /* Get and display the final time figure. */    SELECT @dtmTimeEnd = GETDATE()  SELECT @intSeconds = (DATEDIFF(ss, @dtmTimeStart, @dtmTimeEnd) % 60)  SELECT @intMinutes = (DATEDIFF(ss, @dtmTimeStart, @dtmTimeEnd) / 60)                                                               IF (@intMinutes > 59)  BEGIN      SELECT @intHours = @intMinutes / 60      SELECT @intMinutes = @intMinutes % 60  END  ELSE  BEGIN      SELECT @intHours = 0  END    IF (@intSeconds < 10)  BEGIN      SELECT @chrSeconds = '0'+ CONVERT (CHAR(1), @intSeconds)  END  ELSE  BEGIN      SELECT @chrSeconds =  CONVERT (CHAR(2), @intSeconds)  END    IF (@intMinutes < 10)  BEGIN      SELECT @chrMinutes = '0'+ CONVERT (CHAR(1), @intMinutes)  END  ELSE  BEGIN      SELECT @chrMinutes =  CONVERT (CHAR(2), @intMinutes)  END    IF (@intHours < 10)  BEGIN      SELECT @chrHours = '0'+ CONVERT (CHAR(1), @intHours)  END  ELSE  BEGIN      SELECT @chrHours =  CONVERT (CHAR(2), @intHours)  END    SELECT @chrFinalTime = @chrHours + ':'+ @chrMinutes + ':'+ @chrSeconds  SELECT @vchRetMessage = 'Time to update statistics: '+ @chrFinalTime  PRINT ''  PRINT @vchRetMessage"
1541,AddSkin,"CREATE PROCEDURE dbo.AddSkin   @SkinPackageID  int,      @SkinSrc   nvarchar(200)    AS   BEGIN    IF NOT EXISTS (     SELECT 1 FROM dbo.Skins S      WHERE S.SkinPackageID = @SkinPackageID AND S.SkinSrc = @SkinSrc     )     BEGIN      INSERT INTO dbo.Skins (SkinPackageID, SkinSrc)      VALUES (@SkinPackageID, @SkinSrc)     END   END      SELECT SkinID FROM dbo.Skins S    WHERE S.SkinPackageID = @SkinPackageID AND S.SkinSrc = @SkinSrc"
1542,TemplatedString,"-- added for easier string handling  CREATE FUNCTION dbo.[TemplatedString]  (      @template nVarChar(3500), -- use tokens @1, @2, @3, @4, @5 to be replaced by param1 .. param5      @param1   nVarChar( 100) = '', -- empty param values will just remove token!   @param2   nVarChar( 100) = '',   @param3   nVarChar( 100) = '',   @param4   nVarChar( 100) = '',   @param5   nVarChar( 100) = ''  )   RETURNS   nVarChar(4000)  AS  BEGIN      RETURN REPLACE(     REPLACE(      REPLACE(       REPLACE(        REPLACE(IsNull(@template, ''),           N'@1', IsNull(@param1,'')),          N'@2', IsNull(@param2,'')),         N'@3', IsNull(@param3,'')),        N'@4', IsNull(@param4,'')),          N'@5', IsNull(@param5,''))  END"
1543,AISystem_IPTestCampaign_GetsBySearch,"  CREATE proc [dbo].[AISystem_IPTestCampaign_GetsBySearch]  @pageIndex int,  @pageSize int,  @UnitCode nvarchar(50)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@UnitCode<>'')  set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  exec('    WITH #AISystem_IPTestCampaign AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_IPTestCampaign '+@Condition +'      )         SELECT     *   FROM #AISystem_IPTestCampaign   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1544,Messaging_GetNextMessageForDispatch,"CREATE PROCEDURE dbo.[Messaging_GetNextMessageForDispatch]    @SchedulerInstance uniqueidentifier  AS   Declare  @target_messageID int     SELECT @target_messageID =  MessageID FROM Messaging_Messages WHERE EmailSent = 0  AND     (EmailSchedulerInstance is NULL or EmailSchedulerInstance= '00000000-0000-0000-0000-000000000000')    AND status not in  (0,3) ORDER BY Date DESC    Update Messaging_Messages set EmailSchedulerInstance = @SchedulerInstance  where MessageID = @target_messageID  select * from Messaging_Messages where MessageID = @target_messageID"
1545,GetUsersByDisplayName,"CREATE PROCEDURE dbo.[GetUsersByDisplayName]      @PortalID  int,      @NameToMatch nvarchar(256),      @PageIndex  int,      @PageSize  INT,      @IncludeDeleted     bit,      @SuperUsersOnly     bit    AS   BEGIN    -- Set the page bounds    DECLARE @PageLowerBound INT    DECLARE @PageUpperBound INT    SET @PageLowerBound = @PageSize * @PageIndex    SET @PageUpperBound = @PageSize - 1 + @PageLowerBound      -- Create a temp table TO store the select results    CREATE TABLE #PageIndexForUsers    (     IndexId int IDENTITY (0, 1) NOT NULL,     UserId int    )      -- Insert into our temp table    INSERT INTO #PageIndexForUsers (UserId)     SELECT UserId FROM dbo.vw_Users      WHERE  DisplayName LIKE @NameToMatch      AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0           OR IsDeleted Is NULL)             AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      AND ( PortalId = @PortalID OR (@PortalID is null ))     ORDER BY DisplayName      SELECT  *    FROM dbo.vw_Users u,       #PageIndexForUsers p    WHERE  u.UserId = p.UserId      AND (IsDeleted <= CASE @IncludeDeleted WHEN 0 THEN 0 ELSE 1 END         --less than equal done to cover IsDeleted in (1,0) for IncludeDeleted...else just IsDeleted = 0           OR IsDeleted Is NULL)             AND IsSuperUser >= CASE @SuperUsersOnly WHEN 1 THEN 1 ELSE 0 END      AND ( PortalId = @PortalID OR (@PortalID is null ))      AND p.IndexId >= @PageLowerBound AND p.IndexId <= @PageUpperBound    ORDER BY u.DisplayName      SELECT  TotalRecords = COUNT(*)    FROM    #PageIndexForUsers   END"
1546,AISystem_Subject_Lesson_DeleteAndUpdatePosition,CREATE PROC [dbo].[AISystem_Subject_Lesson_DeleteAndUpdatePosition]   @id int  as  begin  DECLARE @orderNo AS int  DECLARE @subjectId AS int  select @subjectId = SubjectId from AISystem_Subject_Lesson where Id= @id   select @orderNo = OrderNo from AISystem_Subject_Lesson where Id= @id   delete from AISystem_Subject_Lesson where Id = @id  update AISystem_Subject_Lesson set OrderNo = (OrderNo-1) where OrderNo > @orderNo and SubjectId =@subjectId  end        
1547,AIElearning_Certificate_DeleteByCertificateId,create proc [dbo].[AIElearning_Certificate_DeleteByCertificateId]  @itemid int  as  delete AIElearning_Certificate_ClassDone where CertificateId=@itemid  
1548,CoreMessaging_GetMessageRecipientsByMessageAndUser,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageRecipientsByMessageAndUser]      @MessageID INT,      @UserID INT  AS   SELECT [RecipientID], [MessageID], [UserID], [Read], [Archived], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageRecipients   WHERE  [MessageID] = @MessageID   AND   [UserID] = @UserID"
1549,AIElearning_Question_Media_GetMaxOrderNo,"CREATE proc [dbo].[AIElearning_Question_Media_GetMaxOrderNo]   @questionId int  as  begin  select ISNULL(max(OrderNo),'0')   from AIElearning_Question_Media   WHERE QuestionId=@questionId   end  "
1550,DeleteScopeType,CREATE PROCEDURE dbo.[DeleteScopeType]    @ScopeTypeId   int  AS   DELETE FROM dbo.Taxonomy_ScopeTypes   WHERE ScopeTypeId = @ScopeTypeId
1551,SortFieldSQL,"-- added, provides more flexibility, e.g. may be called again for multiple sort columns  CREATE FUNCTION dbo.[SortFieldSQL]  (      @SortBy        nVarChar(100), -- should be a field name      @SortAscending Bit,     -- ascending or descending?      @Default       nVarChar(100)  -- name of field to be used if @sortby is empty  )   RETURNS     nVarChar(110)  AS   BEGIN    DECLARE @sortSql nVarChar(110) =  ''    IF IsNull(@SortBy, '') = ''     SET @SortBy = IsNull(@Default, '')    IF @SortBy <>  ''     SET @sortSql = N'[' + @SortBy + CASE WHEN IsNull(@SortAscending, 1) = 0 THEN N'] DESC' ELSE N'] ASC' END    RETURN @sortSql   END"
1552,AISystem_JobTitle_Talent_GetsByTalentIdCount,"CREATE proc [dbo].[AISystem_JobTitle_Talent_GetsByTalentIdCount]  @talentId int,  @isChild int  as  -- AISystem_JobTitle_Talent_GetsByTalentIdCount 1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@talentId >-1)   set @Condition=@Condition+' AND TalentId='+str(@talentId)  if(@isChild >-1)   set @Condition=@Condition+' AND IsChild='+str(@isChild)  exec('select COUNT(*) from AISystem_JobTitle_Talent '+@Condition )         SET QUOTED_IDENTIFIER OFF     "
1553,GetAllTabs,"CREATE PROCEDURE dbo.[GetAllTabs]   AS   SELECT *    FROM dbo.vw_Tabs    ORDER BY Level, ParentID, TabOrder"
1554,AISystem_Subject_Lesson_GetMaxOrderNo,"CREATE PROC [dbo].[AISystem_Subject_Lesson_GetMaxOrderNo]   @subjectId int  as  begin  select ISNULL(max(OrderNo),'0') from AISystem_Subject_Lesson WHERE SubjectId=@subjectId   end          "
1555,CoreMessaging_GetNotification,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotification]   @NotificationId int  AS  BEGIN   SELECT    M.[MessageID],    M.[NotificationTypeId],    M.[To],    M.[From],    M.[Subject],    M.[Body],    M.[SenderUserID],    M.[ExpirationDate],          M.[IncludeDismissAction],    M.[CreatedByUserID],    M.[CreatedOnDate],    M.[LastModifiedByUserID],    M.[LastModifiedOnDate],          M.[Context]   FROM dbo.[CoreMessaging_Messages] AS M   WHERE [NotificationTypeId] IS NOT NULL   AND M.MessageID = @NotificationId  END"
1556,AIElearning_Reimburse_GetsBySearch,CREATE proc [dbo].[AIElearning_Reimburse_GetsBySearch]  @UnitCode nvarchar(50)  as  SELECT * from AIElearning_Reimburse where UnitCode= @UnitCode   
1557,GetFolderPermission,CREATE PROCEDURE dbo.[GetFolderPermission]      @FolderPermissionID int    AS  SELECT *  FROM dbo.vw_FolderPermissions  WHERE FolderPermissionID = @FolderPermissionID
1558,AIElearning_ClassUser_TotalTime_GetUnitUser,"CREATE proc [dbo].[AIElearning_ClassUser_TotalTime_GetUnitUser]  @UnitCode nvarchar(50),  @Year int,  @Username nvarchar(150)  as  select top(1) * from AIElearning_ClassUser_TotalTime where UnitCode=@UnitCode and ReportYear=@Year and Username=@Username      "
1559,UpdatePropertyDefinition,"CREATE PROCEDURE dbo.[UpdatePropertyDefinition]   @PropertyDefinitionId int,   @DataType int,   @DefaultValue nvarchar(50),   @PropertyCategory nvarchar(50),   @PropertyName nvarchar(50),   @ReadOnly bit,   @Required bit,   @ValidationExpression nvarchar(2000),   @ViewOrder int,   @Visible bit,      @Length int,      @DefaultVisibility int,   @LastModifiedByUserID int    AS   UPDATE dbo.ProfilePropertyDefinition     SET DataType = @DataType,     DefaultValue = @DefaultValue,     PropertyCategory = @PropertyCategory,     PropertyName = @PropertyName,     ReadOnly = @ReadOnly,     Required = @Required,     ValidationExpression = @ValidationExpression,     ViewOrder = @ViewOrder,     Visible = @Visible,     Length = @Length,              DefaultVisibility = @DefaultVisibility,     [LastModifiedByUserID] = @LastModifiedByUserID,      [LastModifiedOnDate] = getdate()    WHERE PropertyDefinitionId = @PropertyDefinitionId"
1560,GetPropertyDefinition,CREATE PROCEDURE dbo.[GetPropertyDefinition]     @PropertyDefinitionID int    AS  SELECT dbo.ProfilePropertyDefinition.*  FROM dbo.ProfilePropertyDefinition  WHERE PropertyDefinitionID = @PropertyDefinitionID   AND Deleted = 0
1561,GetSortSQL,"CREATE FUNCTION dbo.[GetSortSQL]  (   -- deprecated, please call SortFieldSQL and FormattedString instead      @SortBy        nVarChar(100),      @SortAscending Bit,      @Default       nVarChar(100)  )   RETURNS     nVarChar(120)  AS   BEGIN    RETURN dbo.[FormattedString](dbo.[SortFieldSQL](@SortBy, @SortAscending, @Default), N'ORDER BY @0')   END"
1562,AISystem_LayoutUnit_Album_GetsBySearchCount,"CREATE proc [dbo].[AISystem_LayoutUnit_Album_GetsBySearchCount]  @Keyword nvarchar(250),  @Status int,  @UnitCode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Keyword<>'')   set @Condition=@Condition+' AND Title like ''%'+@Keyword +'%'''  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@UnitCode<>'')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''    exec('select COUNT(Id) from AISystem_LayoutUnit_Album '+@Condition)  SET QUOTED_IDENTIFIER OFF  "
1563,AISystem_Subject_Lesson_GetsBySearch,"CREATE PROC [dbo].[AISystem_Subject_Lesson_GetsBySearch]   @pageIndex int,  @pageSize int,  @docGroupId int,  @status int  as  -- AISystem_Subject_Lesson_GetsBySearch 1,10,1,1  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '  if(@docGroupId > -1)   set @Condition = @Condition + ' and SubjectId = ' +str(@docGroupId)   if(@status > -1)   set @Condition = @Condition + ' and Status = ' +str(@status)  exec('     WITH #AISystem_Subject_Lesson AS(    Select  ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber, *    from AISystem_Subject_Lesson    where '+@Condition+ ' )     SELECT *   FROM #AISystem_Subject_Lesson   where RowNumber between '+ @start +'  and  '+ @end +'     ')      "
1564,AISystem_Rank_GetMaxOrderNo,"create proc [dbo].[AISystem_Rank_GetMaxOrderNo]   as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_Rank   end  "
1565,GetPortalLocalizations,CREATE PROCEDURE dbo.[GetPortalLocalizations]      @PortalId   int  AS   SELECT * FROM dbo.[PortalLocalization] WHERE PortalId = @PortalId
1566,AISystem_Category_Campaign_UpdateWithPosition,"    CREATE PROC [dbo].[AISystem_Category_Campaign_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @objectUser int  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Campaign WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Campaign WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Campaign WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Campaign WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Campaign WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Campaign         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Campaign SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [ObjectUse] = @objectUser  WHERE   [Id] = @Id    DEALLOCATE TempCur          "
1567,GetProfilePropertyDefinitionID,"-- optimized  CREATE FUNCTION dbo.[GetProfilePropertyDefinitionID]  (   @PortalID     Int,         -- might be 0      @PropertyName nVarChar(50) -- required  )      RETURNS    Int  AS   BEGIN    DECLARE @DefinitionID Int = -1    IF NOT IsNull(@PropertyName, '') = ''     SELECT @DefinitionID = PropertyDefinitionID       FROM dbo.[ProfilePropertyDefinition]       WHERE IsNull(PortalID, -1) = IsNull(@PortalID, -1) AND PropertyName = @PropertyName    RETURN @DefinitionID   END"
1568,AISystem_LayoutUnit_Album_GetsBySearch,"CREATE proc [dbo].[AISystem_LayoutUnit_Album_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Status int,  @UnitCode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@Keyword<>'')   set @Condition=@Condition+' AND Title like ''%'+@Keyword +'%'''  if(@Status>-1)   set @Condition=@Condition+' AND Status='+str(@Status)  if(@UnitCode<>'')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  exec('    WITH #AISystem_LayoutUnit_Album AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_LayoutUnit_Album '+@Condition+'      )         SELECT     *   FROM #AISystem_LayoutUnit_Album   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1569,Messaging_MarkMessageAsDispatched,"CREATE PROCEDURE dbo.[Messaging_MarkMessageAsDispatched]   @MessageId int  AS  BEGIN   Update Messaging_Messages set EmailSent = 1, EmailSentDate =GETDATE()   where MessageID =@MessageId  END"
1570,Journal_GetStatsForGroup,"CREATE PROCEDURE dbo.[Journal_GetStatsForGroup]   @PortalId INT,   @GroupId INT  AS  SELECT Count(j.JournalTypeId) as JournalTypeCount,       jt.JournalType       FROM dbo.[Journal] AS j       INNER JOIN dbo.[Journal_Types] AS jt ON jt.JournalTypeId = j.JournalTypeId   WHERE j.GroupId = @GroupId AND j.PortalId = @PortalId AND j.IsDeleted = 0   Group BY j.JournalTypeId, jt.JournalType"
1571,Messaging_GetInbox,"CREATE PROCEDURE dbo.[Messaging_GetInbox]   @PortalID int,   @UserID int,   @PageNumber int,   @PageSize int  AS   -- Set the page bounds   DECLARE     @PageLowerBound INT,     @PageUpperBound INT,     @RowsToReturn int,     @PageIndex int      /* this is 1-based rather than 0-based indexing. Accomodating so that we are consistent with paging */    SET @PageIndex = @PageNumber - 1      exec dbo.[CalculatePagingInformation] @PageIndex, @PageSize, @RowsToReturn output, @PageLowerBound output, @PageUpperBound output      begin      with UserInbox as (      select * , ROW_NUMBER() over (order by Date desc) as RowNumber       from dbo.Messaging_Messages        where (ToUserID = @UserID AND Status IN (1,2) AND SkipPortal = '0')         OR (FromUserID = @UserID AND Status = 0)     )     select * from UserInbox      where RowNumber > @PageLowerBound AND RowNumber < @PageUpperBound      order by RowNumber    end"
1572,AIElearning_LearnRule_Table_GetsBySearchCount,create proc [dbo].[AIElearning_LearnRule_Table_GetsBySearchCount]  as  select COUNT(*) from AIElearning_LearnRule_Table  
1573,GetUser,"CREATE PROCEDURE dbo.[GetUser]     @PortalID int,   @UserID int    AS  SELECT * FROM dbo.vw_Users U  WHERE  UserId = @UserID   AND    (PortalId = @PortalID or IsSuperUser = 1)"
1574,vw_UserRoles,"CREATE VIEW dbo.[vw_UserRoles]  AS   SELECT         UR.UserRoleID,     R.RoleID,     U.UserID,     R.PortalID,     R.RoleName,     U.Username,     R.Description,     U.DisplayName,     U.Email,    UR.Status,     UR.IsOwner,    R.SecurityMode,    R.ServiceFee,     R.BillingFrequency,     R.TrialPeriod,           R.TrialFrequency,     R.BillingPeriod,     R.TrialFee,     R.IsPublic,     R.AutoAssignment,     R.RoleGroupID,     R.RSVPCode,     R.IconFile,     UR.EffectiveDate,     UR.ExpiryDate,           UR.IsTrialUsed,     UR.CreatedByUserID,     UR.CreatedOnDate,     UR.LastModifiedByUserID,     UR.LastModifiedOnDate,    R.IsSystemRole    FROM dbo.UserRoles AS UR     INNER JOIN dbo.Users AS U ON UR.UserID = U.UserID     INNER JOIN dbo.Roles AS R ON UR.RoleID = R.RoleID   WHERE R.Status = 1"
1575,AISystem_Category_Question_GetInfoByCode,  CREATE PROC [dbo].[AISystem_Category_Question_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_Question_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_Question where   Code = @Code  SET QUOTED_IDENTIFIER OFF       
1576,GetEventLogConfig,"CREATE PROCEDURE dbo.GetEventLogConfig   @ID int  AS  SELECT c.*, t.LogTypeFriendlyName  FROM dbo.EventLogConfig AS c   INNER JOIN dbo.EventLogTypes AS t ON t.LogTypeKey = c.LogTypeKey  WHERE (ID = @ID or @ID IS NULL)  ORDER BY t.LogTypeFriendlyName ASC"
1577,CK__ActivityA__Suspe__6B85A88C,(len([SuspendData])<=(4096))
1578,AIElearning_DocumentGroup_GetsByParam,"    CREATE proc [dbo].[AIElearning_DocumentGroup_GetsByParam]  @pageIndex int,  @pageSize int,  @KeyWord nvarchar(250),  @CategoryId int,  @IsSearch int,  @strUnitCode nvarchar(max),  @OrderBy nvarchar(50)  as  --   -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@CategoryId>0)   Begin    IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')      set @condition = @condition + ' and (d.UnitCode in (' + @strUnitCode + '))'    DECLARE @ChildId AS NVARCHAR(MAX)    select @ChildId= ChildId from AISystem_Category_Document where Id=@CategoryId    IF (@ChildId IS NOT NULL AND @ChildId<>'')     set @condition = @condition  + ' and (d.CategotyDocumentId in ('+@ChildId+'))'   end  ELSE   Begin      IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')      set @condition = @condition + ' and (d.UnitCode in (''' + @strUnitCode + ''',''-1''))'    -- Tao bang tam    CREATE TABLE #bangTam_DocumentGroup(     [Id] [int])    INSERT INTO #bangTam_DocumentGroup    SELECT Id    FROM AISystem_Category_Document where UnitCode = '-1' -- dữ liệu tập đoàn    INSERT INTO #bangTam_DocumentGroup    SELECT Id    FROM AISystem_Category_Document where UnitCode = @strUnitCode -- dữ liệu p&l    set @condition = @condition +  ' and (d.CategotyDocumentId in (select Id from #bangTam_DocumentGroup))'   end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        WITH #AIElearning_DocumentGroup AS(         SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,          RANK, d.*          from  AIElearning_DocumentGroup AS d           INNER JOIN           CONTAINSTABLE(AIElearning_DocumentGroup,( Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=d.Id             where ' + @Condition + ' and d.Status = 1                     )              SELECT          *        FROM #AIElearning_DocumentGroup        where RowNumber between '+ @start +'  and  '+ @end +'                ')     end    ELSE     Begin      exec('        WITH #AIElearning_DocumentGroup AS(         SELECT ROW_NUMBER() OVER (ORDER BY ftt.RANK DESC) AS RowNumber,          RANK, d.*          from  AIElearning_DocumentGroup AS d           INNER JOIN           FREETEXTTABLE(AIElearning_DocumentGroup,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=d.Id             where ' + @Condition + ' and d.Status = 1                     )              SELECT          *        FROM #AIElearning_DocumentGroup        where RowNumber between '+ @start +'  and  '+ @end +'         ')     end   end  ELSE   BEGIN    exec('       WITH #AIElearning_DocumentGroup AS(       SELECT ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') AS RowNumber,        d.*        from  AIElearning_DocumentGroup AS d          where ' + @Condition + ' and d.Status = 1          )          SELECT        *      FROM #AIElearning_DocumentGroup      where RowNumber between '+ @start +'  and  '+ @end +'      ')   end      SET QUOTED_IDENTIFIER OFF   "
1579,CoreMessaging_MarkMessageAsSent,"CREATE PROCEDURE dbo.[CoreMessaging_MarkMessageAsSent]   @MessageId int,   @RecipientId int  AS  BEGIN   Update dbo.CoreMessaging_MessageRecipients set EmailSent = 1  where MessageID =@MessageId AND RecipientId=@RecipientId  END"
1580,DeleteDesktopModulePermissionsByUserID,"CREATE PROCEDURE dbo.[DeleteDesktopModulePermissionsByUserID]      @UserId   INT,  -- required, not null!   @PortalId INT -- Null affects all sites  AS      DELETE FROM dbo.[DesktopModulePermission]      WHERE UserID = @UserId       AND (PortalDesktopModuleID IN (SELECT PortalDesktopModuleID            FROM dbo.[PortalDesktopModules]            WHERE PortalID = @PortalId) OR IsNull(@PortalId, -1) = -1)"
1581,AISystem_LayoutUnit_Photo_GetsBySearchCount,"create proc [dbo].[AISystem_LayoutUnit_Photo_GetsBySearchCount]  @Keyword nvarchar(250),  @Status int,  @AlbumId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'  -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  if(@AlbumId>-1)  set @Condition=@Condition+' AND LayoutUnitAlbumId='+str(@AlbumId)  exec('select COUNT(Id) from AISystem_LayoutUnit_Photo '+@Condition)  "
1582,GetTermsByContent,CREATE PROCEDURE dbo.[GetTermsByContent]    @ContentItemID   int  AS   SELECT TT.*   FROM dbo.ContentItems_Tags TG    INNER JOIN dbo.Taxonomy_Terms TT ON TG.TermID = TT.TermID   WHERE TG.ContentItemID = @ContentItemID
1583,AIElearning_LearingAndLecture_OutItem_DeleteByParam,"CREATE proc [dbo].[AIElearning_LearingAndLecture_OutItem_DeleteByParam]   @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Type int  as  begin  DELETE FROM AIElearning_LearingAndLecture_OutItem  FROM            AIElearning_LearingAndLecture_OutItem INNER JOIN              AIElearning_LearingAndLecture_Out ON AIElearning_LearingAndLecture_OutItem.OutId = AIElearning_LearingAndLecture_Out.Id     where (AIElearning_LearingAndLecture_Out.UserName = @UserName or @UserName ='') and (AIElearning_LearingAndLecture_Out.ReportYear = @ReportYear  or @ReportYear =-1) and (AIElearning_LearingAndLecture_Out.UnitCode = @UnitCode or @UnitCode = '') and (AIElearning_LearingAndLecture_Out.Type = @Type  or @Type =-1)  end  "
1584,SaveTabUrl,"CREATE PROCEDURE dbo.[SaveTabUrl]    @TabID    int,   @SeqNum    int,   @PortalAliasID  int,   @PortalAliasUsage int,   @Url    nvarchar(200),   @QueryString  nvarchar(200),   @CultureCode  nvarchar(50),   @HttpStatus   nvarchar(50),   @IsSystem   bit,   @ModifiedByUserID int  AS   IF @HttpStatus = '200'    BEGIN     UPDATE dbo.TabUrls      SET HttpStatus = '301',      [LastModifiedByUserID]= @ModifiedByUserID,      [LastModifiedOnDate]= getdate()      WHERE TabID = @TabID       AND CultureCode = @CultureCode       AND (@PortalAliasID = @PortalAliasID OR (PortalAliasId IS NULL AND @PortalAliasID IS NULL))       AND HttpStatus = '200'    END     IF EXISTS (SELECT * FROM dbo.TabUrls WHERE TabId = @TabID AND SeqNum = @SeqNum)    BEGIN     UPDATE dbo.TabUrls      SET        PortalAliasId = @PortalAliasID,       PortalAliasUsage = @PortalAliasUsage,       Url = @Url,       QueryString = @QueryString,       CultureCode = @CultureCode,       HttpStatus = @HttpStatus,       IsSystem = @IsSystem,       [LastModifiedByUserID]= @ModifiedByUserID,       [LastModifiedOnDate]= getdate()     WHERE TabId = @TabID AND SeqNum = @SeqNum     END   ELSE    BEGIN     INSERT INTO dbo.TabUrls       ( TabId ,         SeqNum ,         Url ,         QueryString ,         HttpStatus ,         CultureCode ,         IsSystem,         PortalAliasId ,         PortalAliasUsage,         [CreatedByUserID],         [CreatedOnDate],           [LastModifiedByUserID],         [LastModifiedOnDate]       )     VALUES  ( @TabID ,         @SeqNum ,         @Url ,         @QueryString ,         @HttpStatus ,         @CultureCode ,         @IsSystem,         @PortalAliasID ,         0,         @ModifiedByUserID,         getdate(),         @ModifiedByUserID,         getdate()       )    END"
1585,AISystem_Subject_Lesson_GetsByCode,    CREATE PROC  [dbo].[AISystem_Subject_Lesson_GetsByCode]   @code NVARCHAR(50)  AS  -- AISystem_Subject_Lesson_GetsByCode 'MH001'  SELECT * FROM dbo.AISystem_Subject_Lesson where Code = @code    
1586,GetAllTabsModulesByModuleID,CREATE PROCEDURE dbo.[GetAllTabsModulesByModuleID]      @ModuleID int  AS   SELECT *    FROM dbo.vw_Modules   WHERE  ModuleID = @ModuleID
1587,AddPasswordHistory,"CREATE PROCEDURE dbo.AddPasswordHistory      @UserId   int,      @Password   nvarchar(128),      @PasswordSalt  nvarchar(128),   @Retained   int,      @CreatedByUserID   int  AS            BEGIN                INSERT INTO dbo.PasswordHistory (              UserId,              [Password],              PasswordSalt,     CreatedByUserID,     CreatedOnDate,     LastModifiedByUserID,     LastModifiedOnDate            )            VALUES (              @UserId,              @Password,              @PasswordSalt,                   @CreatedByUserID,     getdate(),     @CreatedByUserID,     getdate()            )        DELETE FROM dbo.PasswordHistory where UserID=@UserId and PasswordHistoryID NOT IN (       SELECT TOP (@Retained) PasswordHistoryID from dbo.PasswordHistory       WHERE UserID=@UserId order by CreatedOnDate desc       )            END"
1588,AIElearning_TestCampaign_RegistorStaffTest_GetTestRegistorId,create proc [dbo].[AIElearning_TestCampaign_RegistorStaffTest_GetTestRegistorId]  @TestRegistorId int   as  select * from AIElearning_TestCampaign_RegistorStaffTest where TestRegistorId=@TestRegistorId    
1589,UpdateUserRole,"CREATE PROCEDURE dbo.[UpdateUserRole]      @UserRoleId  int,    @Status   int,   @IsOwner  bit,   @EffectiveDate datetime = null,   @ExpiryDate  datetime = null,   @LastModifiedByUserID   int  AS   UPDATE dbo.UserRoles     SET      Status = @Status,     IsOwner = @IsOwner,     ExpiryDate = @ExpiryDate,     EffectiveDate = @EffectiveDate,     IsTrialUsed = 1,     LastModifiedByUserID = @LastModifiedByUserID,     LastModifiedOnDate = getdate()    WHERE  UserRoleId = @UserRoleId"
1590,AIElearning_TestForm_Part_UpdatePosition,"    CREATE PROCEDURE [dbo].[AIElearning_TestForm_Part_UpdatePosition]   @Id int,    @TestId int,   @Position int,   @ParentId int  AS  DECLARE @OrderNo1 int  DECLARE @OrderMax int  DECLARE @OrderFirst int  SET @OrderMax = (SELECT MAX(OrderNo) FROM AIElearning_TestForm_Part WHERE  TestId=@TestId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))  SET @OrderNo1 = (SELECT OrderNo FROM AIElearning_TestForm_Part WHERE (TestId=@TestId and Id = @Position  and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  IF (@Position = 0)  BEGIN  SET @OrderFirst = (SELECT MIN(OrderNo) FROM AIElearning_TestForm_Part WHERE TestId=@TestId and ( (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  IF (@OrderFirst IS NULL) SET @OrderFirst = 1  END  ELSE IF (@OrderNo1 = @OrderMax)  SET @OrderFirst = @OrderMax + 1  ELSE  SET @OrderFirst =(SELECT MIN(OrderNo) FROM AIElearning_TestForm_Part WHERE (TestId=@TestId and OrderNo > @OrderNo1 and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL))))  DECLARE TempCur CURSOR FOR  SELECT Id, OrderNo FROM AIElearning_TestForm_Part WHERE (TestId=@TestId and OrderNo >= @OrderFirst AND  (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)))  OPEN TempCur  DECLARE @TempId int  DECLARE @TempOrderNo int  FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  WHILE (@@FETCH_STATUS = 0)  BEGIN  SET @TempOrderNo = @TempOrderNo + 1  UPDATE AIElearning_TestForm_Part  SET OrderNo=@TempOrderNo  WHERE TestId=@TestId and Id=@TempId   FETCH NEXT FROM TempCur INTO @TempId, @TempOrderNo  END  CLOSE TempCur  UPDATE AIElearning_TestForm_Part SET   [OrderNo] = @OrderFirst  WHERE  TestId=@TestId and [Id] = @Id  DEALLOCATE TempCur    "
1591,AIElearning_Training_Plan_Subject_GetsBySearch,"create proc [dbo].[AIElearning_Training_Plan_Subject_GetsBySearch]  @pageIndex int,  @pageSize int,  @PlanId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@PlanId>-1)   set @Condition=@Condition+' AND PlanId='+str(@PlanId)    exec('    WITH #AIElearning_Training_Plan_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Training_Plan_Subject  '+@Condition+'       )         SELECT     *   FROM #AIElearning_Training_Plan_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')"
1592,UpdateTabModuleTranslationStatus,"CREATE PROCEDURE dbo.[UpdateTabModuleTranslationStatus]   @TabModuleId   int,      @LocalizedVersionGuid uniqueidentifier,   @LastModifiedByUserID int  AS   UPDATE dbo.TabModules    SET    LocalizedVersionGuid = @LocalizedVersionGuid,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate  = getdate()   WHERE  TabModuleId = @TabModuleId"
1593,MasterPortalId,"-- new helper function  CREATE FUNCTION dbo.[MasterPortalId]  (      @PortalId Int  -- ID of the portal or Null for Host  )    RETURNS   Int  AS   BEGIN    DECLARE @MasterPortalId  Int = Null    IF IsNull(@PortalId, -1) >= 0     SELECT @MasterPortalId = MasterPortalId FROM dbo.[vw_MasterPortals] WHERE PortalId = @PortalId    RETURN @MasterPortalId   END"
1594,AISystem_LayoutUnit_Photo_GetsBySearch,"CREATE proc [dbo].[AISystem_LayoutUnit_Photo_GetsBySearch]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @isView int,  @AlbumId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@Keyword<>'')  set @Condition=@Condition+' AND FREETEXT(*,'''+@Keyword+''')'    if(@isView>-1)  set @Condition=@Condition+' AND IsView='+str(@isView)  if(@AlbumId>-1)  set @Condition=@Condition+' AND LayoutUnitAlbumId='+str(@AlbumId)  exec('    WITH #AISystem_LayoutUnit_Photo AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo asc) AS RowNumber,     *     from AISystem_LayoutUnit_Photo   '+@Condition+'    )         SELECT     *   FROM #AISystem_LayoutUnit_Photo   where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1595,DeleteDesktopModule,CREATE PROCEDURE dbo.DeleteDesktopModule   @DesktopModuleId int  AS  -- delete custom permissions  DELETE FROM dbo.Permission  WHERE moduledefid in    (SELECT moduledefid    FROM dbo.ModuleDefinitions   WHERE desktopmoduleid = @DesktopModuleId)     DELETE FROM dbo.DesktopModules   WHERE DesktopModuleId = @DesktopModuleId
1596,AIElearning_LearingAndLecture_Out_DeleteByParam,"CREATE proc [dbo].[AIElearning_LearingAndLecture_Out_DeleteByParam]   @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50),  @Type int  as  begin  delete from AIElearning_LearingAndLecture_Out where (UserName = @UserName or @UserName ='') and (ReportYear = @ReportYear  or @ReportYear =-1) and (UnitCode = @UnitCode or @UnitCode = '') and (Type = @Type or @Type = -1)  end  "
1597,AIElearning_Certificate_Background_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Certificate_Background_GetsBySearchCount]   @Keyword nvarchar(250),  @Type int,  @unitcode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND Name LIKE N''%'+@Keyword+'%'''    -- Lo?i  if(@Type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)    if(@unitcode<>'')  set @Condition=@Condition+' AND UnitCode='''+@unitcode+''''    exec('select COUNT(*) from AIElearning_Certificate_Background '+@Condition)  SET QUOTED_IDENTIFIER OFF      "
1598,GetPasswordHistory,CREATE PROCEDURE dbo.GetPasswordHistory      @UserID   int  AS          SELECT * from dbo.PasswordHistory where UserID=@UserID
1599,SetFileHasBeenPublished,"CREATE PROCEDURE dbo.[SetFileHasBeenPublished]       @FileId                    int,      @HasBeenPublished        bit  AS  BEGIN        -- Change Files.HasBeenPublished to the passed value      UPDATE dbo.[Files]      SET     [HasBeenPublished] = @HasBeenPublished      FROM dbo.[Files] f      WHERE f.FileId = @FileId  END"
1600,AIElearning_TestCampaign_RegistorUserTest_GetDdlDataByRegistorUserId,"CREATE PROC [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetDdlDataByRegistorUserId]  @RegistorUserId int ,  @Status int  AS  -- [AIElearning_TestCampaign_RegistorUserTest_GetDdlDataByRegistorUserId] 33,-1  create table #Temp  (      RowIndex int,       Id int,       Name nvarchar(250),   [Time] nvarchar(50)  )  INSERT INTO #Temp (RowIndex, Id, Name, [Time])   select  ROW_NUMBER() OVER (ORDER BY rut.StartTime ) AS RowNumber, rut.Id, r.Name ,   convert(VARCHAR(8), rut.StartTime, 108) + ' ' +CONVERT(VARCHAR(10),rut.StartTime, 103) + ' '   from AIElearning_TestCampaign_RegistorUserTest rut inner join AIElearning_TestCampaign_RegistorUser ru  on rut.RegistorUserId = ru.Id inner join AIElearning_TestCampaign_Registor r on ru.TestRegistorId = r.Id  where RegistorUserId=@RegistorUserId and (rut.Status=@Status OR @Status=-1)     select Id, Name + ' '+ convert(nvarchar(50), RowIndex) +' - ' + [Time] as Name   from #Temp order by RowIndex desc  "
1601,UpdateModuleLastContentModifiedOnDate,CREATE PROCEDURE dbo.[UpdateModuleLastContentModifiedOnDate]      @ModuleID int  AS      UPDATE dbo.Modules          SET    LastContentModifiedOnDate = GETDATE()      WHERE  ModuleID = @ModuleID
1602,AIElearning_class_GetObject,CREATE proc [dbo].[AIElearning_class_GetObject]  @chuoi nvarchar(250)  as         SELECT *   from AISystem_category where Id in (select * from [dbo].Split(@chuoi))
1603,GetFolderByFolderPath,"CREATE PROCEDURE dbo.GetFolderByFolderPath   @PortalID int,   @FolderPath nvarchar(300)  AS  BEGIN   if @PortalID is not null   begin    SELECT *    FROM dbo.Folders    WHERE PortalID = @PortalID AND FolderPath = @FolderPath   end else begin    SELECT *    FROM dbo.Folders    WHERE PortalID is null AND  FolderPath = @FolderPath   end  END"
1604,SplitDelimitedIDs,"-- new helper function to return a table with id's, passed as a single string with delimiter  CREATE FUNCTION dbo.[SplitDelimitedIDs]  (   @RecordIDList VarChar(2000),   @Delimiter    VarChar(   2) = ','  )  RETURNS    @IntegerList Table (RecordID Int)  AS   BEGIN    DECLARE @RecordID VarChar(10)    DECLARE @Start    Int        = 0    DECLARE @Pos      Int        = 1      SET @RecordIDList = @RecordIDList + @Delimiter    SET @Pos = CHARINDEX(@Delimiter, @RecordIDList, 1)      WHILE @Pos > 0 BEGIN     SET @RecordID = LTRIM(RTRIM(SUBSTRING(@RecordIDList, @Start, @Pos - @Start)))     IF @RecordID <> ''      INSERT INTO @IntegerList (RecordID) VALUES (CAST(@RecordID AS Int)) -- use appropriate conversion     SET @Start = @Pos + len(@Delimiter)     SET @Pos = CHARINDEX(@Delimiter, @RecordIDList, @Start)    END    RETURN   END"
1605,AISystem_LayoutUnit_Photo_GetsByUnit,"CREATE proc [dbo].[AISystem_LayoutUnit_Photo_GetsByUnit]   @unitCode nvarchar(50)  as  -- AISystem_LayoutUnit_Photo_GetsByUnit -1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@unitCode <> '' )   set @Condition=@Condition+' AND (ab.UnitCode=N''' + @unitCode + ''') '    exec('select pt.*  from   AISystem_LayoutUnit_Photo pt inner join AISystem_LayoutUnit_Album ab on ab.Id = pt.LayoutUnitAlbumId ' + @Condition + ' and pt.IsView=1  order by pt.OrderNo')  "
1606,GetEventMessagesBySubscriber,"CREATE PROCEDURE dbo.GetEventMessagesBySubscriber      @EventName nvarchar(100),   @Subscriber nvarchar(100)    AS   SELECT *    FROM dbo.EventQueue   WHERE EventName = @EventName    AND Subscriber = @Subscriber    AND IsComplete = 0   ORDER BY SentDate"
1607,GetScheduleNextTask,"CREATE PROCEDURE dbo.[GetScheduleNextTask]   @Server varchar(150)  AS  SELECT TOP 1          S.[ScheduleID] ,          S.[TypeFullName] ,          S.[TimeLapse] ,          S.[TimeLapseMeasurement] ,          S.[RetryTimeLapse] ,          S.[RetryTimeLapseMeasurement] ,          S.[RetainHistoryNum] ,          S.[AttachToEvent] ,          S.[CatchUpEnabled] ,          S.[Enabled] ,          S.[ObjectDependencies] ,          S.[Servers] ,          S.[CreatedByUserID] ,          S.[CreatedOnDate] ,          S.[LastModifiedByUserID] ,          S.[LastModifiedOnDate] ,          S.[FriendlyName] ,          H.[NextStart]  FROM    dbo.[Schedule] S          CROSS APPLY ( SELECT TOP 1                                  [NextStart]                        FROM      dbo.[ScheduleHistory]                        WHERE     ( [ScheduleID] = S.[ScheduleID] )                        ORDER BY  [NextStart] DESC                      ) AS H ( [NextStart] )  WHERE   ( S.[Enabled] = 1 )          AND ( ( S.[Servers] LIKE ( ',%' + @Server + '%,' ) )                OR ( S.[Servers] IS NULL )              )  ORDER BY H.[NextStart] ASC"
1608,AIElearning_Certificate_Background_GetsBySearch,"CREATE proc [dbo].[AIElearning_Certificate_Background_GetsBySearch]   @pageIndex int,   @pageSize int,  @Keyword nvarchar(250),  @type int,  @unitcode nvarchar(50)  as  --AIElearning_Certificate_Background_GetsBySearch 1,10,'',-1,''  -- Phan trang  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --tu khoa  if(@Keyword<>'')  set @Condition=@Condition+' AND Name LIKE N''%'+@Keyword+'%'''  --loai  if(@type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)    if(@unitcode <>'')  set @Condition=@Condition+' AND UnitCode='''+@unitcode+''''  exec('    WITH #AIElearning_Certificate_Background AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Certificate_Background '+@Condition+'      )         SELECT     *   FROM #AIElearning_Certificate_Background   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1609,AIElearning_TestCampaign_RegistorUser_CheckExist,"CREATE PROC AIElearning_TestCampaign_RegistorUser_CheckExist  @TestRegistorId int,  @UserId int  AS  SELECT * FROM AIElearning_TestCampaign_RegistorUser WHERE TestRegistorId=@TestRegistorId AND UserId=@UserId"
1610,CoreMessaging_DeleteMessageRecipient,CREATE PROCEDURE dbo.[CoreMessaging_DeleteMessageRecipient]      @RecipientID int  AS   DELETE FROM dbo.CoreMessaging_MessageRecipients   WHERE  [RecipientID] = @RecipientID
1611,DeleteFileVersion,"CREATE PROCEDURE dbo.[DeleteFileVersion]       @FileId int,      @Version int  AS  BEGIN      DECLARE @PublishedVersion int        -- Check there is at least one version      IF NOT EXISTS(SELECT FileID FROM FileVersions WHERE FileId = @FileId)      BEGIN          SELECT 1 -- We need to return 1 in order to allow initial version          RETURN      END                SELECT @PublishedVersion = PublishedVersion      FROM dbo.Files      WHERE FileId = @FileId        IF @PublishedVersion = @Version       BEGIN          -- Get the previous version          SELECT @PublishedVersion = MAX(Version)          FROM dbo.FileVersions           WHERE FileId = @FileId              AND Version < @Version            -- If there is no previous version, get the min exsisting version          IF @PublishedVersion IS NULL               SELECT @PublishedVersion = MIN(Version)              FROM dbo.FileVersions               WHERE FileId = @FileId            -- Update the published version          IF @PublishedVersion IS NOT NULL           BEGIN              UPDATE dbo.Files              SET [PublishedVersion] = @PublishedVersion,                  [Extension] = v.[Extension],                  [Size] = v.[Size],                  [Width] = v.Width,                          [Height] = v.Height,                  [ContentType] = v.ContentType,                  [Content] = v.Content,                  [LastModifiedByUserID] = v.LastModifiedByUserID,                  [LastModifiedOnDate] = v.LastModifiedOnDate,                  [SHA1Hash] = v.SHA1Hash              FROM dbo.files AS f                  INNER JOIN dbo.FileVersions AS v                  ON ( f.FileId = v.FileId AND v.Version = @PublishedVersion)                      WHERE f.FileId = @FileId                DELETE FROM dbo.FileVersions              WHERE FileId = @FileId               AND Version = @PublishedVersion          END      END        DELETE FROM dbo.FileVersions      WHERE FileId = @FileId         AND Version = @Version        SELECT @PublishedVersion  END"
1612,AIElearning_UserTest_GetByClassItem,"CREATE PROC [dbo].[AIElearning_UserTest_GetByClassItem]  @UserId INT,  @ClassItemId INT  AS  SELECT u.*,f.Name FROM AIElearning_UserTest u inner join AIElearning_TestForm f on u.TestId=f.Id WHERE u.UserId=@UserId and u.ClassItemId=@ClassItemId ORDER By Id Desc"
1613,AIElearning_class_GetnotObject,CREATE proc [dbo].[AIElearning_class_GetnotObject]  @chuoi nvarchar(250)  as         SELECT *   from AISystem_category where Id not in (select * from [dbo].Split(@chuoi))
1614,AISystem_Category_TeachingTopic_GetsBySearchCount,CREATE PROC [dbo].[AISystem_Category_TeachingTopic_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_TeachingTopic    SET QUOTED_IDENTIFIER OFF  
1615,UserDisplayName,"-- new helper function, returning Displayname for a userid  CREATE FUNCTION dbo.[UserDisplayName]  (   @userId Int  )  RETURNS    nVarChar(255)  AS   BEGIN    DECLARE @DisplayName AS nVarChar(255)      SELECT  @DisplayName = DisplayName FROM dbo.[Users] WHERE UserID = @UserId    RETURN  @DisplayName   END"
1616,AISystem_Level_GetsBySearch,"  CREATE proc [dbo].[AISystem_Level_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Level AS(    SELECT ROW_NUMBER() OVER (ORDER BY Title) AS RowNumber,     *     from AISystem_Level       )         SELECT     *   FROM #AISystem_Level   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1617,DeleteVendorClassifications,create procedure dbo.DeleteVendorClassifications    @VendorId  int    as    delete  from dbo.VendorClassification  where  VendorId = @VendorId
1618,Journal_Comment_Save,"CREATE PROCEDURE dbo.[Journal_Comment_Save]   @JournalId int,   @CommentId int,   @UserId int,   @Comment nvarchar(max),   @CommentXML xml,   @DateUpdated datetime  AS    DECLARE @cxml xml  DECLARE @xml xml  DECLARE @cdataComment nvarchar(max)    IF EXISTS(SELECT * FROM dbo.[Journal_Comments] WHERE JournalId = @JournalId AND CommentId = @CommentId)  BEGIN   IF (LEN(@Comment) < 2000)   BEGIN    UPDATE dbo.[Journal_Comments]    SET Comment = @Comment,     CommentXML = @CommentXML,     DateUpdated = IsNull(@DateUpdated, GETUTCDATE())    WHERE JournalId = @JournalId AND CommentId = @CommentId   END   ELSE   BEGIN      SET @cxml = (SELECT CommentXML FROM dbo.[Journal_Comments] WHERE CommentId = @CommentId AND JournalId = @JournalId)    IF @cxml IS NULL     BEGIN     SET @xml = '<root></root>';     UPDATE dbo.[Journal_Comments]     SET CommentXML = @xml     WHERE JournalId = @JournalId AND CommentId = @CommentId    END      IF NOT EXISTS(SELECT CommentId FROM dbo.[Journal_Comments] WHERE JournalId = @JournalId AND CommentId = @CommentID AND CommentXML.exist('/root/comment') = 1)    BEGIN     UPDATE dbo.[Journal_Comments]     SET CommentXML.modify('insert <comment>NULL</comment> as last into (/root)[1]')      WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root') = 1    END        SET @cdataComment = '<![CDATA[' + @Comment + ']]>'    UPDATE dbo.[Journal_Comments]    SET CommentXML.modify('replace value of (/root/comment[1]/text())[1] with sql:variable(""@cdataComment"")'),     Comment = NULL,     DateUpdated = IsNull(@DateUpdated, GETUTCDATE())    WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root/comment') = 1   END  END  ELSE  BEGIN   IF (LEN(@Comment) < 2000)   BEGIN    INSERT INTO dbo.[Journal_Comments]     (JournalId, UserId, Comment, CommentXML, DateCreated, DateUpdated)     VALUES     (@JournalId, @UserId, @Comment, @CommentXML, GETUTCDATE(), GETUTCDATE())    SET @CommentId = SCOPE_IDENTITY()   END   ELSE   BEGIN    INSERT INTO dbo.[Journal_Comments]     (JournalId, UserId, Comment, CommentXML, DateCreated, DateUpdated)     VALUES     (@JournalId, @UserId, NULL, NULL, GETUTCDATE(), GETUTCDATE())    SET @CommentId = SCOPE_IDENTITY()          SET @cxml = (SELECT CommentXML FROM dbo.[Journal_Comments] WHERE CommentId = @CommentId AND JournalId = @JournalId)    IF @cxml IS NULL     BEGIN        SET @xml = '<root></root>';     UPDATE dbo.[Journal_Comments]     SET CommentXML = @xml     WHERE JournalId = @JournalId AND CommentId = @CommentId    END      IF NOT EXISTS(SELECT CommentId FROM dbo.[Journal_Comments] WHERE JournalId = @JournalId AND CommentId = @CommentID AND CommentXML.exist('/root/comment') = 1)    BEGIN     UPDATE dbo.[Journal_Comments]     SET CommentXML.modify('insert <comment>NULL</comment> as last into (/root)[1]')      WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root') = 1    END        SET @cdataComment = '<![CDATA[' + @Comment + ']]>'    UPDATE dbo.[Journal_Comments]    SET CommentXML.modify('replace value of (/root/comment[1]/text())[1] with sql:variable(""@cdataComment"")'),     Comment = NULL    WHERE JournalId = @JournalId AND CommentId = @CommentId AND CommentXML.exist('/root/comment') = 1   END    END  SELECT @CommentId"
1619,AIElearning_Certificate_ClassDone_GetsBySearch,"  create proc [dbo].[AIElearning_Certificate_ClassDone_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Certificate_ClassDone AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Certificate_ClassDone       )         SELECT     *   FROM #AIElearning_Certificate_ClassDone   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1620,AIElearning_Certificate_DeleteUser,create proc [dbo].[AIElearning_Certificate_DeleteUser]  @CertificateId int  as  delete from AIElearning_Certificate_User where CertificateId=@CertificateId  
1621,AISystem_Subject_GetsById,CREATE proc [dbo].[AISystem_Subject_GetsById]   @Id int  as  select top(1)* from AISystem_Subject WHERE Id=@Id
1622,AIElearning_DocumentGroup_GetsByParamCount,"CREATE proc [dbo].[AIElearning_DocumentGroup_GetsByParamCount]  @KeyWord nvarchar(250),  @CategoryId int,  @IsSearch int,  @strUnitCode nvarchar(max)  as  --   DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  IF(@CategoryId>0)   Begin     IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')      set @condition = @condition + ' and (d.UnitCode in (' + @strUnitCode + '))'    DECLARE @ChildId AS NVARCHAR(MAX)    select @ChildId= ChildId from AISystem_Category_Document where Id=@CategoryId    IF (@ChildId IS NOT NULL AND @ChildId<>'')     set @condition = @condition  + ' and (d.CategotyDocumentId in ('+@ChildId+'))'   end  ELSE   Begin    IF(@strUnitCode IS NOT NULL AND @strUnitCode<>'')      set @condition = @condition + ' and (d.UnitCode in (''' + @strUnitCode + ''',''-1''))'    -- Tao bang tam    CREATE TABLE #bangTam_DocumentGroup(     [Id] [int])    INSERT INTO #bangTam_DocumentGroup    SELECT Id    FROM AISystem_Category_Document where UnitCode = '-1' -- dữ liệu tập đoàn    INSERT INTO #bangTam_DocumentGroup    SELECT Id    FROM AISystem_Category_Document where UnitCode = @strUnitCode -- dữ liệu p&l    set @condition = @condition +  ' and (d.CategotyDocumentId in (select Id from #bangTam_DocumentGroup))'   end  IF (@KeyWord IS NOT NULL AND @KeyWord<>'')   Begin    if(@IsSearch>0)     Begin      exec('        SELECT count(d.Id)         from  AIElearning_DocumentGroup AS d          INNER JOIN          CONTAINSTABLE(AIElearning_DocumentGroup,(Keyword), N''""'+ @KeyWord + '""'') as ftt ON ftt.[KEY]=d.Id            where ' + @Condition + ' and d.Status = 1      ')     end    ELSE     Begin      exec('        SELECT count(d.Id)         from  AIElearning_DocumentGroup AS d          INNER JOIN          FREETEXTTABLE(AIElearning_DocumentGroup,(Keyword), N'''+ @KeyWord + ''') as ftt ON ftt.[KEY]=d.Id            where ' + @Condition + ' and d.Status = 1      ')     end   end  ELSE   BEGIN    exec('     SELECT     COUNT(d.Id)     from  AIElearning_DocumentGroup AS d       where ' + @Condition + ' and d.Status = 1     ')   end    SET QUOTED_IDENTIFIER OFF  "
1623,UserIsInRole,"-- new helper function  CREATE FUNCTION dbo.[UserIsInRole]  (   @UserId Int,   @RoleId Int  )  RETURNS  Bit  AS   BEGIN    RETURN CASE WHEN EXISTS (SELECT * FROM dbo.[UserRoles] WHERE UserID = @UserId AND RoleID = @RoleId                    AND IsNull(EffectiveDate, GetDate()) >= GetDate()                    AND IsNull(ExpiryDate, GetDate())    <= GetDate()) THEN 1 ELSE 0 END   END"
1624,AISystem_Partner_GetReportData,"  CREATE proc [dbo].[AISystem_Partner_GetReportData]  @pageIndex int,  @pageSize int,  @UnitCode nvarchar(50),  @trainingFeild int,  @status int,  @keyword nvarchar(250)  as  -- AISystem_Partner_GetReportData 1,10,'28',2,-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@UnitCode <> '')   set @Condition=@Condition+' AND p.UnitCode='''+@UnitCode+''''  if(@trainingFeild>-1)   set @Condition=@Condition+' AND (TrainingField = '''+CONVERT(varchar(10), @trainingFeild) +'''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild)+''')'  if(@status>-1)   set @Condition=@Condition+' AND p.Status='+str(@status)  if(@keyword<>'')   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'' or Code = '''+ @Keyword + '''  ) '  exec('  WITH #AISystem_Partner AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, p.* , (select Title from AISystem_Category_Unit where Code = p.UnitCode) as UnitName,   (SELECT STUFF(( select CHAR(10) +''- ''  + Title  from AISystem_Category_TrainingField where Id in(select * from Split(p.TrainingField)) FOR XML PATH('''')),1,1,'''') ) as TrainingFieldList, ( select count (*) from AIElearning_Class where PartnerId = p.Id and TypePartner = 2) as ClassCount, ( select count (*) from AISystem_UserInfo_Partner  up inner join AISystem_UserInfo u on up.UserInfoId = u.Id inner join AIElearning_Lecturers l on l.UserInfoId = u.Id where PartnerId = p.Id ) as LecturersCount, ROUND( ISNULL((select AVG(CASE WHEN cl.RateMark > 0 THEN RateMark ELSE NULL END)  from AIElearning_Class c inner join AIElearning_Class_Lecturers cl on c.Id = cl.ClassId where PartnerId = p.Id),0),2) as AVGLecturerMark,ROUND( ISNULL((select AVG(CASE WHEN Cast(c.PartnerRateMark as Float) > 0 THEN  Cast(c.PartnerRateMark as Float) ELSE NULL END)  from AIElearning_Class c where PartnerId= p.Id),0),2) as AVGPartnerMark  from AISystem_Partner p where ' + @Condition +')     SELECT  *   FROM #AISystem_Partner   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1625,DeleteFolderPermission,CREATE PROCEDURE dbo.DeleteFolderPermission   @FolderPermissionID int  AS    DELETE FROM dbo.FolderPermission  WHERE   [FolderPermissionID] = @FolderPermissionID
1626,fn_GetVersion,"CREATE FUNCTION dbo.[fn_GetVersion]  (   @maj AS int,   @min AS int,   @bld AS int  )  RETURNS bit    AS  BEGIN   IF Exists (SELECT * FROM dbo.Version       WHERE Major = @maj        AND Minor = @min        AND Build = @bld      )    BEGIN     RETURN 1    END   RETURN 0  END"
1627,DeleteTabModule,"CREATE PROCEDURE dbo.[DeleteTabModule]   @TabId      int,   @ModuleId   int,   @SoftDelete bit  AS  IF @SoftDelete = 1   UPDATE dbo.TabModules    SET IsDeleted = 1,     VersionGuid = newId(),     LastModifiedOnDate=GETDATE()   WHERE  TabId = @TabId    AND    ModuleId = @ModuleId  ELSE   DELETE   FROM   dbo.TabModules    WHERE  TabId = @TabId    AND    ModuleId = @ModuleId"
1628,AIElearning_Certificate_GetUsernameCount,CREATE proc [dbo].[AIElearning_Certificate_GetUsernameCount]  @username nvarchar(150)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --  if(@username<>'')  set @Condition=@Condition+' AND UserName='''+@username+''''    exec('select count(*) from AIElearning_Certificate_User  '+@Condition)  
1629,CoreMessaging_GetNotificationByContext,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationByContext]   @notificationTypeId int,   @Context nvarchar(200)  AS  BEGIN   SELECT    M.[MessageID],    M.[NotificationTypeId],    M.[To],    M.[From],    M.[Subject],    M.[Body],    M.[SenderUserID],    M.[ExpirationDate],          M.[IncludeDismissAction],    M.[CreatedByUserID],    M.[CreatedOnDate],    M.[LastModifiedByUserID],    M.[LastModifiedOnDate],          M.[Context]   FROM dbo.[CoreMessaging_Messages] AS M   WHERE [NotificationTypeId] IS NOT NULL   AND M.NotificationTypeId = @notificationTypeId   AND M.Context = @context  END"
1630,ChangeUsername,"CREATE PROCEDURE dbo.[ChangeUsername]   @UserId         int,   @NewUsername nvarchar(256)  AS  BEGIN   DECLARE @OldUsername NVARCHAR(256)   SET @OldUsername = (SELECT UserName FROM dbo.Users WHERE UserId = @UserId)     UPDATE dbo.Users    SET  Username=@NewUsername    WHERE UserId=@UserId     UPDATE dbo.aspnet_Users    SET  UserName=@NewUsername,      LoweredUserName=LOWER(@NewUsername)     WHERE UserName=@OldUsername    END"
1631,AISystem_Subject_DeleteAndUpdateOrderNo,CREATE PROC [dbo].[AISystem_Subject_DeleteAndUpdateOrderNo]   @id int  as  begin  DECLARE @orderNo AS int  DECLARE @cateSubjectId AS int  select @cateSubjectId = CateSubjectId from AISystem_Subject where Id= @id   select @orderNo = OrderNo from AISystem_Subject where Id= @id   delete from AISystem_Subject where Id = @id  update AISystem_Subject set OrderNo = (OrderNo-1) where OrderNo > @orderNo and CateSubjectId =@cateSubjectId  end    
1632,AIElearning_TestCampaign_Registor_Staff_GetsBySearchCount,create proc [dbo].[AIElearning_TestCampaign_Registor_Staff_GetsBySearchCount]  @TestCampaignId int  as  select COUNT(*) from AIElearning_TestCampaign_Registor_Staff where TestRegistorId=@TestCampaignId    SET QUOTED_IDENTIFIER OFF         
1633,CK__ActivityObj__Key__704A5DA9,(len([Key])<=(4096))
1634,AISystem_Category_Unit_UpdateWithPosition,"  CREATE PROCEDURE [dbo].[AISystem_Category_Unit_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @Independent int,   @IsTraining int  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Unit WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Unit WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Unit WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Unit WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Unit WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Unit         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Unit SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [Independent] = @Independent,   [IsTraining] = @IsTraining  WHERE   [Id] = @Id    DEALLOCATE TempCur      "
1635,AISystem_Category_TeachingTopic_UpdateChildId,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_TeachingTopic  SET    ChildId = @ChildId  WHERE Id = @Id  "
1636,AISystem_Partner_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Partner_GetsBySearchCount]  @UnitCode nvarchar(50),  @trainingFeild int,  @status int,  @keyword nvarchar(250)  as  -- [AISystem_Partner_GetsBySearchCount] 'DVDL1',-1,-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@UnitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  if(@trainingFeild>-1)   set @Condition=@Condition+' AND (TrainingField = '''+CONVERT(varchar(10), @trainingFeild) +'''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild)+''')'  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  if(@keyword<>'')   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'' or Code = '''+ @Keyword + '''  ) '      exec('select COUNT(*) from AISystem_Partner where ' + @Condition)    SET QUOTED_IDENTIFIER OFF  "
1637,GetTermsByVocabulary,"CREATE PROCEDURE dbo.[GetTermsByVocabulary]    @VocabularyID   int  AS   SELECT TT.*   FROM dbo.Taxonomy_Terms TT   WHERE VocabularyID = @VocabularyID   ORDER BY TT.TermLeft Asc, TT.Weight Asc, TT.Name Asc"
1638,AIElearning_Certificate_GetUsername,"CREATE proc [dbo].[AIElearning_Certificate_GetUsername]   @pageIndex int,  @pageSize int,  @username nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  --AIElearning_Certificate_GetUsername 1,10,'namnp'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  --  if(@username<>'')  set @Condition=@Condition+' AND cu.UserName='''+@username+''''    exec('    WITH #AIElearning_Certificate AS(    SELECT  ROW_NUMBER() OVER ( ORDER BY cu.Id DESC ) AS RowNumber, cu.*, c.Title, c.View_TimeCertificateFix, class.Name AS ClassName, unit.Title AS UnitName, ui.UnitChildPath, jt.Title AS JobTitleName  FROM    AIElearning_Certificate_User cu  INNER JOIN dbo.AIElearning_Certificate c ON cu.CertificateId = c.Id  INNER JOIN dbo.AIElearning_Class class ON c.ClassId = class.Id  INNER JOIN dbo.AISystem_UserInfo ui ON cu.UserName = ui.Username  LEFT JOIN dbo.AISystem_Category_Unit unit ON ui.UnitCode = unit.Code  LEFT JOIN dbo.AISystem_JobTitle_Title jt ON ui.JobTitleCode = jt.Code '+@Condition+'       )         SELECT     *   FROM #AIElearning_Certificate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF      "
1639,GetOnlineUsers,CREATE PROCEDURE dbo.[GetOnlineUsers]   @PortalID int  AS   SELECT *    FROM dbo.UsersOnline UO     INNER JOIN dbo.vw_Users U ON UO.UserID = U.UserID      INNER JOIN dbo.UserPortals UP ON U.UserID = UP.UserId    WHERE  UP.PortalID = @PortalID AND U.PortalID = @PortalID
1640,SetPublishedVersion,"CREATE PROCEDURE dbo.[SetPublishedVersion]       @FileId                    int,      @NewPublishedVersion    int  AS  BEGIN        -- Insert a new record in the FileVersions table for the old published version      INSERT dbo.[FileVersions]                  ([FileId]                  ,[Version]                  ,[FileName]                  ,[Extension]                  ,[Size]                  ,[Width]                  ,[Height]                  ,[ContentType]                  ,[Content]                  ,[CreatedByUserID]                  ,[CreatedOnDate]                  ,[LastModifiedByUserID]                  ,[LastModifiedOnDate]                  ,[SHA1Hash])      SELECT        [FileId]                  ,[PublishedVersion]  [Version]                                  ,CONVERT(nvarchar, [FileId]) + '_' + CONVERT(nvarchar, [PublishedVersion]) +'.v.resources'                   ,[Extension]                  ,[Size]                  ,[Width]                  ,[Height]                  ,[ContentType]                  ,[Content]                  ,[CreatedByUserID]                  ,[CreatedOnDate]                  ,[LastModifiedByUserID]                  ,[LastModifiedOnDate]                  ,[SHA1Hash]                          FROM Files      WHERE FileId = @FileId        -- Change Files.PublishedVersion to the new version number      UPDATE dbo.[Files]      SET     [PublishedVersion] = @NewPublishedVersion                  ,[Extension] =v.[Extension]          ,[Size] = v.[Size]          ,[Width] = v.[Width]          ,[Height] = v.[Height]          ,[ContentType] = v.[ContentType]          ,[Content] = v.[Content]          ,[CreatedByUserID] = v.[CreatedByUserID]          ,[CreatedOnDate] = v.[CreatedOnDate]          ,[LastModifiedByUserID] = v.[LastModifiedByUserID]          ,[LastModifiedOnDate] = v.[LastModifiedOnDate]          ,[SHA1Hash] = v.[SHA1Hash]          ,[HasBeenPublished] = 1      FROM dbo.[Files] f          JOIN dbo.[FileVersions] v ON f.FileId = v.FileId      WHERE f.FileId = @FileId          AND v.Version = @NewPublishedVersion        -- Delete the FileVersions entry of the version being published      DELETE dbo.[FileVersions]      WHERE FileId = @FileId AND Version = @NewPublishedVersion  END"
1641,DeleteUrlTracking,"create procedure dbo.DeleteUrlTracking    @PortalID     int,  @Url          nvarchar(255),  @ModuleID     int    as    delete  from   dbo.UrlTracking  where  PortalID = @PortalID  and    Url = @Url  and    ((ModuleId = @ModuleId) or (ModuleId is null and @ModuleId is null))"
1642,AISystem_Category_Unit_UpdateChildId,"  create PROCEDURE [dbo].[AISystem_Category_Unit_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Unit  SET    ChildId = @ChildId  WHERE Id = @Id  "
1643,AISystem_Partner_GetsBySearchNotInArrayCount,"CREATE proc [dbo].[AISystem_Partner_GetsBySearchNotInArrayCount]  @UnitCode nvarchar(50),  @trainingFeild int,  @status int,  @keyword nvarchar(250),  @arrId nvarchar(500)  as  -- AISystem_Partner_GetsBySearchNotInArray 1,10,-1,-1,-1,'','5,6'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '    if(@UnitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  if(@trainingFeild>-1)   set @Condition=@Condition+' AND TrainingField='+str(@trainingFeild)  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  if(@keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(*,'''+@keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@arrId <>'' and @arrId is not null)   set @Condition = @Condition + ' and Id not in (select * from Split('''+@arrId+''')) '  exec('   SELECT count(*)     from AISystem_Partner where ' + @Condition +'')    SET QUOTED_IDENTIFIER OFF  "
1644,AddEventMessage,"CREATE PROCEDURE dbo.AddEventMessage     @EventName nvarchar(100),   @Priority int,   @ProcessorType nvarchar(250),   @ProcessorCommand nvarchar(250),   @Body nvarchar(250),   @Sender nvarchar(250),   @Subscriber nvarchar(100),   @AuthorizedRoles nvarchar(250),   @ExceptionMessage nvarchar(250),   @SentDate datetime,   @ExpirationDate datetime,   @Attributes ntext    AS   INSERT dbo.EventQueue (     EventName,     Priority,     ProcessorType,     ProcessorCommand,     Body,     Sender,     Subscriber,     AuthorizedRoles,     ExceptionMessage,     SentDate,     ExpirationDate,     Attributes    )    VALUES (     @EventName,     @Priority,     @ProcessorType,     @ProcessorCommand,     @Body,     @Sender,     @Subscriber,     @AuthorizedRoles,     @ExceptionMessage,     @SentDate,     @ExpirationDate,     @Attributes    )     SELECT SCOPE_IDENTITY()"
1645,GetPortalsByUser,CREATE PROCEDURE dbo.[GetPortalsByUser]   @userID  int   AS     SELECT     dbo.vw_Portals.*  FROM         dbo.UserPortals INNER JOIN                        dbo.vw_Portals ON          dbo.UserPortals.PortalId = dbo.vw_Portals.PortalID  WHERE     (dbo.UserPortals.UserId = @userID)    AND (dbo.vw_Portals.DefaultLanguage = dbo.vw_Portals.CultureCode)
1646,AIElearning_Certificate_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Certificate_GetsBySearchCount]  @Keyword nvarchar(250),  @Type int,  @ClassId int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND  Title LIKE N''%'+@Keyword+'%'''  -- Mã chuyên m?c  -- Lo?i  if(@Type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)  if(@ClassId>-1)  set @Condition=@Condition+' AND ClassId='+str(@ClassId)    exec('select COUNT(*) from AIElearning_Certificate '+@Condition)  SET QUOTED_IDENTIFIER OFF    "
1647,AIElearning_Question_CheckCode,CREATE PROC AIElearning_Question_CheckCode  @Code Nvarchar(250)  AS  SELECT Count(Id) from AIElearning_Question WHERE Code=@Code
1648,AISystem_Roles_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Roles_GetsBySearchCount]  @ScopeCode nvarchar(500),  @RoleId int  as  select COUNT(*) from AISystem_Roles where ScopeCode=@ScopeCode and (RoleID=@RoleId OR @RoleId=-1)    SET QUOTED_IDENTIFIER OFF   "
1649,AISystem_UserPermissionScope_RemoveRole,"CREATE PROC [dbo].[AISystem_UserPermissionScope_RemoveRole]      @roleName NVARCHAR(250),      @userId INT,      @scopeCode NVARCHAR(50)  AS  -- AISystem_UserPermissionScope_RemoveRole 'QuantridaotaoDonvi',2156,'28'  DELETE  ups  FROM    dbo.Roles r          INNER JOIN dbo.AISystem_UserPermissionScope ups ON ups.DNNRoleId = r.RoleID  WHERE   RoleName = @roleName AND ups.UserId = @userId AND ups.ScopeCode = @scopeCode"
1650,GetScopeTypes,CREATE PROCEDURE dbo.[GetScopeTypes]   AS   SELECT *   FROM dbo.Taxonomy_ScopeTypes
1651,GetAllRelationshipTypes,"CREATE PROCEDURE dbo.[GetAllRelationshipTypes]  AS       SELECT  RelationshipTypeID,              Direction,              Name ,                          Description,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.RelationshipTypes       ORDER BY RelationshipTypeID ASC"
1652,AISystem_Partner_GetsBySearchNotInArray,"CREATE proc [dbo].[AISystem_Partner_GetsBySearchNotInArray]  @pageIndex int,  @pageSize int,  @UnitCode nvarchar(50),  @trainingFeild int,  @status int,  @keyword nvarchar(250),  @arrId nvarchar(500)  as  -- AISystem_Partner_GetsBySearchNotInArray 1,10,-1,-1,-1,'','5,6'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1) '  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      if(@UnitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  if(@trainingFeild>-1)   set @Condition=@Condition+' AND TrainingField='+str(@trainingFeild)  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  if(@keyword<>'')   --set @Condition=@Condition+' AND FREETEXT(*,'''+@keyword+''')'   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@arrId <>'' and @arrId is not null)   set @Condition = @Condition + ' and Id not in (select * from Split('''+@arrId+''')) '  exec('  WITH #AISystem_Partner AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *     from AISystem_Partner where ' + @Condition +')     SELECT  *   FROM #AISystem_Partner   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1653,GetUserCountByPortal,CREATE PROCEDURE dbo.GetUserCountByPortal   @PortalId int  AS  begin   SELECT count(*)   FROM dbo.UserPortals AS UP   WHERE UP.IsDeleted = 0 AND UP.PortalID = @PortalID  end
1654,AIElearning_Certificate_GetsBySearch,"CREATE proc [dbo].[AIElearning_Certificate_GetsBySearch]  @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Type int,  @Classid int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  --  if(@Keyword<>'')  set @Condition=@Condition+' AND  Title LIKE N''%'+@Keyword+'%'''    -- Lo?i  if(@Type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)  if(@ClassId>-1)  set @Condition=@Condition+' AND ClassId='+str(@ClassId)  exec('    WITH #AIElearning_Certificate AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Certificate '+@Condition+'      )         SELECT     *   FROM #AIElearning_Certificate   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1655,AddPortalGroup,"CREATE PROCEDURE dbo.[AddPortalGroup]   @PortalGroupName   nvarchar(100),   @PortalGroupDescription  nvarchar(2000),   @MasterPortalID    int,   @AuthenticationDomain  nvarchar(200),   @CreatedByUserID   int  AS    BEGIN    INSERT INTO dbo.PortalGroups      (      PortalGroupName  ,      PortalGroupDescription  ,     MasterPortalID,     AuthenticationDomain,      CreatedByUserID ,      CreatedOnDate ,      LastModifiedByUserID ,      LastModifiedOnDate      )      VALUES      (      @PortalGroupName ,      @PortalGroupDescription ,      @MasterPortalID,     @AuthenticationDomain,      @CreatedByUserID ,      getdate() ,      @CreatedByUserID ,      getdate()     )          SELECT SCOPE_IDENTITY()   END"
1656,AISystem_Partner_GetbyCode,  create proc [dbo].[AISystem_Partner_GetbyCode]  @Code nvarchar(50)  as  select top(1)* from AISystem_Partner where Code=@code  
1657,AISystem_UserInfo_GetsByUsernameOrMastercodeAndUnitCode,"CREATE proc [dbo].[AISystem_UserInfo_GetsByUsernameOrMastercodeAndUnitCode]  @keyword  nvarchar(50),  @UnitCode nvarchar(50)  as  -- AISystem_UserInfo_GetsByUsernameOrMastercode 'hainv'  Select top(1) * from AISystem_UserInfo  where   (Mastercode = @keyword  or Username = @keyword or EmployeeCode = @keyword) and UnitCode = @UnitCode  SET QUOTED_IDENTIFIER OFF  "
1658,AddModuleControl,"CREATE PROCEDURE dbo.[AddModuleControl]      @ModuleDefID                int,   @ControlKey                 nvarchar(50),   @ControlTitle               nvarchar(50),   @ControlSrc                 nvarchar(256),   @IconFile                   nvarchar(100),   @ControlType                int,   @ViewOrder                  int,   @HelpUrl                    nvarchar(200),   @SupportsPartialRendering   bit,   @SupportsPopUps    bit,   @CreatedByUserID   int    AS   INSERT INTO dbo.ModuleControls (    ModuleDefID,    ControlKey,    ControlTitle,    ControlSrc,    IconFile,    ControlType,    ViewOrder,    HelpUrl,    SupportsPartialRendering,    SupportsPopUps,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )   VALUES (    @ModuleDefID,    @ControlKey,    @ControlTitle,    @ControlSrc,    @IconFile,    @ControlType,    @ViewOrder,    @HelpUrl,    @SupportsPartialRendering,    @SupportsPopUps,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
1659,DeleteSimpleTerm,CREATE PROCEDURE dbo.[DeleteSimpleTerm]    @TermId   int  AS   DELETE FROM dbo.Taxonomy_Terms   WHERE TermID = @TermID
1660,AISystem_Category_Unit_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROCEDURE [dbo].[AISystem_Category_Unit_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int  AS      -- exec AISystem_Category_Unit_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,0    DECLARE @Level int  DECLARE @Rows int    SET @Level = 0    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --N?u cha truy?n vào là null th? không th? bao g?p cha trong lúc l?y k?t qu? ra  if (@ParentId < 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Unit.Id,      0,      AISystem_Category_Unit.ParentId,      AISystem_Category_Unit.Title,      STR(AISystem_Category_Unit.OrderNo),      AISystem_Category_Unit.Title,      AISystem_Category_Unit.Code          FROM      AISystem_Category_Unit    WHERE      (AISystem_Category_Unit.Status=@Status OR @Status = -1)       AND (AISystem_Category_Unit.Id = @ParentId)      AND AISystem_Category_Unit.LanguageId = @LanguageId      AND AISystem_Category_Unit.PortalId = @portalId   End  ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_Unit.Id,      0,      AISystem_Category_Unit.ParentId,      AISystem_Category_Unit.Title,      STR(AISystem_Category_Unit.OrderNo),      AISystem_Category_Unit.Title,      AISystem_Category_Unit.Code          FROM      AISystem_Category_Unit    WHERE      (AISystem_Category_Unit.Status=@Status OR @Status = -1)       AND (AISystem_Category_Unit.ParentId = @ParentId or (@ParentId IS NULL or @ParentId < 0) AND (AISystem_Category_Unit.ParentId IS NULL or AISystem_Category_Unit.ParentId < 0))      AND AISystem_Category_Unit.LanguageId = @LanguageId      AND AISystem_Category_Unit.PortalId = @portalId   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_Unit  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn    DROP TABLE #PathConstruction  "
1661,AIElearning_Document_User_DeleteByDocument,create PROC [dbo].[AIElearning_Document_User_DeleteByDocument]   @documentId int  as  -- AIElearning_Document_Unit_DeleteByDocument 25  delete from AIElearning_Document_User   where DocumentId = @documentId    
1662,AISystem_Partner_GetsBySearch,"CREATE proc [dbo].[AISystem_Partner_GetsBySearch]  @pageIndex int,  @pageSize int,  @UnitCode nvarchar(50),  @trainingFeild int,  @status int,  @keyword nvarchar(250)  as  -- AISystem_Partner_GetsBySearch 1,10,'28',1,-1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@UnitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@UnitCode+''''  if(@trainingFeild>-1)   set @Condition=@Condition+' AND (TrainingField = '''+CONVERT(varchar(10), @trainingFeild) +'''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''' + CONVERT(varchar(10), @trainingFeild) + ',%''    or TrainingField like ''%,' + CONVERT(varchar(10), @trainingFeild)+''')'  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  if(@keyword<>'')   set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'' or Code = '''+ @Keyword + '''  ) '  exec('  WITH #AISystem_Partner AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *     from AISystem_Partner where ' + @Condition +')     SELECT  *   FROM #AISystem_Partner   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1663,CoreMessaging_IsToastPending,CREATE PROCEDURE dbo.[CoreMessaging_IsToastPending]       @NotificationId int  AS  BEGIN      SELECT Sendtoast       FROM dbo.[CoreMessaging_MessageRecipients]      WHERE MessageId = @NotificationId  END
1664,AIElearning_Certificate_GetsClassUserCount,"CREATE proc [dbo].[AIElearning_Certificate_GetsClassUserCount]  @Keyword nvarchar(250),  @classid int,  @CertificateId int,  @UnitCode nvarchar(250),  @JobTitleCode nvarchar(250),  @type int    as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND ( c.UserName LIKE N''%'+@Keyword+'%''  or i.Mastercode LIKE N''%'+@Keyword+'%'' or i.Displayname LIKE N''%'+@Keyword+'%'' )'  --mã khóa học  if(@ClassId > -1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)   --đơn vị  if(@UnitCode <>'')   set @Condition=@Condition+' AND i.UnitCode='''+(@UnitCode)+''''    --chức danh  if(@JobTitleCode <>'')   set @Condition=@Condition+' AND i.JobTitleCode='''+(@JobTitleCode)+''''    if(@type =1 )   set @Condition=@Condition+' AND c.Userid in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+')'  if(@type =2 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+') and LearnStatus=2'  if(@type =3 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+') and LearnStatus<>2'      exec('   select COUNT(*)      from AIElearning_ClassUser c left join Users u   on u.UserID = c.UserId left join AISystem_UserInfo i on i.UserId = u.UserID  where  '+ @condition +'  ')  SET QUOTED_IDENTIFIER OFF     "
1665,GetContentItem,CREATE PROCEDURE dbo.[GetContentItem]    @ContentItemId   int  AS   SELECT *   FROM dbo.ContentItems   WHERE ContentItemId = @ContentItemId
1666,AddIPFilter,"CREATE PROCEDURE dbo.[AddIPFilter]   @IPAddress nvarchar(50),   @SubnetMask nvarchar(50),   @RuleType tinyint,   @CreatedByUserID   int  AS    BEGIN    INSERT INTO dbo.IPFilter      (    [IPAddress]             ,[SubnetMask]             ,[RuleType]             ,[CreatedByUserID]             ,[CreatedOnDate]             ,[LastModifiedByUserID]             ,[LastModifiedOnDate]    )      VALUES      (      @IPAddress ,      @SubnetMask ,      @RuleType,     @CreatedByUserID ,      getdate() ,      @CreatedByUserID ,      getdate()     )          SELECT SCOPE_IDENTITY()   END"
1667,AISystem_Rank_GetbyCodeName,create proc [dbo].[AISystem_Rank_GetbyCodeName]  @Listcode nvarchar(Max)  as  select * from AISystem_Rank where Code  in (select * from Split(@Listcode))  
1668,CoreMessaging_DeleteMessageRecipientByMessageAndUser,"CREATE PROCEDURE dbo.[CoreMessaging_DeleteMessageRecipientByMessageAndUser]      @MessageID int,      @UserID int  AS  BEGIN   DELETE   FROM dbo.[CoreMessaging_MessageRecipients]   WHERE [MessageID] = @MessageID AND [UserID] = @UserID  END"
1669,AISystem_Category_TestForm_AddWithPosition,"    CREATE PROC [dbo].[AISystem_Category_TestForm_AddWithPosition]   @unitCode nvarchar(50),   @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),    @ObjectUse int,   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_TestForm WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_TestForm (   [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @unitCode,   @ParentId,   @Title,   @Code,   @ObjectUse,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TestForm WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TestForm WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TestForm WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TestForm WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TestForm WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_TestForm         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_TestForm (     [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (     @unitCode ,   @ParentId,   @Title,   @Code,   @ObjectUse ,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()            "
1670,GetTabPanes,create procedure dbo.GetTabPanes    @TabId    int    as    select distinct(PaneName) as PaneName  from   dbo.TabModules  where  TabId = @TabId  order by PaneName
1671,AISystem_Category_Unit_ChildrenByParentId,"  CREATE PROCEDURE [dbo].[AISystem_Category_Unit_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50)    AS  SELECT * FROM AISystem_Category_Unit    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId   ORDER BY OrderNo"
1672,AIEventLog_ObjType_Delete,create proc [dbo].[AIEventLog_ObjType_Delete]  as  Truncate table AIEventLog_ObjType       
1673,AISystem_Category_TeachingTopic_UpdateWithPosition,"CREATE PROC [dbo].[AISystem_Category_TeachingTopic_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX)  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_TeachingTopic WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_TeachingTopic WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_TeachingTopic WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_TeachingTopic WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_TeachingTopic WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_TeachingTopic         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_TeachingTopic SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId  WHERE   [Id] = @Id    DEALLOCATE TempCur  "
1674,GetFolders,"CREATE PROCEDURE dbo.[GetFolders]   @PortalID int -- Null|-1: Host Portal  AS  BEGIN   SELECT *   FROM dbo.Folders   WHERE IsNull(PortalID, -1) = IsNull(@PortalID, -1)    ORDER BY PortalID, FolderPath -- include portalId to use proper index  END"
1675,AISystem_Partner_GetsClassList,"CREATE proc [dbo].[AISystem_Partner_GetsClassList]  @pageIndex int,  @pageSize int,  @partnerType int,  @partnerId int,  @status int  as  -- AISystem_Partner_GetsClassList 1,10,-1,-1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@partnerType>-1)   set @Condition=@Condition+' AND TypePartner='+str(@partnerType)  if(@partnerId>-1)   set @Condition=@Condition+' AND PartnerId='+str(@partnerId)  if(@status>-1)   set @Condition=@Condition+' AND Status='+str(@status)  exec('  WITH #AISystem_ClassPartner AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber, *     from AIElearning_Class where ' + @Condition +')     SELECT  *   FROM #AISystem_ClassPartner   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1676,GetTermUsage,"CREATE PROCEDURE dbo.[GetTermUsage]    @TermId int  AS   SELECT    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = @TermId     ) AS TotalTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = @TermId       AND     CI.CreatedOnDate > DATEADD(day, -30, GETDATE())    ) AS MonthTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = @TermId       AND     CI.CreatedOnDate > DATEADD(day, -7, GETDATE())    ) AS WeekTermUsage ,    (SELECT    COUNT(CI.ContentItemID)       FROM      dbo.[ContentItems_Tags] T       INNER JOIN dbo.[ContentItems] CI ON CI.ContentItemID = T.ContentItemID       WHERE     T.TermID = @TermId       AND     CI.CreatedOnDate > DATEADD(day, -1, GETDATE())    ) AS DayTermUsage   FROM dbo.Taxonomy_Terms TT   WHERE TermID = @TermId"
1677,CoreMessaging_MarkReadyForToast,"CREATE PROCEDURE dbo.[CoreMessaging_MarkReadyForToast]       @MessageId int,      @UserId int  AS  BEGIN       UPDATE dbo.[CoreMessaging_MessageRecipients]      SET Sendtoast = 1,      [LastModifiedOnDate] = GETDATE()      WHERE MessageId = @MessageId      AND UserId = @UserId  END"
1678,AIElearning_Certificate_GetsClassUser,"CREATE proc [dbo].[AIElearning_Certificate_GetsClassUser]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @classid int,  @CertificateId int,  @UnitCode nvarchar(250),  @JobTitleCode nvarchar(250),  @type int    as  -- [dbo].[AIElearning_Certificate_GetsClassUser] 1,13,'',29,27,'',''  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  --từ khóa  if(@Keyword<>'')   set @Condition=@Condition+' AND ( c.UserName LIKE N''%'+@Keyword+'%''  or i.Mastercode LIKE N''%'+@Keyword+'%'' or i.Displayname LIKE N''%'+@Keyword+'%'' )'   --mã khóa học  if(@classid >-1)   set @Condition=@Condition+' AND c.classid='+str(@classid)   --đơn vị  if(@UnitCode <>'')   set @Condition=@Condition+' AND i.UnitCode='''+(@UnitCode)+''''    --chức danh  if(@JobTitleCode <>'')   set @Condition=@Condition+' AND i.JobTitleCode='''+(@JobTitleCode)+''''    if(@type =1 )   set @Condition=@Condition+' AND c.Userid in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+')'  if(@type =2 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+') and LearnStatus=2'  if(@type =3 )   set @Condition=@Condition+' AND c.Userid not in (select UserId from AIElearning_Certificate_User where CertificateId='+str(@CertificateId)+') and LearnStatus<>2'    exec('    WITH #AIElearning_ClassUser AS(    SELECT ROW_NUMBER() OVER (ORDER BY c.Id desc) AS RowNumber,     c.*, i.UnitChildPath,i.Displayname,i.Mastercode     from AIElearning_ClassUser c left join Users u   on u.UserID = c.UserId left join AISystem_UserInfo i on i.UserId = u.UserID  where ' + @condition +'      )         SELECT     *   FROM #AIElearning_ClassUser   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1679,GetModuleByUniqueID,CREATE PROCEDURE dbo.[GetModuleByUniqueID]      @UniqueID   uniqueidentifier  AS   SELECT *    FROM dbo.vw_Modules   WHERE UniqueID = @UniqueID
1680,UpdateIPFilter,"CREATE PROCEDURE dbo.[UpdateIPFilter]   @IPFilterID  int,   @IPAddress  nvarchar(50),   @SubnetMask  nvarchar(50),   @RuleType  tinyint,   @LastModifiedByUserID  int  AS    BEGIN    UPDATE dbo.IPFilter      SET       IPAddress = @IPAddress,      SubnetMask = @SubnetMask,      RuleType = @RuleType,      LastModifiedByUserID = @LastModifiedByUserID,      LastModifiedOnDate = getdate()     WHERE IPFilterID = @IPFilterID   END"
1681,AIElearning_LearnRule_Table_UpdateAll,create proc [dbo].[AIElearning_LearnRule_Table_UpdateAll]  @Status int  as  Update  AIElearning_LearnRule_Table  set Status=@Status  
1682,GetFolderMappings,"CREATE PROCEDURE dbo.[GetFolderMappings]   @PortalID int  AS  BEGIN   SELECT *   FROM dbo.[FolderMappings]   WHERE ISNULL(PortalID, -1) = ISNULL(@PortalID, -1)   ORDER BY Priority  END"
1683,UpdateFolderModifiedOnToCurrentDate,"CREATE PROCEDURE dbo.[UpdateFolderModifiedOnToCurrentDate]      @FolderID Int  AS  BEGIN   SET NOCOUNT OFF;   --Update the folder only if it has LastModifiedOnDate more than 59 secs old.   --This is to avoid too many updates during massive sync   UPDATE dbo.[Folders] SET LastModifiedOnDate=GETDATE() WHERE FolderID=@FolderID AND DATEDIFF(SECOND,LastModifiedOnDate,GETDATE())>=60   IF(@@ROWCOUNT>0)   BEGIN    --Check if the parent also needs updation    DECLARE @ParentID Int;    SELECT @ParentID = ParentID FROM dbo.[Folders] WHERE FolderID=@FolderID    IF(@ParentID>0)    BEGIN     EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @ParentID    END   END  END"
1684,aspnet_Setup_RemoveAllRoleMembers,"CREATE PROCEDURE [dbo].aspnet_Setup_RemoveAllRoleMembers      @name   sysname  AS  BEGIN      CREATE TABLE #aspnet_RoleMembers      (          Group_name      sysname,          Group_id        smallint,          Users_in_group  sysname,          User_id         smallint      )        INSERT INTO #aspnet_RoleMembers      EXEC sp_helpuser @name        DECLARE @user_id smallint      DECLARE @cmd nvarchar(500)      DECLARE c1 cursor FORWARD_ONLY FOR          SELECT User_id FROM #aspnet_RoleMembers        OPEN c1        FETCH c1 INTO @user_id      WHILE (@@fetch_status = 0)      BEGIN          SET @cmd = 'EXEC sp_droprolemember ' + '''' + @name + ''', ''' + USER_NAME(@user_id) + ''''          EXEC (@cmd)          FETCH c1 INTO @user_id      END        CLOSE c1      DEALLOCATE c1  END"
1685,AISystem_Category_Question_GetsBySearchCount,  CREATE PROC [dbo].[AISystem_Category_Question_GetsBySearchCount]  as  select COUNT(*) from AISystem_Category_Question    SET QUOTED_IDENTIFIER OFF           
1686,GetSkinControlByKey,CREATE PROCEDURE dbo.[GetSkinControlByKey]   @ControlKey nvarchar(50)  AS      SELECT *      FROM   dbo.SkinControls   WHERE ControlKey = @ControlKey
1687,CK__ActivityP__Activ__750F12C6,(len([ActivityIdFromManifest])<=(4096))
1688,AISystem_Category_Unit_AddWithPosition,"  CREATE PROCEDURE [dbo].[AISystem_Category_Unit_AddWithPosition]   @Position int,   @ParentId int,/*nullable*/   @Title nvarchar(250),   @Code NVARCHAR(50),    @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext,   @Independent int,   @IsTraining int  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Unit WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Unit (   [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId],   [Independent],   IsTraining  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId,   @Independent,   @IsTraining  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Unit WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Unit WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Unit WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Unit WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Unit WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Unit         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Unit (   [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId],   [Independent],   IsTraining  ) VALUES (   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId,   @Independent,   @IsTraining  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()      "
1689,AIEventLog_ObjType_GetsBySearch,create proc [dbo].[AIEventLog_ObjType_GetsBySearch]  as  SELECT * from AIEventLog_ObjType                 
1690,AIElearning_TestCampaign_RegistorUserTest_GetListUser,"create proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetListUser]  @CampaignId int  as  select r.Code [Macathi],r.Name [Tencathi],tf.Name [Khungdethi],u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi], rut.Mark,rut.TotalMark,rut.EndTime, jo.Title [Tenchucdanh] from AIElearning_TestCampaign_RegistorUser  ru  inner join AIElearning_TestCampaign_Registor r  on ru.RegistorId=r.id   inner join AIElearning_TestForm tf on r.TestFormId=tf.Id     inner join AISystem_UserInfo u on u.UserId=ru.UserId    inner join AISystem_Category_Unit su on su.Code=u.UnitCode  left join  AIElearning_TestCampaign_RegistorUserTest rut on ru.Id=rut.RegistorUserId  inner join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where ru.CampaignId=@CampaignId  "
1691,GetRelationshipType,"CREATE PROCEDURE dbo.[GetRelationshipType] @RelationshipTypeID INT  AS       SELECT  RelationshipTypeID,              Direction,              Name ,                          Description,              CreatedByUserID ,              CreatedOnDate ,              LastModifiedByUserID ,              LastModifiedOnDate      FROM    dbo.RelationshipTypes       WHERE RelationshipTypeID = @RelationshipTypeID   ORDER BY RelationshipTypeID ASC"
1692,GetModulePermissionsByTabID,CREATE PROCEDURE dbo.[GetModulePermissionsByTabID]      @TabId Int -- Not Null!  AS      SELECT MP.*      FROM        dbo.[Tabs]                 AS T      INNER JOIN  dbo.[TabModules]           AS TM ON TM.TabID    = T.TabID      INNER JOIN  dbo.[vw_ModulePermissions] AS MP ON TM.ModuleID = MP.ModuleID AND T.PortalID = MP.PortalID      WHERE T.TabID = @TabId
1693,AISystem_Rank_GetsBySearch,"create proc [dbo].[AISystem_Rank_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Rank AS(    SELECT ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber,     *     from AISystem_Rank       )         SELECT     *   FROM #AISystem_Rank   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1694,CoreMessaging_MarkToastSent,"CREATE PROCEDURE dbo.[CoreMessaging_MarkToastSent]       @MessageId int,   @UserId INT  AS  BEGIN       UPDATE dbo.CoreMessaging_MessageRecipients      SET Sendtoast = 0,      [LastModifiedOnDate] = GETDATE()      WHERE MessageId = @MessageId   AND UserId = @UserId  END"
1695,AIElearning_Certificate_GetsNotClassIdCount,"CREATE proc [dbo].[AIElearning_Certificate_GetsNotClassIdCount]  @Keyword nvarchar(250),  @Type int,  @Status int,  @chuoi nvarchar(250),  @unitcode nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND Name LIKE N''%'+@Keyword+'%'''  -- Mã chuyên m?c  -- Lo?i  if(@Type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)  -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  if(@chuoi<>'')   set @condition = @condition + ' and Id not in (select * from [dbo].Split('''+@chuoi+'''))'   if(@unitcode <>'')   set @condition = @condition + ' AND unitcode='''+@unitcode+''''  exec('select COUNT(Id) from AIElearning_Class '+@Condition)  SET QUOTED_IDENTIFIER OFF"
1696,DeleteIPFilter,CREATE PROCEDURE dbo.[DeleteIPFilter]   @IPFilterID int  AS    BEGIN    DELETE FROM dbo.IPFilter       WHERE IPFilterID = @IPFilterID   END
1697,AIElearning_ClassLog_CheckSuccessClass,"  CREATE PROC [dbo].[AIElearning_ClassLog_CheckSuccessClass]  @ClassId int,  @Username NVARCHAR(500),  @Data Nvarchar(500)  AS  DECLARE @Success AS INT  DECLARE @ALL AS INT  SET @Success=0  SET @ALL=0    select @Success=COUNT(ID) from AIElearning_ClassItem where ClassId =@ClassId and Type!=1 AND (SELECT COUNT(Id) FROM AIElearning_ClassLog WHERE Username=@Username AND ClassItemId=AIElearning_ClassItem.Id AND Data=@Data)>0  select @ALL=COUNT(ID) from AIElearning_ClassItem where ClassId =@ClassId and Type!=1  IF(@Success!=@ALl)  SELECT 0  ELSE  SELECT 1    "
1698,AIElearning_Class_Hot_GetsByUnitCodeAndIsHot,"CREATE proc [dbo].[AIElearning_Class_Hot_GetsByUnitCodeAndIsHot]  @UnitCode nvarchar(50),  @IsHot int,  @NumberView int  as  -- AIElearning_Class_Hot_GetsByUnitCodeAndIsHot -1, 1, 4  SELECT      top(@NumberView) h.*, c.Type, c.Name, c.Code, c.Price, c.Avatar, c.AvatarHot, c.Description     FROM            AIElearning_Class AS c INNER JOIN                           AIElearning_Class_Hot AS h ON c.Id = h.ClassId  WHERE        h.UnitCode = @UnitCode and h.IsHot = @IsHot Order by OrderNo    SET QUOTED_IDENTIFIER OFF  "
1699,AIEventLog_GetObjType,create proc [dbo].[AIEventLog_GetObjType]  @ObjType int   as  Select top(1)* from AIEventLog_ObjType where ObjType=@ObjType
1700,GetModulePermissionsByPortal,CREATE PROCEDURE dbo.[GetModulePermissionsByPortal]      @PortalId Int -- Not Null!  AS      SELECT *      FROM dbo.[vw_ModulePermissions]      WHERE PortalID = @PortalID
1701,AISystem_Roles_GetsBySearch,"  CREATE proc [dbo].[AISystem_Roles_GetsBySearch]  @ScopeCode nvarchar(500),  @RoleId int,  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AISystem_Roles AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Roles where ScopeCode='''+@ScopeCode+''' and (RoleId='+@RoleId+' or '+@RoleId+'=-1)       )         SELECT     *   FROM #AISystem_Roles   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1702,GetSearchCommonWordByID,"CREATE PROCEDURE dbo.GetSearchCommonWordByID   @CommonWordID int     AS    SELECT   [CommonWordID],   [CommonWord],   [Locale]  FROM   dbo.SearchCommonWords  WHERE   [CommonWordID] = @CommonWordID"
1703,AIElearning_Certificate_GetsNotClassId,"CREATE proc [dbo].[AIElearning_Certificate_GetsNotClassId]   @pageIndex int,  @pageSize int,  @Keyword nvarchar(250),  @Type int,  @Status int,  @chuoi nvarchar(250),  @unitcode nvarchar(250)  as    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  -- T? khóa  if(@Keyword<>'')  set @Condition=@Condition+' AND  Name LIKE N''%'+@Keyword+'%'''  -- Mã chuyên m?c  -- Lo?i  if(@Type>-1)  set @Condition=@Condition+' AND Type='+str(@Type)  -- Tr?ng thái  if(@Status>-1)  set @Condition=@Condition+' AND Status='+str(@Status)  --  if(@chuoi<>'')   set @condition = @condition + ' and Id not in (select * from [dbo].Split('''+@chuoi+'''))'     if(@unitcode <>'')   set @condition = @condition + ' AND Unitcode='''+@unitcode+''''  exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1704,ResetPassword,"create procedure [dbo].[ResetPassword]    @UserName NVarChar(255),    @NewPassword NVarChar(255)    -- exec ResetPassword 'admin', 'aivietnam'    as    begin    Declare @PasswordSalt NVarChar(128)    Declare @ApplicationID NVarChar(255)    Declare @ApplicationName NVarChar(255)         Set @ApplicationID = (SELECT [ApplicationID] FROM aspnet_Users WHERE UserName=@UserName)    Set @ApplicationName = (SELECT [ApplicationName] FROM aspnet_Applications WHERE ApplicationID=@ApplicationID)    Set @PasswordSalt = (SELECT PasswordSalt FROM aspnet_Membership WHERE UserID IN (SELECT UserID FROM aspnet_Users WHERE UserName=@UserName))         declare @RetVal as int    Exec @RetVal = dbo.aspnet_Membership_ResetPassword @ApplicationName, @UserName, @NewPassword, 10, 10, @PasswordSalt, -5    return @RetVal    end      "
1705,GetIPFilters,CREATE PROCEDURE dbo.[GetIPFilters]    AS    SELECT * FROM dbo.IPFilter
1706,AIElearning_TestCampaign_RegistorStaffTest_GetStaffId,"create proc [dbo].[AIElearning_TestCampaign_RegistorStaffTest_GetStaffId]  @TestRegistorId int,  @StaffId int   as  select * from AIElearning_TestCampaign_RegistorStaffTest where TestRegistorId=@TestRegistorId and staffid=@StaffId    /****** Object:  StoredProcedure [dbo].[AIElearning_TestCampaign_RegistorStaffTest_GetTestRegistorId]    Script Date: 10/23/2017 8:26:58 PM ******/  SET ANSI_NULLS ON  "
1707,AddFolder,"CREATE PROCEDURE dbo.[AddFolder]   @PortalID    int,   @UniqueId    uniqueidentifier,   @VersionGuid   uniqueidentifier,   @FolderPath   nvarchar(300),   @MappedPath   nvarchar(300),   @StorageLocation  int,   @IsProtected   bit,   @IsCached    bit,   @LastUpdated   datetime,   @CreatedByUserID   int,   @FolderMappingID int = 0,   @IsVersioned  bit = 0,   @WorkflowID   int = NULL,   @ParentID   int = NULL  AS  BEGIN   IF @FolderMappingID = 0 BEGIN    SELECT @FolderMappingID = FM.FolderMappingID    FROM dbo.[FolderMappings] as FM    WHERE ISNULL(FM.PortalID, -1) = ISNULL(@PortalID, -1)    AND FolderProviderType = (     CASE @StorageLocation      WHEN 0 THEN 'StandardFolderProvider'      WHEN 1 THEN 'SecureFolderProvider'      WHEN 2 THEN 'DatabaseFolderProvider'      ELSE 'StandardFolderProvider'     END    )   END      SET NOCOUNT OFF;   INSERT INTO dbo.[Folders] (    PortalID,     UniqueId,    VersionGuid,    FolderPath,    MappedPath,     StorageLocation,     IsProtected,     IsCached,     LastUpdated,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate,    FolderMappingID,    IsVersioned,    WorkflowID,    ParentID   )   VALUES (    @PortalID,     @UniqueId,    @VersionGuid,    @FolderPath,    @MappedPath,     @StorageLocation,     @IsProtected,     @IsCached,     @LastUpdated,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate(),    @FolderMappingID,    @IsVersioned,    @WorkflowID,    @ParentID   )   --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @ParentID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @ParentID   END     DECLARE @FolderId INT      SELECT @FolderId = SCOPE_IDENTITY()      SELECT @FolderId  END"
1708,AISystem_Partner_GetsByArray,"CREATE proc [dbo].[AISystem_Partner_GetsByArray]  @arrId nvarchar(500)  as  -- AISystem_Partner_GetsByArray  '1,2,1516'  select  ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,*   from  AISystem_Partner    where Id in(select * from Split(@arrId))  "
1709,GetContentWorkflowStateUsageCount,CREATE PROCEDURE dbo.[GetContentWorkflowStateUsageCount]   @StateId INT  AS   SELECT COUNT(ci.ContentItemID)   FROM dbo.[ContentItems] ci    WHERE ci.StateId = @StateId
1710,GetModulePermissionsByModuleID,"CREATE PROCEDURE dbo.[GetModulePermissionsByModuleID]      @ModuleId       Int,   -- Null|-1 for all modules      @PermissionId   Int    -- Null|-1 for all permissions  AS  BEGIN   IF (IsNull(@ModuleId, -1) = -1) -- separate branches with individual query optimization    SELECT *      FROM dbo.[vw_ModulePermissions]     WHERE (PermissionID = @PermissionId OR IsNull(@PermissionId, -1) = -1)    ELSE    SELECT *    FROM dbo.[vw_ModulePermissions]    WHERE ((ModuleID = @ModuleId) OR (ModuleID IS NULL AND PermissionCode = 'SYSTEM_MODULE_DEFINITION'))    AND (PermissionID = @PermissionId OR IsNull(@PermissionId, -1) = -1)  END"
1711,AISystem_SubjectGetsLimit,"CREATE proc [dbo].[AISystem_SubjectGetsLimit]  @Limit int,  @CateSubjectId int,  @UnitCode nvarchar(50)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Limit>-1)   set @Condition=@Condition+' AND Limit='+str(@Limit)  if(@CateSubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@CateSubjectId)    IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (UnitCode = ''' + @UnitCode + ''') '    exec('select * from AISystem_Subject '+@Condition+' ')  "
1712,GetContentItemsByContentType,CREATE PROCEDURE dbo.[GetContentItemsByContentType]    @ContentTypeId int  AS   SELECT * FROM dbo.ContentItems WHERE ContentTypeID = @ContentTypeId
1713,AIElearning_Certificate_User_GetsBySearch,"  create proc [dbo].[AIElearning_Certificate_User_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_Certificate_User AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Certificate_User       )         SELECT     *   FROM #AIElearning_Certificate_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1714,GetDesktopModules,CREATE PROCEDURE dbo.[GetDesktopModules]  AS   SELECT *   FROM  dbo.vw_DesktopModules   ORDER BY FriendlyName
1715,GetFileFolderFunc,CREATE FUNCTION dbo.[GetFileFolderFunc](@FolderD INT)  RETURNS nvarchar(246)   AS  BEGIN      DECLARE @folderPath nvarchar(246)      select @folderPath=folderpath from dbo.[Folders] where folderid=@FolderD  return @folderPath      END;
1716,AIElearning_Certificate_GetCertificateId,create proc [dbo].[AIElearning_Certificate_GetCertificateId]  @itemid nvarchar(250)  as  select * from AIElearning_Certificate_ClassDone where CertificateId=@itemid  
1717,DeleteSkinControl,CREATE PROCEDURE dbo.[DeleteSkinControl]   @SkinControlId int  AS      DELETE      FROM   dbo.SkinControls      WHERE  SkinControlId = @SkinControlId
1718,DeleteFile,"CREATE PROCEDURE dbo.[DeleteFile]       @PortalID int,   @FileName nvarchar(246),   @FolderID int  AS  BEGIN   SET NOCOUNT OFF;      IF @PortalID is null      BEGIN          DELETE FROM dbo.[Files] WHERE FileName = @FileName AND FolderID = @FolderID AND PortalId IS Null      END    ELSE    BEGIN          DELETE FROM dbo.[Files] WHERE FileName = @FileName AND FolderID = @FolderID AND PortalId = @PortalID      END      --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @FolderID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @FolderID   END  END"
1719,AISystem_Category_TestForm_ChildrenByParentId,"    CREATE PROC [dbo].[AISystem_Category_TestForm_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50)  AS  SELECT * FROM AISystem_Category_TestForm    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )   ORDER BY OrderNo        "
1720,GetUrlTracking,"create procedure dbo.GetUrlTracking    @PortalID     int,  @Url          nvarchar(255),  @ModuleId     int    as    select *  from   dbo.UrlTracking  where  PortalID = @PortalID  and    Url = @Url  and    ((ModuleId = @ModuleId) or (ModuleId is null and @ModuleId is null))"
1721,AIElearning_Answer_GetByQuestionId,  CREATE PROC [dbo].[AIElearning_Answer_GetByQuestionId]  @QuestionId int  AS  -- AIElearning_Answer_GetByQuestionId 1  SELECT * FROM [dbo].[AIElearning_Answer] WHERE QuestionID=@QuestionId ORDER BY OrderNumber    
1722,AISystem_UserInfo_Partner_GetsBySearchCount,create proc [dbo].[AISystem_UserInfo_Partner_GetsBySearchCount]  as  select COUNT(*) from AISystem_UserInfo_Partner    SET QUOTED_IDENTIFIER OFF   
1723,GetScheduleItemSettings,CREATE PROCEDURE dbo.GetScheduleItemSettings   @ScheduleID int  AS  SELECT *  FROM dbo.ScheduleItemSettings  WHERE ScheduleID = @ScheduleID
1724,DeleteFolderPermissionsByUserID,"CREATE PROCEDURE dbo.[DeleteFolderPermissionsByUserID]      @PortalId Int,  -- Null|-1 for Host menu tabs      @UserId   Int   -- Not Null  AS      DELETE FROM dbo.[FolderPermission]      WHERE UserID = @UserId       AND FolderID IN (SELECT FolderID FROM dbo.[Folders]                      WHERE (PortalID = @PortalId Or IsNull(@PortalId, -1) = IsNull(PortalID, -1)))"
1725,AISystem_Subject_GetClassBySubjectIdAndUserId,"CREATE proc [dbo].[AISystem_Subject_GetClassBySubjectIdAndUserId]   @SubjectId int,  @UserId int  as  -- AISystem_Subject_GetClassBySubjectIdAndUserId 8,24  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@SubjectId >-1)   set @Condition=@Condition+' AND c.SubjectId= '+str(@SubjectId)  if(@UserId >-1)   set @Condition=@Condition+' AND cu.UserId= '+str(@UserId)  exec('   select c.* from AIElearning_Class c inner join AIElearning_ClassUser cu on c.Id = cu.ClassId     where  ' + @Condition )        "
1726,GetPackageTypes,CREATE PROCEDURE dbo.[GetPackageTypes]  AS   SELECT * FROM dbo.PackageTypes
1727,AIElearning_ClassGetExercise,"create proc [dbo].[AIElearning_ClassGetExercise]   @pageIndex int,  @pageSize int,  @Userid int  as  -- AIElearning_Class_GetsBySearch 1,22, '', -1, 2, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    -- Tr?ng thái  if(@Userid>-1)  set @Condition=@Condition+' AND id  in(select distinct classid from AIElearning_Exercise where id in (select ExerciseId from AIElearning_Exercise_Mentor where Userid='''+str(@Userid)+'''))'  exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF    "
1728,CoreMessaging_DeleteNotification,CREATE PROCEDURE dbo.[CoreMessaging_DeleteNotification]   @NotificationID int  AS  BEGIN   DELETE   FROM dbo.[CoreMessaging_Messages]   WHERE [MessageID] = @NotificationID AND [NotificationTypeID] IS NOT NULL  END
1729,AISystem_Subject_GetMaxOrderNo,"CREATE proc [dbo].[AISystem_Subject_GetMaxOrderNo]   @cateSubjectId int  as  begin  select ISNULL(max(OrderNo),'0')   from AISystem_Subject   WHERE CateSubjectId=@cateSubjectId   end  "
1730,CoreMessaging_SaveMessageAttachment,"CREATE PROCEDURE dbo.[CoreMessaging_SaveMessageAttachment]      @MessageAttachmentID int,      @MessageID int,      @FileID int,   @CreateUpdateUserID INT  AS      IF ( @MessageAttachmentID = -1 )          BEGIN              INSERT dbo.CoreMessaging_MessageAttachments(       [FileID],       [MessageID],                      [CreatedByUserID],                      [CreatedOnDate],                      [LastModifiedByUserID],                      [LastModifiedOnDate]                      )              VALUES  (       @FileID,       @MessageID,                      @CreateUpdateUserID , -- CreatedBy - int                      GETDATE() , -- CreatedOn - datetime                      @CreateUpdateUserID , -- LastModifiedBy - int                      GETDATE() -- LastModifiedOn - datetime                      )                SELECT  @MessageAttachmentID = SCOPE_IDENTITY()          END      ELSE          BEGIN              UPDATE  dbo.CoreMessaging_MessageAttachments              SET     [FileID] = @FileID,       [MessageID] = @MessageID,                      LastModifiedByUserID = @CreateUpdateUserID,                      LastModifiedOnDate = GETDATE()              WHERE   MessageAttachmentID = @MessageAttachmentID          END        SELECT  @MessageAttachmentID"
1731,DeleteFiles,CREATE PROCEDURE dbo.[DeleteFiles]       @PortalID int  AS  BEGIN      SET NOCOUNT OFF;   DECLARE @FolderID int;        IF @PortalID is null      BEGIN    SELECT TOP 1 @FolderID=FolderID FROM dbo.[Files] WHERE PortalId is null          DELETE FROM dbo.[Files] WHERE PortalId is null      END    ELSE    BEGIN    SELECT TOP 1 @FolderID=FolderID FROM dbo.[Files] WHERE PortalId = @PortalID          DELETE FROM dbo.[Files] WHERE PortalId = @PortalID      END     --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @FolderID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @FolderID   END    END
1732,AISystem_Category_Question_UpdateChildId,"  CREATE PROC [dbo].[AISystem_Category_Question_UpdateChildId]  @Id AS INT,  @ChildId AS ntext  AS  UPDATE AISystem_Category_Question  SET    ChildId = @ChildId  WHERE Id = @Id        "
1733,AIElearning_ClassNotifi_DeleteByClassId,create PROC [dbo].[AIElearning_ClassNotifi_DeleteByClassId]  @ClassId int  AS  DELETE FROM AIElearning_ClassNotifi  WHERE        (ClassId = @ClassId)
1734,AIElearning_Training_Plan_DeleteSubject,create proc AIElearning_Training_Plan_DeleteSubject  @PlanId int  as  delete from AIElearning_Training_Plan_Subject where PlanId=@PlanId
1735,AIElearning_Answer_GetRandomByQuestion,"  CREATE PROC [dbo].[AIElearning_Answer_GetRandomByQuestion]  @QuestionId INT  AS  SELECT ROW_NUMBER() OVER (ORDER BY newid() desc) AS RowNumber     ,*     from AIElearning_Answer WHERE QuestionId=@QuestionId  "
1736,AIElearning_TestCampaign_RegistorUserTest_GetListRegistorId,"create proc [dbo].[AIElearning_TestCampaign_RegistorUserTest_GetListRegistorId]  @RegistorId int  as  select r.Code [Macathi],r.Name [Tencathi],tf.Name [Khungdethi],u.Username,u.Displayname,u.Mastercode,su.Title [Tendonvi], rut.Mark,rut.TotalMark,rut.EndTime, jo.Title [Tenchucdanh] from AIElearning_TestCampaign_RegistorUser ru  inner join AIElearning_TestCampaign_Registor r  on ru.RegistorId=r.id   inner join AIElearning_TestForm tf on r.TestFormId=tf.Id     inner join AISystem_UserInfo u on u.UserId=ru.UserId    inner join AISystem_Category_Unit su on su.Code=u.UnitCode  left join  AIElearning_TestCampaign_RegistorUserTest rut on ru.Id=rut.RegistorUserId  inner join AISystem_JobTitle_Title jo on jo.Code=u.JobTitleCode  where ru.RegistorId=@RegistorId  "
1737,DeleteFolderPermissionsByFolderPath,"CREATE PROCEDURE dbo.[DeleteFolderPermissionsByFolderPath]      @PortalId   Int,            -- Null for Host menu tabs      @FolderPath nVarChar(300)   -- must be a valid path  AS  BEGIN      DELETE FROM dbo.[FolderPermission]      WHERE FolderID IN (SELECT FolderID FROM dbo.[Folders]                                         WHERE FolderPath = @FolderPath AND (IsNull(PortalID, -1) = IsNull(@PortalId, -1)))  END"
1738,AISystem_Subject_GetInClassCount,"CREATE proc [dbo].[AISystem_Subject_GetInClassCount]  @keyword nvarchar(max),  @categorysubjectId int,  @chuoi nvarchar(250)  as  -- [AISystem_Subject_GetsBySearchCount] '',-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  --------  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@categorysubjectId)  -------------  if(@chuoi<>'')   set @condition = @condition + ' and Id not in (select * from [dbo].Split('''+@chuoi+'''))'  --------------  exec('select COUNT(*) from AISystem_Subject where '+@Condition)  SET QUOTED_IDENTIFIER OFF   "
1739,GetSkinControls,CREATE PROCEDURE dbo.[GetSkinControls]  AS      SELECT *      FROM   dbo.SkinControls   ORDER BY  ControlKey
1740,AIElearning_ClassGetUserinfoCount,"CREATE proc [dbo].[AIElearning_ClassGetUserinfoCount]   @type int,  @Key nvarchar(250)    as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@type=1)  set @Condition=@Condition+' AND id  in (select  ClassId from AIElearning_ClassUser where Username='''+@Key+''')'  --mastor code  if(@type=0)  set @Condition=@Condition+' AND id  in (select ClassId from AIElearning_ClassUser where Username in (select username from AISystem_UserInfo where Mastercode='''+@Key+'''))'    exec('select COUNT(Id) from AIElearning_Class '+@Condition)  "
1741,AIEventLog_CreateTable,"  create proc [dbo].[AIEventLog_CreateTable]  @NameTable nvarchar(250)  as  IF Not EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME=@NameTable)  Begin  exec('  CREATE TABLE '+@NameTable+'(   [Id] [bigint] IDENTITY(1,1) NOT NULL,   [UserId] [int] NULL,   [Username] [nvarchar](100) NULL,   [ActionId] [int] NULL,   [IpAddress] [nvarchar](50) NULL,   [ObjectType] [int] NULL,   [ObjectId] [int] NULL,   [ObjectName] [nvarchar](255) NULL,   [Note] [nvarchar](1000) NULL,   [CreatedDate] [datetime] NULL,   [PortalId] [int] NULL,   [LanguageId] [nvarchar](50) NULL,   [ObjectNewData] [nvarchar](max) NULL,   [ObjectOldData] [nvarchar](max) NULL,   CONSTRAINT [PK_'+@NameTable+'] PRIMARY KEY CLUSTERED   (   [Id] ASC  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]  ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]    ')  end  "
1742,AISystem_Rank_GetbyCode,create proc [dbo].[AISystem_Rank_GetbyCode]  @Code nvarchar(50)  as  select top(1)* from AISystem_Rank where Code=@code  
1743,DeleteFolder,"CREATE PROCEDURE dbo.[DeleteFolder]       @PortalID int,      @FolderPath nvarchar(300)  AS  BEGIN      SET NOCOUNT OFF;   DECLARE @ParentID int;     IF @PortalID is null      BEGIN    SELECT @ParentID=ParentID FROM dbo.[Folders] WHERE PortalID = @PortalID AND FolderPath = @FolderPath;       DELETE FROM dbo.[Folders] WHERE PortalID is null AND FolderPath = @FolderPath      END    ELSE    BEGIN    SELECT @ParentID=ParentID FROM dbo.[Folders] WHERE PortalID is null AND FolderPath = @FolderPath;          DELETE FROM dbo.[Folders] WHERE PortalID = @PortalID AND FolderPath = @FolderPath      END     --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @ParentID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @ParentID   END    END"
1744,AIElearning_TestCampaign_RegistorUser_GetUser,"create proc [dbo].[AIElearning_TestCampaign_RegistorUser_GetUser]  @TestRegistorId int,  @ListUser nvarchar(Max)  as  select * from AIElearning_TestCampaign_RegistorUser where TestRegistorId=@TestRegistorId and id not in (select * from Split(@ListUser))  "
1745,AIElearning_ClassDocument_GetAviableMedia,"CREATE PROC [dbo].[AIElearning_ClassDocument_GetAviableMedia]      @pageIndex INT,      @pageSize INT,      @Keyword NVARCHAR(250),      @CategoryId INT,      @Type INT,      @classId INT,      @Format NVARCHAR(50),      @ParentType INT  AS -- AIElearning_ClassDocument_GetAviableMedia 1,10,'',-1,2,1,''  DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = 'where (1=1) '  IF ( @classId > -1 )      SET @Condition = @Condition + ' AND Status =1 and  (Id not in (Select MediaId from AIElearning_ClassDocument where ClassId = ' + STR(@classId) + ' and ParentType = ' + STR(@ParentType) + ' ))'  IF ( @Keyword <> '' )      SET @Condition = @Condition + ' AND Name like N''%' + @Keyword + '%'''  IF ( @Format <> '' )      SET @Condition = @Condition + ' AND  Content like ''%' + @Format + '%'''  IF ( @CategoryId > -1 )      SET @Condition = @Condition + ' AND CategoryId=' + STR(@CategoryId)  IF ( @Type > -1 )      SET @Condition = @Condition + ' AND Type=' + STR(@Type)  EXEC('  WITH #AIElearning_Media AS(   SELECT ROW_NUMBER() OVER (ORDER BY ID DESC) AS RowNumber, *  from AIElearning_Media  '+@Condition+')  SELECT *  FROM #AIElearning_Media  where RowNumber between '+ @start +'  and  '+ @end +'   ')  "
1746,AddAuthentication,"CREATE PROCEDURE dbo.AddAuthentication   @PackageID    int,   @AuthenticationType     nvarchar(100),   @IsEnabled    bit,   @SettingsControlSrc     nvarchar(250),   @LoginControlSrc  nvarchar(250),   @LogoffControlSrc  nvarchar(250),   @CreatedByUserID int  AS   INSERT INTO Authentication (    PackageID,    AuthenticationType,    IsEnabled,    SettingsControlSrc,    LoginControlSrc,    LogoffControlSrc,    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate]   )   VALUES (    @PackageID,    @AuthenticationType,    @IsEnabled,    @SettingsControlSrc,    @LoginControlSrc,    @LogoffControlSrc,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
1747,AIElearning_Question_CountByParams,"  CREATE PROC [dbo].[AIElearning_Question_CountByParams]  @CategoryId int,  @Level int,  @Type int,  @Mark float  AS  DECLARE @ChildId AS NVARCHAR(MAX)  select @ChildId=ChildId from AISystem_Category where Id=@CategoryId    exec('select count(Id) from AIElearning_Question WHERE CategoryId in ('+@ChildId+')     and (Level='+@Level+' OR '+@Level+'=-1)    and (Type='+@Type+' OR '+@Type+'=-1)    and (Mark='+@Mark+' OR '+@Mark+'=-1)')  "
1748,AIElearning_TestCampaign_Registor_GetMarkUser,  create proc [dbo].[AIElearning_TestCampaign_Registor_GetMarkUser]   @RegistorUserId int  as   if EXISTS(SELECT Mark from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@RegistorUserId)   SELECT Mark from AIElearning_TestCampaign_RegistorUserTest where RegistorUserId=@RegistorUserId   else   SELECT 0   
1749,GetTabPermissionsByTabID,"CREATE PROCEDURE dbo.GetTabPermissionsByTabID   @TabID int,    @PermissionID int  AS     SELECT  *   FROM    dbo.vw_TabPermissions   WHERE   (TabID = @TabID OR (TabID IS NULL AND PermissionCode = 'SYSTEM_TAB'))    AND (PermissionID = @PermissionID OR @PermissionID = -1)"
1750,CoreMessaging_UpdateSubscriptionDescription,"CREATE PROCEDURE dbo.[CoreMessaging_UpdateSubscriptionDescription]   @ObjectKey NVARCHAR(255),       @PortalId INT,      @Description NVARCHAR(255)   AS    BEGIN    UPDATE dbo.CoreMessaging_Subscriptions    SET [Description] = @Description    WHERE PortalId = @PortalId     AND ObjectKey LIKE @ObjectKey      SELECT @@ROWCOUNT AS [ResultStatus]         END"
1751,AISystem_Subject_GetInClass,"  CREATE proc [dbo].[AISystem_Subject_GetInClass]  @pageIndex int,  @pageSize int,  @keyword nvarchar(max),  @categorysubjectId int,  @chuoi nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  ------  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@categorysubjectId)  --------  if(@chuoi<>'')   set @condition = @condition + ' and Id not in (select * from [dbo].Split('''+@chuoi+'''))'    exec('    WITH #AISystem_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Subject     where '+@Condition+' )         SELECT     *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1752,GetContentItemsByModuleId,CREATE PROCEDURE dbo.[GetContentItemsByModuleId]    @ModuleId int  AS   SELECT * FROM dbo.ContentItems WHERE ModuleID = @ModuleId
1753,AIElearning_ClassGetUserinfo,"create proc [dbo].[AIElearning_ClassGetUserinfo]   @pageIndex int,  @pageSize int,  @type int,  @Key nvarchar(250)  as  -- AIElearning_Class_GetsBySearch 1,22, '', -1, 2, -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    -- tai khoan  if(@type=1)  set @Condition=@Condition+' AND id  in (select  ClassId from AIElearning_ClassUser where Username='''+@Key+''' and classid in (select distinct classid from AIElearning_Monney_Class where MoneyReality > 0))'  --mastor code  if(@type=0)  set @Condition=@Condition+' AND id  in (select ClassId from AIElearning_ClassUser where Username in (select username from AISystem_UserInfo where Mastercode='''+@Key+''') and classid in (select distinct classid from AIElearning_Monney_Class where MoneyReality > 0))'  exec('    WITH #AIElearning_Class AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class '+@Condition+'       )         SELECT     *   FROM #AIElearning_Class   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1754,DeletePortalGroup,CREATE PROCEDURE dbo.[DeletePortalGroup]   @PortalGroupID int  AS    BEGIN    DELETE FROM dbo.PortalGroups       WHERE PortalGroupID = @PortalGroupID   END
1755,AIElearning_ClassLog_GetsBySearch,"  CREATE proc [dbo].[AIElearning_ClassLog_GetsBySearch]  @pageIndex int,  @pageSize int,  @ClassId int,  @Username nvarchar(150),  @ClassItemId int,  @Type int,  @Order nvarchar(50)  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF (@Username IS NOT NULL AND @Username<>'')   set @condition = @condition + ' and (Username =''' + @Username + ''') '  IF(@ClassItemId > 0)   set @condition = @condition +    ' And  (ClassItemId= '+ STR(@ClassItemId)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  (Type= '+ STR(@Type)+' )'  exec('    WITH #AIElearning_ClassLog AS(    SELECT ROW_NUMBER() OVER (ORDER BY '+ @Order +') AS RowNumber,     *     from AIElearning_ClassLog where ' + @condition +'      )     SELECT     *   FROM #AIElearning_ClassLog   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF     "
1756,GetRoleGroups,CREATE PROCEDURE dbo.GetRoleGroups   @PortalID  int  AS   SELECT *    FROM dbo.RoleGroups    WHERE  PortalId = @PortalID    ORDER BY RoleGroupName
1757,AISystem_Subject_GetsByCodeCount,CREATE proc [dbo].[AISystem_Subject_GetsByCodeCount]   @code nvarchar(50)  as  begin  select count(*)  from AISystem_Subject   WHERE Code=@code   end  
1758,GetAllTabsModules,"CREATE procedure dbo.[GetAllTabsModules]   @PortalID int,   @AllTabs bit  AS   SELECT *    FROM dbo.vw_Modules M   WHERE  M.PortalID = @PortalID     AND M.IsDeleted = 0    AND M.AllTabs = @AllTabs    AND M.TabModuleID =(SELECT min(TabModuleID)      FROM dbo.TabModules     WHERE ModuleID = M.ModuleID)   ORDER BY M.ModuleId"
1759,AISystem_Category_TestForm_GetAllChildAndIncludeParentID_WithMaxLevel,"    CREATE PROC [dbo].[AISystem_Category_TestForm_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50)  AS    -- exec AISystem_Category_TestForm_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TestForm.Id,      0,      AISystem_Category_TestForm.ParentId,      AISystem_Category_TestForm.Title,      STR(AISystem_Category_TestForm.OrderNo),      AISystem_Category_TestForm.Title,      AISystem_Category_TestForm.Code          FROM      AISystem_Category_TestForm    WHERE      (AISystem_Category_TestForm.Status=@Status OR @Status = -1)       AND (AISystem_Category_TestForm.Id = @ParentId)      AND AISystem_Category_TestForm.LanguageId = @LanguageId      AND AISystem_Category_TestForm.PortalId = @portalId      AND (AISystem_Category_TestForm.UnitCode = @UnitCode  )   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT       AISystem_Category_TestForm.Id,      0,      AISystem_Category_TestForm.ParentId,      AISystem_Category_TestForm.Title,      STR(AISystem_Category_TestForm.OrderNo),      AISystem_Category_TestForm.Title,      AISystem_Category_TestForm.Code          FROM      AISystem_Category_TestForm    WHERE      (AISystem_Category_TestForm.Status=@Status OR @Status = -1)       AND (AISystem_Category_TestForm.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_TestForm.ParentId IS NULL or AISystem_Category_TestForm.ParentId <=0))      AND AISystem_Category_TestForm.LanguageId = @LanguageId      AND AISystem_Category_TestForm.PortalId = @portalId      AND (AISystem_Category_TestForm.UnitCode = @unitCode  )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code         FROM     #PathConstruction T    JOIN AISystem_Category_TestForm  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitCode >-1)  -- set @Condition=@Condition+' AND UnitCode='+str(@UnitCode)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction              "
1760,AIElearning_ClassDocument_GetAviableMediaCount,"CREATE PROC [dbo].[AIElearning_ClassDocument_GetAviableMediaCount]      @Keyword NVARCHAR(250),      @CategoryId INT,      @Type INT,      @classId INT,      @Format NVARCHAR(50),      @ParentType INT  AS -- AIElearning_ClassDocument_GetAviableMediaCount '',-1,2,1,''  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition = 'where (1=1)'  IF ( @classId > -1 )      SET @Condition = @Condition + ' AND Status =1 and  (Id not in (Select MediaId from AIElearning_ClassDocument where ClassId = ' + STR(@classId) + ' and ParentType = ' + STR(@ParentType) + ' ))'  IF ( @Keyword <> '' )      SET @Condition = @Condition + ' AND  Name like N''%' + @Keyword + '%'''  IF ( @Format <> '' )      SET @Condition = @Condition + ' AND  Content like ''%' + @Format + '%'''  IF ( @CategoryId > -1 )      SET @Condition = @Condition + ' AND CategoryId=' + STR(@CategoryId)  IF ( @Type > -1 )      SET @Condition = @Condition + ' AND Type=' + STR(@Type)  EXEC('   SELECT count(Id)  from AIElearning_Media  '+@Condition+'')      "
1761,DeleteRoleGroup,CREATE PROCEDURE dbo.[DeleteRoleGroup]     @RoleGroupId      int     AS    DELETE    FROM dbo.RoleGroups  WHERE  RoleGroupId = @RoleGroupId
1762,CoreMessaging_GetMessage,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessage]      @MessageID INT  AS    SELECT [MessageID], [PortalId], [NotificationTypeID], [To], [From], [Subject], [Body], [ConversationID], [ReplyAllAllowed], [SenderUserID], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]    FROM   dbo.[CoreMessaging_Messages]    WHERE  [MessageID] = @MessageID"
1763,AIElearning_Question_GetMarkInCategory,CREATE PROC [dbo].[AIElearning_Question_GetMarkInCategory]  @CategoryId int  AS  --DECLARE @ChildId AS NVARCHAR(MAX)  --SET @ChildId='-1'  --IF(@CategoryId > -1)  --select @ChildId=ChildId from AISystem_Category where Id=@CategoryId    select distinct(Mark) from AIElearning_Question WHERE (CategoryId = @CategoryId OR @CategoryId = -1) AND ParentId =-1          
1764,AIEventLog_DeleteLogAllYear,"          create PROC [dbo].[AIEventLog_DeleteLogAllYear]   @Year int  AS   DECLARE @Name nvarchar(250)   if(@Year=2017)   Set @Name=''   else   Set @Name=Concat('_',@Year)     EXEC(' Truncate table dbo.AIEventLog'+@Name+' ')      SET QUOTED_IDENTIFIER OFF        "
1765,AISystem_UserInfo_HardDeleteUser,"create PROCEDURE [dbo].[AISystem_UserInfo_HardDeleteUser]      @UserID INT ,      @PortalID INT    -- AISystem_UserInfo_HardDeleteUser 2152,0  AS      IF @PortalID IS NULL          BEGIN              UPDATE  dbo.Users              SET     IsDeleted = 1              WHERE   UserID = @UserID          END      ELSE          BEGIN              UPDATE  dbo.UserPortals              SET     IsDeleted = 1              WHERE   UserId = @UserID AND PortalId = @PortalID          END      DECLARE @userInfoId INT      DECLARE @userName NVARCHAR(100)      DECLARE @aspnetUserId UNIQUEIDENTIFIER        SELECT  @userInfoId = Id      FROM    AISystem_UserInfo      WHERE   UserId = @UserID      SELECT  @userName = Username      FROM    dbo.Users      WHERE   UserID = @UserID      SELECT  @aspnetUserId = UserId      FROM    dbo.aspnet_Users      WHERE   UserName = @userName        DELETE  FROM AIElearning_Lecturers      WHERE   UserInfoId = @userInfoId      DELETE  FROM AISystem_UserInfo      WHERE   UserId = @UserID      DELETE  FROM Users      WHERE   UserID = @UserID      DELETE  FROM aspnet_Membership      WHERE   UserId = @aspnetUserId      DELETE  FROM aspnet_Users      WHERE   UserId = @aspnetUserId"
1766,DeleteRelationshipType,CREATE PROCEDURE dbo.[DeleteRelationshipType] @RelationshipTypeID INT   AS    BEGIN    DELETE FROM dbo.RelationshipTypes       WHERE RelationshipTypeID = @RelationshipTypeID   END
1767,GetFolderPermissionsByPortal,"CREATE PROCEDURE dbo.[GetFolderPermissionsByPortal]      @PortalId Int   -- Null|-1 for Host menu tabs  AS      SELECT *      FROM dbo.[vw_FolderPermissions]      WHERE IsNull(PortalID, -1) = IsNull(@PortalId, -1)"
1768,AISystem_Subject_GetsBySearchCount,"CREATE proc [dbo].[AISystem_Subject_GetsBySearchCount]  @keyword nvarchar(max),  @categorysubjectId int,  @limit int,  @unitCode nvarchar(50)  as  -- [AISystem_Subject_GetsBySearchCount] '',1007,2,'28'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  if(@keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@categorysubjectId)  if(@limit >-1 )   set @Condition=@Condition+' AND Limit='+str(@limit)  if(@unitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@unitCode+''''    exec('select COUNT(*) from AISystem_Subject where '+@Condition)  SET QUOTED_IDENTIFIER OFF   "
1769,fn_CompareVersion,"CREATE FUNCTION dbo.[fn_CompareVersion]  (   @Version  nvarchar(20),   @CurrentVersion nvarchar(20)  )  RETURNS int    AS   BEGIN       DECLARE @Pos int    DECLARE @String nvarchar(20)    DECLARE @MajorVersion int    DECLARE @MajorCurrentVersion int    DECLARE @MinorVersion int    DECLARE @MinorCurrentVersion int    DECLARE @BuildVersion int    DECLARE @BuildCurrentVersion int      SET @String = @Version    SET @Pos = CHARINDEX('.' , @String)    SET @MajorVersion = CONVERT(int, LEFT(@String, @Pos - 1))    SET @String = STUFF(@String, 1, @Pos, '')    SET @Pos = CHARINDEX('.' , @String)    SET @MinorVersion = CONVERT(int, LEFT(@String, @Pos - 1))    SET @String = STUFF(@String, 1, @Pos, '')    SET @BuildVersion = CONVERT(int, @String)        SET @String = @CurrentVersion    SET @Pos = CHARINDEX('.' , @String)    SET @MajorCurrentVersion = CONVERT(int, LEFT(@String, @Pos - 1))    SET @String = STUFF(@String, 1, @Pos, '')    SET @Pos = CHARINDEX('.' , @String)    SET @MinorCurrentVersion = CONVERT(int, LEFT(@String, @Pos - 1))    SET @String = STUFF(@String, 1, @Pos, '')    SET @BuildCurrentVersion = CONVERT(int, @String)        IF @CurrentVersion IS NULL     -- Assembly Not Registered -  Set ReturnCode = 0, so assembly is copied     RETURN 0    ELSE     IF @Version = @CurrentVersion      -- Same Version - Set ReturnCode = 2, so assembly is only copied on repair      RETURN 2     ELSE      -- Different Version      -- Compare Major, Minor, Revision      IF @MajorVersion > @MajorCurrentVersion       OR (@MajorVersion = @MajorCurrentVersion AND @MinorVersion > @MinorCurrentVersion)        OR (@MajorVersion = @MajorCurrentVersion AND @MinorVersion = @MinorCurrentVersion AND @BuildVersion > @BuildCurrentVersion)       -- Newer version - at least on of Major, Minor, Revision is larger - Set ReturnCode = 1, so assembly is copied       RETURN 1      ELSE       -- Older Version - Set ReturnCode = 3, so assembly is not copied       RETURN 3      RETURN 3   END"
1770,AIElearning_ClassLecturers_TotalTime_DeleteByParam,"create proc [dbo].[AIElearning_ClassLecturers_TotalTime_DeleteByParam]   @UserName  nvarchar(150),  @ReportYear int,  @UnitCode nvarchar(50)  as  begin  delete from AIElearning_ClassLecturers_TotalTime where (Username = @UserName or @UserName ='') and (ReportYear = @ReportYear  or @ReportYear =-1) and (UnitCode = @UnitCode or @UnitCode = '')  end"
1771,AIElearning_ClassItem_Checkings_GetsByClassAndDataId,"CREATE proc [dbo].[AIElearning_ClassItem_Checkings_GetsByClassAndDataId]  @ClassId int,  @DataId int,  @Type int  as  -- AIElearning_ClassItem_Checkings_GetsByClassAndDataId 27, 25, 6  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    if(@ClassId>-1)   set @Condition=@Condition+' AND c.ClassId='+str(@ClassId)  if(@DataId>-1)   set @Condition=@Condition+' AND i.DataId='+str(@DataId)  if(@Type>-1)   set @Condition=@Condition+' AND i.Type='+str(@Type)  exec('    SELECT       c.*, i.DataId, i.Type  FROM            AIElearning_ClassItem_Checkings AS c INNER JOIN                           AIElearning_ClassItem AS i ON c.ClassId = i.ClassId AND c.ClassItemId = i.Id '+@Condition+'   ')  "
1772,GetFolderMappingsSettings,"CREATE PROCEDURE dbo.[GetFolderMappingsSettings]   @FolderMappingID int  AS  BEGIN   SELECT SettingName, SettingValue   FROM dbo.[FolderMappingsSettings]   WHERE FolderMappingID = @FolderMappingID  END"
1773,AIElearning_ClassLog_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_ClassLog_GetsBySearchCount]  @ClassId int,  @Username nvarchar(150),  @ClassItemId int,  @Type int  as  -- AIElearning_ClassLog_GetsBySearchCount 0, N'host', 0    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF (@Username IS NOT NULL AND @Username<>'')   set @condition = @condition + ' and (Username =''' + @Username + ''') '  IF(@ClassItemId > 0)   set @condition = @condition +    ' And  (ClassItemId= '+ STR(@ClassItemId)+' )'  IF(@Type > 0)   set @condition = @condition +    ' And  (Type= '+ STR(@Type)+' )'    exec('   select COUNT(*) from AIElearning_ClassLog where ' + @condition +'  ')    SET QUOTED_IDENTIFIER OFF     "
1774,RemoveStringCharacters,"CREATE FUNCTION dbo.[RemoveStringCharacters]  (    @string nvarchar(max),     @remove nvarchar(100)  )  RETURNS nvarchar(max)  AS  BEGIN      WHILE @string LIKE '%[' + @remove + ']%'      BEGIN          SET @string = REPLACE(@string,SUBSTRING(@string,PATINDEX('%[' + @remove + ']%',@string),1),'')      END        RETURN @string  END"
1775,AISystem_Category_Media_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_Media_AddWithPosition]   @UnitCode nvarchar(50),   @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Media WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Media (   [UnitCode],   [ParentId],   [Title],   [Code],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @UnitCode,   @ParentId,   @Title,   @Code,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Media WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Media WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Media WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Media WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Media WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Media         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Media (   [UnitCode],   [ParentId],   [Title],   [Code],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (   @UnitCode ,   @ParentId,   @Title,   @Code,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()          "
1776,UpdateFolder,"CREATE PROCEDURE dbo.[UpdateFolder]   @PortalID     int,   @VersionGuid    uniqueidentifier,    @FolderID     int,   @FolderPath    nvarchar(300),   @MappedPath    nvarchar(300),   @StorageLocation   int,   @IsProtected    bit,   @IsCached     bit,   @LastUpdated    datetime,   @LastModifiedByUserID   int,   @FolderMappingID  int,   @IsVersioned   bit = 0,   @WorkflowID    int = NULL,   @ParentID    int = NULL  AS  BEGIN   SET NOCOUNT OFF;   UPDATE dbo.[Folders]   SET    FolderPath = @FolderPath,    MappedPath = @MappedPath,    VersionGuid = @VersionGuid,    StorageLocation = @StorageLocation,    IsProtected = @IsProtected,    IsCached = @IsCached,    LastUpdated = @LastUpdated,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate = getdate(),    FolderMappingID = @FolderMappingID,    IsVersioned = @IsVersioned,    WorkflowID = @WorkflowID,    ParentID = @ParentID   WHERE FolderID = @FolderID      --UPDATE THE PARENT FOLDERS UPDATED DATE TO LASTET DATE   IF(@@ROWCOUNT>0 AND @ParentID IS NOT NULL)   BEGIN    EXEC dbo.[UpdateFolderModifiedOnToCurrentDate] @ParentID   END  END"
1777,AISystem_Category_Question_UpdateWithPosition,"  CREATE PROC [dbo].[AISystem_Category_Question_UpdateWithPosition]   @Position int,   @Id int,    @ParentId int,    @Title nvarchar(250),    @Code NVARCHAR(50),    @Status int,    @PortalId int,    @LanguageId nvarchar(50),     @ChildId NVARCHAR(MAX),   @objectUser int  AS    DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Question WHERE (LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Question WHERE (Id =  @Position AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Question WHERE (Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))     IF (@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Question WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Question WHERE (OrderNo >= @OrderFirst AND LanguageId = @languageId and (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) and PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       SET @TempOrderNo = @TempOrderNo + 1       UPDATE AISystem_Category_Question         SET  OrderNo=@TempOrderNo        WHERE Id=@TempId and PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    UPDATE AISystem_Category_Question SET   [ParentId] = @ParentId,   [Title] = @Title,   [Code]=@Code,   [Status] = @Status,    [OrderNo] = @OrderFirst,   [PortalId] = @PortalId,   [LanguageId] = @LanguageId,    [ChildId] = @ChildId,   [ObjectUse] = @objectUser  WHERE   [Id] = @Id    DEALLOCATE TempCur        "
1778,AIElearning_ClassTopic_DeleteByClassId,create PROC [dbo].[AIElearning_ClassTopic_DeleteByClassId]  @ClassId int  AS  DELETE FROM AIElearning_ClassTopic  WHERE        (ClassId = @ClassId)
1779,AIElearning_Question_GetRandom,"CREATE PROC [dbo].[AIElearning_Question_GetRandom]    @CategoryId INT,    @Type INT,    @Level INT,    @Mark float,    @Count INT,    @Status INT,    @ListQuestion NVARCHAR(MAX)    AS    DECLARE @ChildId AS NVARCHAR(MAX)  select @ChildId=ChildId from AISystem_Category_Question where Id=@CategoryId    exec('WITH #AIElearning_Question AS(    SELECT ROW_NUMBER() OVER (ORDER BY newid() desc) AS RowNumber     ,*     from AIElearning_Question WHERE   CategoryId = '+@CategoryId+'        and (Level='+@Level+' OR '+@Level+'=-1)       and (Id not in ('+@ListQuestion+'))    and (Type='+@Type+' OR '+@Type+'=-1)    and (Mark='+@Mark+' OR '+@Mark+'=-1)     and (Status='+@Status+' OR '+@Status+'=-1)      )     SELECT     *   FROM #AIElearning_Question   where RowNumber <('+@Count+'+1)')  "
1780,AddSearchCommonWord,"CREATE PROCEDURE dbo.AddSearchCommonWord   @CommonWord nvarchar(255),   @Locale nvarchar(10)  AS    INSERT INTO dbo.SearchCommonWords (   [CommonWord],   [Locale]  ) VALUES (   @CommonWord,   @Locale  )    select SCOPE_IDENTITY()"
1781,AddDesktopModulePermission,"CREATE PROCEDURE dbo.[AddDesktopModulePermission]      @PortalDesktopModuleID Int, -- not null!      @PermissionId          Int, -- not null!      @RoleId                Int, -- might be negative for virtual roles      @AllowAccess           Bit, -- false: deny, true: grant      @UserId                Int, -- -1 is replaced by Null      @CreatedByUserId       Int  -- -1 is replaced by Null  AS  BEGIN      INSERT INTO dbo.[DesktopModulePermission] (          [PortalDesktopModuleID],          [PermissionID],          [RoleID],          [AllowAccess],          [UserID],          [CreatedByUserID],          [CreatedOnDate],          [LastModifiedByUserID],          [LastModifiedOnDate]      ) VALUES (          @PortalDesktopModuleID,          @PermissionID,          @RoleId,          @AllowAccess,          CASE WHEN @UserId = -1 THEN Null ELSE @UserId END,          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate(),          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate()      )      SELECT SCOPE_IDENTITY()  END"
1782,AISystem_Subject_GetsBySearch,"  CREATE proc [dbo].[AISystem_Subject_GetsBySearch]  @pageIndex int,  @pageSize int,  @keyword nvarchar(max),  @categorysubjectId int,  @limit int,  @unitCode nvarchar(50)  as  -- AISystem_Subject_GetsBySearch 1,10,'',1007,2,'28'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@keyword<>'')    set @condition = @condition + ' and (Name like N''%' + @Keyword + '%'') '  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@categorysubjectId)  if(@limit >-1 )   set @Condition=@Condition+' AND Limit='+str(@limit)  if(@unitCode <> '')   set @Condition=@Condition+' AND UnitCode='''+@unitCode+''''  exec('    WITH #AISystem_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AISystem_Subject     where '+@Condition+' )         SELECT     *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
1783,RegisterAssembly,"CREATE procedure dbo.[RegisterAssembly]   @PackageID      int,   @AssemblyName   nvarchar(250),   @Version  nvarchar(20)  As   DECLARE @AssemblyID int   DECLARE @CurrentVersion nvarchar(20)   /* @ReturnCode Values    0 - Assembly Does not Exist    1 - Older Version of Assembly Exists    2 - Assembly Already Registered - Version = CurrentVersion    3 - Assembly Already Registered - Version < CurrentVersion   */   DECLARE @CompareVersion int     -- First check if this assembly is registered to this package   SET @AssemblyID = (SELECT AssemblyID          FROM dbo.Assemblies         WHERE PackageID = @PAckageID          AND AssemblyName = @AssemblyName)     IF @AssemblyID IS NULL    BEGIN     -- AssemblyID is null (not registered)      -- but assembly may be registerd by other packages so check for Max unstalled version     SET @CurrentVersion  = (SELECT Max(Version )            FROM dbo.Assemblies            WHERE AssemblyName = @AssemblyName)       SET @CompareVersion = dbo.fn_CompareVersion(@Version, @CurrentVersion)          -- Add an assembly regsitration for this package     INSERT INTO dbo.Assemblies (      PackageID,      AssemblyName,      Version     )     VALUES (      @PackageID,      @AssemblyName,      @Version     )    END   ELSE    BEGIN     -- AssemblyID is not null - Assembly is registered - test for version     SET @CurrentVersion  = (SELECT Version             FROM dbo.Assemblies            WHERE AssemblyID = @AssemblyID)          SET @CompareVersion = dbo.fn_CompareVersion(@Version, @CurrentVersion)          IF @CompareVersion = 1      BEGIN       -- Newer version - Update Assembly registration       UPDATE dbo.Assemblies       SET    Version = @Version       WHERE  AssemblyID = @AssemblyID      END    END     SELECT @CompareVersion"
1784,AddUrl,"create procedure dbo.AddUrl    @PortalID     int,  @Url          nvarchar(255)    as    insert into dbo.Urls (    PortalID,    Url  )  values (    @PortalID,    @Url  )"
1785,DeleteJavaScriptLibrary,CREATE PROCEDURE dbo.[DeleteJavaScriptLibrary]   @JavaScriptLibraryID INT  AS   DELETE FROM dbo.[JavaScriptLibraries]   WHERE JavaScriptLibraryID = @JavaScriptLibraryID
1786,AIElearning_ClassItem_Checkings_GetsBySearch,"  create proc [dbo].[AIElearning_ClassItem_Checkings_GetsBySearch]  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      exec('    WITH #AIElearning_ClassItem_Checkings AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_ClassItem_Checkings       )         SELECT     *   FROM #AIElearning_ClassItem_Checkings   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF   "
1787,GetModules,CREATE PROCEDURE dbo.[GetModules]     @PortalID int     AS  SELECT *   FROM dbo.vw_Modules  WHERE  PortalId = @PortalID  ORDER BY ModuleId
1788,AISystem_Rank_DeleteAndUpdateOrderNo,create proc [dbo].[AISystem_Rank_DeleteAndUpdateOrderNo]   @id int  as  begin  DECLARE @orderNo AS int  select @orderNo = OrderNo from AISystem_Rank where Id= @id   delete from AISystem_Rank where Id = @id  update AISystem_Rank set OrderNo = (OrderNo-1) where OrderNo > @orderNo  end  
1789,UpdateModuleControl,"CREATE PROCEDURE dbo.[UpdateModuleControl]   @ModuleControlId    int,   @ModuleDefID     int,   @ControlKey      nvarchar(50),   @ControlTitle     nvarchar(50),   @ControlSrc      nvarchar(256),   @IconFile      nvarchar(100),   @ControlType     int,   @ViewOrder      int,   @HelpUrl      nvarchar(200),   @SupportsPartialRendering  bit,   @SupportsPopUps     bit,   @LastModifiedByUserID     int    AS   UPDATE dbo.ModuleControls   SET        ModuleDefId = @ModuleDefId,    ControlKey = @ControlKey,    ControlTitle = @ControlTitle,    ControlSrc = @ControlSrc,    IconFile = @IconFile,    ControlType = @ControlType,    ViewOrder = ViewOrder,    HelpUrl = @HelpUrl,    SupportsPartialRendering = @SupportsPartialRendering,    SupportsPopUps = @SupportsPopUps,    LastModifiedByUserID = @LastModifiedByUserID,    LastModifiedOnDate = getdate()   WHERE  ModuleControlId = @ModuleControlId"
1790,GetNonExpiredUsersByRoleName,"CREATE PROCEDURE dbo.[GetNonExpiredUsersByRoleName]   @PortalID INT,   @Rolename NVARCHAR(50)  AS   DECLARE @UserPortalId INT   DECLARE @PortalGroupId INT   SELECT @PortalGroupId = PortalGroupId FROM dbo.[Portals] WHERE PortalID = @PortalID   IF EXISTS(SELECT PortalGroupID FROM dbo.[PortalGroups] WHERE PortalGroupID = @PortalGroupId)   BEGIN    SELECT @UserPortalId = MasterPortalID FROM dbo.[PortalGroups] WHERE PortalGroupID = @PortalGroupId   END   ELSE   BEGIN    SELECT @UserPortalId = @PortalID   END   SELECT         U.*,     UP.PortalId,     UP.Authorised,     UP.IsDeleted,    UP.RefreshRoles,    UP.VanityUrl   FROM dbo.UserPortals AS UP      RIGHT OUTER JOIN dbo.UserRoles  UR      INNER JOIN dbo.Roles R ON UR.RoleID = R.RoleID      RIGHT OUTER JOIN dbo.Users AS U ON UR.UserID = U.UserID     ON UP.UserId = U.UserID    WHERE ( UP.PortalId = @UserPortalId OR @UserPortalId IS Null )    AND (UP.IsDeleted = 0 OR UP.IsDeleted Is NULL)    AND (R.RoleName = @Rolename)    AND (R.PortalId = @PortalID OR @PortalID IS Null )    AND (UR.ExpiryDate >= GETDATE() OR UR.ExpiryDate IS NULL)   ORDER BY U.FirstName + ' ' + U.LastName"
1791,AISystem_Category_Document_AddWithPosition,"CREATE PROC [dbo].[AISystem_Category_Document_AddWithPosition]   @unitCode nvarchar(50),   @Position int,   @ParentId int,   @Title nvarchar(250),   @Code NVARCHAR(50),    @ObjectUse int,   @Status int,    @PortalId int,   @LanguageId nvarchar(50),    @ChildId ntext  AS    -- Nếu là bản ghi đầu tiên  IF NOT EXISTS (SELECT * FROM AISystem_Category_Document WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)  INSERT INTO AISystem_Category_Document (   [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],   [OrderNo],   [PortalId],   [LanguageId],    [ChildId]  ) VALUES (   @unitCode,   @ParentId,   @Title,   @Code,   @ObjectUse,   @Status,   1,   @PortalId,   @LanguageId,    @ChildId  )    ELSE  BEGIN   DECLARE @OrderNo int   DECLARE @OrderMax int   DECLARE @OrderFirst int   SET @OrderMax = (SELECT MAX(OrderNo) FROM AISystem_Category_Document WHERE LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   SET @OrderNo = (SELECT OrderNo FROM AISystem_Category_Document WHERE Id =  @Position AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)   IF (@Position = 0)    BEGIN     SET @OrderFirst = (SELECT MIN(OrderNo) FROM AISystem_Category_Document WHERE (Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))     IF(@OrderFirst IS NULL) SET @OrderFirst = 1    END   ELSE IF (@OrderNo = @OrderMax)     SET @OrderFirst = @OrderMax + 1     ELSE      SET @OrderFirst =(SELECT MIN(OrderNo) FROM AISystem_Category_Document WHERE (OrderNo > @OrderNo AND Status = @Status AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId))    DECLARE TempCur CURSOR FOR      SELECT Id, OrderNo FROM AISystem_Category_Document WHERE (OrderNo >= @OrderFirst AND LanguageId=@LanguageId AND (ParentId=@ParentId OR(@ParentId IS NULL AND ParentId IS NULL)) AND PortalId = @portalId)    OPEN TempCur     DECLARE @TempId int     DECLARE @TempOrderNo int     FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo     WHILE (@@FETCH_STATUS = 0)      BEGIN       set @TempOrderNo = @TempOrderNo + 1       Update AISystem_Category_Document         Set  OrderNo=@TempOrderNo        Where Id=@TempId  AND PortalId = @portalId       FETCH NEXT FROM  TempCur INTO @TempId, @TempOrderNo      END    CLOSE TempCur    INSERT INTO AISystem_Category_Document (     [UnitCode],   [ParentId],   [Title],   [Code],   [ObjectUse],   [Status],    [OrderNo],   [PortalId],   [LanguageId],   [ChildId]  ) VALUES (     @unitCode ,   @ParentId,   @Title,   @Code,   @ObjectUse ,   @Status,    @OrderFirst,   @PortalId,   @LanguageId,   @ChildId  )    DEALLOCATE TempCur  END    select SCOPE_IDENTITY()        "
1792,AISystem_UserInfo_GetsAllCount,CREATE proc [dbo].[AISystem_UserInfo_GetsAllCount]  @Status int  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@Status > 0)   set @condition = @condition +    ' And  ( tblUser.Status= '+ STR(@Status)+' )'    exec('   select COUNT(*) from AISystem_UserInfo as tblUser where ' + @condition +'  ')    SET QUOTED_IDENTIFIER OFF
1793,GetPortalDefaultLanguage,CREATE PROCEDURE dbo.GetPortalDefaultLanguage     @PortalId            int    AS   SELECT defaultlanguage    FROM dbo.Portals    where portalid=@PortalId
1794,CoreMessaging_CreateNotificationType,"CREATE PROCEDURE dbo.[CoreMessaging_CreateNotificationType]   @Name nvarchar(100),   @Description nvarchar(2000),   @TTL int,   @DesktopModuleId int,   @CreatedUpdatedUserID int,   @IsTask bit  AS  BEGIN   INSERT INTO dbo.[CoreMessaging_NotificationTypes] (    [Name],    [Description],    [TTL],    [DesktopModuleId],    [CreatedByUserID],    [CreatedOnDate],    [LastModifiedByUserID],    [LastModifiedOnDate],    [IsTask]   ) VALUES (    @Name,    @Description,    @TTL,    @DesktopModuleId,    @CreatedUpdatedUserID,    GETDATE(),    @CreatedUpdatedUserID,    GETDATE(),    @IsTask   )       SELECT SCOPE_IDENTITY()   END"
1795,AIElearning_Question_GetsBySearch,"CREATE PROC [dbo].[AIElearning_Question_GetsBySearch]      @pageIndex INT,      @pageSize INT,      @KeyWord NVARCHAR(250),      @CategoryId INT,      @Level INT,      @Type INT,      @Status INT,      @ParentId INT,      @Mark NVARCHAR(50),      @IncludeExpired BIT  AS -- AIElearning_Question_GetsBySearch 1,10000,'',-1,-1,-1,1,-1,-1,1  -- Phan trang   DECLARE @start AS INT  DECLARE @end AS INT  SET @start = @pageSize * ( @pageIndex - 1 ) + 1  SET @end = @pageSize * @pageIndex    DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  --IF(@ParentId > -1)  SET @condition = @condition + ' AND  (ParentId= ' + STR(@ParentId) + ' )'  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' AND (Keyword like N''%' + @KeyWord + '%'') '  IF ( @CategoryId > -1 )      SET @condition = @condition + ' AND  (CategoryId= ' + STR(@CategoryId) + ' )'  IF ( @Level > -1 )      SET @condition = @condition + ' AND  (Level= ' + STR(@Level) + ' )'  IF ( @Type > -1 )      SET @condition = @condition + ' AND  (Type= ' + STR(@Type) + '  )'  IF ( @Status > -1 )      SET @condition = @condition + ' AND  (Status= ' + STR(@Status) + ' )'  IF ( @Mark <> '-1' )      SET @condition = @condition + ' AND  (Mark= ' + @Mark + ' )'  IF ( @IncludeExpired = 0 )      SET @condition = @condition + ' AND  (ExpiryDate >= GETDATE() )'  EXEC('  WITH #AIElearning_Question AS(   SELECT ROW_NUMBER() OVER (ORDER BY Id DESC) AS RowNumber, *   FROM AIElearning_Question WHERE ' + @condition +')      SELECT *  FROM #AIElearning_Question  WHERE RowNumber BETWEEN '+ @start +'  AND  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF  "
1796,AIElearning_ClassItem_Checkings_DeleteByClassIdAndItem,"create proc [dbo].[AIElearning_ClassItem_Checkings_DeleteByClassIdAndItem]  @ClassId int,  @ClassItemId int  as  delete AIElearning_ClassItem_Checkings where ClassId= @ClassId and ClassItemId=@ClassItemId    SET QUOTED_IDENTIFIER OFF   "
1797,GetSkinPackage,"CREATE PROCEDURE dbo.GetSkinPackage   @PortalID   int,   @SkinName   nvarchar(50),   @SkinType   nvarchar(50)    AS   SELECT *    FROM  dbo.SkinPackages    WHERE (PortalID = @PortalID OR @PortalID IS NULL Or PortalID IS Null)     AND SkinName = @SkinName     AND SkinType = @SkinType"
1798,AddFolderPermission,"CREATE PROCEDURE dbo.[AddFolderPermission]      @FolderID           Int, -- not Null!      @PermissionId       Int, -- not Null!      @RoleId             Int, -- might be negative for virtual roles      @AllowAccess        Bit, -- false: deny, true: grant      @UserId             Int, -- -1 is replaced by Null      @CreatedByUserId    Int  -- -1 is replaced by Null  AS  BEGIN      INSERT INTO dbo.[FolderPermission] (          [FolderID],          [PermissionID],          [RoleId],          [AllowAccess],          [UserId],          [CreatedByUserId],          [CreatedOnDate],          [LastModifiedByUserId],          [LastModifiedOnDate]      ) VALUES (          @FolderID,          @PermissionID,          @RoleId,          @AllowAccess,          CASE WHEN @UserId = -1 THEN Null ELSE @UserId END,          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate(),          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate()      )      SELECT SCOPE_IDENTITY()  END"
1799,AIElearning_Class_Lecturers_DeleteByClassId,"  CREATE PROC [dbo].[AIElearning_Class_Lecturers_DeleteByClassId]      @ClassId INT,      @ParentType INT  AS  DELETE  AIElearning_Class_Lecturers  WHERE   ClassId = @ClassId AND ParentType = @ParentType  "
1800,AISystem_Subject_GetsByTalentIdCount,"  CREATE proc [dbo].[AISystem_Subject_GetsByTalentIdCount]  @jobtitle int  as  -- AISystem_Subject_GetsByTalentIdCount -1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@jobtitle>-1)   set @Condition=@Condition+' AND jt.JobTitleId ='+str(@jobtitle)     CREATE TABLE #TempTable(   ID int)   exec('INSERT INTO #TempTable (ID) select distinct(s.Id)    from AISystem_JobTitle_Talent jt     inner join AISystem_Talent_Subject ts on jt.TalentId = ts.TalentId     inner join AISystem_Subject s on s.Id = ts.SubjectId    where '+@Condition+' ')        exec('  WITH #AISystem_Subject AS(   select ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber,*    from AISystem_Subject    where Id in (select * from #TempTable)  )     SELECT count(*)   FROM #AISystem_Subject')      SET QUOTED_IDENTIFIER OFF     "
1801,AISystem_Subject_User_GetsBySearch_Corporation,"CREATE proc [dbo].[AISystem_Subject_User_GetsBySearch_Corporation]  @pageIndex int,  @pageSize int,  @catesubjectId int,  @status INT,  @unitCode NVARCHAR(MAX),  @startDate DATETIME,  @endDate DATETIME  as  -- AISystem_Subject_User_GetsBySearch_Corporation 1,10,0,-1,'','01/01/1900','01/01/1900'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    if(@catesubjectId>0)   set @Condition=@Condition+' AND s.CateSubjectId='+str(@catesubjectId)  if(@status>-1)   set @Condition=@Condition+' AND su.Status='+str(@status)  IF(@unitCode IS NOT NULL AND @unitCode<>'')   set @condition = @condition +    ' And  ( ui.UnitCode in  (select * from split('''+ @unitCode+''')) )'  IF CONVERT(DATETIME, @startDate, 121) > '01/01/1900'          SET @condition = @condition + ' and su.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @startDate, 121) + ''''  IF CONVERT(DATETIME, @endDate, 121) > '01/01/1900'          SET @condition = @condition + ' and su.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @endDate, 121) + ''''    IF(@catesubjectId=0)    EXEC('  WITH #AISystem_Subject_User AS(        SELECT  ROW_NUMBER() OVER ( ORDER BY su.Id DESC ) AS RowNumber, su.*, CONCAT(RIGHT(''00'' + CAST(su.IntendMonth AS VARCHAR(2)), 2), ''/'', su.IntendYear) AS IntendDate, ui.Displayname, ui.Mastercode, ui.Username, cu.Title AS UnitName, ui.UnitChildPath, jtt.Title AS JobtitleName, cs.Title AS CateSubjectTitle, s.Name AS SubjectName      FROM    AISystem_Subject_User su              INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId              LEFT JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId              LEFT JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id              INNER JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code              LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code where (su.SubjectId =0) and ' + @Condition +')     SELECT  *   FROM #AISystem_Subject_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')  ELSE  EXEC('  WITH #AISystem_Subject_User AS(        SELECT  ROW_NUMBER() OVER ( ORDER BY su.Id DESC ) AS RowNumber, su.*, CONCAT(RIGHT(''00'' + CAST(su.IntendMonth AS VARCHAR(2)), 2), ''/'', su.IntendYear) AS IntendDate, ui.Displayname, ui.Mastercode, ui.Username, cu.Title AS UnitName, ui.UnitChildPath, jtt.Title AS JobtitleName, cs.Title AS CateSubjectTitle, s.Name AS SubjectName      FROM    AISystem_Subject_User su              INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId              INNER JOIN dbo.AISystem_Subject s ON s.Id = su.SubjectId              INNER JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id              INNER JOIN dbo.AISystem_Category_Unit cu ON ui.UnitCode = cu.Code              LEFT JOIN dbo.AISystem_JobTitle_Title jtt ON su.JobTitleCode = jtt.Code where ' + @Condition +')     SELECT  *   FROM #AISystem_Subject_User   where RowNumber between '+ @start +'  and  '+ @end +'   ')"
1802,GetJavaScriptLibraries,CREATE PROCEDURE dbo.[GetJavaScriptLibraries]  AS   SELECT * FROM dbo.JavaScriptLibraries
1803,AIElearning_ClassItem_GetsByClassAndDataId,"CREATE PROC [dbo].[AIElearning_ClassItem_GetsByClassAndDataId]      @ClassId INT ,      @DataId INT ,      @Type INT,      @ParentType INT AS -- AIElearning_ClassItem_GetsByClassAndDataId 27, 26      DECLARE @Condition AS NVARCHAR(MAX)      SET @Condition = 'where (1=1)'        IF ( @ClassId > -1 )          SET @Condition = @Condition + ' AND ClassId=' + STR(@ClassId)      IF ( @DataId > -1 )          SET @Condition = @Condition + ' AND DataId=' + STR(@DataId)      IF ( @Type > -1 )          SET @Condition = @Condition + ' AND Type=' + STR(@Type)   IF ( @ParentType > -1 )          SET @Condition = @Condition + ' AND ParentType=' + STR(@ParentType)      EXEC('      SELECT top(1) *      FROM  AIElearning_ClassItem   '+@Condition+'       ')       "
1804,AISystem_Category_Media_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_Media_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50)  AS  SELECT * FROM AISystem_Category_Media    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )   ORDER BY OrderNo        "
1805,CoreMessaging_GetMessageAttachment,"CREATE PROCEDURE dbo.[CoreMessaging_GetMessageAttachment]      @MessageAttachmentID INT  AS   SELECT [MessageID], [FileID], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate]   FROM   dbo.CoreMessaging_MessageAttachments   WHERE  [MessageAttachmentID] = @MessageAttachmentID"
1806,GetUserByPasswordResetToken,"CREATE PROCEDURE dbo.[GetUserByPasswordResetToken]   @PortalID int,   @PasswordResetToken UNIQUEIDENTIFIER    AS   SELECT * FROM dbo.vw_Users   WHERE  PasswordResetToken = @PasswordResetToken    AND  ((@PortalId IS NULL) OR (PortalId = @PortalID) OR IsSuperUser = 1)"
1807,AISystem_Category_Document_ChildrenByParentId,"CREATE PROC [dbo].[AISystem_Category_Document_ChildrenByParentId]  @portalid INT,  @parentId int,  @Status int,  @LanguageId nvarchar(50),  @unitCode nvarchar(50)  AS  SELECT * FROM AISystem_Category_Document    WHERE (ParentId = @parentId OR (ParentId IS NULL AND @parentId IS NULL))    AND PortalId = @portalId    AND Status = @Status    AND LanguageId = @LanguageId    AND (UnitCode = @unitCode or (@unitCode = '') )   ORDER BY OrderNo    "
1808,AIElearning_ClassItem_DeleteByClassId,"CREATE PROC [dbo].[AIElearning_ClassItem_DeleteByClassId]      @ClassId INT,      @ParentType INT  AS  DELETE  FROM AIElearning_ClassItem  WHERE   ( ClassId = @ClassId AND ParentType = @ParentType )      "
1809,UpdateAuthentication,"CREATE PROCEDURE dbo.UpdateAuthentication   @AuthenticationID       int,   @PackageID    int,   @AuthenticationType     nvarchar(100),   @IsEnabled    bit,   @SettingsControlSrc     nvarchar(250),   @LoginControlSrc  nvarchar(250),   @LogoffControlSrc  nvarchar(250),   @LastModifiedByUserID int  AS   UPDATE dbo.Authentication   SET    PackageID = @PackageID,       AuthenticationType = @AuthenticationType,       IsEnabled = @IsEnabled,       SettingsControlSrc = @SettingsControlSrc,       LoginControlSrc = @LoginControlSrc,       LogoffControlSrc = @LogoffControlSrc,       [LastModifiedByUserID] = @LastModifiedByUserID,        [LastModifiedOnDate] = getdate()   WHERE  AuthenticationID = @AuthenticationID"
1810,CoreMessaging_GetNotificationType,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationType]   @NotificationTypeID int  AS  BEGIN   SELECT [NotificationTypeID], [Name], [Description], [TTL], [DesktopModuleId], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate], [IsTask]   FROM dbo.[CoreMessaging_NotificationTypes]   WHERE [NotificationTypeID] = @NotificationTypeID  END"
1811,AIElearning_Question_GetsBySearchCount,"CREATE PROC [dbo].[AIElearning_Question_GetsBySearchCount]      @KeyWord NVARCHAR(250),      @CategoryId INT,      @Level INT,      @Type INT,      @Status INT,      @ParentId INT,      @Mark NVARCHAR(50),      @IncludeExpired BIT  AS -- AIElearning_Question_GetsBySearchCount '', -1, -1, -1,-1,-1,'-1',1  DECLARE @condition NVARCHAR(MAX)  SET @condition = ' (1=1) '  --IF(@ParentId > -1)  SET @condition = @condition + ' AND  (ParentId= ' + STR(@ParentId) + ' )'  IF ( @KeyWord IS NOT NULL AND @KeyWord <> '' )      SET @condition = @condition + ' AND (Keyword like N''%' + @KeyWord + '%'') '  IF ( @CategoryId > -1 )      SET @condition = @condition + ' AND  (CategoryId= ' + STR(@CategoryId) + ' )'  IF ( @Level > -1 )      SET @condition = @condition + ' AND  (Level= ' + STR(@Level) + ' )'  IF ( @Type > -1 )      SET @condition = @condition + ' AND  (Type= ' + STR(@Type) + ' )'  IF ( @Status > -1 )      SET @condition = @condition + ' AND  (Status= ' + STR(@Status) + ' )'  IF ( @Mark <> '-1' )      SET @condition = @condition + ' AND  (Mark= ' + @Mark + ' )'  IF ( @IncludeExpired = 0 )      SET @condition = @condition + ' AND  (ExpiryDate >= GETDATE() )'  EXEC('  SELECT  COUNT(*)  FROM    AIElearning_Question  WHERE ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF  "
1812,AISystem_JobTitle_Talent_GetAllTalentByJobtitle,"CREATE proc [dbo].[AISystem_JobTitle_Talent_GetAllTalentByJobtitle]  @pageIndex int,  @pageSize int,  @type int,  @unitCode nvarchar(50),  @limit INT,  @jobTitleId int  as  -- AISystem_JobTitle_Talent_GetAllTalentByJobtitle 1,100,1,'28',1,4  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      Create table #AISystem_Talent_Temp (   PK int IDENTITY (1,1),   Id int,      Title nvarchar(250),   Code nvarchar(250),   Description nvarchar(max),   Limit int,   UnitCode nvarchar(50),   CateTalentId int,   LevelCode nvarchar(max),   ChildId int,   ChildTitle NVARCHAR(250),   IsChild int,   SortColumn nvarchar(max),   IsBase bit  )    -- NANG LUC COT LOI  -- Thêm năng lực cha (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,         STUFF( ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'') AS [LevelId] ,  0,'', 0, str(t.Id), 1  From AISystem_Talent t  Where t.Limit = @limit and t.Type = @type  -- Them nang luc con (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  select t.Id, t.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,         STUFF(  ( Select ','+ CONVERT(varchar(50), tl.LevelCode)                From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'')  as [LevelId],  tc.Id,tc.Title, 1,str(tc.TalentId) ,1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit = @limit and t.Type = @type    -- Thêm năng lực cha (nang luc don vi)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,           STUFF(   ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'')  as [LevelId], 0,'', 0, str(t.Id),1  From AISystem_Talent t  Where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    -- Them nang luc con (nang luc don vi)  Insert Into #AISystem_Talent_Temp  select t.Id, t.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,         STUFF(     ( Select ','+ CONVERT(varchar(50), tl.LevelCode)               From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'')  as [LevelId], tc.Id, tc.Title,  1,str(tc.TalentId) ,1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type      -- NANG LUC THEO CHUC DANH    -- Thêm năng lực cha  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, t.Title,t.Code, t.Description, t.Limit,  t.UnitCode, t.CateTalentId,           STUFF(( Select ','+ CONVERT(varchar(50), tl.LevelCode)              From AISystem_Talent_Level tl              Where tl.TalentId = t.Id and tl.IsLevelChild = 0                For XML PATH ('')          ),1,1,'') AS [LevelId], 0, '',0, str(t.Id),0  From AISystem_Talent t inner join AISystem_JobTitle_Talent jt   on jt.TalentId = t.Id where jt.IsChild = 0 and JobTitleId =@jobTitleId   -- Thêm năng lực con  Insert Into #AISystem_Talent_Temp  select t.Id, t.Title, t.Code,tc.Description, t.Limit, t.UnitCode, t.CateTalentId,      STUFF((SELECT ','+ CONVERT(varchar(50), tl.LevelCode)                From AISystem_Talent_Level tl              Where tl.TalentId = tc.Id and tl.IsLevelChild = 1               For XML PATH ('')          ),1,1,'') as [LevelId], tc.Id, tc.Title, 1,str(tc.TalentId) ,0   from AISystem_Talent_Child tc inner jo"
1813,AISystem_JobTitle_Talent_GetAllTalentByJobtitle,"in AISystem_Talent t    on t.Id = tc.TalentId  inner join AISystem_JobTitle_Talent jt    on jt.TalentId = tc.Id     where jt.IsChild =1 and JobTitleId =@jobTitleId     exec('  WITH #AISystem_Jobtitle_Talent AS(    SELECT ROW_NUMBER() OVER (ORDER BY IsBase,SortColumn desc, IsChild, PK desc ) AS RowNumber,  * from #AISystem_Talent_Temp  where '+@Condition+'  )       SELECT  *   FROM #AISystem_Jobtitle_Talent   where RowNumber between '+ @start +'  and  '+ @end +'     ')"
1814,AIElearning_ClassItem_Checkings_GetInfoByParam,"create proc [dbo].[AIElearning_ClassItem_Checkings_GetInfoByParam]  @ClassId int,  @ClassItemId int,  @ClassItemCheckedId int  as  select top(1) * from  AIElearning_ClassItem_Checkings where ClassId= @ClassId and ClassItemId=@ClassItemId and ClassItemCheckedId=@ClassItemCheckedId    SET QUOTED_IDENTIFIER OFF   "
1815,AddModulePermission,"CREATE PROCEDURE dbo.[AddModulePermission]      @ModuleID           Int, -- not null!      @PortalID           Int, -- not null!      @PermissionId       Int, -- not null!      @RoleId             Int, -- might be negative for virtual roles      @AllowAccess        Bit, -- false: deny, true: grant      @UserId             Int, -- -1 is replaced by Null      @CreatedByUserId    Int  -- -1 is replaced by Null  AS  BEGIN      INSERT INTO dbo.[ModulePermission] (          [ModuleID],          [PortalID],          [PermissionID],          [RoleId],          [AllowAccess],          [UserId],          [CreatedByUserId],          [CreatedOnDate],          [LastModifiedByUserId],          [LastModifiedOnDate]      ) VALUES (          @ModuleID,          @PortalID,          @PermissionID,          @RoleId,          @AllowAccess,          CASE WHEN @UserId = -1 THEN Null ELSE @UserId END,          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate(),          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate()      )      SELECT SCOPE_IDENTITY()  END"
1816,AIElearning_Class_Lecturers_GetPositionOrderNo,"  CREATE proc [dbo].[AIElearning_Class_Lecturers_GetPositionOrderNo]  @Id int,  @ClassId int,  @Position INT,  @ParentType INT  as  Begin   WITH #AIElearning_BangTam AS (   SELECT ROW_NUMBER() OVER (ORDER BY OrderNo) AS RowNumber, Id FROM AIElearning_Class_Lecturers as A   WHERE A.ClassId = @ClassId AND A.ParentType = @ParentType   )   SELECT Id FROM   #AIElearning_BangTam B   WHERE B.RowNumber = (   SELECT RowNumber - @Position FROM   #AIElearning_BangTam B   WHERE B.Id = @Id   )  End    SET QUOTED_IDENTIFIER OFF    "
1817,AISystem_Subject_GetsByTalentId,"  CREATE proc [dbo].[AISystem_Subject_GetsByTalentId]  @pageIndex int,  @pageSize int,  @jobtitle int  as  -- AISystem_Subject_GetsByTalentId 1,10,1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      if(@jobtitle>-1)   set @Condition=@Condition+' AND jt.JobTitleId ='+str(@jobtitle)     CREATE TABLE #TempTable(   ID int)   exec('INSERT INTO #TempTable (ID) select distinct(s.Id)    from AISystem_JobTitle_Talent jt     inner join AISystem_Talent_Subject ts on jt.TalentId = ts.TalentId     inner join AISystem_Subject s on s.Id = ts.SubjectId    where '+@Condition+' ')        exec('  WITH #AISystem_Subject AS(   select ROW_NUMBER() OVER (ORDER BY OrderNo desc) AS RowNumber,*    from AISystem_Subject    where Id in (select * from #TempTable)  )     SELECT *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')      SET QUOTED_IDENTIFIER OFF     "
1818,AISystem_Subject_User_GetsBySearch_CorporationCount,"CREATE proc [dbo].[AISystem_Subject_User_GetsBySearch_CorporationCount]  @catesubjectId int,  @status INT,  @unitCode NVARCHAR(MAX),  @startDate DATETIME,  @endDate DATETIME  as  -- AISystem_Subject_User_GetsBySearch_CorporationCount 0,-1,'','01/01/1900','01/01/1900'  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    if(@catesubjectId>0)   set @Condition=@Condition+' AND s.CateSubjectId='+str(@catesubjectId)  if(@status>-1)   set @Condition=@Condition+' AND su.Status='+str(@status)  IF(@unitCode IS NOT NULL AND @unitCode<>'')   set @condition = @condition +    ' And  ( ui.UnitCode in  (select * from split('''+ @unitCode+''')) )'  IF CONVERT(DATETIME, @startDate, 121) > '01/01/1900'          SET @condition = @condition + ' and su.CreatedDate >= ''' + CONVERT(NVARCHAR(23), @startDate, 121) + ''''  IF CONVERT(DATETIME, @endDate, 121) > '01/01/1900'          SET @condition = @condition + ' and su.CreatedDate <= ''' + CONVERT(NVARCHAR(23), @endDate, 121) + ''''  IF(@catesubjectId=0)  EXEC('   SELECT count(su.id) FROM    AISystem_Subject_User su          INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId LEFT JOIN dbo.AISystem_Subject s     ON s.Id = su.SubjectId WHERE su.SubjectId = 0 and ' + @Condition )    ELSE  EXEC('   SELECT count(su.id) FROM    AISystem_Subject_User su          INNER JOIN dbo.AISystem_UserInfo ui ON su.UserId = ui.UserId INNER JOIN dbo.AISystem_Subject s     ON s.Id = su.SubjectId where ' + @Condition )  "
1819,AddModule,"CREATE PROCEDURE dbo.[AddModule]   @ContentItemID    int,   @PortalID     int,   @ModuleDefId    int,   @AllTabs     bit,   @StartDate     datetime,   @EndDate     datetime,   @InheritViewPermissions     bit,   @IsShareable    bit,   @IsShareableViewOnly  bit,   @IsDeleted     bit,   @CreatedByUserID     int     AS   INSERT INTO dbo.Modules (    ContentItemID,     PortalId,    ModuleDefId,    AllTabs,    StartDate,    EndDate,    InheritViewPermissions,    IsShareable,    IsShareableViewOnly,    IsDeleted,    CreatedByUserID,    CreatedOnDate,    LastModifiedByUserID,    LastModifiedOnDate   )   VALUES (    @ContentItemID,    @PortalID,    @ModuleDefId,    @AllTabs,    @StartDate,    @EndDate,    @InheritViewPermissions,    @IsShareable,    @IsShareableViewOnly,    @IsDeleted,    @CreatedByUserID,    getdate(),    @CreatedByUserID,    getdate()   )     SELECT SCOPE_IDENTITY()"
1820,AIElearning_ClassNotifi_DeleteAll,"CREATE proc [dbo].[AIElearning_ClassNotifi_DeleteAll]   @classid int,  @TypeSent int,  @type int,  @sendDate nvarchar(250),  @userid int,  @Testid int   as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'  if(@Type>-1)   set @Condition=@Condition+' AND Type='+str(@Type)   --  if(@TypeSent>-1)   set @Condition=@Condition+' AND TypeSent='+str(@TypeSent)   --  if(@classid>-1)   set @Condition=@Condition+' AND ClassId='+str(@classid)   --  IF (@sendDate<>'')   set @condition = @condition + ' and SentDate = ''' + @sendDate + ''''   --   if(@userid>-1)   set @Condition=@Condition+' AND Userid='+str(@userid)  if(@Testid>-1)   set @Condition=@Condition+' AND Testid='+str(@Testid)  exec('  delete from AIElearning_ClassNotifi '+@Condition)      "
1821,AISystem_Rank_CheckCode,create proc [dbo].[AISystem_Rank_CheckCode]   @code nvarchar(50)  as  begin  select count(*)   from AISystem_Rank   where Code =@code  end  
1822,OutputCacheGetKeys,CREATE PROCEDURE dbo.OutputCacheGetKeys   @ItemId Int  AS  BEGIN      SELECT CacheKey       FROM  dbo.OutputCache       WHERE ItemId = @ItemId OR @ItemId IS NULL  END
1823,AISystem_Category_TestForm_GetInfoByCode,    CREATE PROC [dbo].[AISystem_Category_TestForm_GetInfoByCode]  @Code nvarchar(50)  as  -- AISystem_Category_TestForm_GetInfoByCode 'hainv'  Select top(1) * from AISystem_Category_TestForm where   Code = @Code  SET QUOTED_IDENTIFIER OFF         
1824,AIElearning_ClassLog_DeleteByClassId,create PROC [dbo].[AIElearning_ClassLog_DeleteByClassId]  @ClassId int  AS  DELETE FROM AIElearning_ClassLog  WHERE        (ClassId = @ClassId)
1825,UpdatePortalDefaultLanguage,"CREATE PROCEDURE dbo.UpdatePortalDefaultLanguage     @PortalId            int,   @CultureCode   nvarchar(50)  AS   UPDATE dbo.Portals    SET defaultlanguage=@CultureCode    where portalid=@PortalId"
1826,CoreMessaging_GetNotificationTypeByName,"CREATE PROCEDURE dbo.[CoreMessaging_GetNotificationTypeByName]   @Name nvarchar(100)  AS  BEGIN   SELECT [NotificationTypeID], [Name], [Description], [TTL], [DesktopModuleId], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate], [IsTask]   FROM dbo.[CoreMessaging_NotificationTypes]   WHERE [Name] LIKE @Name  END"
1827,AIElearning_TestForm_GetInfoTest,"  CREATE PROC [dbo].[AIElearning_TestForm_GetInfoTest]  @TestId INT  AS  SELECT [Id]        ,[CategoryId]        ,[Name]        ,[TimeTest]        ,[Type]        ,[Status]      ,(SELECT SUM(AIElearning_TestForm_PartQuestion.QuestionNumber) FROM AIElearning_TestForm_PartQuestion WHERE AIElearning_TestForm_PartQuestion.TestId=AIElearning_TestForm.Id) AS [QuestionCount]  FROM AIElearning_TestForm WHERE Id=@TestId  "
1828,AISystem_Subject_GetSubjectByBaseTalent,"CREATE proc [dbo].[AISystem_Subject_GetSubjectByBaseTalent]  @pageIndex int,  @pageSize int,  @type int,  @unitCode nvarchar(50),  @limit int  as  -- AISystem_Subject_GetSubjectByBaseTalent 1,10,1,'28',1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      Create table #AISystem_Talent_Temp (   Id int,   IsChild int  )  -- Thêm năng lực cha (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id,0  From AISystem_Talent t  Where t.Limit = @limit and t.Type = @type  -- Them nang luc con (nang luc dung chung)  Insert Into #AISystem_Talent_Temp  select tc.Id,  1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit = @limit and t.Type = @type    -- Thêm năng lực cha (nang luc don vi)  Insert Into #AISystem_Talent_Temp  SELECT   t.Id, 0  From AISystem_Talent t  Where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type    -- Them nang luc con (nang luc don vi)  Insert Into #AISystem_Talent_Temp  select tc.Id,1   from AISystem_Talent_Child tc inner join AISystem_Talent t on t.Id = tc.TalentId  where t.Limit <> @limit and t.UnitCode = @unitCode  and t.Type = @type     exec('  WITH #AISystem_Subject AS(    SELECT         DISTINCT          ( s.Id ), DENSE_RANK() OVER ( ORDER BY s.Id DESC ) AS RowNumber, s.Code, s.Name, cs.Title AS CateSubjectName, s.Time, s.UnitCode, s.Limit      FROM          dbo.AISystem_Talent_Subject ts          INNER JOIN dbo.AISystem_Subject s  ON ts.SubjectId = s.Id          INNER JOIN dbo.AISystem_Category_Subject cs ON s.CateSubjectId = cs.Id            INNER JOIN #AISystem_Talent_Temp tt on (ts.TalentId = tt.Id AND tt.IsChild = 0)     OR (ts.TalentChildId = tt.Id AND tt.IsChild = 1)     where '+@Condition+'  )       SELECT  *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +' order by Id desc    ')"
1829,AddTabPermission,"CREATE PROCEDURE dbo.[AddTabPermission]      @TabID              Int, -- not null!      @PermissionId       Int, -- not null!      @RoleId             Int, -- might be negative for virtual roles      @AllowAccess        Bit, -- false: deny, true: grant      @UserId             Int, -- -1 is replaced by Null      @CreatedByUserId    Int  -- -1 is replaced by Null  AS  BEGIN      INSERT INTO dbo.[TabPermission] (          [TabID],          [PermissionID],          [RoleId],          [AllowAccess],          [UserId],          [CreatedByUserId],          [CreatedOnDate],          [LastModifiedByUserId],          [LastModifiedOnDate]      ) VALUES (          @TabID,          @PermissionID,          @RoleId,          @AllowAccess,          CASE WHEN @UserId = -1 THEN Null ELSE @UserId END,          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate(),          CASE WHEN @CreatedByUserID = -1 THEN Null ELSE @CreatedByUserID END,          GetDate()      )      SELECT SCOPE_IDENTITY()  END"
1830,AIElearning_Class_Lecturers_GetsBySearch,"CREATE proc [dbo].[AIElearning_Class_Lecturers_GetsBySearch]  @pageIndex int,  @pageSize int,  @ClassId int,  @LecturersId INT,  @ParentType INT  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex    DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF(@LecturersId > 0)   set @condition = @condition +    ' And  (LecturersId= '+ STR(@LecturersId)+' )'  IF(@ParentType > 0)   set @condition = @condition +    ' And  (ParentType= '+ STR(@ParentType)+' )'  exec('    WITH #AIElearning_Class_Lecturers AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_Class_Lecturers where ' + @condition +'      )         SELECT     *   FROM #AIElearning_Class_Lecturers   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF       "
1831,AISystem_Subject_GetsBycategory,"  CREATE proc [dbo].[AISystem_Subject_GetsBycategory]   @categorysubjectId int,  @categorycode nvarchar(250)  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang    if(@categorysubjectId>-1)   set @Condition=@Condition+' AND CateSubjectId='+str(@categorysubjectId)  if(@categorycode>-1)   set @Condition=@Condition+' AND UnitCode='+str(@categorycode)  exec('    SELECT * from AISystem_Subject where '+@Condition+'         ')    SET QUOTED_IDENTIFIER OFF     "
1832,GetCountUser,"CREATE FUNCTION [dbo].[GetCountUser]   (   @SubjectId int,   @Month int,   @Year int    )  RETURNS  Int  AS  BEGIN   -- Declare the return variable here   DECLARE  @Ketqua Int;   DECLARE @Count Int;   DECLARE @ClassID Int;   DECLARE @I Int;   SET @I=0;   SET @Ketqua=0;   if(@Month>-1)      set @Count=(Select count(id) from AIElearning_Class where SubjectId=@SubjectId and TypePalen=1 and year(StartDateClass)=@Year and  month(StartDateClass)=@Month)   else   set @Count=(Select count(id) from AIElearning_Class where SubjectId=@SubjectId and TypePalen=1 and year(StartDateClass)=@Year)    if(@I< @Count)  BEGIN  WHILE (@I <= @Count)     BEGIN       if(@Month>-1)       SET @ClassID=(SELECT TOP 1 ID from  (SELECT TOP(@I) ID  from AIElearning_Class where SubjectId=@SubjectId and  TypePalen=1 and year(StartDateClass)=@Year and  month(StartDateClass)=@Month order by id asc ) A order by id desc)       else     SET @ClassID=(SELECT TOP 1 ID from  (SELECT TOP(@I) ID  from AIElearning_Class where SubjectId=@SubjectId and TypePalen=1 and year(StartDateClass)=@Year order by id asc ) A order by id desc)      SET @Ketqua+=(SELECT COUNT(id) from AIElearning_ClassUser where ClassId=@ClassID)       SET @I = @I+1    END  END  else    SET @Ketqua=0;       -- Return the result of the function   RETURN @Ketqua    END"
1833,GetDatabaseServer,"CREATE PROCEDURE dbo.[GetDatabaseServer]  AS   SELECT ServerProperty('Edition') AS ProductName,             ServerProperty('ProductVersion') AS Version"
1834,AISystem_EmailTemplate_GetsByCode,create proc [dbo].[AISystem_EmailTemplate_GetsByCode]   @code nvarchar(50)  as  -- AISystem_JobTitle_Title_GetsByCode 'CD1'  select top(1) * from AISystem_EmailTemplate WHERE Code=@code     
1835,AIElearning_ClassUser_GetByLearnStatus,"create proc [dbo].[AIElearning_ClassUser_GetByLearnStatus]  @classid int,  @userId int,  @learnStatus int  as  -- AIElearning_ClassUser_GetByLearnStatus 17,-1,-1  DECLARE @condition nvarchar(max)   set @condition = ' (1=1) '  if(@classid >-1)   set @Condition=@Condition+' AND ClassId='+str(@classid)  if(@userId >-1)   set @Condition=@Condition+' AND UserId='+str(@userId)  if(@learnStatus >-1)   set @Condition=@Condition+' AND LearnStatus='+str(@learnStatus)  exec('  select * from AIElearning_ClassUser where ' + @condition)  "
1836,CoreMessaging_CountNotifications,"CREATE PROCEDURE dbo.[CoreMessaging_CountNotifications]   @UserID int,   @PortalID INT  AS  BEGIN   -- Return total notifications for user   SELECT COUNT(*) AS TotalNotifications   FROM dbo.[CoreMessaging_MessageRecipients] MR   JOIN dbo.[CoreMessaging_Messages] M ON MR.MessageID = M.MessageID   WHERE M.NotificationTypeId IS NOT NULL   AND M.PortalID=@PortalID   AND MR.UserID = @UserID   AND (M.ExpirationDate IS NULL OR (M.ExpirationDate IS NOT NULL AND M.ExpirationDate > GETDATE())) -- Do not return expired notifications  END"
1837,sp_upgraddiagrams,"   CREATE PROCEDURE dbo.sp_upgraddiagrams   AS   BEGIN    IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL     return 0;       CREATE TABLE dbo.sysdiagrams    (     name sysname NOT NULL,     principal_id int NOT NULL, -- we may change it to varbinary(85)     diagram_id int PRIMARY KEY IDENTITY,     version int,        definition varbinary(max)     CONSTRAINT UK_principal_name UNIQUE     (      principal_id,      name     )    );        /* Add this if we need to have some form of extended properties for diagrams */    /*    IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL    BEGIN     CREATE TABLE dbo.sysdiagram_properties     (      diagram_id int,      name sysname,      value varbinary(max) NOT NULL     )    END    */      IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL    begin     insert into dbo.sysdiagrams     (      [name],      [principal_id],      [version],      [definition]     )     select        convert(sysname, dgnm.[uvalue]),      DATABASE_PRINCIPAL_ID(N'dbo'),   -- will change to the sid of sa      0,       -- zero for old format, dgdef.[version],      dgdef.[lvalue]     from dbo.[dtproperties] dgnm      inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]       inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]           where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_'      return 2;    end    return 1;   END   "
1838,AIElearning_Class_GetbyUserName,"create proc [dbo].[AIElearning_Class_GetbyUserName]  @Username nvarchar(250)  as  select * from AIElearning_Class,AIElearning_ClassUser where AIElearning_ClassUser.ClassId=AIElearning_Class.Id and Username=@Username  "
1839,DeleteTabVersionDetailByModule,CREATE PROCEDURE dbo.DeleteTabVersionDetailByModule   @ModuleId   INT  AS  DELETE FROM   dbo.TabVersionDetails  WHERE  ModuleId = @ModuleId
1840,AISystem_Category_Document_GetAllChildAndIncludeParentID_WithMaxLevel,"CREATE PROC [dbo].[AISystem_Category_Document_GetAllChildAndIncludeParentID_WithMaxLevel]  @ParentId int, /*Nullable*/  @Status int,  @LanguageId nvarchar(50),  @portalId int,  @includeParentId BIT,  @maxLevel int,  @unitCode nvarchar(50)  AS    -- exec AISystem_Category_Document_GetAllChildAndIncludeParentID_WithMaxLevel -1,1,'vi-VN',0,0,-1,-1    DECLARE @Level int  DECLARE @Rows int  SET @Level = 0  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'    --Temporary table  CREATE TABLE #PathConstruction  (    PK int IDENTITY (1,1),    Id int,     level int,     CTG_IDParent int,      SortColumn nvarchar(3000),    Path nvarchar(3000),    Title NVARCHAR(500),    Code NVARCHAR(50),    UnitCode NVARCHAR(50),    ChildId NVARCHAR(max)  )  --Nếu cha truyền vào là null thì không thể bao gộp cha trong lúc lấy kết quả ra  if (@ParentId <= 0 or @ParentId is null)   set @includeParentId=0  If (@includeParentId = 1)   Begin    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT       AISystem_Category_Document.Id,      0,      AISystem_Category_Document.ParentId,      AISystem_Category_Document.Title,      STR(AISystem_Category_Document.OrderNo),      AISystem_Category_Document.Title,      AISystem_Category_Document.Code,      AISystem_Category_Document.UnitCode,      AISystem_Category_Document.ChildId          FROM      AISystem_Category_Document    WHERE      (AISystem_Category_Document.Status=@Status OR @Status = -1)       AND (AISystem_Category_Document.Id = @ParentId)      AND AISystem_Category_Document.LanguageId = @LanguageId      AND AISystem_Category_Document.PortalId = @portalId      AND (AISystem_Category_Document.UnitCode = @UnitCode  )   End    ELSE   BEGIN    INSERT INTO #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT       AISystem_Category_Document.Id,      0,      AISystem_Category_Document.ParentId,      AISystem_Category_Document.Title,      STR(AISystem_Category_Document.OrderNo),      AISystem_Category_Document.Title,      AISystem_Category_Document.Code,      AISystem_Category_Document.UnitCode,      AISystem_Category_Document.ChildId          FROM      AISystem_Category_Document    WHERE      (AISystem_Category_Document.Status=@Status OR @Status = -1)       AND (AISystem_Category_Document.ParentId = @ParentId or (@ParentId IS NULL or @ParentId <=0) AND (AISystem_Category_Document.ParentId IS NULL or AISystem_Category_Document.ParentId <=0))      AND AISystem_Category_Document.LanguageId = @LanguageId      AND AISystem_Category_Document.PortalId = @portalId      AND (AISystem_Category_Document.UnitCode = @unitCode  )   END    SELECT @Rows = @@RowCount  WHILE @Rows > 0  BEGIN   IF ((@Level > (@maxLevel - 1) or @Level = -1) and (@maxLevel <> -1))   BEGIN    BREAK   END   ELSE    BEGIN     DECLARE @j int    DECLARE @Pattern nvarchar(50)    SET @Pattern = ''    SET @j =  @Level    WHILE @j >= 0    BEGIN     SET @j = @j -1     SET @Pattern = @Pattern + ' -+ '    END    INSERT INTO     #PathConstruction (Id, Level, CTG_IDParent, Title, SortColumn, PATH, Code, UnitCode, ChildId)    SELECT     S.Id,     @Level + 1,     S.ParentId,     S.Title,     SortColumn + STR(S.OrderNo),     @Pattern + S.Title,     S.Code,     S.UnitCode,     S.ChildId         FROM     #PathConstruction T    JOIN AISystem_Category_Document  S ON S.ParentId=T.Id AND T.Level=@Level       AND (S.Status=@Status OR @Status = -1)       AND S.LanguageId=@LanguageId       AND S.PortalId = @portalId      SELECT      @Rows = @@RowCount,      @Level = @Level + 1     END      END  --if(@UnitCode >-1)  -- set @Condition=@Condition+' AND UnitCode='+str(@UnitCode)    SELECT     'Id' = Id,    'Title' = Title,    'Code' = Code,    'ParentId'=CTG_IDParent,    'SortColumn' = SortColumn,    'UnitCode' = UnitCode,    'ChildId' = ChildId,    [Path]      FROM     #PathConstruction   ORDER BY     SortColumn  DROP TABLE #PathConstruction          "
1841,UpdateUrlTracking,"create procedure dbo.UpdateUrlTracking    @PortalID     int,  @Url          nvarchar(255),  @LogActivity  bit,  @TrackClicks  bit,  @ModuleId     int,  @NewWindow    bit    as    update dbo.UrlTracking  set    LogActivity = @LogActivity,         TrackClicks = @TrackClicks,         NewWindow = @NewWindow  where  PortalID = @PortalID  and    Url = @Url  and    ((ModuleId = @ModuleId) or (ModuleId is null and @ModuleId is null))"
1842,AIElearning_TestForm_GetsBySearch,"    CREATE proc [dbo].[AIElearning_TestForm_GetsBySearch]  @Keyword nvarchar(500),  @CategoryId int,  @Type int,  @Status int,  @pageIndex int,  @pageSize int  as  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '  -- Từ khóa  IF (@Keyword IS NOT NULL AND @Keyword<>'')    set @condition = @condition +' AND Name like N''%'+@Keyword+'%'''  -- Chuyên mục  IF(@CategoryId > -1)   set @condition = @condition + ' And (CategoryId= '+ STR(@CategoryId)+' )'  -- Trạng thái  IF(@Status > -1)   set @condition = @condition + ' And (Status= '+ STR(@Status)+' )'  -- Loại  IF(@Type > -1)   set @condition = @condition + ' And (Type= '+ STR(@Type)+' )'    exec('    WITH #AIElearning_TestForm AS(    SELECT ROW_NUMBER() OVER (ORDER BY Id desc) AS RowNumber,     *     from AIElearning_TestForm where '+@condition+'       )         SELECT     *   FROM #AIElearning_TestForm   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF         "
1843,AIEventLog_DeleteLogCheckYear,"      create PROC [dbo].[AIEventLog_DeleteLogCheckYear]   @Year int,   @arrId nvarchar(Max)  AS   DECLARE @Name nvarchar(250)   if(@Year=2017)   Set @Name=''   else   Set @Name=Concat('_',@Year)     EXEC(' delete FROM dbo.AIEventLog'+@Name+' where id in (select * from dbo.split('''+@arrId+'''))   ')      SET QUOTED_IDENTIFIER OFF        "
1844,AISystem_Subject_GetsByTalent,"CREATE proc [dbo].[AISystem_Subject_GetsByTalent]  @pageIndex int,  @pageSize int,  @talentId int,  @talentChildId int,  @talentLevelId int,  @talentChildLevelId int  AS     -- AISystem_Subject_GetsByTalent 1,999,23,-1,71,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex      --Bảng tạm luu khoa hoc  Create table #AISystem_Subject_Temp (   Id int,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),  )    --Bảng tạm luu danh muc khoa hoc va khoa hoc  Create table #AISystem_Category_Subject_Temp (   PK int IDENTITY (1,1),   ItemId INT,   CateSubjectId INT,   Code NVARCHAR(50),   Name NVARCHAR(250),   [Path] NVARCHAR(250),   IsCategory BIT,   SortColumn nvarchar(max),   TalentSubjectId int  )    if(@talentId <> 0)   set @Condition=@Condition+' AND ts.TalentId='+str(@talentId)  if(@talentChildId <> 0 )   set @Condition=@Condition+' AND ts.TalentChildId='+str(@talentChildId)  if(@talentLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentLevelId='+str(@talentLevelId)  if(@talentChildLevelId <> 0)   set @Condition=@Condition+' AND ts.TalentChildLevelId='+ STR(@talentChildLevelId)  exec('  WITH #AISystem_Talent_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY ts.Id desc) AS RowNumber, ts.*, s.Name, s.Code, s.CateSubjectId, cs.Title AS CateSubjectName     from AISystem_Talent_Subject ts inner join AISystem_Subject s     on ts.SubjectId = s.Id INNER JOIN dbo.AISystem_Category_Subject cs ON cs.Id = s.CateSubjectId      where '+@Condition+' )       INSERT INTO #AISystem_Subject_Temp   SELECT ts.Id, ts.CateSubjectId, ts.Code, ts.Name   FROM #AISystem_Talent_Subject ts   where RowNumber between '+ @start +'  and  '+ @end +'   ')    --Lay cac danh muc khoa hoc  INSERT INTO #AISystem_Category_Subject_Temp  SELECT DISTINCT (st.CateSubjectId),-1, '', cs.Title,cs.Title, 1,STR(DENSE_RANK() OVER (ORDER BY st.CateSubjectId desc)),0  FROM #AISystem_Subject_Temp st INNER JOIN dbo.AISystem_Category_Subject cs  ON st.CateSubjectId = cs.Id ORDER BY st.CateSubjectId DESC  -- Lấy các khóa học của danh mục  INSERT INTO #AISystem_Category_Subject_Temp  SELECT DISTINCT (s.Id), s.CateSubjectId, s.Code, s.Name, '-+ ' + s.Name, 0, STR(st.PK) + str(DENSE_RANK() OVER (ORDER BY s.Id desc)),s.Id  FROM #AISystem_Category_Subject_Temp st INNER JOIN #AISystem_Subject_Temp s  on st.ItemId = s.CateSubjectId ORDER BY s.Id DESC    --Tra ve du lieu cuoi cung  SELECT ROW_NUMBER() OVER (ORDER BY SortColumn ) AS RowNumber,* FROM #AISystem_Category_Subject_Temp     SET QUOTED_IDENTIFIER OFF"
1845,GetSearchSettings,"CREATE PROCEDURE dbo.[GetSearchSettings]     @ModuleID int    AS   SELECT      settings.SettingName,       settings.SettingValue   FROM dbo.Modules m     INNER JOIN dbo.Portals p ON m.PortalID = p.PortalID     INNER JOIN dbo.PortalSettings settings ON p.PortalID = settings.PortalID   WHERE   m.ModuleID = @ModuleID    AND settings.SettingName LIKE 'Search%'"
1846,UpdateDesktopModulePermission,"CREATE PROCEDURE dbo.[UpdateDesktopModulePermission]      @DesktopModulePermissionId Int, -- not null!      @PortalDesktopModuleId     Int, -- not null!      @PermissionId              Int, -- not null!      @RoleId                    Int, -- might be negative for virtual roles      @AllowAccess               Bit, -- false: deny, true: grant      @UserId                    Int, -- -1 is replaced by Null      @LastModifiedByUserId      Int  -- -1 is replaced by Null  AS      UPDATE dbo.[DesktopModulePermission]      SET          [PortalDesktopModuleId] = @PortalDesktopModuleId,          [PermissionId]          = @PermissionId,          [RoleId]                = @RoleId,          [AllowAccess]           = @AllowAccess,          [UserId]                = CASE WHEN @UserId = -1 THEN Null ELSE @UserId  END,          [LastModifiedByUserId]  = CASE WHEN @LastModifiedByUserId = -1 THEN Null ELSE @LastModifiedByUserId  END,          [LastModifiedOnDate]    = GetDate()      WHERE [DesktopModulePermissionId] = @DesktopModulePermissionId"
1847,AIElearning_Class_Lecturers_GetsBySearchCount,"  CREATE proc [dbo].[AIElearning_Class_Lecturers_GetsBySearchCount]  @ClassId int,  @LecturersId INT,  @ParentType INT  as  DECLARE @condition nvarchar(max)  set @condition = ' (1=1) '    IF(@ClassId > 0)   set @condition = @condition +    ' And  (ClassId= '+ STR(@ClassId)+' )'  IF(@LecturersId > 0)   set @condition = @condition +    ' And  (LecturersId= '+ STR(@LecturersId)+' )'  IF(@ParentType > 0)   set @condition = @condition +    ' And  (ParentType= '+ STR(@ParentType)+' )'  exec('   select COUNT(*) from AIElearning_Class_Lecturers where ' + @condition +'  ')  SET QUOTED_IDENTIFIER OFF   "
1848,AISystem_Subject_GetsSubjectNotInTalentSubject,"CREATE proc [dbo].[AISystem_Subject_GetsSubjectNotInTalentSubject]  @pageIndex int,  @pageSize int,  @keyword nvarchar(max),  @categorysubjectId int,  @unitCode NVARCHAR(50),  @talentId int,  @talentChildId int,  @talentLevelId INT,  @talentChildLevelId INT  AS  -- AISystem_Subject_GetsSubjectNotInTalentSubject 1,9999,'',-1,1,'',3,1,-1,-1  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition=' (1=1)'  -- Phan trang  declare @start as int  declare @end as int  set @start = @pageSize * (@pageIndex-1) + 1  set @end = @pageSize * @pageIndex  if(@keyword<>'')   set @Condition=@Condition+' AND s.Name like N''%'+@keyword+'%'''  if(@categorysubjectId>-1)   set @Condition=@Condition+' AND s.CateSubjectId='+str(@categorysubjectId)  if(@unitCode<>'' AND @unitCode <> '-1' )   set @Condition=@Condition+' AND (s.UnitCode = '''+@unitCode+''' OR s.UnitCode = '''')'  ELSE   set @Condition=@Condition+' AND s.UnitCode = '''' '  exec('    WITH #AISystem_Subject AS(    SELECT ROW_NUMBER() OVER (ORDER BY s.Id desc) AS RowNumber,     s.*, cs.Title AS CateSubjectName     FROM dbo.AISystem_Subject s INNER JOIN dbo.AISystem_Category_Subject cs      ON s.CateSubjectId = cs.Id     where '+@Condition+' and (s.UnitCode IN (SELECT code FROM dbo.AISystem_Category_Unit ) OR s.UnitCode = '''')     and s.Id not in  (select SubjectId from AISystem_Talent_Subject      where TalentId = ' +@talentId + ' and TalentLevelId = ' +@talentLevelId +' and TalentChildId = ' +@talentChildId+' and TalentChildLevelId = '+ @talentChildLevelId +') )          SELECT     *   FROM #AISystem_Subject   where RowNumber between '+ @start +'  and  '+ @end +'   ')    SET QUOTED_IDENTIFIER OFF"
1849,AIElearning_Training_Plan_GetsBySearchCount,"CREATE proc [dbo].[AIElearning_Training_Plan_GetsBySearchCount]  @UnitCode nvarchar(250),  @Month int,  @Year int  as  DECLARE @Condition AS NVARCHAR(MAX)  SET @Condition='where (1=1)'    IF(@UnitCode IS NOT NULL AND @UnitCode<>'')    set @condition = @condition + ' and (UnitCode =''' + @UnitCode + ''') '  if(@Month>-1)   set @Condition=@Condition+' AND Month='+str(@Month)  if(@Year>-1)   set @Condition=@Condition+' AND Year='+str(@Year)  exec('select COUNT(id) from AIElearning_Training_Plan '+@Condition+' ')"
1850,Files,([dbo].[GetFileFolderFunc]([FolderID]))
1851,Users,(lower([Email]))
